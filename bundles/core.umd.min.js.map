{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","compiler","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","enumerable","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","remove","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","insertBefore","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","fillProperties","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","stringify$1","loadInternal","readElementValue","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","addClass","removeClass","isDirtyYes","adjustedIndex","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","getRenderer","getRendererFactory","previousOrParentNode","isParent","currentQueries","currentElementNode","getCurrentSanitizer","getCurrentView","_getViewData","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","oldView","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","template","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","NO_CHANGE","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","styles","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","ViewEncapsulation","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","InheritDefinitionFeature","definition","superType","getSuperType","_loop_1","e_1","superDef","isComponentDef","baseDef","ngBaseDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","rootSelectorOrNode","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","NgModuleFactoryLoader","moduleFactories","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","QueryList","_results","changes","filter","reduce","init","toArray","reset","flatten$1","list","flat","flatItem","last","notifyOnChanges","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","RendererStyleFlags2","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ViewRef$1","_view","_appRef","_viewContainerRef","_lViewNode","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","isInternalRootView","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","move","newIndex","shift","TemplateRef$1","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","PublicFeature","i18nTagRegex","appendI18nNode","previousNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","LQueries_","deep","shallow","track","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten","memoryIndex","getCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","el","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","Éµa","Éµb","ÉµC","Éµx","ÉµcR","Éµcr","Éµd","Éµql","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","ÉµgV","ÉµrV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµcp","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµQr","ÉµrS","Éµr","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$2","out","expandModuleWithProviders","isModuleWithProviders","wrapReference","directiveMetadata","extractHostBindings","parseHostBindings","listeners","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","srcMeta","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNC","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI1","i18nInterpolation1","ÉµiI2","i18nInterpolation2","ÉµiI3","i18nInterpolation3","idx","ÉµiI4","i18nInterpolation4","b1","ÉµiI5","i18nInterpolation5","ÉµiI6","i18nInterpolation6","ÉµiI7","i18nInterpolation7","b2","ÉµiI8","i18nInterpolation8","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,kBAAmBA,QAAQ,sBAClH,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,UAAW,OAAQ,iBAAkB,qBAAsBJ,GAChIA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,SAAWR,EAAOS,KAAKT,EAAOS,KAAKC,UAAUV,EAAOO,GAAGI,UAH5G,CAIEC,KAAM,SAAWV,EAAQO,EAAKC,EAAUC,GAAY,aAkBlD,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAGhC,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2H3B,EAAvH4B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOzB,OAAO4B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASjB,EAAIwB,EAAWP,MAAIY,GAAKD,EAAI,EAAI5B,EAAE6B,GAAKD,EAAI,EAAI5B,EAAEyB,EAAQC,EAAKG,GAAK7B,EAAEyB,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK3B,OAAO+B,eAAeR,EAAQC,EAAKG,GAAIA,EAGhE,SAASK,EAAQC,EAAYC,GACzB,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAG3D,SAASE,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAGpH,SAASE,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAW5B,EAAI,EAChE,OAAI0B,EAAUA,EAAEtB,KAAKqB,IAEjBI,KAAM,WAEF,OADIJ,GAAKzB,GAAKyB,EAAEtB,SAAQsB,OAAI,IACnBK,MAAOL,GAAKA,EAAEzB,KAAM+B,MAAON,KAKhD,SAASO,EAAOP,EAAGxB,GACf,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BjC,EAAI0B,EAAEtB,KAAKqB,GAAOS,KACtB,IACI,WAAc,IAANjC,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE6B,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQxB,IAAMA,EAAEmB,OAASL,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAElD,QAAU,GAAIiC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASlC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkC,EAAKA,EAAGI,OAAON,EAAO9B,UAAUF,KACpC,OAAOkC;;;;;;;OA0BX,SAASK,EAAiBC,GACtB,OACIC,WAAYD,EAAKC,YAAc,KAAMvE,QAASsE,EAAKtE,QAAS4D,WAAOY,GAuB3E,SAASC,EAAeC,GACpB,OACI1E,QAAS0E,EAAQ1E,QAAS2E,UAAWD,EAAQC,cAAiBC,QAASF,EAAQE;;;;;;;OAiDvF,IAAIC,EAAgC,WAChC,SAASA,EAAeC,EAAOJ,GAC3B/D,KAAKmE,MAAQA,EAEbnE,KAAKoE,eAAiB,iBAElBpE,KAAKqE,qBADOR,IAAZE,EACuBL,GACnBE,WAAYG,EAAQH,YAAc,OAClCvE,QAAS0E,EAAQ1E,eAIEwE,EAI/B,OADAK,EAAerD,UAAUyD,SAAW,WAAc,MAAO,kBAAoBtE,KAAKmE,OAC3ED,EAhBwB,GA0B/BK,EAAc,kBACdC,EAAa,iBACbC,EAAgB;;;;;;;OAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,IAAIC,EAAWC,EAAiBL,GAChC,SAASM,IAEL,IADA,IAIIC,EAJAC,KACKC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCD,EAAKC,GAAMhE,UAAUgE,GAGzB,GAAIrF,gBAAgBkF,EAEhB,OADAF,EAASzD,KAAKC,MAAMwD,EAAUxB,GAAUxD,MAAOoF,IACxCpF,KAEX,IAAIsF,EAAqB,KAAMH,EAAKD,GAAkBK,KAAK/D,MAAM2D,EAAI3B,QAAU,GAAS4B,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAOvD,WAAM,EAAQgC,GAAUiC,GAAML,KAGvBK,EAAIhF,eAAe8D,GACjCkB,EAAIlB,GACJnE,OAAO+B,eAAesD,EAAKlB,GAAetB,WAAasB,IAC/CjB,KAAKgC,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiBrE,UAAYT,OAAOU,OAAO+D,EAAYhE,YAE3DqE,EAAiBrE,UAAUuD,eAAiBO,EAC5CO,EAAiBQ,cAAgBR,EAC1BA,EAEX,SAASD,EAAiBL,GACtB,OAAO,SAASe,IAEZ,IADA,IAAIP,KACKC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCD,EAAKC,GAAMhE,UAAUgE,GAEzB,GAAIT,EAAO,CACP,IAAIgB,EAAShB,EAAMpD,WAAM,EAAQgC,EAAS4B,IAC1C,IAAK,IAAIS,KAAYD,EACjB5F,KAAK6F,GAAYD,EAAOC,KAKxC,SAASC,EAAmBnB,EAAMC,EAAOC,GACrC,IAAIG,EAAWC,EAAiBL,GAChC,SAASmB,IAEL,IADA,IAIIZ,EAJAC,KACKC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCD,EAAKC,GAAMhE,UAAUgE,GAGzB,GAAIrF,gBAAgB+F,EAEhB,OADAf,EAASxD,MAAMxB,KAAMoF,GACdpF,KAEX,IAAIsF,EAAqB,KAAMH,EAAKY,GAAuBR,KAAK/D,MAAM2D,EAAI3B,QAAU,GAAS4B,KAE7F,OADAY,EAAeC,WAAaX,EACrBU,EACP,SAASA,EAAeP,EAAKS,EAAWC,GAQpC,IALA,IAAIC,EAAaX,EAAIhF,eAAe+D,GAChCiB,EAAIjB,GACJpE,OAAO+B,eAAesD,EAAKjB,GAAcvB,WAAauB,GAGnD4B,EAAW9E,QAAU6E,GACxBC,EAAW9C,KAAK,MAGpB,OADC8C,EAAWD,GAASC,EAAWD,QAAc7C,KAAKgC,GAC5CG,GAQf,OALIZ,IACAkB,EAAsBlF,UAAYT,OAAOU,OAAO+D,EAAYhE,YAEhEkF,EAAsBlF,UAAUuD,eAAiBO,EACjDoB,EAAsBL,cAAgBK,EAC/BA,EAEX,SAASM,EAAkB1B,EAAMC,EAAOC,EAAaC,GACjD,IAAIE,EAAWC,EAAiBL,GAChC,SAAS0B,IAEL,IADA,IAIInB,EAJAC,KACKC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCD,EAAKC,GAAMhE,UAAUgE,GAGzB,GAAIrF,gBAAgBsG,EAEhB,OADAtB,EAASxD,MAAMxB,KAAMoF,GACdpF,KAEX,IAAIuG,EAAoB,KAAMpB,EAAKmB,GAAsBf,KAAK/D,MAAM2D,EAAI3B,QAAU,GAAS4B,KAa3F,OAZA,SAASoB,EAAc7E,EAAQgD,GAC3B,IAAI/D,EAAce,EAAOf,YAGrB6F,EAAO7F,EAAYH,eAAegE,GAClC7D,EAAY6D,GACZrE,OAAO+B,eAAevB,EAAa6D,GAAiBxB,WAAawB,GACrEgC,EAAK9B,GAAQ8B,EAAKhG,eAAekE,IAAS8B,EAAK9B,OAC/C8B,EAAK9B,GAAM+B,QAAQH,GACfzB,GACAA,EAAqBtD,WAAM,EAAQgC,GAAU7B,EAAQgD,GAAOS,KASxE,OALIP,IACAyB,EAAqBzF,UAAYT,OAAOU,OAAO+D,EAAYhE,YAE/DyF,EAAqBzF,UAAUuD,eAAiBO,EAChD2B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OA6CX,IAiEWK,EAaAC,EA/DPC,EAfAC,EAA+B,IAAI5C,EAAe,6BAMlD6C,EAAYjB,EAAmB,YAAa,SAAUkB,GAAiB,OAAUA,cAAeA,KAoBhGC,EAAkBZ,EAAkB,kBAAmB,SAAUa,EAAUC,GAE3E,YADa,IAATA,IAAmBA,MACfpG,GAAWmG,SAAUA,EAAUE,OAAO,EAAOC,aAAa,EAAOC,aAAa,GAASH,IAb/FN,EACA,SAASA,OAoBTU,EAAelB,EAAkB,eAAgB,SAAUa,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACfpG,GAAWmG,SAAUA,EAAUE,OAAO,EAAMC,aAAa,EAAOC,aAAa,GAAQH,IAC9FN,GAMCW,EAAenB,EAAkB,eAAgB,SAAUa,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACfpG,GAAWmG,SAAUA,EAAUE,OAAO,EAAOC,aAAa,EAAMC,aAAa,GAAQH,IAC9FN,GAMCY,EAAYpB,EAAkB,YAAa,SAAUa,EAAUC,GAC/D,OAAQpG,GAAWmG,SAAUA,EAAUE,OAAO,EAAMC,aAAa,EAAMC,aAAa,GAAQH,IAC7FN;;;;;;;;AASQF,EAYRrH,EAAQqH,0BAA4BrH,EAAQqH,6BANnBA,EAAgC,OAAI,GAAK,SAKjEA,EAAwBA,EAAiC,QAAI,GAAK,WAE3DC,EA+BRtH,EAAQoI,wBAA0BpI,EAAQoI,2BA1BpBd,EAAgC,UAAI,GAAK,YAK9DA,EAAqBA,EAA8B,QAAI,GAAK,UAK5DA,EAAqBA,EAAkC,YAAI,GAAK,cAKhEA,EAAqBA,EAA+B,SAAI,GAAK,WAM7DA,EAAqBA,EAA8B,QAAI,GAAK,UAI5DA,EAAqBA,EAAgC,UAAI,GAAK,YA2FlE,IAAIe,EAAmC,IAAIC,IAM3C,SAASC,EAAyBC,GAC9B,OAAOA,EAAUC,aAAeD,EAAUE,WAAaF,EAAUE,UAAU1G,OAE/E,SAAS2G,EAAeC,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASC;;;;;;;OAU7D,IAAIC,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAATC,MAAqD,oBAAtBC,mBAC/CD,gBAAgBC,mBAAqBD,KAIrCE,EAH6B,oBAAXrJ,QAA0BA,QAGtBgJ,GAAYE,EAClCI,EAAUC,QAAQC,QAAQ,GAC1BC,EAAkB,KACtB,SAASC,IACL,IAAKD,EAAiB,CAClB,IAAIE,EAAWN,EAAgB,OAC/B,GAAIM,GAAYA,EAAShG,SACrB8F,EAAkBE,EAAShG,cAK3B,IADA,IAAIiG,EAAO5I,OAAO6I,oBAAoBC,IAAIrI,WACjCM,EAAI,EAAGA,EAAI6H,EAAK1H,SAAUH,EAAG,CAClC,IAAIS,EAAMoH,EAAK7H,GACH,YAARS,GAA6B,SAARA,GACrBsH,IAAIrI,UAAUe,KAASsH,IAAIrI,UAAmB,UAC9CgI,EAAkBjH,IAKlC,OAAOiH,EAEX,SAASM,EAAkBC,GACH,oBAATC,KAEPX,EAAQY,KAAK,WAAcF,GAAMA,EAAG5H,MAAM,KAAM,QAGhD6H,KAAKE,QAAQJ,kBAAkB,oBAAqBC,GAI5D,SAASI,EAAeC,EAAGtJ,GACvB,OAAOsJ,IAAMtJ,GAAkB,iBAANsJ,GAA+B,iBAANtJ,GAAkBuJ,MAAMD,IAAMC,MAAMvJ,GAE1F,SAASwJ,EAAUC,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiBrJ,MACjB,MAAO,IAAMqJ,EAAMC,IAAIF,GAAWG,KAAK,MAAQ,IAEnD,GAAa,MAATF,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMG,eACN,MAAO,GAAKH,EAAMG,eAEtB,GAAIH,EAAMjF,KACN,MAAO,GAAKiF,EAAMjF,KAEtB,IAAIqF,EAAMJ,EAAMtF,WAChB,GAAW,MAAP0F,EACA,MAAO,GAAKA,EAEhB,IAAIC,EAAeD,EAAIE,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBD,EAAMA,EAAIG,UAAU,EAAGF;;;;;;;OAsBxD,SAASG,EAAWC,GAGhB,OAFAA,EAAaC,gBAAkBF,EAC/BC,EAAa/F,SAAW,WAAc,OAAOqF,EAAU3J,SAChDqK,EAeX,SAASE,EAAkBC,GACvB,MAAoB,mBAATA,GAAuBA,EAAK/J,eAAe,oBAClD+J,EAAKF,kBAAoBF,EAClBI,IAGAA;;;;;;;OAgBf,IAAIC,EAAS3E,EAAmB,SAAU,SAAU8D,GAAS,OAAUA,MAAOA,KAM1Ec,EAAW5E,EAAmB,YAM9B6E,EAAO7E,EAAmB,QAM1B8E,EAAW9E,EAAmB,YAM9B+E,EAAO/E,EAAmB,QAS1BgF,EAAS,WACTC,EAAsB,IAAI3K,OAC1B4K,EAAqBD,EASrBE,GAAW,IAAI/G,EAAe,YAC9BgH,GAA8B,WAC9B,SAASA,KAaT,OAXAA,EAAarK,UAAUsK,IAAM,SAAUvB,EAAOwB,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgBL,GAC5CK,IAAkBL,EAKlB,MAAM,IAAIM,MAAM,sCAAwC1B,EAAUC,GAAS,KAE/E,OAAOwB,GAEJF,EAdsB,GAgC7BI,GAA0B,WAC1B,SAASA,KAwBT,OAdAA,EAASxK,OAAS,SAAUiD,EAASwH,GACjC,OAAIhL,MAAMiL,QAAQzH,GACP,IAAI0H,GAAe1H,EAASwH,GAG5B,IAAIE,GAAe1H,EAAQC,UAAWD,EAAQwH,OAAQxH,EAAQY,MAAQ,OAGrF2G,EAASN,mBAAqBD,EAC9BO,EAASI,KAAO,IAAIR,GACpBI,EAASjH,gBAAkBX,GACvBE,WAAY,MACZvE,QAAS,WAAc,OAAOsM,GAAOV,OAElCK,EAzBkB,GA2BzBM,GAAQ,SAAU3I,GAClB,OAAOA,GAEP4I,MACAC,GAAWF,GACXG,GAAoB,WACpB,OAAOxL,MAAMM,UAAUmL,MAAMzK,KAAKF,YAElC4K,MACAC,GAuPJ,SAASC,GAAuBC,GAC5B,IAAK,IAAIxK,KAAOwK,EACZ,GAAIA,EAAyBxK,KAASqK,GAClC,OAAOrK,EAGf,MAAMyJ,MAAM,SA7PAc,EAAyBE,QAASC,OAAQC,SAAUN,KAGhEO,GAAgBlB,GAASI,KACzBe,GAAW,OACXC,GAAc,IACdjB,GAAgC,WAChC,SAASA,EAAezH,EAAWuH,EAAQoB,QACxB,IAAXpB,IAAqBA,EAASiB,SACnB,IAAXG,IAAqBA,EAAS,MAClC3M,KAAKuL,OAASA,EACdvL,KAAK2M,OAASA,EACd,IAAIC,EAAU5M,KAAK6M,SAAW,IAAI3D,IAClC0D,EAAQE,IAAIxB,IAAY1B,MAAO0B,GAAUlC,GAAIwC,GAAOmB,KAAMlB,GAAO5I,MAAOjD,KAAMgN,QAAQ,IACtFJ,EAAQE,IAAI7B,IAAYrB,MAAOqB,GAAU7B,GAAIwC,GAAOmB,KAAMlB,GAAO5I,MAAOjD,KAAMgN,QAAQ,IAyD9F,SAASC,EAA4BL,EAASM,GAC1C,GAAIA,EAEA,IADAA,EAAW3C,EAAkB2C,cACL3M,MAEpB,IAAK,IAAIY,EAAI,EAAGA,EAAI+L,EAAS5L,OAAQH,IACjC8L,EAA4BL,EAASM,EAAS/L,QAGjD,CAAA,GAAwB,mBAAb+L,EAGZ,MAAMC,GAAY,+BAAgCD,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAASb,QAiC1D,MAAMc,GAAY,sBAAuBD,GA/BzC,IAAItD,EAAQW,EAAkB2C,EAASb,SACnCe,EA/ChB,SAASC,EAAgBH,GACrB,IAAIH,EA8IR,SAASO,EAAYJ,GACjB,IAAIH,EAAOlB,GACP0B,EAAeL,EAASH,KAC5B,GAAIQ,GAAgBA,EAAajM,OAAQ,CACrCyL,KACA,IAAK,IAAI5L,EAAI,EAAGA,EAAIoM,EAAajM,OAAQH,IAAK,CAC1C,IAAI4C,EAAU,EAEd,IADI6F,EAAQW,EAAkBgD,EAAapM,eACtBZ,MACjB,IAAK,IAAIiN,EAAI,EAAGC,EAAc7D,EAAO4D,EAAIC,EAAYnM,OAAQkM,IAAK,CAC9D,IAAIvH,EAAawH,EAAYD,GACzBvH,aAAsByE,GAAYzE,GAAcyE,EAChD3G,GAAoB,EAEfkC,aAAsB2E,GAAY3E,GAAc2E,EACrD7G,IAAoB,EAEfkC,aAAsB0E,GAAQ1E,GAAc0E,EACjD5G,IAAoB,EAGpB6F,EADK3D,aAAsBwE,EACnBxE,EAAW2D,MAGXW,EAAkBtE,GAItC8G,EAAKzJ,MAAOsG,MAAOA,EAAO7F,QAASA,UAGtC,GAAImJ,EAASQ,YAAa,CAC3B,IAAI9D,EACJmD,IAAUnD,MADNA,EAAQW,EAAkB2C,EAASQ,aACf3J,QAAS,SAEhC,KAAKwJ,GAAkBrB,MAAagB,GAErC,MAAMC,GAAY,kBAAqBD,GAE3C,OAAOH,EArLIO,CAAYJ,GACnB9D,EAAKwC,GACL3I,EAAQ4I,GACRmB,GAAS,EACTX,EAAU9B,EAAkB2C,EAASb,SACzC,GAAIH,MAAagB,EAEbjK,EAAQiK,EAASX,cAEhB,GAAIW,EAASS,WACdvE,EAAK8D,EAASS,gBAEb,GAAIT,EAASQ,kBACb,GAAIR,EAASU,SACdZ,GAAS,EACT5D,EAAKmB,EAAkB2C,EAASU,cAE/B,CAAA,GAAsB,mBAAXvB,EAKZ,MAAMc,GAAY,sGAAuGD,GAJzHF,GAAS,EACT5D,EAAKiD,EAKT,OAASU,KAAMA,EAAM3D,GAAIA,EAAI4D,OAAQA,EAAQ/J,MAAOA,GAsBrBoK,CAAgBH,GACvC,IAAuB,IAAnBA,EAASW,MAAgB,CAEzB,IAAIC,EAAgBlB,EAAQzB,IAAIvB,GAChC,GAAIkE,GACA,GAAIA,EAAc1E,KAAO2C,GACrB,MAAMgC,GAAsBnE,QAKhCgD,EAAQE,IAAIlD,EAAOkE,GACflE,MAAOsD,EAASb,QAChBU,QACAC,QAAQ,EACR5D,GAAI2C,GACJ9I,MAAO4I,KAKfiC,EAAcf,KAAKzJ,MAAOsG,MAD1BA,EAAQsD,EACgCnJ,QAAS,IAErD,IAAIiK,EAASpB,EAAQzB,IAAIvB,GACzB,GAAIoE,GAAUA,EAAO5E,IAAM2C,GACvB,MAAMgC,GAAsBnE,GAEhCgD,EAAQE,IAAIlD,EAAOwD,IApGvBH,CAA4BL,EAAS5I,GAwBzC,OAtBAyH,EAAe5K,UAAUsK,IAAM,SAAUvB,EAAOwB,EAAe6C,QAC7C,IAAVA,IAAoBA,EAAQ,GAChC,IAAID,EAAShO,KAAK6M,SAAS1B,IAAIvB,GAC/B,IACI,OAqGZ,SAASsE,EAAgBtE,EAAOoE,EAAQpB,EAASrB,EAAQH,EAAe6C,GACpE,IACI,OAgBR,SAASE,EAAavE,EAAOoE,EAAQpB,EAASrB,EAAQH,EAAe6C,GACjE,IAAI9I,EACAlC,EACJ,IAAI+K,GAAoB,EAARC,EAoCG,EAARA,IACPhL,EAAQsI,EAAOJ,IAAIvB,EAAOwB,EAAe,QArCF,CAIvC,IADAnI,EAAQ+K,EAAO/K,QACF6I,GACT,MAAMT,MAAMqB,GAAc,uBAEzB,GAAIzJ,IAAU4I,GAAO,CACtBmC,EAAO/K,MAAQ6I,GACf,IACIkB,EAASgB,EAAOhB,OAChB5D,EAAK4E,EAAO5E,GACZgF,EAAaJ,EAAOjB,KACpBA,EAAOlB,GACX,GAAIuC,EAAW9M,OAAQ,CACnByL,KACA,IAAK,IAAI5L,EAAI,EAAGA,EAAIiN,EAAW9M,OAAQH,IAAK,CACxC,IAAIkN,EAAYD,EAAWjN,GACvB4C,EAAUsK,EAAUtK,QACpBuK,EAAwB,EAAVvK,EAA8B6I,EAAQzB,IAAIkD,EAAUzE,YAAS/F,EAC/EkJ,EAAKzJ,KAAK4K,EAEVG,EAAUzE,MAGV0E,EAEA1B,EAGC0B,GAA2B,EAAVvK,EAAiDwH,EAAhBiB,GAAkC,EAAVzI,EAA6B,KAAOuH,GAASN,mBAAoB,KAGpJgD,EAAO/K,MAAQA,EAAQ+J,EAAS,KAAM7H,EAAKiE,GAAI7D,KAAK/D,MAAM2D,EAAI3B,QAAU,GAASuJ,KAAY3D,EAAG5H,WAxBtFqC,EAwBiGkJ,IAMnH,OAAO9J,EA1DIkL,CAAavE,EAAOoE,EAAQpB,EAASrB,EAAQH,EAAe6C,GAEvE,MAAO7K,GAWH,MATMA,aAAaiI,QACfjI,EAAI,IAAIiI,MAAMjI,KAEPA,EAAoB,gBAAIA,EAAoB,qBAClDsD,QAAQkD,GACToE,GAAUA,EAAO/K,OAAS6I,KAE1BkC,EAAO/K,MAAQ4I,IAEbzI,GApHK8K,CAAgBtE,EAAOoE,EAAQhO,KAAK6M,SAAU7M,KAAKuL,OAAQH,EAAe6C,GAErF,MAAO7K,GACH,IAAImL,EAAYnL,EAAoB,gBAOpC,MANIwG,EAAMkB,IACNyD,EAAU7H,QAAQkD,EAAMkB,IAE5B1H,EAAEoL,QAAUC,GAAY,KAAOrL,EAAEoL,QAASD,EAAWvO,KAAK2M,QAC1DvJ,EAAe,YAAImL,EACnBnL,EAAoB,gBAAI,KAClBA,IAGdqI,EAAe5K,UAAUyD,SAAW,WAChC,IAAIoK,KAEJ,OAF2B1O,KAAK6M,SACxB8B,QAAQ,SAAUC,EAAGhF,GAAS,OAAO8E,EAAOpL,KAAKqG,EAAUC,MAC5D,kBAAoB8E,EAAO5E,KAAK,MAAQ,KAE5C2B,EAjCwB,GA8DnC,SAASsC,GAAsBnE,GAC3B,OAAOuD,GAAY,mDAAoDvD,GA4J3E,SAAS6E,GAAYtG,EAAM0G,EAAKlC,QACb,IAAXA,IAAqBA,EAAS,MAClCxE,EAAOA,GAA2B,OAAnBA,EAAK2G,OAAO,IAAe3G,EAAK2G,OAAO,IAAMpC,GAAcvE,EAAK4G,OAAO,GAAK5G,EAC3F,IAAI6G,EAAUrF,EAAUkF,GACxB,GAAIA,aAAetO,MACfyO,EAAUH,EAAIhF,IAAIF,GAAWG,KAAK,aAEjC,GAAmB,iBAAR+E,EAAkB,CAC9B,IAAII,KACJ,IAAK,IAAIrN,KAAOiN,EACZ,GAAIA,EAAIpO,eAAemB,GAAM,CACzB,IAAIqB,EAAQ4L,EAAIjN,GAChBqN,EAAM3L,KAAK1B,EAAM,KAAwB,iBAAVqB,EAAqBiM,KAAKvF,UAAU1G,GAAS0G,EAAU1G,KAG9F+L,EAAU,IAAMC,EAAMnF,KAAK,MAAQ,IAEvC,MAAO,uBAAyB6C,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAMqC,EAAU,MAAQ7G,EAAKgH,QAAQ1C,GAAU,QAEvH,SAASU,GAAYhF,EAAM0G,GACvB,OAAO,IAAIxD,MAAMoD,GAAYtG,EAAM0G,IAgBvC,IAAIO,QAAmBvL,EACvB,SAASwL,GAAmBC,GACxB,IAAIC,EAASH,GAEb,OADAA,GAAmBE,EACZC,EAEX,SAAS5D,GAAO/B,EAAOqE,GAEnB,QADc,IAAVA,IAAoBA,EAAQ,QACPpK,IAArBuL,GACA,MAAM,IAAI/D,MAAM,qDAEf,GAAyB,OAArB+D,GAA2B,CAChC,IAAII,EAAgB5F,EAAMvF,gBAC1B,GAAImL,GAA6C,QAA5BA,EAAc5L,WAC/B,YAA+BC,IAAxB2L,EAAcvM,MAAsBuM,EAAcvM,MAAQuM,EAAcnQ,UAC3EmQ,EAAcvM,MAEtB,GAAY,EAARgL,EACA,OAAO,KACX,MAAM,IAAI5C,MAAM,wBAA0B1B,EAAUC,GAAS,KAG7D,OAAOwF,GAAiBjE,IAAIvB,EAAe,EAARqE,EAA2B,UAAOpK,EAAWoK,GAGxF,SAASwB,GAAWC,GAEhB,IADA,IAAItK,KACKjE,EAAI,EAAGA,EAAIuO,EAAMpO,OAAQH,IAAK,CACnC,IAAIwO,EAAMD,EAAMvO,GAChB,GAAIZ,MAAMiL,QAAQmE,GAAM,CACpB,GAAmB,IAAfA,EAAIrO,OACJ,MAAM,IAAI+J,MAAM,wCAIpB,IAFA,IAAIb,OAAO3G,EACPoK,EAAQ,EACHT,EAAI,EAAGA,EAAImC,EAAIrO,OAAQkM,IAAK,CACjC,IAAI/G,EAAOkJ,EAAInC,GACX/G,aAAgBiE,GAAoC,aAAxBjE,EAAKrC,eACjC6J,GAAS,EAEJxH,aAAgBmE,GAAoC,aAAxBnE,EAAKrC,eACtC6J,GAAS,EAEJxH,aAAgBkE,GAAgC,SAAxBlE,EAAKrC,eAClC6J,GAAS,EAGTzD,EADK/D,aAAgBgE,EACdhE,EAAKmD,MAGLnD,EAGfrB,EAAK9B,KAAKqI,GAAOnB,EAAMyD,SAGvB7I,EAAK9B,KAAKqI,GAAOgE,IAGzB,OAAOvK;;;;;;;;;;;;;;;AA4DX,IAAIwK,GAAgB,GAIhBC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAQ,EACRC,GAAY,EACZC,GAAgB,EAChBC,GAAa,EACbC,GAAU,EACVC,GAAU,EACVC,GAAa,GACbC,GAAW,GACXC,GAAY,GACZC,GAAO,GACPC,GAAkB,GAClBC,GAAkB,GAClBC,GAAmB;;;;;;;;AAqBvB,SAASC,GAAe3K,EAAO4K,EAAQC,EAASC,GAGxCF,IACCE,EAAMC,YAAcD,EAAMC,eAAiB5N,KAAK6C,EAAO4K,GAExDC,KACCC,EAAMC,YAAcD,EAAMC,eAAiB5N,KAAK6C,EAAO6K,IACvDC,EAAME,aAAeF,EAAME,gBAAkB7N,KAAK6C,EAAO6K,IAOlE,SAASI,GAAoBnD,EAAOgD,GAChC,GAAIA,EAAMI,kBAON,IANA,IAAIC,EAAQrD,GAAS,GAEjBsD,EAAMD,GADU,KAARrD,GAKH9M,EAAImQ,EAAOnQ,EAAIoQ,EAAKpQ,IAAK,CAC9B,IAAIqQ,EAAMP,EAAMQ,WAAWtQ,GAC3BuQ,GAAkBF,EAAKP,EAAO9P,GAC9BwQ,GAAeH,EAAKP,EAAO9P,GAC3ByQ,GAAkBJ,EAAKP,EAAO9P,IAK1C,SAASuQ,GAAkBF,EAAKP,EAAO9P,GAC/BqQ,EAAIK,mBACHZ,EAAMa,eAAiBb,EAAMa,kBAAoBxO,KAAKnC,EAAGqQ,EAAIK,kBAE9DL,EAAIO,uBACHd,EAAMa,eAAiBb,EAAMa,kBAAoBxO,KAAKnC,EAAGqQ,EAAIO,sBAC7Dd,EAAMe,oBAAsBf,EAAMe,uBAAyB1O,KAAKnC,EAAGqQ,EAAIO,sBAIhF,SAASJ,GAAeH,EAAKP,EAAO9P,GAC5BqQ,EAAIS,gBACHhB,EAAMiB,YAAcjB,EAAMiB,eAAiB5O,KAAKnC,EAAGqQ,EAAIS,eAExDT,EAAIW,oBACHlB,EAAMiB,YAAcjB,EAAMiB,eAAiB5O,KAAKnC,EAAGqQ,EAAIW,mBACvDlB,EAAMmB,iBAAmBnB,EAAMmB,oBAAsB9O,KAAKnC,EAAGqQ,EAAIW,mBAI1E,SAASP,GAAkBJ,EAAKP,EAAO9P,GACd,MAAjBqQ,EAAIa,YACHpB,EAAMqB,eAAiBrB,EAAMqB,kBAAoBhP,KAAKnC,EAAGqQ,EAAIa,WAQtE,SAASE,GAAiBC,EAAavB,EAAOwB,GACjB,GAArBD,EAAYvC,MACZyC,GAAaF,EAAYpC,IAAaa,EAAMC,UAAWD,EAAME,WAAYsB,GACzED,EAAYvC,MAAU,IAQ9B,SAASyC,GAAavL,EAAMwL,EAAUxB,EAAYsB,GAC9C,IAAIG,EAAcH,EAAeE,EAAWxB,EACxCyB,GACAC,GAAU1L,EAAMyL,GAUxB,SAASC,GAAU1L,EAAM2L,GACrB,IAAK,IAAI3R,EAAI,EAAGA,EAAI2R,EAAIxR,OAAQH,GAAK,EACjC2R,EAAI3R,EAAI,GAAGI,KAAK4F,EAAK2L,EAAI3R;;;;;;;OAsDjC,SAAS4R,GAA4BC,GACjC,MAAM,IAAI3H,MAAM,+CAAiD2H,EAAMC,SA5CzC,oBAAV5K,QAAyBA,QAAyB,oBAARE,MAAuBA,MACpE,oBAAVnJ,QAAyBA;;;;;;;;AAuEpC,IAuBI8T,GAvBAC,GAAe,EAGfC,GAAQ,EACRC,GAAgB,EAShBC,GAA0B,cAgB9B,SAASC,GAAqBC,GAC1B,QAAUA,EAAe,QAN7B,SAAWN,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,QAK3B,IAAIO,IACAC,eAAgB,SAAUC,EAAaC,GAAgB,OAAOC;;;;;;;;;;;;;;;;;;;;;;AAkDlE,SAASC,GAAarK,EAAGtJ,GACrB,IAAI4T,EAAsBC,GAAmBvK,GACzCwK,EAAsBD,GAAmB7T,GAC7C,OAAI4T,GAAuBE,EAuE/B,SAASC,EAAkBzK,EAAGtJ,EAAGgU,GAG7B,IAFA,IAAIC,EAAY3K,EAAEX,OACduL,EAAYlU,EAAE2I,SACL,CACT,IAAIwL,EAAQF,EAAUpR,OAClBuR,EAAQF,EAAUrR,OACtB,GAAIsR,EAAMpR,MAAQqR,EAAMrR,KACpB,OAAO,EACX,GAAIoR,EAAMpR,MAAQqR,EAAMrR,KACpB,OAAO,EACX,IAAKiR,EAAWG,EAAMrR,MAAOsR,EAAMtR,OAC/B,OAAO,GAjFJiR,CAAkBzK,EAAGtJ,EAAG2T,MAK1BC,IAFWtK,GAAmB,iBAANA,GAA+B,mBAANA,GAEZwK,IAD1B9T,GAAmB,iBAANA,GAA+B,mBAANA,IAK3CqJ,EAAeC,EAAGtJ,GAuBrC,IAAIqU,GAA8B,WAC9B,SAASA,EAAavR,GAClBjD,KAAKyU,QAAUxR,EAWnB,OARAuR,EAAaE,KAAO,SAAUzR,GAAS,OAAO,IAAIuR,EAAavR,IAK/DuR,EAAaG,OAAS,SAAU1R,GAAS,OAAOuR,EAAaI,UAAU3R,GAASA,EAAMwR,QAAUxR,GAEhGuR,EAAaI,UAAY,SAAU3R,GAAS,OAAOA,aAAiBuR,GAC7DA,EAbsB,GAmB7BK,GAA8B,WAC9B,SAASA,EAAaC,EAAeC,EAAcC,GAC/ChV,KAAK8U,cAAgBA,EACrB9U,KAAK+U,aAAeA,EACpB/U,KAAKgV,YAAcA,EAMvB,OADAH,EAAahU,UAAUoU,cAAgB,WAAc,OAAOjV,KAAKgV,aAC1DH,EAVsB,GAYjC,SAASb,GAAmBnF,GACxB,QAAKqG,GAAWrG,KAETtO,MAAMiL,QAAQqD,MACdA,aAAe3F,MACdJ,MAAuB+F,GA8BnC,SAASqG,GAAWtS,GAChB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA;;;;;;;OAU5D,IAAIuS,GAA8C,WAC9C,SAASA,KAMT,OAJAA,EAA6BtU,UAAUuU,SAAW,SAAUvG,GAAO,OAAOmF,GAAmBnF,IAC7FsG,EAA6BtU,UAAUC,OAAS,SAAUuU,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EAPsC,GAS7CI,GAAkB,SAAUpP,EAAOqP,GAAQ,OAAOA,GAIlDF,GAAuC,WACvC,SAASA,EAAsBD,GAC3BrV,KAAKsB,OAAS,EAEdtB,KAAKyV,eAAiB,KAEtBzV,KAAK0V,iBAAmB,KACxB1V,KAAK2V,gBAAkB,KACvB3V,KAAK4V,QAAU,KACf5V,KAAK6V,QAAU,KACf7V,KAAK8V,eAAiB,KACtB9V,KAAK+V,eAAiB,KACtB/V,KAAKgW,WAAa,KAClBhW,KAAKiW,WAAa,KAClBjW,KAAKkW,cAAgB,KACrBlW,KAAKmW,cAAgB,KAErBnW,KAAKoW,qBAAuB,KAC5BpW,KAAKqW,qBAAuB,KAC5BrW,KAAKsW,WAAajB,GAAaE,GAwdnC,OAtdAD,EAAsBzU,UAAU0V,YAAc,SAAUnN,GACpD,IAAI4E,EACJ,IAAKA,EAAShO,KAAK4V,QAAoB,OAAX5H,EAAiBA,EAASA,EAAOwI,MACzDpN,EAAG4E,IAGXsH,EAAsBzU,UAAU4V,iBAAmB,SAAUrN,GAKzD,IAJA,IAAIsN,EAAS1W,KAAK4V,QACde,EAAa3W,KAAKkW,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAI3I,GAAU2I,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiB/I,EAAQ4I,EAAiBC,GAC7DC,EAAe9I,EAAO8I,aAE1B,GAAI9I,IAAW2I,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxBxI,EAAOkJ,cACPN,QAEC,CAEIC,IACDA,MACJ,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAIjW,EAAI,EAAGA,EAAIgW,EAAwBhW,IAAK,CAC7C,IAAIkW,EAASlW,EAAI0V,EAAYvV,OAASuV,EAAY1V,GAAM0V,EAAY1V,GAAK,EACrEgF,EAAQkR,EAASlW,EACjBiW,GAAqBjR,GAASA,EAAQgR,IACtCN,EAAY1V,GAAKkW,EAAS,GAIlCR,EADoB7I,EAAOkJ,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrB1N,EAAG4E,EAAQgJ,EAAkBF,KAIzCxB,EAAsBzU,UAAUyW,oBAAsB,SAAUlO,GAC5D,IAAI4E,EACJ,IAAKA,EAAShO,KAAK2V,gBAA4B,OAAX3H,EAAiBA,EAASA,EAAOuJ,cACjEnO,EAAG4E,IAGXsH,EAAsBzU,UAAU2W,iBAAmB,SAAUpO,GACzD,IAAI4E,EACJ,IAAKA,EAAShO,KAAK8V,eAA2B,OAAX9H,EAAiBA,EAASA,EAAOyJ,WAChErO,EAAG4E,IAGXsH,EAAsBzU,UAAU6W,iBAAmB,SAAUtO,GACzD,IAAI4E,EACJ,IAAKA,EAAShO,KAAKgW,WAAuB,OAAXhI,EAAiBA,EAASA,EAAO2J,WAC5DvO,EAAG4E,IAGXsH,EAAsBzU,UAAU+W,mBAAqB,SAAUxO,GAC3D,IAAI4E,EACJ,IAAKA,EAAShO,KAAKkW,cAA0B,OAAXlI,EAAiBA,EAASA,EAAOiJ,aAC/D7N,EAAG4E,IAGXsH,EAAsBzU,UAAUgX,sBAAwB,SAAUzO,GAC9D,IAAI4E,EACJ,IAAKA,EAAShO,KAAKoW,qBAAiC,OAAXpI,EAAiBA,EAASA,EAAO8J,oBACtE1O,EAAG4E,IAGXsH,EAAsBzU,UAAUkX,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,OACChE,GAAmBgE,GACpB,MAAM,IAAI3M,MAAM,yBAA2B1B,EAAUqO,GAAc,4CAEvE,OAAIhY,KAAKiY,MAAMD,GACJhY,KAGA,MAGfsV,EAAsBzU,UAAUwR,UAAY,aAC5CiD,EAAsBzU,UAAUoX,MAAQ,SAAUD,GAC9C,IAAIE,EAAQlY,KACZA,KAAKmY,SACL,IAEIhS,EACAqP,EACA4C,EAJApK,EAAShO,KAAK4V,QACdyC,GAAa,EAIjB,GAAI9X,MAAMiL,QAAQwM,GAAa,CAC3BhY,KAAKsB,OAAS0W,EAAW1W,OACzB,IAAK,IAAIgX,EAAU,EAAGA,EAAUtY,KAAKsB,OAAQgX,IAEzCF,EAAcpY,KAAKsW,WAAWgC,EAD9B9C,EAAOwC,EAAWM,IAEH,OAAXtK,GAAoBxE,EAAewE,EAAOuK,UAAWH,IAKjDC,IAEArK,EAAShO,KAAKwY,mBAAmBxK,EAAQwH,EAAM4C,EAAaE,IAE3D9O,EAAewE,EAAOwH,KAAMA,IAC7BxV,KAAKyY,mBAAmBzK,EAAQwH,KATpCxH,EAAShO,KAAK0Y,UAAU1K,EAAQwH,EAAM4C,EAAaE,GACnDD,GAAa,GAUjBrK,EAASA,EAAOwI,WAIpBrQ,EAAQ,EA5LpB,SAASwS,EAAgB9J,EAAKzF,GAC1B,GAAI7I,MAAMiL,QAAQqD,GACd,IAAK,IAAI1N,EAAI,EAAGA,EAAI0N,EAAIvN,OAAQH,IAC5BiI,EAAGyF,EAAI1N,SAMX,IAFA,IAAI4B,EAAW8L,EAAI/F,OACf0M,OAAO,IACDA,EAAOzS,EAASC,QAAY,MAClCoG,EAAGoM,EAAKvS,OAmLR0V,CAAgBX,EAAY,SAAUxC,GAClC4C,EAAcF,EAAM5B,WAAWnQ,EAAOqP,GACvB,OAAXxH,GAAoBxE,EAAewE,EAAOuK,UAAWH,IAKjDC,IAEArK,EAASkK,EAAMM,mBAAmBxK,EAAQwH,EAAM4C,EAAajS,IAE5DqD,EAAewE,EAAOwH,KAAMA,IAC7B0C,EAAMO,mBAAmBzK,EAAQwH,KATrCxH,EAASkK,EAAMQ,UAAU1K,EAAQwH,EAAM4C,EAAajS,GACpDkS,GAAa,GAUjBrK,EAASA,EAAOwI,MAChBrQ,MAEJnG,KAAKsB,OAAS6E,EAIlB,OAFAnG,KAAK4Y,UAAU5K,GACfhO,KAAKgY,WAAaA,EACXhY,KAAK6Y,SAEhBzY,OAAO+B,eAAemT,EAAsBzU,UAAW,WAInDsK,IAAK,WACD,OAA+B,OAAxBnL,KAAK8V,gBAA+C,OAApB9V,KAAKgW,YACjB,OAAvBhW,KAAKkW,eAAwD,OAA9BlW,KAAKoW,sBAE5C0C,YAAY,EACZC,cAAc,IAUlBzD,EAAsBzU,UAAUsX,OAAS,WACrC,GAAInY,KAAK6Y,QAAS,CACd,IAAI7K,OAAS,EACTgL,OAAa,EACjB,IAAKhL,EAAShO,KAAK2V,gBAAkB3V,KAAK4V,QAAoB,OAAX5H,EAAiBA,EAASA,EAAOwI,MAChFxI,EAAOuJ,cAAgBvJ,EAAOwI,MAElC,IAAKxI,EAAShO,KAAK8V,eAA2B,OAAX9H,EAAiBA,EAASA,EAAOyJ,WAChEzJ,EAAOkJ,cAAgBlJ,EAAO8I,aAGlC,IADA9W,KAAK8V,eAAiB9V,KAAK+V,eAAiB,KACvC/H,EAAShO,KAAKgW,WAAuB,OAAXhI,EAAiBA,EAASgL,EACrDhL,EAAOkJ,cAAgBlJ,EAAO8I,aAC9BkC,EAAahL,EAAO2J,WAExB3X,KAAKgW,WAAahW,KAAKiW,WAAa,KACpCjW,KAAKkW,cAAgBlW,KAAKmW,cAAgB,KAC1CnW,KAAKoW,qBAAuBpW,KAAKqW,qBAAuB,OAehEf,EAAsBzU,UAAU6X,UAAY,SAAU1K,EAAQwH,EAAM4C,EAAajS,GAE7E,IAAI8S,EAkCJ,OAjCe,OAAXjL,EACAiL,EAAiBjZ,KAAK6V,SAGtBoD,EAAiBjL,EAAOkL,MAExBlZ,KAAKmZ,QAAQnL,IAIF,QADfA,EAAiC,OAAxBhO,KAAKyV,eAA0B,KAAOzV,KAAKyV,eAAetK,IAAIiN,EAAajS,KAI3EqD,EAAewE,EAAOwH,KAAMA,IAC7BxV,KAAKyY,mBAAmBzK,EAAQwH,GACpCxV,KAAKoZ,WAAWpL,EAAQiL,EAAgB9S,IAKzB,QADf6H,EAAmC,OAA1BhO,KAAK0V,iBAA4B,KAAO1V,KAAK0V,iBAAiBvK,IAAIiN,EAAa,QAI/E5O,EAAewE,EAAOwH,KAAMA,IAC7BxV,KAAKyY,mBAAmBzK,EAAQwH,GACpCxV,KAAKqZ,eAAerL,EAAQiL,EAAgB9S,IAI5C6H,EACIhO,KAAKsZ,UAAU,IAAIC,GAAsB/D,EAAM4C,GAAca,EAAgB9S,GAGlF6H,GA6BXsH,EAAsBzU,UAAU2X,mBAAqB,SAAUxK,EAAQwH,EAAM4C,EAAajS,GACtF,IAAIqT,EAA2C,OAA1BxZ,KAAK0V,iBAA4B,KAAO1V,KAAK0V,iBAAiBvK,IAAIiN,EAAa,MAQpG,OAPuB,OAAnBoB,EACAxL,EAAShO,KAAKqZ,eAAeG,EAAgBxL,EAAOkL,MAAO/S,GAEtD6H,EAAO8I,cAAgB3Q,IAC5B6H,EAAO8I,aAAe3Q,EACtBnG,KAAKyZ,YAAYzL,EAAQ7H,IAEtB6H,GASXsH,EAAsBzU,UAAU+X,UAAY,SAAU5K,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAIgL,EAAahL,EAAOwI,MACxBxW,KAAK0Z,eAAe1Z,KAAK2Z,QAAQ3L,IACjCA,EAASgL,EAEiB,OAA1BhZ,KAAK0V,kBACL1V,KAAK0V,iBAAiBkE,QAEE,OAAxB5Z,KAAK+V,iBACL/V,KAAK+V,eAAe0B,WAAa,MAEb,OAApBzX,KAAKiW,aACLjW,KAAKiW,WAAW0B,WAAa,MAEZ,OAAjB3X,KAAK6V,UACL7V,KAAK6V,QAAQW,MAAQ,MAEE,OAAvBxW,KAAKmW,gBACLnW,KAAKmW,cAAcc,aAAe,MAEJ,OAA9BjX,KAAKqW,uBACLrW,KAAKqW,qBAAqByB,oBAAsB,OAIxDxC,EAAsBzU,UAAUwY,eAAiB,SAAUrL,EAAQ6L,EAAY1T,GAC7C,OAA1BnG,KAAK0V,kBACL1V,KAAK0V,iBAAiBoE,OAAO9L,GAEjC,IAAI+L,EAAO/L,EAAOgM,aACdhX,EAAOgL,EAAOiJ,aAelB,OAda,OAAT8C,EACA/Z,KAAKkW,cAAgBlT,EAGrB+W,EAAK9C,aAAejU,EAEX,OAATA,EACAhD,KAAKmW,cAAgB4D,EAGrB/W,EAAKgX,aAAeD,EAExB/Z,KAAKia,aAAajM,EAAQ6L,EAAY1T,GACtCnG,KAAKyZ,YAAYzL,EAAQ7H,GAClB6H,GAGXsH,EAAsBzU,UAAUuY,WAAa,SAAUpL,EAAQ6L,EAAY1T,GAIvE,OAHAnG,KAAK2Z,QAAQ3L,GACbhO,KAAKia,aAAajM,EAAQ6L,EAAY1T,GACtCnG,KAAKyZ,YAAYzL,EAAQ7H,GAClB6H,GAGXsH,EAAsBzU,UAAUyY,UAAY,SAAUtL,EAAQ6L,EAAY1T,GAatE,OAZAnG,KAAKia,aAAajM,EAAQ6L,EAAY1T,GAIlCnG,KAAK+V,eAHmB,OAAxB/V,KAAK+V,eAGiB/V,KAAK8V,eAAiB9H,EAMtBhO,KAAK+V,eAAe0B,WAAazJ,EAEpDA,GAGXsH,EAAsBzU,UAAUoZ,aAAe,SAAUjM,EAAQ6L,EAAY1T,GAKzE,IAAInD,EAAsB,OAAf6W,EAAsB7Z,KAAK4V,QAAUiE,EAAWrD,MAuB3D,OAnBAxI,EAAOwI,MAAQxT,EACfgL,EAAOkL,MAAQW,EACF,OAAT7W,EACAhD,KAAK6V,QAAU7H,EAGfhL,EAAKkW,MAAQlL,EAEE,OAAf6L,EACA7Z,KAAK4V,QAAU5H,EAGf6L,EAAWrD,MAAQxI,EAEK,OAAxBhO,KAAKyV,iBACLzV,KAAKyV,eAAiB,IAAIyE,IAE9Bla,KAAKyV,eAAe0E,IAAInM,GACxBA,EAAO8I,aAAe3Q,EACf6H,GAGXsH,EAAsBzU,UAAUsY,QAAU,SAAUnL,GAChD,OAAOhO,KAAK0Z,eAAe1Z,KAAK2Z,QAAQ3L,KAG5CsH,EAAsBzU,UAAU8Y,QAAU,SAAU3L,GACpB,OAAxBhO,KAAKyV,gBACLzV,KAAKyV,eAAeqE,OAAO9L,GAE/B,IAAI+L,EAAO/L,EAAOkL,MACdlW,EAAOgL,EAAOwI,MAgBlB,OAZa,OAATuD,EACA/Z,KAAK4V,QAAU5S,EAGf+W,EAAKvD,MAAQxT,EAEJ,OAATA,EACAhD,KAAK6V,QAAUkE,EAGf/W,EAAKkW,MAAQa,EAEV/L,GAGXsH,EAAsBzU,UAAU4Y,YAAc,SAAUzL,EAAQoM,GAG5D,OAAIpM,EAAOkJ,gBAAkBkD,EAClBpM,GAKPhO,KAAKiW,WAHe,OAApBjW,KAAKiW,WAGajW,KAAKgW,WAAahI,EAKlBhO,KAAKiW,WAAW0B,WAAa3J,EAE5CA,IAEXsH,EAAsBzU,UAAU6Y,eAAiB,SAAU1L,GAoBvD,OAnB8B,OAA1BhO,KAAK0V,mBACL1V,KAAK0V,iBAAmB,IAAIwE,IAEhCla,KAAK0V,iBAAiByE,IAAInM,GAC1BA,EAAO8I,aAAe,KACtB9I,EAAOiJ,aAAe,KACK,OAAvBjX,KAAKmW,eAGLnW,KAAKmW,cAAgBnW,KAAKkW,cAAgBlI,EAC1CA,EAAOgM,aAAe,OAMtBhM,EAAOgM,aAAeha,KAAKmW,cAC3BnW,KAAKmW,cAAgBnW,KAAKmW,cAAcc,aAAejJ,GAEpDA,GAGXsH,EAAsBzU,UAAU4X,mBAAqB,SAAUzK,EAAQwH,GAQnE,OAPAxH,EAAOwH,KAAOA,EAEVxV,KAAKqW,qBADyB,OAA9BrW,KAAKqW,qBACuBrW,KAAKoW,qBAAuBpI,EAG5BhO,KAAKqW,qBAAqByB,oBAAsB9J,EAEzEA,GAEJsH,EA3e+B,GA6etCiE,GACA,SAASA,GAAsB/D,EAAM+C,GACjCvY,KAAKwV,KAAOA,EACZxV,KAAKuY,UAAYA,EACjBvY,KAAK8W,aAAe,KACpB9W,KAAKkX,cAAgB,KAErBlX,KAAKuX,cAAgB,KAErBvX,KAAKkZ,MAAQ,KAEblZ,KAAKwW,MAAQ,KAEbxW,KAAKqa,SAAW,KAEhBra,KAAKsa,SAAW,KAEhBta,KAAKga,aAAe,KAEpBha,KAAKiX,aAAe,KAEpBjX,KAAKyX,WAAa,KAElBzX,KAAK2X,WAAa,KAElB3X,KAAK8X,oBAAsB,MAK/ByC,GAA0C,WAC1C,SAASA,IAELva,KAAKwa,MAAQ,KAEbxa,KAAKya,MAAQ,KAiEjB,OA1DAF,EAAyB1Z,UAAU6Z,IAAM,SAAU1M,GAC5B,OAAfhO,KAAKwa,OACLxa,KAAKwa,MAAQxa,KAAKya,MAAQzM,EAC1BA,EAAOsM,SAAW,KAClBtM,EAAOqM,SAAW,OAMlBra,KAAKya,MAAMH,SAAWtM,EACtBA,EAAOqM,SAAWra,KAAKya,MACvBzM,EAAOsM,SAAW,KAClBta,KAAKya,MAAQzM,IAKrBuM,EAAyB1Z,UAAUsK,IAAM,SAAUoN,EAAWoC,GAC1D,IAAI3M,EACJ,IAAKA,EAAShO,KAAKwa,MAAkB,OAAXxM,EAAiBA,EAASA,EAAOsM,SACvD,IAAwB,OAAnBK,GAA2BA,GAAkB3M,EAAO8I,eACrDtN,EAAewE,EAAOuK,UAAWA,GACjC,OAAOvK,EAGf,OAAO,MAOXuM,EAAyB1Z,UAAUiZ,OAAS,SAAU9L,GASlD,IAAI+L,EAAO/L,EAAOqM,SACdrX,EAAOgL,EAAOsM,SAalB,OAZa,OAATP,EACA/Z,KAAKwa,MAAQxX,EAGb+W,EAAKO,SAAWtX,EAEP,OAATA,EACAhD,KAAKya,MAAQV,EAGb/W,EAAKqX,SAAWN,EAEE,OAAf/Z,KAAKwa,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACLla,KAAK6J,IAAM,IAAIX,IA2CnB,OAzCAgR,EAAcrZ,UAAUsZ,IAAM,SAAUnM,GACpC,IAAIpM,EAAMoM,EAAOuK,UACbqC,EAAa5a,KAAK6J,IAAIsB,IAAIvJ,GACzBgZ,IACDA,EAAa,IAAIL,GACjBva,KAAK6J,IAAIiD,IAAIlL,EAAKgZ,IAEtBA,EAAWF,IAAI1M,IASnBkM,EAAcrZ,UAAUsK,IAAM,SAAUoN,EAAWoC,GAC/C,IACIE,EAAa7a,KAAK6J,IAAIsB,IADhBoN,GAEV,OAAOsC,EAAaA,EAAW1P,IAAIoN,EAAWoC,GAAkB,MAOpET,EAAcrZ,UAAUiZ,OAAS,SAAU9L,GACvC,IAAIpM,EAAMoM,EAAOuK,UAMjB,OALiBvY,KAAK6J,IAAIsB,IAAIvJ,GAEfkY,OAAO9L,IAClBhO,KAAK6J,IAAIiR,OAAOlZ,GAEboM,GAEX5N,OAAO+B,eAAe+X,EAAcrZ,UAAW,WAC3CsK,IAAK,WAAc,OAAyB,IAAlBnL,KAAK6J,IAAIkR,MACnCjC,YAAY,EACZC,cAAc,IAElBmB,EAAcrZ,UAAU+Y,MAAQ,WAAc5Z,KAAK6J,IAAI+P,SAChDM,EA7CuB,GA+ClC,SAASnD,GAAiBvB,EAAMoB,EAAiBC,GAC7C,IAAIK,EAAgB1B,EAAK0B,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAI8D,EAAa,EAIjB,OAHInE,GAAeK,EAAgBL,EAAYvV,SAC3C0Z,EAAanE,EAAYK,IAEtBA,EAAgBN,EAAkBoE;;;;;;;OAU7C,IAAIC,GAA8C,WAC9C,SAASA,KAIT,OAFAA,EAA6Bpa,UAAUuU,SAAW,SAAUvG,GAAO,OAAOA,aAAe3F,KAAOgM,GAAWrG,IAC3GoM,EAA6Bpa,UAAUC,OAAS,WAAc,OAAO,IAAIoa,IAClED,EALsC,GAO7CC,GAAuC,WACvC,SAASA,IACLlb,KAAK6M,SAAW,IAAI3D,IACpBlJ,KAAKmb,SAAW,KAEhBnb,KAAKob,aAAe,KACpBpb,KAAKqb,iBAAmB,KACxBrb,KAAKsb,aAAe,KACpBtb,KAAKub,aAAe,KACpBvb,KAAK8V,eAAiB,KACtB9V,KAAK+V,eAAiB,KACtB/V,KAAKkW,cAAgB,KACrBlW,KAAKmW,cAAgB,KA+MzB,OA7MA/V,OAAO+B,eAAe+Y,EAAsBra,UAAW,WACnDsK,IAAK,WACD,OAA+B,OAAxBnL,KAAK8V,gBAAiD,OAAtB9V,KAAKsb,cACjB,OAAvBtb,KAAKkW,eAEb4C,YAAY,EACZC,cAAc,IAElBmC,EAAsBra,UAAU0V,YAAc,SAAUnN,GACpD,IAAI4E,EACJ,IAAKA,EAAShO,KAAKmb,SAAqB,OAAXnN,EAAiBA,EAASA,EAAOwI,MAC1DpN,EAAG4E,IAGXkN,EAAsBra,UAAUyW,oBAAsB,SAAUlO,GAC5D,IAAI4E,EACJ,IAAKA,EAAShO,KAAKqb,iBAA6B,OAAXrN,EAAiBA,EAASA,EAAOuJ,cAClEnO,EAAG4E,IAGXkN,EAAsBra,UAAU2a,mBAAqB,SAAUpS,GAC3D,IAAI4E,EACJ,IAAKA,EAAShO,KAAKsb,aAAyB,OAAXtN,EAAiBA,EAASA,EAAOyN,aAC9DrS,EAAG4E,IAGXkN,EAAsBra,UAAU2W,iBAAmB,SAAUpO,GACzD,IAAI4E,EACJ,IAAKA,EAAShO,KAAK8V,eAA2B,OAAX9H,EAAiBA,EAASA,EAAOyJ,WAChErO,EAAG4E,IAGXkN,EAAsBra,UAAU+W,mBAAqB,SAAUxO,GAC3D,IAAI4E,EACJ,IAAKA,EAAShO,KAAKkW,cAA0B,OAAXlI,EAAiBA,EAASA,EAAOiJ,aAC/D7N,EAAG4E,IAGXkN,EAAsBra,UAAUkX,KAAO,SAAUlO,GAC7C,GAAKA,GAGA,KAAMA,aAAeX,KAAOgM,GAAWrL,IACxC,MAAM,IAAIwB,MAAM,yBAA2B1B,EAAUE,GAAO,6CAH5DA,EAAM,IAAIX,IAKd,OAAOlJ,KAAKiY,MAAMpO,GAAO7J,KAAO,MAEpCkb,EAAsBra,UAAUwR,UAAY,aAK5C6I,EAAsBra,UAAUoX,MAAQ,SAAUpO,GAC9C,IAAIqO,EAAQlY,KACZA,KAAKmY,SACL,IAAIuD,EAAe1b,KAAKmb,SAcxB,GAbAnb,KAAKob,aAAe,KACpBpb,KAAK2b,SAAS9R,EAAK,SAAU5G,EAAOrB,GAChC,GAAI8Z,GAAgBA,EAAa9Z,MAAQA,EACrCsW,EAAM0D,mBAAmBF,EAAczY,GACvCiV,EAAMkD,aAAeM,EACrBA,EAAeA,EAAalF,UAE3B,CACD,IAAIxI,EAASkK,EAAM2D,yBAAyBja,EAAKqB,GACjDyY,EAAexD,EAAM4D,sBAAsBJ,EAAc1N,MAI7D0N,EAAc,CACVA,EAAaxC,QACbwC,EAAaxC,MAAM1C,MAAQ,MAE/BxW,KAAKkW,cAAgBwF,EACrB,IAAK,IAAI1N,EAAS0N,EAAyB,OAAX1N,EAAiBA,EAASA,EAAOiJ,aACzDjJ,IAAWhO,KAAKmb,WAChBnb,KAAKmb,SAAW,MAEpBnb,KAAK6M,SAASiO,OAAO9M,EAAOpM,KAC5BoM,EAAOiJ,aAAejJ,EAAOwI,MAC7BxI,EAAO8G,cAAgB9G,EAAO+G,aAC9B/G,EAAO+G,aAAe,KACtB/G,EAAOkL,MAAQ,KACflL,EAAOwI,MAAQ,KAQvB,OAJIxW,KAAKub,eACLvb,KAAKub,aAAaE,aAAe,MACjCzb,KAAK+V,iBACL/V,KAAK+V,eAAe0B,WAAa,MAC9BzX,KAAK6Y,SAUhBqC,EAAsBra,UAAUib,sBAAwB,SAAUC,EAAQ/N,GACtE,GAAI+N,EAAQ,CACR,IAAIhC,EAAOgC,EAAO7C,MAWlB,OAVAlL,EAAOwI,MAAQuF,EACf/N,EAAOkL,MAAQa,EACfgC,EAAO7C,MAAQlL,EACX+L,IACAA,EAAKvD,MAAQxI,GAEb+N,IAAW/b,KAAKmb,WAChBnb,KAAKmb,SAAWnN,GAEpBhO,KAAKob,aAAeW,EACbA,EAUX,OARI/b,KAAKob,cACLpb,KAAKob,aAAa5E,MAAQxI,EAC1BA,EAAOkL,MAAQlZ,KAAKob,cAGpBpb,KAAKmb,SAAWnN,EAEpBhO,KAAKob,aAAepN,EACb,MAEXkN,EAAsBra,UAAUgb,yBAA2B,SAAUja,EAAKqB,GACtE,GAAIjD,KAAK6M,SAASmP,IAAIpa,GAAM,CACxB,IAAIqa,EAAWjc,KAAK6M,SAAS1B,IAAIvJ,GACjC5B,KAAK4b,mBAAmBK,EAAUhZ,GAClC,IAAI8W,EAAOkC,EAAS/C,MAChBlW,EAAOiZ,EAASzF,MASpB,OARIuD,IACAA,EAAKvD,MAAQxT,GAEbA,IACAA,EAAKkW,MAAQa,GAEjBkC,EAASzF,MAAQ,KACjByF,EAAS/C,MAAQ,KACV+C,EAEX,IAAIjO,EAAS,IAAIkO,GAAsBta,GAIvC,OAHA5B,KAAK6M,SAASC,IAAIlL,EAAKoM,GACvBA,EAAO+G,aAAe9R,EACtBjD,KAAKmc,gBAAgBnO,GACdA,GAGXkN,EAAsBra,UAAUsX,OAAS,WACrC,GAAInY,KAAK6Y,QAAS,CACd,IAAI7K,OAAS,EAGb,IADAhO,KAAKqb,iBAAmBrb,KAAKmb,SACxBnN,EAAShO,KAAKqb,iBAA6B,OAAXrN,EAAiBA,EAASA,EAAOwI,MAClExI,EAAOuJ,cAAgBvJ,EAAOwI,MAIlC,IAAKxI,EAAShO,KAAKsb,aAAyB,OAAXtN,EAAiBA,EAASA,EAAOyN,aAC9DzN,EAAO8G,cAAgB9G,EAAO+G,aAElC,IAAK/G,EAAShO,KAAK8V,eAA0B,MAAV9H,EAAgBA,EAASA,EAAOyJ,WAC/DzJ,EAAO8G,cAAgB9G,EAAO+G,aAElC/U,KAAKsb,aAAetb,KAAKub,aAAe,KACxCvb,KAAK8V,eAAiB9V,KAAK+V,eAAiB,KAC5C/V,KAAKkW,cAAgB,OAI7BgF,EAAsBra,UAAU+a,mBAAqB,SAAU5N,EAAQoO,GAC9D5S,EAAe4S,EAAUpO,EAAO+G,gBACjC/G,EAAO8G,cAAgB9G,EAAO+G,aAC9B/G,EAAO+G,aAAeqH,EACtBpc,KAAKqc,cAAcrO,KAG3BkN,EAAsBra,UAAUsb,gBAAkB,SAAUnO,GAC5B,OAAxBhO,KAAK8V,eACL9V,KAAK8V,eAAiB9V,KAAK+V,eAAiB/H,GAG5ChO,KAAK+V,eAAe0B,WAAazJ,EACjChO,KAAK+V,eAAiB/H,IAG9BkN,EAAsBra,UAAUwb,cAAgB,SAAUrO,GAC5B,OAAtBhO,KAAKsb,aACLtb,KAAKsb,aAAetb,KAAKub,aAAevN,GAGxChO,KAAKub,aAAaE,aAAezN,EACjChO,KAAKub,aAAevN,IAI5BkN,EAAsBra,UAAU8a,SAAW,SAAU9M,EAAKzF,GAClDyF,aAAe3F,IACf2F,EAAIF,QAAQvF,GAGZhJ,OAAO4I,KAAK6F,GAAKF,QAAQ,SAAU2N,GAAK,OAAOlT,EAAGyF,EAAIyN,GAAIA,MAG3DpB,EA3N+B,GA6NtCgB,GACA,SAASA,GAAsBta,GAC3B5B,KAAK4B,IAAMA,EACX5B,KAAK8U,cAAgB,KACrB9U,KAAK+U,aAAe,KAEpB/U,KAAKuX,cAAgB,KAErBvX,KAAKwW,MAAQ,KAEbxW,KAAKkZ,MAAQ,KAEblZ,KAAKyX,WAAa,KAElBzX,KAAKiX,aAAe,KAEpBjX,KAAKyb,aAAe,MAgBxBc,GAAiC,WACjC,SAASA,EAAgBC,GACrBxc,KAAKwc,UAAYA,EA0DrB,OAxDAD,EAAgBzb,OAAS,SAAU0b,EAAWjR,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAIkR,EAASlR,EAAOiR,UAAUxQ,QAC9BwQ,EAAYA,EAAU/Y,OAAOgZ,GAEjC,OAAO,IAAIF,EAAgBC,IAsB/BD,EAAgBG,OAAS,SAAUF,GAC/B,OACInQ,QAASkQ,EACT5O,WAAY,SAAUpC,GAClB,IAAKA,EAID,MAAM,IAAIF,MAAM,2DAEpB,OAAOkR,EAAgBzb,OAAO0b,EAAWjR,IAG7CwB,OAAQwP,EAAiB,IAAI3R,EAAY,IAAIF,MAGrD6R,EAAgB1b,UAAU8b,KAAO,SAAUC,GACvC,IAAIvd,EAAUW,KAAKwc,UAAUG,KAAK,SAAUE,GAAK,OAAOA,EAAEzH,SAASwH,KACnE,GAAe,MAAXvd,EACA,OAAOA,EAGP,MAAM,IAAIgM,MAAM,2CAA6CuR,EAAW,cASpF,SAASE,EAAwBtS,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAVkEsS,CAAwBF,GAAY,MAGpIL,EAAgBlY,gBAAkBX,GAC9BE,WAAY,OACZvE,QAAS,WAAc,OAAO,IAAIkd,GAAiB,IAAIpH,QAEpDoH,EA5DyB,GAmFhCQ,GAAOC,SACX,SAASC,GAAOrO,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIsO,GAAgB,6DAChBC,GAAkB,uDAClBC,GAA4B,8EAC5BC,GAAwC,WACxC,SAASA,EAAuBC,GAC5Btd,KAAKud,SAAWD,GAAW7U,EAAiB,QAsMhD,OApMA4U,EAAuBxc,UAAU2c,oBAAsB,WAAc,OAAO,GAC5EH,EAAuBxc,UAAUxB,QAAU,SAAU4B,GAAK,OAAO,WAE7D,IADA,IAAImE,KACKC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCD,EAAKC,GAAMhE,UAAUgE,GAEzB,OAAO,IAAKpE,EAAEsE,KAAK/D,MAAMP,EAAGuC,QAAU,GAAS4B,OAGnDiY,EAAuBxc,UAAU4c,wBAA0B,SAAUC,EAAYC,GAC7E,IAAIC,EAEAA,OADsB,IAAfF,EACE,IAAInd,MAAMod,EAAiBrc,QAG3B,IAAIf,MAAMmd,EAAWpc,QAElC,IAAK,IAAIH,EAAI,EAAGA,EAAIyc,EAAOtc,OAAQH,IAK3Byc,EAAOzc,QADe,IAAfuc,KAGFA,EAAWvc,IAAMf,QACTsd,EAAWvc,OAKxBwc,GAA2C,MAAvBA,EAAiBxc,KACrCyc,EAAOzc,GAAKyc,EAAOzc,GAAGsC,OAAOka,EAAiBxc,KAGtD,OAAOyc,GAEXP,EAAuBxc,UAAUgd,eAAiB,SAAUrT,EAAMsT,GAC9D,IAAIC,EAAUvT,EAAKlG,WAQnB,GAAI4Y,GAAcc,KAAKD,IAClBZ,GAAgBa,KAAKD,KAAaX,GAA0BY,KAAKD,GAClE,OAAO,KAGX,GAAIvT,EAAKpE,YAAcoE,EAAKpE,aAAe0X,EAAW1X,WAClD,OAAOoE,EAAKpE,WAGhB,IAAI6X,EAAoBzT,EAAK0T,eAC7B,GAAID,GAAqBA,IAAsBH,EAAWI,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAerU,IAAI,SAAUuU,GAAa,OAAOA,GAAaA,EAAU5T,OACvF6T,EAAqBH,EAAerU,IAAI,SAAUuU,GAClD,OAAOA,GAAaE,GAAoCF,EAAU1c,cAEtE,OAAO1B,KAAKyd,wBAAwBU,EAAcE,GAGtD,IAAIV,EAAmBnT,EAAK/J,eAAe+D,IAAegG,EAAKhG,GAC3DkZ,EAAa1d,KAAKud,UAAYvd,KAAKud,SAASgB,gBAC5Cve,KAAKud,SAASgB,eAAe,oBAAqB/T,GACtD,OAAIkT,GAAcC,EACP3d,KAAKyd,wBAAwBC,EAAYC,GAM7C,IAAIpd,MAAMiK,EAAKlJ,QAAQkd,UAAK3a,IAEvCwZ,EAAuBxc,UAAUuF,WAAa,SAAUoE,GAGpD,IAAKyS,GAAOzS,GACR,SAEJ,IAAIsT,EAAaW,GAAcjU,GAC3BpE,EAAapG,KAAK6d,eAAerT,EAAMsT,GAI3C,OAHK1X,GAAc0X,IAAe1d,SAC9BgG,EAAapG,KAAKoG,WAAW0X,IAE1B1X,OAEXiX,EAAuBxc,UAAU6d,gBAAkB,SAAUC,EAAYb,GAErE,GAAIa,EAAWlR,aAAekR,EAAWlR,cAAgBqQ,EAAWrQ,YAAa,CAC7E,IAAIA,EAAckR,EAAWlR,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAIkR,EAAWjd,YAAcid,EAAWjd,aAAeoc,EAAWpc,WACvD4c,GAAoCK,EAAWjd,YAGtDid,EAAWle,eAAe8D,GACnBoa,EAAWpa,GAEf,MAEX8Y,EAAuBxc,UAAU4M,YAAc,SAAUkR,GACrD,IAAK1B,GAAO0B,GACR,SAEJ,IAAIb,EAAaW,GAAcE,GAC3BC,EAAiB5e,KAAK0e,gBAAgBC,EAAYb,OAEtD,OADwBA,IAAe1d,OAASJ,KAAKyN,YAAYqQ,OACxCra,OAAOmb,IAEpCvB,EAAuBxc,UAAUge,iBAAmB,SAAUF,EAAYb,GAEtE,GAAIa,EAAWG,cACXH,EAAWG,eAAiBhB,EAAWgB,aAAc,CACrD,IAAIA,EAAeH,EAAWG,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIH,EAAWI,gBACXJ,EAAWI,iBAAmBjB,EAAWiB,eAAgB,CACzD,IAAIC,EAAmBL,EAAWI,eAC9BE,KAIJ,OAHA7e,OAAO4I,KAAKgW,GAAkBrQ,QAAQ,SAAUuQ,GAC5CD,EAAeC,GAAQZ,GAAoCU,EAAiBE,MAEzED,EAGX,OAAIN,EAAWle,eAAegE,GACnBka,EAAWla,GAEf,MAEX4Y,EAAuBxc,UAAUie,aAAe,SAAUH,GACtD,IAAK1B,GAAO0B,GACR,SAEJ,IAAIb,EAAaW,GAAcE,GAC3BG,KACJ,GAAIhB,IAAe1d,OAAQ,CACvB,IAAI+e,EAAuBnf,KAAK8e,aAAahB,GAC7C1d,OAAO4I,KAAKmW,GAAsBxQ,QAAQ,SAAU9I,GAChDiZ,EAAajZ,GAAYsZ,EAAqBtZ,KAGtD,IAAIuZ,EAAkBpf,KAAK6e,iBAAiBF,EAAYb,GAWxD,OAVIsB,GACAhf,OAAO4I,KAAKoW,GAAiBzQ,QAAQ,SAAU9I,GAC3C,IAAInE,KACAod,EAAare,eAAeoF,IAC5BnE,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASsb,EAAajZ,KAE5DnE,EAAW4B,KAAK9B,MAAME,EAAY8B,EAAS4b,EAAgBvZ,KAC3DiZ,EAAajZ,GAAYnE,IAG1Bod,GAEXzB,EAAuBxc,UAAUwe,iBAAmB,SAAU7U,EAAM8U,GAChE,OAAO9U,aAAgBuS,IAAQuC,KAAc9U,EAAK3J,WAEtDwc,EAAuBxc,UAAU0e,OAAS,SAAU/U,GAAQ,UAC5D6S,EAAuBxc,UAAU2e,OAAS,SAAU7a,GAAQ,OAAO,IAAIqY,SAAS,IAAK,YAAcrY,EAAO,MAC1G0Y,EAAuBxc,UAAU4e,OAAS,SAAU9a,GAChD,OAAO,IAAIqY,SAAS,IAAK,IAAK,YAAcrY,EAAO,UAEvD0Y,EAAuBxc,UAAU6e,OAAS,SAAU/a,GAEhD,OAAO,IAAIqY,SAAS,IAAK,OADN,UAAYrY,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5H0Y,EAAuBxc,UAAU8e,UAAY,SAAUnV,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAOb,EAAUa,IAE5B6S,EAAuBxc,UAAU+e,YAAc,SAAUpV,GAAQ,MAAO,KAAOb,EAAUa,IACzF6S,EAAuBxc,UAAUgf,kBAAoB,SAAUlb,EAAMmb,EAAWC,EAASC,GACrF,OAAOA,GAEX3C,EAAuBxc,UAAUof,YAAc,SAAUC,EAAgBvb,GAAQ,OAAOub,EAAevb,IAChG0Y,EAxMgC,GA0M3C,SAASiB,GAAoC6B,GACzC,OAAKA,EAGEA,EAAqBtW,IAAI,SAAUuW,GACtC,IACI1a,EADgB0a,EAAoB5V,KACN9E,cAElC,OAAO,IAAKA,EAAcH,KAAK/D,MAAMkE,EAAelC,QAAU,GADzC4c,EAAoBhb,KAAOgb,EAAoBhb,gBAI5E,SAASqZ,GAAc9Y,GACnB,IAAI0a,EAAc1a,EAAK9E,UAAYT,OAAOkgB,eAAe3a,EAAK9E,WAAa,KAI3E,OAHiBwf,EAAcA,EAAYzf,YAAc,OAGpCR;;;;;;;OAUzB,SAASmgB,GAAyBnU,EAA0BzK,GACxD,IAAK,IAAIC,KAAOwK,EACZ,GAAIA,EAAyBxK,KAASD,EAClC,OAAOC,EAGf,MAAMyJ,MAAM,qDAQhB,SAASmV,GAAe7e,EAAQgL,GAC5B,IAAK,IAAI/K,KAAO+K,EACRA,EAAOlM,eAAemB,KAASD,EAAOlB,eAAemB,KACrDD,EAAOC,GAAO+K,EAAO/K;;;;;;;OAYjC,IAAI6e,MACAC,GAAcH,IAA2BlU,QAASC,OAAQC,SAAUkU,IAAuBA,IAC3FE,MACJ,SAASC,GAAmCpW,EAAM0C,GAC9C,IAAKA,EAAU,CACX,IACI2T,GADAC,EAAyB,IAAIzD,IACGjX,WAAWoE,GAE/C,OAAO,WAAc,OAAO,IAAKA,EAAKjF,KAAK/D,MAAMgJ,EAAMhH,QAAU,GAASiM,GAAWoR,OAEzF,GAAIH,MAAexT,EAAU,CACzB,IAAI6T,EAAkB7T,EACtB,OAAO,WAAc,OAAO6T,EAAgBxU,UAE3C,GAAIW,EAASQ,YAAa,CAC3B,IAAIsT,EAAqB9T,EACzB,OAAO,WAAc,OAAOvB,GAAOqV,EAAmBtT,cAErD,GAAIR,EAASS,WAAY,CAC1B,IAAIsT,EAAoB/T,EACxB,OAAO,WAAc,OAAO+T,EAAkBtT,WAAWnM,MAAMyf,EAAmBzd,EAASiM,GAAWwR,EAAkBlU,MAAQ4T,OAE/H,GAAIzT,EAASU,SAAU,CACxB,IAAIsT,EAAkBhU,EAClBiU,EAASjU,EAASH,KACtB,IAAKoU,EAAQ,CACT,IAAIL,EAAyB,IAAIzD,GACjC8D,EAASL,EAAuB1a,WAAWoE,GAE/C,OAAO,WACH,IAAIrF,EACJ,OAAO,KAAMA,EAAK+b,EAAgBtT,UAAUrI,KAAK/D,MAAM2D,EAAI3B,QAAU,GAASiM,GAAW0R,OAI7F,IAAIC,EAASlU,EAASH,KAKtB,OAJKqU,IACGN,EAAyB,IAAIzD,GACjC+D,EAASN,EAAuB1a,WAAWoE,IAExC,WAAc,OAAO,IAAKA,EAAKjF,KAAK/D,MAAMgJ,EAAMhH,QAAU,GAASiM,GAAW2R,OAmB7F,IAAIC,GAAa3c,EAAc,kBAAcb,OAAWA,OAAWA,EAAW,SAAU2G,EAAM/D,GAC1F,OAAQ6a,IAdZ,SAASC,EAAuBC,EAAgBzd,GACxCA,QAAkCF,IAAvBE,EAAQH,iBAA+DC,IAAnC2d,EAAend,kBAC9Dmd,EAAend,gBAAkBX,GAC7BE,WAAYG,EAAQH,WACpBvE,QAASuhB,GAAmCY,EAAgBzd,QAUXyG,EAAM/D,KAU/Dgb,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe;;;;;;;OACnB,SAASC,GAAgBre,GACrB,OAAOA,EAAMke,IAEjB,SAASI,GAAiBte,GACtB,OAAOA,EAAMme,IAKjB,SAASI,GAAmBC,GAExB,IADA,IAAInc,KACKP,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCO,EAAOP,EAAK,GAAKhE,UAAUgE,GAE/B0c,EAAQxe,MAAM/B,MAAMugB,EAASve,EAASoC;;;;;;;OAiC1C,IAAIoc,GAA8B,WAC9B,SAASA,IAILhiB,KAAKiiB,SAAWF,QAgCpB,OA9BAC,EAAanhB,UAAUqhB,YAAc,SAAU3e,GAC3C,IAAI4e,EAAgBniB,KAAKoiB,mBAAmB7e,GACxCyL,EAAUhP,KAAKqiB,aAAa9e,GAG5B+e,EArDZ,SAASC,EAAehf,GACpB,OAAOA,EAAMoe,KAAiBG,GAoDRS,CAAehf,GACjC+e,EAAYtiB,KAAKiiB,SAAU,QAAS1e,GAChC4e,GACAG,EAAYtiB,KAAKiiB,SAAU,iBAAkBE,GAE7CnT,GACAsT,EAAYtiB,KAAKiiB,SAAU,gBAAiBjT,IAIpDgT,EAAanhB,UAAUwhB,aAAe,SAAU9e,GAC5C,OAAIA,EACOqe,GAAgBre,GAASqe,GAAgBre,GAC5CvD,KAAKqiB,aAAaR,GAAiBte,IAEpC,MAGXye,EAAanhB,UAAUuhB,mBAAqB,SAAU7e,GAElD,IADA,IAAIH,EAAIye,GAAiBte,GAClBH,GAAKye,GAAiBze,IACzBA,EAAIye,GAAiBze,GAEzB,OAAOA,GAEJ4e,EArCsB,GAgEjC,SAASQ,GAAuBxZ,GAC5B,OAAIA,EAAK1H,OAAS,EAGP;;;;;;;;AAff,SAASmhB,EAAqBzZ,GAE1B,IADA,IAAIgB,KACK7I,EAAI,EAAGA,EAAI6H,EAAK1H,SAAUH,EAAG,CAClC,GAAI6I,EAAIE,QAAQlB,EAAK7H,KAAO,EAExB,OADA6I,EAAI1G,KAAK0F,EAAK7H,IACP6I,EAEXA,EAAI1G,KAAK0F,EAAK7H,IAElB,OAAO6I,EAIYyY,CAAqBzZ,EAAKgD,QAAQ0W,WACxB7Y,IAAI,SAAUyS,GAAK,OAAO3S,EAAU2S,EAAE1S,SACvCE,KAAK,QAAU,IAEpC,GAEX,SAAS6Y,GAAerT,EAAU1N,EAAKghB,EAA2BT,GAC9D,IAAInZ,GAAQpH,GACRihB,EAASD,EAA0B5Z,GACnCzF,EAAS4e,EApCjB,SAASW,EAAatU,EAAS2T,GAC3B,IAAIY,EAAMvU,EAAU,gBAAkB2T,aAAyB9W,MAAQ8W,EAAc3T,QAAU2T,GAC3F5e,EAAQ8H,MAAM0X,GAElB,OADAxf,EAAMme,IAAwBS,EACvB5e,EAgCsBuf,CAAaD,EAAQV,GAAiB9W,MAAMwX,GAMzE,OALAtf,EAAMyf,OAASA,GACfzf,EAAMyF,KAAOA,EACbzF,EAAM0f,WAAa3T,GACnB/L,EAAMqf,0BAA4BA,EAClCrf,EAAMme,IAAwBS,EACvB5e,EAEX,SAASyf,GAAO1T,EAAU1N,GACtB5B,KAAKijB,UAAU3f,KAAKgM,GACpBtP,KAAKgJ,KAAK1F,KAAK1B,GAEf5B,KAAKwO,QAAUxO,KAAK4iB,0BAA0B5iB,KAAKgJ,MA0HvD,SAASka,GAAkBvE,EAAYwE,GAEnC,IADA,IAAIC,KACKjiB,EAAI,EAAGkiB,EAAKF,EAAO7hB,OAAQH,EAAIkiB,EAAIliB,IAAK,CAC7C,IAAImiB,EAAYH,EAAOhiB,GAKnBiiB,EAAU9f,KAJTggB,GAAiC,GAApBA,EAAUhiB,OAITgiB,EAAUzZ,IAAIF,GAAWG,KAAK,KAH9B,KAMvB,OAAOuB,MAAM,sCAAyC1B,EAAUgV,GAAc,KAC1EyE,EAAUtZ,KAAK,MAAQ,2GAEvBH,EAAUgV,GAAc;;;;;;;;AA6DhC,IAAI4E,GAA+B,WAI/B,SAASA,EAAc3Z,EAAO4Z,GAG1B,GAFAxjB,KAAK4J,MAAQA,EACb5J,KAAKwjB,GAAKA,GACL5Z,EACD,MAAM,IAAIyB,MAAM,0BAEpBrL,KAAKyjB,YAAc9Z,EAAU3J,KAAK4J,OAgBtC,OAXA2Z,EAAcpY,IAAM,SAAUvB,GAC1B,OAAO8Z,GAAmBvY,IAAIZ,EAAkBX,KAEpDxJ,OAAO+B,eAAeohB,EAAe,gBAIjCpY,IAAK,WAAc,OAAOuY,GAAmBC,cAC7C7K,YAAY,EACZC,cAAc,IAEXwK,EA1BuB,GAiD9BG,GAAqB,IArBQ,WAC7B,SAASE,IACL5jB,KAAK6jB,SAAW,IAAI3a,IAiBxB,OAfA0a,EAAY/iB,UAAUsK,IAAM,SAAUvB,GAClC,GAAIA,aAAiB2Z,GACjB,OAAO3Z,EACX,GAAI5J,KAAK6jB,SAAS7H,IAAIpS,GAClB,OAAO5J,KAAK6jB,SAAS1Y,IAAIvB,GAE7B,IAAIka,EAAS,IAAIP,GAAc3Z,EAAO2Z,GAAcI,cAEpD,OADA3jB,KAAK6jB,SAAS/W,IAAIlD,EAAOka,GAClBA,GAEX1jB,OAAO+B,eAAeyhB,EAAY/iB,UAAW,gBACzCsK,IAAK,WAAc,OAAOnL,KAAK6jB,SAAS9I,MACxCjC,YAAY,EACZC,cAAc,IAEX6K,EAnBqB,IA6E5BG,GAAY,IA3Ce,WAC3B,SAASC,EAAUlD,GACf9gB,KAAK8gB,uBAAyBA,EA2BlC,OAzBAkD,EAAUnjB,UAAUojB,mBAAqB,SAAUC,GAAQlkB,KAAK8gB,uBAAyBoD,GACzFF,EAAUnjB,UAAUxB,QAAU,SAAUmL,GAAQ,OAAOxK,KAAK8gB,uBAAuBzhB,QAAQmL,IAC3FwZ,EAAUnjB,UAAUuF,WAAa,SAAUuY,GACvC,OAAO3e,KAAK8gB,uBAAuB1a,WAAWuY,IAElDqF,EAAUnjB,UAAU4M,YAAc,SAAUkR,GACxC,OAAO3e,KAAK8gB,uBAAuBrT,YAAYkR,IAEnDqF,EAAUnjB,UAAUie,aAAe,SAAUH,GACzC,OAAO3e,KAAK8gB,uBAAuBhC,aAAaH,IAEpDqF,EAAUnjB,UAAUwe,iBAAmB,SAAU7U,EAAM8U,GACnD,OAAOtf,KAAK8gB,uBAAuBzB,iBAAiB7U,EAAM8U,IAE9D0E,EAAUnjB,UAAU2e,OAAS,SAAU7a,GAAQ,OAAO3E,KAAK8gB,uBAAuBtB,OAAO7a,IACzFqf,EAAUnjB,UAAU4e,OAAS,SAAU9a,GAAQ,OAAO3E,KAAK8gB,uBAAuBrB,OAAO9a,IACzFqf,EAAUnjB,UAAU6e,OAAS,SAAU/a,GAAQ,OAAO3E,KAAK8gB,uBAAuBpB,OAAO/a,IACzFqf,EAAUnjB,UAAU8e,UAAY,SAAUnV,GAAQ,OAAOxK,KAAK8gB,uBAAuBnB,UAAUnV,IAC/FwZ,EAAUnjB,UAAU+e,YAAc,SAAUpV,GAAQ,OAAOxK,KAAK8gB,uBAAuBlB,YAAYpV,IACnGwZ,EAAUnjB,UAAUgf,kBAAoB,SAAUlb,EAAMmb,EAAWC,EAASC,GACxE,OAAOhgB,KAAK8gB,uBAAuBjB,kBAAkBlb,EAAMmb,EAAWC,EAASC,IAEnFgE,EAAUnjB,UAAUof,YAAc,SAAUkE,EAAYxf,GACpD,OAAO3E,KAAK8gB,uBAAuBb,YAAYkE,EAAYxf,IAExDqf,EA7BmB,GA2Cd,CAAc,IAAI3G,IAa9B+G,GAAsC,WACtC,SAASA,EAAqBxiB,EAAKyiB,EAAUC,GACzCtkB,KAAK4B,IAAMA,EACX5B,KAAKqkB,SAAWA,EAChBrkB,KAAKskB,WAAaA,EAKtB,OAHAF,EAAqBG,QAAU,SAAU3iB,GACrC,OAAO,IAAIwiB,EAAqBxiB,GAAK,EAAO,OAEzCwiB,EAT8B,GAWrCI,MACAC,GACA,SAASA,GAA4B7iB,EAAK8iB,EAAmB5W,GACzD9N,KAAK4B,IAAMA,EACX5B,KAAK0kB,kBAAoBA,EACzB1kB,KAAK8N,cAAgBA,EACrB9N,KAAK2kB,gBAAkB3kB,KAAK0kB,kBAAkB,IAQlDE,GACA,SAASA,GAITvlB,EAIAwlB,GACI7kB,KAAKX,QAAUA,EACfW,KAAK6kB,aAAeA,GAmC5B,SAASC,GAA0B5X,GAC/B,OAAO,IAAIuX,GAA4BlB,GAAcpY,IAAI+B,EAASb,UA7BtE,SAAS0Y,EAAyB7X,GAC9B,IAAI8X,EACAC,EACJ,GAAI/X,EAASU,SAAU,CACnB,IAAIA,EAAWrD,EAAkB2C,EAASU,UAC1CoX,EAAYjB,GAAU1kB,QAAQuO,GAC9BqX,EAAeC,GAAiBtX,QAE3BV,EAASQ,aACdsX,EAAY,SAAUG,GAAiB,OAAOA,GAC9CF,GAAgBb,GAAqBG,QAAQhB,GAAcpY,IAAI+B,EAASQ,gBAEnER,EAASS,YACdqX,EAAY9X,EAASS,WACrBsX,EA6ER,SAASG,EAAsBzG,EAAYkG,GACvC,GAAKA,EAGA,CACD,IAAIQ,EAAWR,EAAahb,IAAI,SAAU5I,GAAK,OAAQA,KACvD,OAAO4jB,EAAahb,IAAI,SAAU5I,GAAK,OAAOqkB,GAAc3G,EAAY1d,EAAGokB,KAJ3E,OAAOH,GAAiBvG,GA/ETyG,CAAsBlY,EAASS,WAAYT,EAASH,QAGnEiY,EAAY,WAAc,OAAO9X,EAASX,UAC1C0Y,EAAeT,IAEnB,OAAO,IAAII,GAA0BI,EAAWC,GAS6BF,CAAyB7X,IAAYA,EAASW,QAAS,GAuExI,SAASqX,GAAiBvG,GACtB,IAAIwE,EAASY,GAAU3d,WAAWuY,GAClC,IAAKwE,EACD,SACJ,GAAIA,EAAOoC,KAAK,SAAU/kB,GAAK,OAAY,MAALA,IAClC,MAAM0iB,GAAkBvE,EAAYwE,GAExC,OAAOA,EAAOtZ,IAAI,SAAUrJ,GAAK,OAAO8kB,GAAc3G,EAAYne,EAAG2iB,KAEzE,SAASmC,GAAc3G,EAAYjc,EAAUygB,GACzC,IAAIvZ,EAAQ,KACRya,GAAW,EACf,IAAK9jB,MAAMiL,QAAQ9I,GACf,OACW8iB,GADP9iB,aAAoB+H,EACK/H,EAASkH,MAGTlH,EAHgB2hB,EAAU,MAO3D,IADA,IAAIC,EAAa,KACRnjB,EAAI,EAAGA,EAAIuB,EAASpB,SAAUH,EAAG,CACtC,IAAIskB,EAAgB/iB,EAASvB,GACzBskB,aAAyB1I,GACzBnT,EAAQ6b,EAEHA,aAAyBhb,EAC9Bb,EAAQ6b,EAAc7b,MAEjB6b,aAAyB/a,EAC9B2Z,GAAW,EAENoB,aAAyB9a,GAAQ8a,aAAyB7a,EAC/D0Z,EAAamB,EAERA,aAAyBvhB,IAC9B0F,EAAQ6b,GAIhB,GAAa,OADb7b,EAAQW,EAAkBX,IAEtB,OAAO4b,GAAkB5b,EAAOya,EAAUC,GAG1C,MAAMpB,GAAkBvE,EAAYwE,GAG5C,SAASqC,GAAkB5b,EAAOya,EAAUC,GACxC,OAAO,IAAIF,GAAqBb,GAAcpY,IAAIvB,GAAQya,EAAUC;;;;;;;OAWxE,IAAIoB,GAAY,IAAItlB,OAqChBulB,GAAoC,WACpC,SAASA,KA4FT,OAzDAA,EAAmB/c,QAAU,SAAU5E,GACnC,OAvMR,SAAS4hB,EAA2B5hB,GAChC,IAEI6hB,EAOR,SAASC,EAAiC9hB,EAAW+hB,GACjD,IAAK,IAAI5kB,EAAI,EAAGA,EAAI6C,EAAU1C,OAAQH,IAAK,CACvC,IAAI+L,EAAWlJ,EAAU7C,GACrB6kB,EAAWD,EAAuB5a,IAAI+B,EAAStL,IAAI4hB,IACvD,GAAIwC,EAAU,CACV,GAAI9Y,EAASY,gBAAkBkY,EAASlY,cACpC,MA7OLzC,MAAM,0DA6OmD2a,EA7OqB,IA6OX9Y,GAElE,GAAIA,EAASY,cACT,IAAK,IAAIN,EAAI,EAAGA,EAAIN,EAASwX,kBAAkBpjB,OAAQkM,IACnDwY,EAAStB,kBAAkBphB,KAAK4J,EAASwX,kBAAkBlX,SAI/DuY,EAAuBjZ,IAAII,EAAStL,IAAI4hB,GAAItW,OAG/C,CACD,IAAIE,EAEAA,EADAF,EAASY,cACU,IAAI2W,GAA4BvX,EAAStL,IAAKsL,EAASwX,kBAAkB1Y,QAASkB,EAASY,eAG3FZ,EAEvB6Y,EAAuBjZ,IAAII,EAAStL,IAAI4hB,GAAIpW,IAGpD,OAAO2Y,EAnCmBD,CAqC9B,SAASG,EAAoBjiB,EAAWgG,GAepC,OAdAhG,EAAU2K,QAAQ,SAAUxO,GACxB,GAAIA,aAAa4c,GACb/S,EAAI1G,MAAO+I,QAASlM,EAAGyN,SAAUzN,SAEhC,GAAIA,GAAiB,iBAALA,QAA+B0D,IAAd1D,EAAEkM,QACpCrC,EAAI1G,KAAKnD,OAER,CAAA,KAAIA,aAAaI,OAIlB,MAnWZ,SAAS2lB,EAAqBhZ,GAC1B,OAAO7B,MAAM,4EAA8E6B,GAkW7EgZ,CAAqB/lB,GAH3B8lB,EAAoB9lB,EAAG6J,MAMxBA,EAtDUic,CAAoBjiB,MACX6F,IAAIib,IACuC,IAAI5b,KACzE,OAAO3I,MAAM4lB,KAAKN,EAAoBjgB,UAmM3BggB,CAA2B5hB,IAyBtC2hB,EAAmBS,iBAAmB,SAAUpiB,EAAWuH,GACvD,IAAI8a,EAA8BV,EAAmB/c,QAAQ5E,GAC7D,OAAO2hB,EAAmBW,sBAAsBD,EAA6B9a,IA0BjFoa,EAAmBW,sBAAwB,SAAUtiB,EAAWuH,GAC5D,OAAO,IAAIgb,GAAoBviB,EAAWuH,IAEvCoa,EA7F4B,GA+FnCY,GAAqC,WAIrC,SAASA,EAAoBC,EAAYC,GAErCzmB,KAAK0mB,qBAAuB,EAC5B1mB,KAAKwmB,WAAaA,EAClBxmB,KAAKuL,OAASkb,GAAW,KACzB,IAAIE,EAAMH,EAAWllB,OACrBtB,KAAK4mB,OAAS,IAAIrmB,MAAMomB,GACxB3mB,KAAK6mB,KAAO,IAAItmB,MAAMomB,GACtB,IAAK,IAAIxlB,EAAI,EAAGA,EAAIwlB,EAAKxlB,IACrBnB,KAAK4mB,OAAOzlB,GAAKqlB,EAAWrlB,GAAGS,IAAI4hB,GACnCxjB,KAAK6mB,KAAK1lB,GAAKukB,GAgJvB,OA7IAa,EAAoB1lB,UAAUsK,IAAM,SAAUvB,EAAOwB,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgBJ,GACzChL,KAAK8mB,UAAUvD,GAAcpY,IAAIvB,GAAQ,KAAMwB,IAE1Dmb,EAAoB1lB,UAAUkmB,sBAAwB,SAAU/iB,GAC5D,IAAIqiB,EAA8BV,GAAmB/c,QAAQ5E,GAC7D,OAAOhE,KAAKgnB,wBAAwBX,IAExCE,EAAoB1lB,UAAUmmB,wBAA0B,SAAUhjB,GAC9D,IAAIijB,EAAM,IAAIV,EAAoBviB,GAElC,OADAijB,EAAI1b,OAASvL,KACNinB,GAEXV,EAAoB1lB,UAAUqmB,sBAAwB,SAAUha,GAC5D,OAAOlN,KAAKmnB,oBAAoBxB,GAAmB/c,SAASsE,IAAW,KAE3EqZ,EAAoB1lB,UAAUsmB,oBAAsB,SAAUja,GAC1D,OAAOlN,KAAKonB,qBAAqBla,IAErCqZ,EAAoB1lB,UAAUwmB,mBAAqB,SAAUlhB,GACzD,GAAIA,EAAQ,GAAKA,GAASnG,KAAKwmB,WAAWllB,OACtC,MAthBZ,SAASgmB,EAAiBnhB,GACtB,OAAOkF,MAAM,SAAWlF,EAAQ,sBAqhBlBmhB,CAAiBnhB,GAE3B,OAAOnG,KAAKwmB,WAAWrgB,IAG3BogB,EAAoB1lB,UAAU0mB,KAAO,SAAUra,GAC3C,GAAIlN,KAAK0mB,uBAAyB1mB,KAAKwnB,yBACnC,MA9oBZ,SAASC,EAAsBnY,EAAU1N,GACrC,OAAO+gB,GAAerT,EAAU1N,EAAK,SAAUoH,GAC3C,MAAO,wCAA0CwZ,GAAuBxZ,KA4oB9Dye,CAAsBznB,KAAMkN,EAAStL,KAE/C,OAAO5B,KAAKonB,qBAAqBla,IAErCqZ,EAAoB1lB,UAAU2mB,uBAAyB,WAAc,OAAOxnB,KAAK6mB,KAAKvlB,QACtFilB,EAAoB1lB,UAAUumB,qBAAuB,SAAUla,GAC3D,GAAIA,EAASY,cAAe,CAExB,IADA,IAAI9D,EAAM,IAAIzJ,MAAM2M,EAASwX,kBAAkBpjB,QACtCH,EAAI,EAAGA,EAAI+L,EAASwX,kBAAkBpjB,SAAUH,EACrD6I,EAAI7I,GAAKnB,KAAK0nB,aAAaxa,EAAUA,EAASwX,kBAAkBvjB,IAEpE,OAAO6I,EAGP,OAAOhK,KAAK0nB,aAAaxa,EAAUA,EAASwX,kBAAkB,KAGtE6B,EAAoB1lB,UAAU6mB,aAAe,SAAUxa,EAAUya,GAC7D,IAEI5a,EAWA8B,EAbAqJ,EAAQlY,KACRX,EAAUsoB,EAA6BtoB,QAE3C,IACI0N,EACI4a,EAA6B9C,aAAahb,IAAI,SAAU+d,GAAO,OAAO1P,EAAM2P,2BAA2BD,KAE/G,MAAOxkB,GAIH,MAHIA,EAAE4f,QACF5f,EAAE4f,OAAOhjB,KAAMkN,EAAStL,KAEtBwB,EAGV,IACIyL,EAAMxP,EAAQmC,WAAM,EAAQgC,EAASuJ,IAEzC,MAAO3J,GACH,MAlpBZ,SAAS0kB,EAAmBxY,EAAUyY,EAAmBC,EAAepmB,GACpE,OAAO+gB,GAAerT,EAAU1N,EAAK,SAAUoH,GAC3C,IAAI5B,EAAQuC,EAAUX,EAAK,GAAGY,OAC9B,OAAOme,EAAkBvZ,QAAU,mCAAqCpH,EAAQ,IAAMob,GAAuBxZ,GAAQ,KACtH+e,GA8oBWD,CAAmB9nB,KAAMoD,EAAGA,EAAS8J,EAAStL,KAExD,OAAOiN,GAEX0X,EAAoB1lB,UAAUgnB,2BAA6B,SAAUD,GACjE,OAAO5nB,KAAK8mB,UAAUc,EAAIhmB,IAAKgmB,EAAItD,WAAYsD,EAAIvD,SAAW,KAAOrZ,IAEzEub,EAAoB1lB,UAAUimB,UAAY,SAAUllB,EAAK0iB,EAAYlZ,GACjE,OAAIxJ,IAAQ2kB,EAAoB0B,aACrBjoB,KAEPskB,aAAsB3Z,EACf3K,KAAKkoB,cAActmB,EAAKwJ,GAGxBpL,KAAKmoB,iBAAiBvmB,EAAKwJ,EAAekZ,IAGzDiC,EAAoB1lB,UAAUunB,eAAiB,SAAUC,GACrD,IAAK,IAAIlnB,EAAI,EAAGA,EAAInB,KAAK4mB,OAAOtlB,OAAQH,IACpC,GAAInB,KAAK4mB,OAAOzlB,KAAOknB,EAInB,OAHIroB,KAAK6mB,KAAK1lB,KAAOukB,KACjB1lB,KAAK6mB,KAAK1lB,GAAKnB,KAAKunB,KAAKvnB,KAAKwmB,WAAWrlB,KAEtCnB,KAAK6mB,KAAK1lB,GAGzB,OAAOukB,IAGXa,EAAoB1lB,UAAUynB,aAAe,SAAU1mB,EAAKwJ,GACxD,GAAIA,IAAkBJ,EAClB,OAAOI,EAGP,MA5uBZ,SAASmd,EAAgBjZ,EAAU1N,GAC/B,OAAO+gB,GAAerT,EAAU1N,EAAK,SAAUoH,GAE3C,MAAO,mBADKW,EAAUX,EAAK,GAAGY,OACM,IAAM4Y,GAAuBxZ,KAyuBvDuf,CAAgBvoB,KAAM4B,IAIpC2kB,EAAoB1lB,UAAUqnB,cAAgB,SAAUtmB,EAAKwJ,GACzD,IAAIyD,EAAM7O,KAAKooB,eAAexmB,EAAI4hB,IAClC,OAAQ3U,IAAQ6W,GAAa7W,EAAM7O,KAAKsoB,aAAa1mB,EAAKwJ,IAG9Dmb,EAAoB1lB,UAAUsnB,iBAAmB,SAAUvmB,EAAKwJ,EAAekZ,GAC3E,IAAI2C,EAOJ,IALIA,EADA3C,aAAsB1Z,EAChB5K,KAAKuL,OAGLvL,KAEHinB,aAAeV,GAAqB,CACvC,IAAIiC,EAAOvB,EACPpY,EAAM2Z,EAAKJ,eAAexmB,EAAI4hB,IAClC,GAAI3U,IAAQ6W,GACR,OAAO7W,EACXoY,EAAMuB,EAAKjd,OAEf,OAAY,OAAR0b,EACOA,EAAI9b,IAAIvJ,EAAIgI,MAAOwB,GAGnBpL,KAAKsoB,aAAa1mB,EAAKwJ,IAGtChL,OAAO+B,eAAeokB,EAAoB1lB,UAAW,eACjDsK,IAAK,WAGD,MAAO,kCASnB,SAASsd,EAAcnZ,EAAUlG,GAE7B,IADA,IAAIY,EAAM,IAAIzJ,MAAM+O,EAASkX,WAAWllB,QAC/BH,EAAI,EAAGA,EAAImO,EAASkX,WAAWllB,SAAUH,EAC9C6I,EAAI7I,GAAKiI,EAAGkG,EAAS+X,mBAAmBlmB,IAE5C,OAAO6I;;;;;;;OAhBiBye,CAAczoB,KAAM,SAAUG,GAAK,MAAO,KAAOA,EAAEyB,IAAI6hB,YAAc,OAChF3Z,KAAK,MAC6C,MAE3DgP,YAAY,EACZC,cAAc,IAElBwN,EAAoB1lB,UAAUyD,SAAW,WAAc,OAAOtE,KAAKyjB,aACnE8C,EAAoB0B,aAAe1E,GAAcpY,IAAIG,IAC9Cib,EA9J6B,GAoLpCmC,GAAW,IAAIxkB,EAAe,4EAY9BykB,MAQAC,MACAC,MAIAC,QAAkBjlB,EACtB,SAASklB,KAIL,YAHwBllB,IAApBilB,KACAA,GAAkB,IAAI5d,IAEnB4d,GAOX,SAASE,GAAeC,EAAS1d,EAAQ2d,GAIrC,YAHe,IAAX3d,IAAqBA,EAAS,WACN,IAAxB2d,IAAkCA,EAAsB,MAC5D3d,EAASA,GAAUwd,KACZ,IAAII,GAAWF,EAASC,EAAqB3d,GAExD,IAAI4d,GAA4B,WAC5B,SAASA,EAAW3X,EAAK0X,EAAqB3d,GAC1C,IAAI2M,EAAQlY,KACZA,KAAKuL,OAASA,EAIdvL,KAAK4M,QAAU,IAAI1D,IAInBlJ,KAAKopB,iBAAmB,IAAIxhB,IAI5B5H,KAAKqS,UAAY,IAAIzK,IAIrB5H,KAAKqpB,WAAY,EAGjBC,IAAa9X,GAAM,SAAU+X,GAAe,OAAOrR,EAAMsR,oBAAoBD,EAAa,IAAI3hB,OAC9FshB,GACII,GAAYJ,EAAqB,SAAUhc,GAAY,OAAOgL,EAAMuR,gBAAgBvc,KAExFlN,KAAK4M,QAAQE,IAAI7B,GAAUye,QAAW7lB,EAAW7D,OAGjDA,KAAK2pB,eAAiB3pB,KAAK4M,QAAQoP,IAAI0M,IAEvC1oB,KAAKopB,iBAAiBza,QAAQ,SAAUsa,GAAW,OAAO/Q,EAAM/M,IAAI8d,KA0LxE,OAlLAE,EAAWtoB,UAAU+oB,QAAU,WAC3B5pB,KAAK6pB,qBAEL7pB,KAAKqpB,WAAY,EACjB,IAEIrpB,KAAKqS,UAAU1D,QAAQ,SAAUmb,GAAW,OAAOA,EAAQC,gBAE/D,QAEI/pB,KAAK4M,QAAQgN,QACb5Z,KAAKqS,UAAUuH,QACf5Z,KAAKopB,iBAAiBxP,UAG9BuP,EAAWtoB,UAAUsK,IAAM,SAAUvB,EAAOwB,EAAe6C,QACjC,IAAlB7C,IAA4BA,EAAgBJ,QAClC,IAAViD,IAAoBA,EAAQ,GAChCjO,KAAK6pB,qBAEL,IAAIG,EAAmB3a,GAAmBrP,MAC1C,IAEI,KAAc,EAARiO,GAA2B,CAE7B,IAAID,EAAShO,KAAK4M,QAAQzB,IAAIvB,GAC9B,QAAe/F,IAAXmK,EAAsB,CAGtB,IAAIwD,EAgOxB,SAASyY,EAAsBhnB,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiBiB;;;;;;;;;;;;;;OAlOzB+lB,CAAsBrgB,IAC5BA,EAAMvF,sBACNR,OACQA,IAAR2N,GAAqBxR,KAAKkqB,qBAAqB1Y,KAG/CxD,EAASmc,GAAoBvgB,GAC7B5J,KAAK4M,QAAQE,IAAIlD,EAAOoE,IAIhC,QAAenK,IAAXmK,EACA,OAAOhO,KAAKoqB,QAAQxgB,EAAOoE,GAMnC,OADqB,EAARC,GAAsC8a,KAC5C/oB,KAAKuL,OAAOJ,IAAIvB,EAAOwB,GAElC,QAEIiE,GAAmB2a,KAG3Bb,EAAWtoB,UAAUgpB,mBAAqB,WACtC,GAAI7pB,KAAKqpB,UACL,MAAM,IAAIhe,MAAM,yCAOxB8d,EAAWtoB,UAAU2oB,oBAAsB,SAAUa,EAAiBC,GAClE,IAAIpS,EAAQlY,KAMRwR,GALJ6Y,EAAkB9f,EAAkB8f,IAKVE,cAEtBC,EAAmB,MAAPhZ,GAAgB6Y,EAAgBG,eAAY3mB,EAIxDolB,OAAwBplB,IAAb2mB,EAA0BH,EAAkBG,EAGvDxmB,OAA0BH,IAAb2mB,GAA2BH,EAAgBrmB,WACxD6kB,GAOJ,QAJiBhlB,IAAb2mB,IACAhZ,EAAMgZ,EAASD,eAGR,MAAP/Y,EAAJ,CAIA,GAAI8Y,EAAQtO,IAAIiN,GACZ,MAAM,IAAI5d,MAAM,6BAA+B1B,EAAUsf,GAAW,8BAOxE,GAJAjpB,KAAKopB,iBAAiB1O,IAAIuO,GAC1BjpB,KAAK4M,QAAQE,IAAImc,EAASS,GAAWlY,EAAInS,UAGtB,MAAfmS,EAAIvN,QAAiB,CAGrBqmB,EAAQ5P,IAAIuO,GACZ,IACIK,GAAY9X,EAAIvN,QAAS,SAAUwmB,GAAY,OAAOvS,EAAMsR,oBAAoBiB,EAAUH,KAE9F,QAEIA,EAAQxP,OAAOmO,IAIF,MAAjBzX,EAAIxN,WACJslB,GAAY9X,EAAIxN,UAAW,SAAUkJ,GAAY,OAAOgL,EAAMuR,gBAAgBvc,KAGlFoc,GAAYtlB,EAAW,SAAUkJ,GAAY,OAAOgL,EAAMuR,gBAAgBvc,OAK9Eic,EAAWtoB,UAAU4oB,gBAAkB,SAAUvc,GAI7C,IAAItD,EAAQ8gB,GADZxd,EAAW3C,EAAkB2C,IACUA,EAAW3C,EAAkB2C,EAASb,SAEzE2B,EAiEZ,SAAS2c,EAAiBzd,GACtB,IAAItD,EAAQW,EAAkB2C,GAC1BjK,EAAQ0lB,GACRtpB,OAAUwE,EACd,GAAI6mB,GAAexd,GACf,OAAOid,GAAoBjd,GAI3B,GADAtD,EAAQW,EAAkB2C,EAASb,SAkC3C,SAASue,EAAgB3nB,GACrB,OAAOiJ,MAAajJ,EAlCZ2nB,CAAgB1d,GAChBjK,EAAQiK,EAASX,cAEhB,GAiCb,SAASse,EAAmB5nB,GACxB,QAASA,EAAMyK,YAlCFmd,CAAmB3d,GACxB7N,EAAU,WAAc,OAAOsM,GAAOuB,EAASQ,mBAE9C,GAiCb,SAASod,EAAkB7nB,GACvB,QAASA,EAAM0K,WAlCFmd,CAAkB5d,GACvB7N,EAAU,WAAc,OAAO6N,EAASS,WAAWnM,MAAM0L,EAAU1J,EAASiM,GAAWvC,EAASH,iBAE/F,CACD,IAAIge,EAAa7d,EAASU,UAAYhE,EACtC,IAkCZ,SAASohB,EAAQ/nB,GACb,QAASA,EAAM8J,KAnCHie,CAAQ9d,GAIR,OAAOid,GAAoBY,GAH3B1rB,EAAU,WAAc,OAAO,IAAK,EAAakG,KAAK/D,MAAM,EAAcgC,QAAU,GAASiM,GAAWvC,EAASH,UAO7H,OAAO2c,GAAWrqB,EAAS4D,GA7FV0nB,CAAiBzd,GAC9B,GAAKwd,GAAexd,KAAgC,IAAnBA,EAASW,MAkBrC,CACD,IAAImY,EAAWhmB,KAAK4M,QAAQzB,IAAIvB,GAChC,GAAIoc,QAA+BniB,IAAnBmiB,EAASnY,MACrB,MAAM,IAAIxC,MAAM,4BAA8B1B,EAAUC,QArBN,CAGtD,IAAIqhB,EAAgBjrB,KAAK4M,QAAQzB,IAAIvB,GACrC,GAAIqhB,GAEA,QAA4BpnB,IAAxBonB,EAAcpd,MACd,MAAM,IAAIxC,MAAM,4BAA8BzB,EAAQ,UAI1DqhB,EAAgBvB,QAAW7lB,EAAW8kB,IAAS,IACjCtpB,QAAU,WAAc,OAAOoQ,GAAWwb,EAAcpd,QACtE7N,KAAK4M,QAAQE,IAAIlD,EAAOqhB,GAE5BrhB,EAAQsD,EACR+d,EAAcpd,MAAMvK,KAAK4J,GAQ7BlN,KAAK4M,QAAQE,IAAIlD,EAAOoE,IAE5Bmb,EAAWtoB,UAAUupB,QAAU,SAAUxgB,EAAOoE,GAC5C,GAAIA,EAAO/K,QAAU2lB,GACjB,MAAM,IAAIvd,MAAM,oBAAsB1B,EAAUC,IASpD,OAPSoE,EAAO/K,QAAU0lB,KACtB3a,EAAO/K,MAAQ2lB,GACf5a,EAAO/K,MAAQ+K,EAAO3O,WAEE,iBAAjB2O,EAAO/K,OAAsB+K,EAAO/K,OAuFvD,SAASioB,EAAajoB,GAClB,MAAwB,iBAAVA,GAA+B,MAATA,GAAiBA,EAAM8mB,aAC1B,mBAAtB9mB,EAAM8mB,YAzF2CmB,CAAald,EAAO/K,QACxEjD,KAAKqS,UAAUqI,IAAI1M,EAAO/K,OAEvB+K,EAAO/K,OAElBkmB,EAAWtoB,UAAUqpB,qBAAuB,SAAU1Y,GAClD,QAAKA,EAAI5N,aAG0B,iBAAnB4N,EAAI5N,WACU,QAAnB4N,EAAI5N,YAA4C,SAAnB4N,EAAI5N,YAAyB5D,KAAK2pB,eAG/D3pB,KAAKopB,iBAAiBpN,IAAIxK,EAAI5N,cAGtCulB,EAzNoB,GA2N/B,SAASgB,GAAoBvgB,GACzB,IAAI4H,EAAM5H,EAAMvF,gBAChB,QAAYR,IAAR2N,EAAmB,CACnB,GAAI5H,aAAiB1F,EACjB,MAAM,IAAImH,MAAM,SAAW1B,EAAUC,GAAS,8CAIlD,OAAO8f,GAAW,WAAc,OAAO,IAAI9f,IAE/C,OAAO8f,GAAWlY,EAAInS,SAgC1B,SAASqqB,GAAWrqB,EAAS4D,EAAO4K,GAGhC,YAFc,IAAV5K,IAAoBA,EAAQ0lB,SAClB,IAAV9a,IAAoBA,GAAQ,IAE5BxO,QAASA,EACT4D,MAAOA,EACP4K,MAAOA,UAAahK,GAG5B,SAASylB,GAAY6B,EAAO/hB,GACxB+hB,EAAMxc,QAAQ,SAAU1L,GAAS,OAAO1C,MAAMiL,QAAQvI,GAASqmB,GAAYrmB,EAAOmG,GAAMA,EAAGnG,KAW/F,SAASynB,GAAeznB,GACpB,MAAwB,mBAAVA,EAiClB,IAAImoB,GAAiC,WACjC,SAASA,EAAgB5O,GACrBxc,KAAKwc,UAAYA,EAmDrB,OAjDA4O,EAAgBtqB,OAAS,SAAU0b,EAAWjR,GAC1C,GAAIA,EAAQ,CACR,IAAIkR,EAASlR,EAAOiR,UAAUxQ,QAC9BwQ,EAAYA,EAAU/Y,OAAOgZ,GAEjC,OAAO,IAAI2O,EAAgB5O,IAsB/B4O,EAAgB1O,OAAS,SAAUF,GAC/B,OACInQ,QAAS+e,EACTzd,WAAY,SAAUpC,GAClB,IAAKA,EAGD,MAAM,IAAIF,MAAM,2DAEpB,OAAO+f,EAAgBtqB,OAAO0b,EAAWjR,IAG7CwB,OAAQqe,EAAiB,IAAIxgB,EAAY,IAAIF,MAGrD0gB,EAAgBvqB,UAAU8b,KAAO,SAAU0O,GACvC,IAAIhsB,EAAUW,KAAKwc,UAAUG,KAAK,SAAUE,GAAK,OAAOA,EAAEzH,SAASiW,KACnE,GAAIhsB,EACA,OAAOA,EAEX,MAAM,IAAIgM,MAAM,2CAA6CggB,EAAK,MAE/DD,EArDyB,GAwGhCE,GACA,SAASA,OAeTC,IAAc,IAAItQ,IAKlBuQ,GAAyB,IAAIjP,IADb,IAAIpH,KAEpBsW,GAAyB,IAAIL,GAAgBG;;;;;;;OAsBjD,SAASG,GAAYzoB,GACjB,MAAoB,mBAATA,EACAA,EAAM0B,MAAQ1B,EACL,iBAATA,EACAA,EACE,MAATA,EACO,GACJ,GAAKA,EA2BhB,SAAS0oB,GAAaxlB,EAAO2M,GAEzB,OAAOA,EAAI3M,EAAQyJ,IAcvB,SAASgc,GAAiB3oB,GACtB,OAAQ1C,MAAMiL,QAAQvI,GAASA,EAAM,GAAKA;;;;;;;OAW9C,SAAS4oB,GAAaC,GAElB,GAAwB,IAApBA,EAAK9Y,MAAMxI,KAAuB,CAClC,IAAIuhB,EAAWD,EAAK3kB,KACpB,OAAO4kB,EAAShc,IAAQgc,EAAShc,IAAMG,IAAa,KAExD,OAAO4b,EAAK9Y,MAAMhQ,KAAO8oB,EAAKE,KAAKF,EAAK9Y,MAAMhQ,KAAKmD,OAAS,KAGhE,SAAS8lB,GAAcH,GACnB,OAAIA,EAAK9Y,MAAMkZ,MAEJN,IAD4B,IAApBE,EAAK9Y,MAAMxI,KAAwBshB,EAAK3kB,KAAO2kB,EAAKE,MAClCF,EAAK9Y,MAAMkZ,MAAM/lB,QAE/C,KAEX,SAASgmB,GAAeL,GACpB,IAA0B,IAAtBA,EAAK9Y,MAAM7M,OAAoC,IAApB2lB,EAAK9Y,MAAMxI,KAAuB,CAG7D,IAAI4hB,EAAqBN,EAAK3kB,KAAKwJ,IACnC,OAA+B,IAAxByb,EAA4B,KAAON,EAAKE,KAAKI,GAAoBC,sBAE5E,IAAI9gB,EAASugB,EAAK9Y,MAAMzH,OACxB,OAAOqgB,GAAiBrgB,EAASugB,EAAKE,KAAKzgB,EAAOpF,OAAS2lB,EAAKE,KAAK9b,KAiBzE,IAAIoc,MAcJ,SAASC,GAAcC,EAAcC,EAAUC,EAAQlZ,EAAUmZ,EAAkBC,GAG/E,IAFA,IAAId,EAAOU,EACPK,GAAuB,EACpBf,GAAM,CACT,IAAIgB,EAAW,KACXC,EAAWJ,EAAmBA,EAAiBK,OAAS,KACxDC,EAAWnB,EAAK9Y,MAAMxI,KAC1B,GAAiB,IAAbyiB,EAEAC,GAAkBR,EAAQlZ,EAAUuZ,EAAUjB,EAAKkB,OAAQJ,GACvDd,EAAKO,uBACLa,GAAkBR,EAAQlZ,EAAUuZ,EAAUjB,EAAKO,sBAAsBW,OAAQJ,QAGpF,GAAiB,IAAbK,EAAgC,CACrCC,GAAkBR,EAAQlZ,EAAUuZ,EAAUjB,EAAKkB,OAAQJ,GAC3D,IAAIO,EAAiBrB,EACjBsB,EAAqBD,EAAed,sBACpCc,EAAed,sBAAsBllB,KACrCgmB,EAAehmB,KACfwlB,IACAS,EAAmB/Z,IAAiBsZ,IAExCG,EACIM,EAAmBha,IAAO9R,OAAS2qB,GAAcmB,EAAmBha,IAAO,IAAM,QAIjFwZ,EAAaO,EAAed,sBACxBc,EAAed,sBAAsBW,OACrCG,EAAeH,aAGtB,GAAiB,IAAbC,EAAiC,CACtC,IAAII,EAAgBC,GAAkBxB,EAAKE,MACvCuB,EAAOF,EAAcra,MAAMwa,WAAW1B,EAAK9Y,MAAMwa,YACrDlB,KAAsBO,GAAuBf,EAC7CgB,EAAWS,EAAOF,EAAclmB,KAAK2I,IAAQyd,EAAKpnB,OAAS,UAI3D2mB,EAAWb,GAAcH,GAE7B,GAAiB,OAAbgB,EAaA,IAViB,QAFjBA,EAAWjB,GAAaC,KAEqB,KAAnBA,EAAK9Y,MAAM/E,QACjC6e,EAAWjB,GAAaS,GAAoBO,OASzCf,IAASgB,GAAU,CAEtB,GAAa,QADbhB,EAAOK,GAAeL,KACDA,IAASW,EAC1B,OAAO,KAENX,EAAK9Y,MAAMhQ,MAAqB,IAAbiqB,IACpBL,EAAad,EAAKkB,QAEtBF,EAAWjB,GAAaC,GAGhCA,EAAOgB,GASf,SAASQ,GAAkBG,GAEvB,IADA,IAAIC,EAAgBD,EAAUvd,IACM,IAA7Bwd,EAAc1a,MAAMxI,MAGvBkjB,GADAD,EAAYA,EAAU3d,KACII,IAI9B,OAAOwd,EAMX,SAASR,GAAkBR,EAAQlZ,EAAUjI,EAAQugB,EAAMc,GACxC,IAAXF,EACAnZ,GAAqBC,GACjBA,EAASkI,aAAanQ,EAAQugB,EAAMc,GACpCrhB,EAAOmQ,aAAaoQ,EAAMc,GAAY,GAE1B,IAAXF,EACLnZ,GAAqBC,GACjBA,EAASma,YAAYpiB,EAAQugB,GAC7BvgB,EAAOoiB,YAAY7B,GAEP,IAAXY,GAELlZ,EAASoa,YAAY9B,GAG7B,SAAS+B,GAAe5qB,EAAOuQ,GAC3B,OAAOD,GAAqBC,GAAYA,EAASsa,WAAWpC,GAAYzoB,IACpEuQ,EAASqa,eAAenC,GAAYzoB,IAE5C,SAAS8qB,GAA2BC,EAAWvB,EAAUwB,EAAYrB,GAGjE,IAAIsB,EAAaF,EAAU7mB,KAAKkM,IACnB6a,GAAaA,EAAWlB,QAIjCT,GAFWN,GAAcQ,GAELA,EAAUwB,EAAa,EAAiB,EAD7CD,EAAUhC,KAAKxb,IACwD0d,EAAYtB,GA8D1G,SAASuB,GAAWH,EAAWI,EAAUjoB,GACrC,IACIkoB,EADQL,EAAU7mB,KACJiM,IACdkb,EAAQF,EAASjnB,KAyBrB,OAxBIhB,EAAQ,IAERkoB,EAAMloB,EAAQ,GAAGgB,KAAK4I,IAAQue,GAE9BnoB,EAAQkoB,EAAM/sB,QACdgtB,EAAMve,IAAQse,EAAMloB,GAAOgB,KAC3BknB,EAAME,OAAOpoB,EAAO,EAAGioB,KAGvBC,EAAM/qB,KAAK8qB,GACXE,EAAMve,IAAQ,OAIY,IAA1Bqe,EAASpb,MAAM7M,QACfmoB,EAAM3d,IAAmBqd,EAAUhb,MAAMzH,OAAOpF,MAChDioB,EAASpC,KAAOgC,EAAUhC,MAG1BsC,EAAMte,KACNse,EAAMte,IAASme,WAAWhoB,GAG9BmoB,EAAMre,KAAU,EACTme,EAYX,SAASI,GAAWR,EAAWS,GAC3B,IAAIJ,EAAQL,EAAU7mB,KAAKiM,IACvBgb,EAAWC,EAAMI,GACjBA,EAAc,IACdJ,EAAMI,EAAc,GAAGtnB,KAAK4I,IAAQqe,EAASjnB,KAAK4I,KAEtDse,EAAME,OAAOE,EAAa,GACrBT,EAAUhb,MAAM0b,UACjBX,GAA2BC,EAAWI,GAAU,GAGpD,IAAIO,EAAeP,EAASjnB,KAQ5B,OAPIwnB,EAAa3e,KACb2e,EAAa3e,IAAS4e,aAE1BD,EAAahe,KAAoB,EACjCyd,EAASpC,KAAO,KAEhBoC,EAASjnB,KAAK8I,MAAU,EACjBme,EASX,SAASQ,GAAWZ,EAAWS,GAC3B,IAAIL,EAAWJ,EAAU7mB,KAAKiM,IAAOqb,GAGrC,OAFAD,GAAWR,EAAWS,GACtBI,GAAaT,EAASjnB,MACfinB,EAGX,SAASU,GAAc/C,GACnB,IAAoC,IAAhCA,EAASlc,IAAOkf,WAChB,OAAO,KACX,IAAIC,EAAWjD,EAASA,EAASlc,IAAOkf,YACxC,OAAOC,EAAS7nB,KAAO6nB,EAAS7nB,KAAO6nB,EAAS3C,sBAAsBllB,KAQ1E,SAAS0nB,GAAa7C,GAClB,IAAIxY,EAAWwY,EAAKxb,IAChB+C,GAAqBC,IAAaA,EAASoa,aAC3CrB,GAAcP,EAAK9b,IAAY8b,EAAK9b,IAAY,EAAiBsD,GAxIzE,SAASyb,EAAgBC,GAErB,IAAoC,IAAhCA,EAASrf,IAAOkf,WAChB,OAAOI,GAAYD,GAGvB,IADA,IAAIE,EAAkBN,GAAcI,GAC7BE,GAAiB,CACpB,IAAIpsB,EAAO,KAaX,GAZIosB,EAAgB9tB,QAAUsO,GAEfwf,EACFvf,IAAOkf,YAAc,IAC1B/rB,EAAO8rB,GAFAM,IAMKA,EACFhc,IAAO9R,SACjB0B,EAFYosB,EAEKhc,IAAO,GAAGjM,MAEvB,MAARnE,EAAc,CAGd,KAAOosB,IAAoBA,EAAgBrf,KAASqf,IAAoBF,GACpEC,GAAYC,GACZA,EAAkBC,GAAeD,EAAiBF,GAEtDC,GAAYC,GAAmBF,GAC/BlsB,EAAOosB,GAAmBA,EAAgBrf,IAE9Cqf,EAAkBpsB,GA4GtBisB,CAAgBjD,GAEhBA,EAAK/b,KAAU,GAcnB,SAASof,GAAeC,EAAOJ,GAC3B,IAAIpD,EACJ,OAAKA,EAAOwD,EAAMpf,MAAmC,IAApB4b,EAAK9Y,MAAMxI,KAGjC2hB,GAAeL,GAAM3kB,KAIrBmoB,EAAMxf,MAAYof,EAAW,KAAOI,EAAMxf,IAQzD,SAASqf,GAAYC,GACjB,GAAIA,EAAgBvf,IAAQ,CACxB,IAAImc,EAAOoD,GAYnB,SAASG,EAAgBxD,GACrB,IAAIyD,EAAUzD,EAASlc,IAAO2f,QAC9B,GAAe,MAAXA,EAAiB,CACjB,IAAK,IAAIruB,EAAI,EAAGA,EAAIquB,EAAQluB,OAAS,EAAGH,GAAK,EACf,iBAAfquB,EAAQruB,IAEFyqB,GAAiBG,EAASyD,EAAQruB,EAAI,KAAK6rB,OAEjDyC,oBAAoBD,EAAQruB,GADpB4qB,EAAS1b,IAASmf,EAAQruB,EAAI,IACIquB,EAAQruB,EAAI,IAC7DA,GAAK,GAEsB,iBAAfquB,EAAQruB,IAGpBuuB,EADgB3D,EAAS1b,IAASmf,EAAQruB,OAM1CquB,EAAQruB,GAAGI,KADGwqB,EAAS1b,IAASmf,EAAQruB,EAAI,KAIpD4qB,EAAS1b,IAAW,MAjCpBkf,CAAgBvD,GAqCxB,SAAS2D,EAAkB3D,GACvB,IACI1Z,EADArB,EAAQ+a,EAAKnc,IAEJ,MAAToB,GAAwD,OAAtCqB,EAAerB,EAAMqB,eACvCO,GAAUmZ,EAAK5b,IAAakC,GAxC5Bqd,CAAkB3D,GA4C1B,SAAS4D,EAAsB7D,GAC3B,IAAI8D,EAAmB9D,EAASlc,KAAUkc,EAASlc,IAAOggB,iBACtDA,GACAhd,GAAUkZ,EAAU8D,GA9CpBD,CAAsB5D,IAEE,IAApBA,EAAKnc,IAAO2T,IAAajQ,GAAqByY,EAAKxb,MAEnDwb,EAAKxb,IAAUoZ,WA6C3B,SAASkG,GAA8BvkB,EAAQiH,GAC3C,OAAIjH,EAAOygB,OAASxZ,GAOA,OAAhBjH,EAAOpE,KAUf,SAAS4oB,GAA2BxkB,GAGhC,IAAIykB,EAAuB7D,GAAe5gB,GAC1C,OAA4B,MAAxBykB,GAK4C,MAA5CA,EAAqB7oB,KAAKkM,IA0BlC,SAAS4c,GAAoB1kB,EAAQiH,GAGjC,GAA0B,IAAtBjH,EAAOyH,MAAMxI,KAEb,OAAOslB,GAA8BvkB,EAAQiH,GAE5C,GAA0B,IAAtBjH,EAAOyH,MAAMxI,KAAmC,CAIrD,IADA,IAAI0lB,EAAc/D,GAAe5gB,GACV,OAAhB2kB,GAAmD,IAA3BA,EAAYld,MAAMxI,MAC7C0lB,EAAc/D,GAAe+D,GAEjC,OAAoB,OAAhBA,IAGgC,IAA3BA,EAAYld,MAAMxI,KAChBslB,GAA8BI,EAAa1d,GAG3Cud,GAA2BG,IAKtC,OAAOH,GAA2BxkB,GAQ1C,SAAS4kB,GAAmB3c,EAAUjI,EAAQ2gB,EAAOU,GAC7CrZ,GAAqBC,GACrBA,EAASkI,aAAanQ,EAAQ2gB,EAAOU,GAGrCrhB,EAAOmQ,aAAawQ,EAAOU,GAAY,GAa/C,SAASwD,GAAY7kB,EAAQ2gB,EAAO1Z,GAChC,GAAc,OAAV0Z,GAAkB+D,GAAoB1kB,EAAQiH,GAAc,CAC5D,IAAIgB,EAAWhB,EAAYhC,IAC3B,GAA0B,IAAtBjF,EAAOyH,MAAMxI,KAAuB,CACpC,IAAIwjB,EAAY7B,GAAe5gB,GAC3B8kB,EAAerC,EAAU7mB,KAAKkM,IAC9Bgb,EAAQL,EAAU7mB,KAAKiM,IACvBjN,EAAQkoB,EAAMnkB,QAAQqB,GACtBqhB,EAAazmB,EAAQ,EAAIkoB,EAAM/sB,OAAU2qB,GAAcoC,EAAMloB,EAAQ,IAAK6mB,OAASgB,EAAUhB,OACjGmD,GAAmB3c,EAAU6c,EAAarD,OAAQd,EAAOU,QAExD,GAA0B,IAAtBrhB,EAAOyH,MAAMxI,KAAmC,CACjDoiB,EAAarhB,EAAOyhB,OAAxB,IACIkD,EAAc/D,GAAe5gB,GAG7B4kB,GAAmB3c,EAFQ,IAA3B0c,EAAYld,MAAMxI,MACd6lB,EAzfpB,SAASC,EAAgBlC,GACrB,IAAIJ,EAAY7B,GAAeiC,GAC/B,OAAOJ,EAAYA,EAAU7mB,KAAKkM,IAAiB,KAufpBid,CAAgBJ,IACOlD,OAGbkD,EAAYlD,OAHSd,EAAOU,QAO7DrZ,GAAqBC,GAAYA,EAAS4c,YAAY7kB,EAAOyhB,OAAQd,GACjE3gB,EAAOyhB,OAAOoD,YAAYlE,GAElC,OAAO,EAEX,OAAO,EAUX,SAASyB,GAAYpiB,EAAQ2gB,EAAO1Z,GAChC,GAAc,OAAV0Z,GAAkB+D,GAAoB1kB,EAAQiH,GAAc,CAE5D,IAAIgB,EAAWhB,EAAYhC,IAG3B,OAFA+C,GAAqBC,GAAYA,EAASma,YAAYpiB,EAAOyhB,OAAQd,GACjE3gB,EAAOyhB,OAAOW,YAAYzB,IACvB,EAEX,OAAO,EAUX,SAASqE,GAAoBzE,EAAM0E,EAAehe,EAAa6d,GAE3D,GADAD,GAAYI,EAAe1E,EAAKkB,OAAQxa,GAChB,IAApBsZ,EAAK9Y,MAAMxI,KAA4B,CAMvC,IAAIimB,EAAa3E,EAAK3kB,KACtBspB,EAAWpd,IAAiBgd,EAE5B,IADA,IAAIhC,EAAQoC,EAAWrd,IACdjS,EAAI,EAAGA,EAAIktB,EAAM/sB,OAAQH,IAC9B4sB,GAA2BjC,EAAMuC,EAAMltB,IAAI,EAAM2qB,EAAKkB,QAG1DlB,EAAKO,wBACLP,EAAKO,sBAAsBllB,KAAKkM,IAAiBgd,EACjDD,GAAYI,EAAe1E,EAAKO,sBAAsBW,OAAQxa;;;;;;;OA+BtE,SAASke,GAAuB1d,EAAO9L,GAQnC,IANA,IAtBwBypB,EAAkBC,EACtCC,EACAC,EACAC,EAmBAC,EAAO,EACPC,EAAYje,EAAMke,MAClBC,EAAsBF,EAAYA,EAAU/mB,QAAQ,IAAuB,EAG3EknB,GAAqB,EAChBjwB,EAAI,EAAGA,EAAI+F,EAAS5F,OAAQH,IAAK,CACtC,IAAIoI,EAAUrC,EAAS/F,GACvB,GAAuB,iBAAZoI,GAaX,IAAI6nB,EAEJ,GAAW,EAAPJ,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZznB,GAAkBA,IAAYyJ,EAAMC,QAAS,CAC7C,GAAIoe,GAAWL,GACX,OAAO,EACXI,GAAqB,OAGxB,CACD,IACIE,EAAkBC,GADA,EAAPP,EAAuB,QAAUznB,EACI0nB,GACpD,IAAyB,IAArBK,EAAwB,CACxB,GAAID,GAAWL,GACX,OAAO,EACXI,GAAqB,EACrB,SAEJ,IAEQI,EAFJC,EAA2B,EAAPT,EAAuBznB,EAAUrC,IAAW/F,GACpE,GAA0B,KAAtBswB,EAUA,GANID,EADAL,GAAuB,GAAKG,EAAkBH,EAC9B,GAIAF,EAAUK,EAAkB,GAErC,EAAPN,IAxEZH,GADoBF,EA0EYa,GAzEElwB,OAElCyvB,GADAD,EAAaH,EAAiBzmB,QAFQ0mB,EA0ESa,IAvEpBb,EAAgBtvB,QAC3B,IAAhBwvB,GACIA,EAAa,GAA0C,MAArCH,EAAiBG,EAAa,IAE/CC,EAAcF,GAAoD,MAAlCF,EAAiBI,KAoEnC,EAAPC,GAA4BS,IAAsBD,EAAe,CACjE,GAAIH,GAAWL,GACX,OAAO,EACXI,GAAqB,QAhDjC,CAEI,IAAKA,IAAuBC,GAAWL,KAAUK,GAAW9nB,GACxD,OAAO,EAIX,GAAI6nB,GAAsBC,GAAW9nB,GACjC,SACJ6nB,GAAqB,EACrBJ,EAAOznB,EAAkB,EAAPynB,GA2C1B,OAAOK,GAAWL,IAASI,EAE/B,SAASC,GAAWL,GAChB,OAAgC,IAAjB,EAAPA,GAWZ,SAASO,GAAoB5sB,EAAMusB,GAC/B,GAAc,OAAVA,EACA,OAAQ,EAGZ,IAFA,IAAIQ,GAAiB,EACjBvwB,EAAI,EACDA,EAAI+vB,EAAM5vB,QAAQ,CACrB,IAAIqwB,EAAgBT,EAAM/vB,GAC1B,GAAIwwB,IAAkBhtB,EAClB,OAAOxD,EAEgB,IAAlBwwB,EAELxwB,GAAK,GAGiB,IAAlBwwB,IACAD,GAAiB,GAErBvwB,GAAKuwB,EAAiB,EAAI,GAGlC,OAAQ,EAEZ,SAASE,GAA2B5e,EAAO9L,GACvC,IAAK,IAAI/F,EAAI,EAAGA,EAAI+F,EAAS5F,OAAQH,IACjC,GAAIuvB,GAAuB1d,EAAO9L,EAAS/F,IACvC,OAAO,EAGf,OAAO,EAqBX,SAAS0wB,GAAsB7e,EAAO8e,EAAWC,GAE7C,IADA,IAAIC,EApBR,SAASC,EAAsBjf,GAC3B,IAAIie,EAAYje,EAAMke,MACtB,GAAiB,MAAbD,EAAmB,CACnB,IAAIiB,EAAqBjB,EAAU/mB,QAAQoJ,IAG3C,GAAiC,IAAP,EAArB4e,GACD,OAAOjB,EAAUiB,EAAqB,GAG9C,OAAO,KAUkBD,CAAsBjf,GACtC7R,EAAI,EAAGA,EAAI2wB,EAAUxwB,OAAQH,IAGlC,GAAI6wB,IAAuBD,EAAc5wB,IACd,OAAvB6wB,GAA+BJ,GAA2B5e,EAAO8e,EAAU3wB,IAC3E,OAAOA,EAAI,EAGnB,OAAO;;;;;;;OAoIX,IAAIgxB,MACAC,MAsJJ,SAASC,GAAgBrjB,EAAS7I,EAAOlD,GACrC,IAAIqvB,EAAc,EAA4C,EAARnsB,EAClDosB,EAAYC,GAASxjB,EAASsjB,GAC9BG,EAAWC,GAAY1jB,EAASsjB,GAEpC,GAAIK,GAAgBF,EAAUF,EAAWtvB,GAAQ,CAE7C2vB,GAAS5jB,EAASsjB,EAAarvB,GAC/B,IAAI4vB,EAAgBC,GAAsBL,GAEtCM,EAAgBP,GAASxjB,EAAS6jB,GACtC,IAAKE,GAAiBA,IAAkB9vB,EAAO,CAC3C,IAAI+vB,GAAa,EACbC,GAAc,EACdC,EAAgD,IAAnB,EAAXT,IAEjBU,GAAYlwB,EAAOiwB,IAAmBC,GAAYJ,EAAeG,KAClEF,GAAa,EACbC,GAAc,GAElBG,GAASpkB,EAAS6jB,EAAeG,GACjCI,GAASpkB,EAASsjB,EAAaW,GAC/BI,GAAgBrkB,GAAS,KA2FrC,SAASskB,GAAStG,EAAQ9N,EAAMjc,EAAOuQ,EAAU+f,EAAWC,GACxDvwB,EAAQswB,GAAatwB,EAAQswB,EAAUrU,EAAMjc,GAASA,EAClDuwB,EACAA,EAAMtU,GAAQjc,EAETA,EAELsQ,GAAqBC,GACjBA,EAAS8f,SAAStG,EAAQ9N,EAAMjc,EAAOiQ,GAAoBugB,UAC3DzG,EAAc,MAAE0G,YAAYxU,EAAMjc,GAItCsQ,GAAqBC,GACjBA,EAASmgB,YAAY3G,EAAQ9N,EAAMhM,GAAoBugB,UACvDzG,EAAc,MAAE4G,eAAe1U,GAe3C,SAAS2U,GAAS7G,EAAQ8G,EAAWpZ,EAAKlH,EAAUggB,GAC5CA,EACAA,EAAMM,GAAapZ,EAEdA,EAELnH,GAAqBC,GAAYA,EAASugB,SAAS/G,EAAQ8G,GACvD9G,EAAkB,UAAEtS,IAAIoZ,GAI5BvgB,GAAqBC,GAAYA,EAASwgB,YAAYhH,EAAQ8G,GAC1D9G,EAAkB,UAAElT,OAAOga,GAGvC,SAASV,GAASpkB,EAAS7I,EAAO8tB,GAC9B,IAAIC,EAAgB/tB,GAAS,EAAqCA,EAAQ,EAAuBA,EAC7F8tB,EACAjlB,EAAQklB,IAAkB,EAG1BllB,EAAQklB,KAAkB,EAGlC,SAASrb,GAAQ7J,EAAS7I,GAEtB,OAAmD,IAAlB,EAAzB6I,EADY7I,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASguB,GAAanlB,EAAS7I,GAE3B,OAAmD,IAAlB,EAAzB6I,EADY7I,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASiuB,GAAcplB,EAAS7I,GAE5B,OAAsD,IAArB,EAAzB6I,EADY7I,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASkuB,GAASC,EAAYC,EAAaC,GACvC,OAAqB,EAAbF,EAAiCC,GAAe,EACnDC,GAAgB,GAEzB,SAASC,GAAgBzlB,EAAS0lB,GAC9B,IAAIvuB,EAAQwuB,GAAgBD,GAC5B,OAAO1lB,EAAQ,GAA+B7I,GAElD,SAASwuB,GAAgBD,GACrB,OAAQA,GAAQ,EAAwB,MAE5C,SAAS5B,GAAsB4B,GAC3B,IAAIvuB,EAASuuB,GAAQ,GAAkD,MACvE,OAAOvuB,GAAS,EAAoCA,GAAS,EAEjE,SAASyuB,GAAmB5lB,GACxB,OAAO8jB,GAAsB9jB,EAAQ,IAEzC,SAAS6lB,GAAkB7lB,GACvB,OAAOA,EAAQ,GAEnB,SAAS8lB,GAAQ9lB,EAAS7I,EAAO+Y,GAC7BlQ,EAAQ7I,EAAQ,GAA0B+Y,EAE9C,SAAS0T,GAAS5jB,EAAS7I,EAAOlD,GAC9B+L,EAAQ7I,EAAQ,GAAuBlD,EAE3C,SAAS8xB,GAAQ/lB,EAAS7I,EAAOuuB,GAE7B1lB,EAD8B,IAAV7I,EAAuCA,EAASA,EAAQ,GACnDuuB,EAE7B,SAAShC,GAAY1jB,EAAS7I,GAE1B,OAAO6I,EADuB,IAAV7I,EAAuCA,EAASA,EAAQ,GAGhF,SAASqsB,GAASxjB,EAAS7I,GACvB,OAAO6I,EAAQ7I,EAAQ,GAE3B,SAAS6uB,GAAQhmB,EAAS7I,GACtB,OAAO6I,EAAQ7I,EAAQ,GAK3B,SAASktB,GAAgBrkB,EAASilB,GAC9Bb,GAASpkB,EAAS,EAA4BilB,GAElD,SAASgB,GAAwBjmB,EAASkQ,EAAMgW,GAC5C,IAAK,IAAI/zB,GAAK+zB,GAAc,GAAK,EAAwB/zB,EAAI6N,EAAQ1N,OAAQH,GAAK,EAE9E,GADe6N,EAAQ7N,IACP+d,EACZ,OAAO/d,EAAI,EAGnB,OAAQ,EAEZ,SAASg0B,GAAwBnmB,EAASomB,EAAQC,GAC9C,IAAIC,EAAW9C,GAASxjB,EAASomB,GAC7BG,EAAUP,GAAQhmB,EAASomB,GAC3BI,EAAU9C,GAAY1jB,EAASomB,GAC/BK,EAAQD,EACRE,EAAQhD,GAAY1jB,EAASqmB,GAC7BM,EAAe7C,GAAsB2C,GACrCE,GAAgB,GAGhBZ,GAAQ/lB,EAAS2mB,EAActB,GAF3BuB,EAAQlD,GAAY1jB,EAAS2mB,GAClBhB,GAAgBiB,GAC0BP,IAE7D,IAEQO,EAFJC,EAAe/C,GAAsB4C,GACrCG,GAAgB,GAGhBd,GAAQ/lB,EAAS6mB,EAAcxB,GAF3BuB,EAAQlD,GAAY1jB,EAAS6mB,GAClBlB,GAAgBiB,GAC0BR,IAE7DxC,GAAS5jB,EAASomB,EAAQ5C,GAASxjB,EAASqmB,IAC5CP,GAAQ9lB,EAASomB,EAAQJ,GAAQhmB,EAASqmB,IAC1CN,GAAQ/lB,EAASomB,EAAQ1C,GAAY1jB,EAASqmB,IAC9CzC,GAAS5jB,EAASqmB,EAAQC,GAC1BR,GAAQ9lB,EAASqmB,EAAQE,GACzBR,GAAQ/lB,EAASqmB,EAAQG,GAiB7B,SAASM,GAAuB9mB,EAAS7I,EAAO4vB,EAAYpxB,EAAM+vB,EAAMzxB,GACpE,IAAI+yB,EAAU7vB,EAAQ6I,EAAQ1N,OAE9B0N,EAAQuf,OAAOpoB,EAAO,EAAU,EAAPuuB,GAAwBqB,EAAa,EAAgB,GAAepxB,EAAM1B,GAC/F+yB,GAnBR,SAASC,EAA0BjnB,EAASknB,GACxC,IAAK,IAAI/0B,EAAI+0B,EAAoB/0B,EAAI6N,EAAQ1N,OAAQH,GAAK,EAAc,CACpE,IACImxB,EAAcQ,GADFJ,GAAY1jB,EAAS7N,IAErC,GAAImxB,EAAc,EAAG,CACjB,IACI6D,EAAwBxB,GADXjC,GAAY1jB,EAASsjB,IAMtCyC,GAAQ/lB,EAASsjB,EADC+B,IAHDxb,GAAQ7J,EAASsjB,GAAe,EAAgB,IAC5D6B,GAAanlB,EAASsjB,GAAe,EAAgB,IACrD8B,GAAcplB,EAASsjB,GAAe,EAAmB,GACxB6D,EAAuBh1B,MAajE80B,CAA0BjnB,EAAS7I,EAAQ,GAGnD,SAASgtB,GAAYlwB,EAAOkxB,GACxB,OAAIA,IACOlxB,EAEM,OAAVA,EAEX,SAASmzB,GAAmBzxB,EAAMwvB,EAAcZ,GAC5C,OAAIY,EACO,EAEFZ,GAAaA,EAAU5uB,GACrB,EAEJ,EAEX,SAASguB,GAAgB+B,EAAMjrB,EAAGtJ,GAO9B,QAN0B,EAAPu0B,IACHjrB,GAAKtJ,GACM,EAAPu0B,EAMTjrB,EAAEnF,aAAenE,EAAEmE,WAGvBmF,IAAMtJ;;;;;;;OAejB,IAgDIqT,GAKA6iB,GArDAC,GAAiB,kBAKjBC,GAAiB5tB,QAAQC,QAAQ,MAUjC4tB,IAA2B,EAAG,GAQ9BC,GAAgB,IAAIl2B,MAAMqP,IAAe4O,KAAK,MAO9CkY,GAAa,eAmBjB,SAASC,KAEL,OAAOnjB,GAGX,SAASojB,KAEL,OAAOP,GAEX,IAoCIQ,GAUAC,GACA7lB,GACA8lB,GAkBAtkB,GAWAsZ,GA7EAiL,GAAqB,KACzB,SAASC,KACL,OAAOlL,IAAYA,GAAStb,IAShC,SAASymB,KACL,OAAOnL,GAOX,SAASoL,KAEL,OAAOpL,GAWX,SAASqL,GAAYC,GACjBC,GAAkBD,EAItB,SAASE,KAEL,OAAOV,GA6CX,IAOIplB,GAPA6lB,GAAkB,KAQtB,SAASE,GAAWxL,GAEhB,OAAOA,EAAK3b,MAAa2b,EAAK3b,QAElC,SAASonB,GAAgBzL,GACrB,OAAOA,EAAKnc,IAAO2f,UAAYxD,EAAKnc,IAAO2f,YAO/C,IAAIkI,IAAqB,EAErBrmB,IAAoB,EAaxB,SAASsmB,GAAUC,EAASC,GACxB,IAAIC,EAAU/L,GAYd,OAXAta,GAAammB,GAAWA,EAAQxnB,IAChCa,GAAQ2mB,GAAWA,EAAQ/nB,IAC3B4C,GAAemlB,GAAuD,IAA1B,EAAjBA,EAAQ3nB,KACnCoB,GAAoBumB,GAAW3mB,GAAMI,kBACrCmC,GAAWokB,GAAWA,EAAQpnB,IAClB,MAARqnB,IACAhB,GAAuBgB,EACvBf,IAAW,GAEf/K,GAAWuL,GAAkBM,EAC7Bb,GAAiBa,GAAWA,EAAQ5nB,IAC7B8nB,EAUX,SAASC,GAAUH,EAASI,GACnBA,IACIN,IACDhlB,GAAajB,GAAYR,GAAMiB,UAAWjB,GAAMmB,eAAgBK,IAGpEsZ,GAAS9b,MAAU,GAEvB8b,GAAS9b,KAAU,GACnB8b,GAAS5b,KAAkB,EAC3BwnB,GAAUC,EAAS,MAQvB,SAASK,KAELhnB,GAAMI,kBAAoBA,IAAoB,EACzCqmB,IACDnlB,GAAiBwZ,GAAU9a,GAAOwB,IAwyC1C,SAASylB,EAA4BzK,GACjC,IAAK,IAAIlkB,EAAUulB,GAAcrB,GAAwB,OAAZlkB,EAAkBA,EAAUA,EAAQwG,IAI7E,GAAIxG,EAAQjI,OAASsO,IAA2C,OAA1BrG,EAAQ4J,IAE1C,IADA,IAAIglB,EAAc5uB,EACTpI,EAAI,EAAGA,EAAIg3B,EAAY/kB,IAAO9R,OAAQH,IAAK,CAChD,IAAIi3B,EAAYD,EAAY/kB,IAAOjS,GAE/Bk3B,EAAkBD,EAAUjxB,KAEhCmxB,GAAuBF,EAAWC,EAAgBxoB,IAAQwoB,EAAgB/nB,IAAU,IAlzChG4nB,CAA4BnM,IAqBhC,SAASwM,EAAsBtnB,GAC3B,GAA4B,MAAxBA,EAAMunB,eACN,IAAK,IAAIr3B,EAAI,EAAGA,EAAI8P,EAAMunB,eAAel3B,OAAQH,GAAK,EAAG,CACrD,IAAIs3B,EAAkBxnB,EAAMunB,eAAer3B,GACxB8P,EAAMQ,WAAWgnB,GACvBC,sBAAsBD,EAAiBxnB,EAAMunB,eAAer3B,EAAI,KAxBrFo3B,CAAsBtnB,IACjBymB,IACDhlB,GAAajB,GAAYR,GAAMa,aAAcb,GAAMe,kBAAmBS,IAE1EkmB,GAAgB1nB,GAAM2nB,cAyB1B,SAASC,EAAuBC,GAC5B,GAAkB,MAAdA,EACA,IAAK,IAAI33B,EAAI,EAAGA,EAAI23B,EAAWx3B,OAAQH,IACnC43B,GAAiBD,EAAW33B,IA3BpC03B,CAAuB5nB,GAAM6nB,YAGjC,SAASH,GAAgBK,GACrB,GAAgB,MAAZA,EAEA,IADA,IAAIC,EAAOhoB,GAAMQ,WACRtQ,EAAI,EAAGA,EAAI63B,EAAS13B,OAAQH,GAAK,EAAG,CACzC,IAAI+3B,EAAWF,EAAS73B,GACpBqQ,EAAMynB,EAAKC,GACf1nB,EAAIonB,cAAgBpnB,EAAIonB,aAAaM,EAAUF,EAAS73B,EAAI,KAsBxE,SAASg4B,KACAzB,KACDnlB,GAAiBwZ,GAAU9a,GAAOwB,IAClCC,GAAajB,GAAYR,GAAMa,aAAcb,GAAMe,kBAAmBS,KAG9E,SAAS2mB,GAAgB5lB,EAAUvC,EAAOjC,EAASf,EAAOslB,GACtD,OACItiB,EACA8a,GACA,KACA,KACQ,GAAR9d,EACA,MACC,EACD,KACA,KACAe,EACA+c,GAAWA,GAASxb,IAAc,KAClCiD,EACA+f,GAAa,KACb,MACC,EACD,KACA,MAQR,SAAS8F,GAAkB7uB,EAAMgI,EAAajH,EAAQyhB,EAAQsC,EAAOgK,GACjE,OACItM,OAAQA,EACRhB,KAAMxZ,EACN+mB,aAAchuB,EAASA,EAAOguB,aAAe,KAC7CpyB,KAAMmoB,EACNgK,QAASA,EACTtmB,MAAO,KACPqZ,sBAAuB,MAG/B,SAASmN,GAAYrzB,EAAOqE,EAAMwiB,EAAQroB,EAAMusB,EAAO5B,GACnD,IAAI/jB,EAASurB,GAAWD,GACpBA,IAAwB1K,GAAe0K,IAGvC4C,EAAUluB,GAAUA,EAAOygB,OAASD,GAAWxgB,EAAOyH,MAAQ,KAC9DsmB,GAAWxC,GAAWC,GAAiBF,IAAwBA,GAAqByC,UACpF/tB,GAAUA,EAAO+tB,SAAW/tB,EAAO+tB,QAAQpN,QAC3CwN,EAAmB,MAATpK,EACVxD,EAAOuN,GAAkB7uB,EAAMuhB,GAAUxgB,EAAQyhB,EAAQ0M,EAAUpK,EAAQ,KAAMgK,GACrF,IAAe,IAAXnzB,GAAyB,IAATqE,EAGhBshB,EAAK9Y,OAASsc,EAAQA,EAAMzf,IAAOic,KAAO,OACtC6N,GAAYnvB,EAAMrE,EAAO,KAAM,KAAMszB,EAAS,UAEjD,CACD,IAAIvF,EAAgB/tB,EAAQyJ,GAGxBgqB,EAAQ3oB,GAAM9J,KAGlB,GAFA4kB,GAASmI,GAAiBpI,EAEtBoI,GAAiB0F,EAAMt4B,OAAQ,CAC/B,IAAI0R,EAAQ4mB,EAAM1F,GACdyF,GAAYnvB,EAAM0pB,EAAevvB,EAAMusB,EAAOuI,EAAS,MAC3D,IAAK3C,IAAYD,GAAsB,CACnC,IAAIgD,EAAgBhD,GAAqB7jB,MACzC6mB,EAAc72B,KAAOgQ,EACjB6mB,EAAcC,uBACdD,EAAcC,qBAAqB92B,KAAOgQ,IAGtD8Y,EAAK9Y,MAAQ4mB,EAAM1F,GAEf4C,KACAC,GAAiB,MACuB,MAApCF,GAAqB7jB,MAAMkZ,OAAiB2K,GAAqB7K,OAASD,IACtC,IAApC8K,GAAqB7jB,MAAMxI,QAE3BqsB,GAAqB7jB,MAAMkZ,MAAQJ,EAAK9Y,QAKpD,GAAuC,IAA3B,EAAPxI,IAA2DkvB,EAAS,CACrE,IAAIjM,EAAY6B,EAEhB7B,EAAUvd,IAAa4b,EACnBza,KACAoc,EAAU5d,IAAOic,KAAOA,EAAK9Y,OAIrC,OAFA6jB,GAAuB/K,EACvBgL,IAAW,EACJhL,EAQX,SAASiO,KACLjD,IAAW,EACXD,GAAuB,KAgC3B,SAASyB,GAAuBlK,EAAUnd,EAAOjC,EAASgrB,GACtD,IAEIlC,EAFAmC,EAAYnD,GACZoD,EAAwBrD,GAE5B,GAA6B,MAAzBzI,EAASjnB,KAAK2I,KAAmBse,EAASjnB,KAAKmJ,MAAaW,EAAMkpB,SAElEC,GAAgBhM,EAASjnB,KAAKmJ,UAG9B,IACIwmB,IAAW,EACXD,GAAuB,KACvBiB,EAAUH,GAAUvJ,EAASjnB,KAAMinB,GACnCiM,KACAppB,EAAMkpB,SAASH,EAAIhrB,GACV,EAALgrB,EACA/B,KAGA7J,EAASjnB,KAAK0I,IAAOwB,kBAAoBA,IAAoB,EAGrE,QAII0mB,GAAUD,EADqC,IAApB,EAALkC,IAEtBlD,GAAWmD,EACXpD,GAAuBqD,EAG/B,OAAO9L,EAYX,SAASkM,GAAYC,GAGjB,YAFc,IAAVA,IAAoBA,EAAQ,IAChCjD,GAktDJ,SAASkD,EAAYC,EAAcjoB,GAC/B,KAAOioB,EAAe,GAElBjoB,EAAcA,EAAY3B,IAC1B4pB,IAEJ,OAAOjoB,EAxtDWgoB,CAAYD,EAAOjD,KACdhnB,IAE3B,SAASoqB,GAA0B5O,EAAM6O,EAAUC,EAAoBT,GACnE,IAAIrC,EAAUH,GAAUgD,EAAU7O,GAClC,IACQuK,GAAgBwE,OAChBxE,GAAgBwE,QAEhBV,GACAE,KACAF,EAASW,GAAeH,GAAWC,GACnC3C,OAGAkB,KAGAR,GAAgBnC,IAChBuC,GAAiBnpB,KAGzB,QACQymB,GAAgB9kB,KAChB8kB,GAAgB9kB,MAEpBwmB,GAAUD,IAYlB,SAASgD,GAAe9O,GACpB,OAAqB,EAAdA,EAAK/b,IAAgC,EACxC,EAKR,IAAI8qB,GAAoB,KACxB,SAASC,KACLD,GAAoB,8BAExB,SAASE,KACLF,GAAoB,iCAExB,SAASV,KACLU,GAAoB,KAaxB,SAASG,GAAQ/0B,EAAOxB,EAAMusB,EAAOiK,GACjCC,GAAaj1B,EAAOxB,EAAMusB,EAAOiK,GACjCE,KAcJ,SAASD,GAAaj1B,EAAOxB,EAAMusB,EAAOiK,GAItC,IAAInO,EAASsO,GAAc32B,GAEvBmnB,EAAO0N,GAAYrzB,EAAO,EAAiB6mB,EAAQroB,EAAMusB,GAAS,KAAM,MAC5E8F,GAAqBlL,EACjBoF,GACAqK,GAAgBvO,EAAQkE,GAE5Bd,GAAYjE,GAAeL,GAAOkB,EAAQjB,IAC1CyP,GAA0BL,GAQ9B,SAASG,GAAc32B,EAAM82B,GACzB,IACIC,EAAgBD,GAAsBjoB,GAY1C,OAXID,GAAqBmoB,GACZA,EAAcC,cAAch3B,EAAMo2B,IAGjB,OAAtBA,GACSW,EAAcC,cAAch3B,GAG5B+2B,EAAcE,gBAAgBb,GAAmBp2B,GAUtE,SAAS62B,GAA0BL,GAE3B9pB,GAcR,SAASwqB,EAA+B7oB,EAAO/B,EAAOkqB,GAElD,IAAIW,EAAaX,GAAcY,IAAK,GAAM,KACtCC,EAAU/qB,EAAMgrB,eAAiBC,GAAqBlpB,GAC1D,GAAIgpB,EACA,IAAK,IAAI76B,EAAI,EAAGA,EAAI66B,EAAQ16B,OAAQH,GAAK,EAAG,CACxC,IAAIqQ,EAAMwqB,EAAQ76B,GACdg7B,EAAah7B,EAAI,EACrBi7B,GAAiB5qB,EAAK2qB,EAAYH,EAAS/qB,GAC3CorB,GAAoBL,EAAQG,GAAa3qB,EAAKsqB,GAGlDA,GA8ER,SAASQ,EAAwBtpB,EAAOmoB,EAAWW,GAC/C,GAAIX,EAKA,IAJA,IAAIoB,EAAavpB,EAAMupB,cAIdp7B,EAAI,EAAGA,EAAIg6B,EAAU75B,OAAQH,GAAK,EAAG,CAC1C,IAAIgF,EAAQ21B,EAAWX,EAAUh6B,EAAI,IACrC,GAAa,MAATgF,EACA,MAAM,IAAIkF,MAAM,mBAAqB8vB,EAAUh6B,EAAI,GAAK,gBAC5Do7B,EAAWj5B,KAAK63B,EAAUh6B,GAAIgF,IAvFlCm2B,CAAwBtpB,EAAOmoB,EAAWW,GAzB1CD,CAHOhF,GAG6B7jB,MAAO/B,GAAOkqB,GAAa,MAwFvE,SAASqB,IACL,IAAIxpB,EAAQ6jB,GAAqB7jB,MAC7BypB,EAAsB,KAAdzpB,EAAM/E,MAClB,GAAIwuB,EAAQ,EAIR,IAHA,IAAInrB,EAAQ0B,EAAM/E,OAAS,GACvBsD,EAAMD,EAAQmrB,EACdC,EAAczrB,GAAMQ,WACftQ,EAAImQ,EAAOnQ,EAAIoQ,EAAKpQ,IAAK,CAC9B,IAAIqQ,EAAMkrB,EAAYv7B,GACtBw7B,GAAgBx7B,EAAGqQ,EAAInS,UAAWmS,IA9FtCgrB,GAiIR,SAASI,IACL,IAAIL,EAAa1F,GAAqB7jB,MAAMupB,WAC5C,GAAIA,EACA,IAAK,IAAIp7B,EAAI,EAAGA,EAAIo7B,EAAWj7B,OAAQH,GAAK,EAAG,CAC3C,IAAIgF,EAAQo2B,EAAWp7B,EAAI,GAE3B4qB,GAASzoB,MADc,IAAX6C,EAAe0wB,GAAqB7J,OAASvb,GAAWtL,KApI5Ey2B,GAuBJ,SAASV,GAAqBlpB,GAC1B,IAAI6pB,EAAW5rB,GAAM6rB,kBACjBd,EAAU,KACd,GAAIa,EACA,IAAK,IAAI17B,EAAI,EAAGA,EAAI07B,EAASv7B,OAAQH,IAAK,CACtC,IAAIqQ,EAAMqrB,EAAS17B,GACfywB,GAA2B5e,EAAOxB,EAAIsgB,aAClCtgB,EAAI2oB,WACc,KAAdnnB,EAAM/E,OACN8E,GAA4BC,GAChCA,EAAM/E,MAAQ,MAEduD,EAAIurB,UACJvrB,EAAIurB,SAASvrB,IAChBwqB,IAAYA,OAAe14B,KAAKkO,EAAK,OAIlD,OAAOwqB,EAEX,SAASI,GAAiB5qB,EAAK2qB,EAAYH,EAAS/qB,GAChD,GAA4B,OAAxB+qB,EAAQG,GAAsB,CAC9BH,EAAQG,GAAczF,GACtB,IAAIsG,EAAWxrB,EAAInS,UAEnB,OADC4R,EAAMQ,aAAeR,EAAMQ,gBAAkBnO,KAAKkO,GAC5CmrB,GAAgBX,EAAQG,GAAclrB,EAAMQ,WAAWnQ,OAAS,EAAG07B,EAAUxrB,GAMxF,OAJSwqB,EAAQG,KAAgBzF,IArgKrC,SAASuG,EAA2BrzB,GAChC,MAAM,IAAIyB,MAAM,yCAA2CzB,GAsgKvDqzB,CAA2BzrB,EAAIhH,MAE5B,KAGX,SAAS0yB,KACD7rB,KACCJ,GAAM6nB,aAAe7nB,GAAM6nB,gBAAkBx1B,KAAKyoB,GAASzqB,OAAS,GAa7E,SAAS67B,GAA6B7tB,EAAU0tB,EAAUhR,GAClD1c,GAA0C,MAA9BA,EAAS8tB,mBACrB9tB,EAAS8tB,kBAAkBC,qBAAqBrR,EAAMgR,GAyC9D,SAASX,GAAoBl2B,EAAOqL,EAAKsqB,GACjCA,IACItqB,EAAI8rB,WACJxB,EAAWtqB,EAAI8rB,UAAYn3B,GAC3BqL,EAAI2oB,WACJ2B,EAAW,IAAM31B,IA0B7B,SAASo3B,GAAiBpD,EAAU1oB,EAAY+rB,EAAOC,GAOnD,OAAOtD,EAASuD,gBACXvD,EAASuD,cAAgBC,IAAa,EAAGxD,EAAU1oB,EAAY+rB,EAAOC,IAS/E,SAASE,GAAYC,EAAWzD,EAAU1oB,EAAY+rB,EAAOC,GAEzD,OACIja,GAAIoa,EACJzD,SAAUA,EACVsD,UAAWA,EACX3R,KAAM,KACN3kB,KAAMsvB,GAAczqB,QACpB+iB,YAAa,EACb8O,mBAAoB,EACpBpsB,WAAY,KACZJ,mBAAmB,EACnBH,UAAW,KACXC,WAAY,KACZW,aAAc,KACdE,kBAAmB,KACnBE,UAAW,KACXE,eAAgB,KAChBE,aAAc,KACdud,iBAAkB,KAClBL,QAAS,KACToJ,aAAc,KACdJ,eAAgB,KAChBM,WAAY,KACZgE,kBAAyC,mBAAfrrB,EAA4BA,IAAeA,EACrEqsB,aAA+B,mBAAVN,EAAuBA,IAAUA,EACtDvB,eAAgB,MAGxB,SAASV,GAAgBvO,EAAQkE,GAG7B,IAFA,IAAI6M,EAASxqB,GAAqBC,IAC9BrS,EAAI,EACDA,EAAI+vB,EAAM5vB,QAAQ,CACrB,IAAI08B,EAAW9M,EAAM/vB,GACrB,GAAiB,IAAb68B,EACA,MACJ,GAAIA,IAAa1qB,GACbnS,GAAK,OAIL,GAAiB,IAAb68B,EAAmC,CAEnC,IAAIC,EAAe/M,EAAM/vB,EAAI,GACzB+8B,EAAahN,EAAM/vB,EAAI,GACvBg9B,EAAUjN,EAAM/vB,EAAI,GACxB48B,EACIvqB,GACK4qB,aAAapR,EAAQkR,EAAYC,EAASF,GAC/CjR,EAAOqR,eAAeJ,EAAcC,EAAYC,GACpDh9B,GAAK,OAIDg9B,EAAUjN,EAAM/vB,EAAI,GACxB48B,EACIvqB,GACK4qB,aAAapR,EAAQgR,EAAUG,GACpCnR,EAAOoR,aAAaJ,EAAUG,GAClCh9B,GAAK,GAarB,SAASm9B,GAAkBj/B,EAASk/B,GAEhClI,GAAkBh3B,EAClB,IAAIm/B,EAAkBn/B,EAAQqU,eAAe,KAAM,MAcnD,MAbyC,iBAAtB6qB,EACdhrB,GAAqBirB,GAClBA,EAAgBC,kBAAkBF,GAClCC,EAAgBE,cAAcH,GAClCA,EAmBR,SAAS5qB,GAAYgrB,EAAKC,EAAOptB,EAAK+hB,GAClCwG,KACA,IAAIjO,EAAO0N,GAAY,EAAG,EAAiBoF,EAAO,KAAM,KAAMxF,GAAgB5lB,GAAU+pB,GAAiB/rB,EAAI2oB,SAAU3oB,EAAIqtB,cAAertB,EAAIstB,SAAUttB,EAAIisB,WAAY,KAAMjsB,EAAIutB,OAAS,EAAgB,EAAqBxL,IAOhO,OANIliB,KACAya,EAAK9Y,MAAM/E,MAAQ,KACfuD,EAAIurB,UACJvrB,EAAIurB,SAASvrB,GACjBP,GAAMQ,YAAcD,IAEjBsa,EAYX,SAASkT,GAASC,EAAWC,EAAYC,QAClB,IAAfA,IAAyBA,GAAa,GAG1C,IAAIrT,EAAO+K,GACP7J,EAASlB,EAAKkB,OAIlB,GAAIzZ,GAAqBC,IAAW,CAChC,IAAI4rB,EAq7BZ,SAASC,EAA2BrT,EAAMkT,GACtC,OAAO,SAAU97B,GAEb,OADAk8B,GAActT,GACPkT,EAAW97B,IAx7BIi8B,CAA2BtT,GAAUmT,GACvDxP,EAAYlc,GAAS+rB,OAAOvS,EAAQiS,EAAWG,GACnDI,GAAezT,GAAU2D,OAExB,CACG0P,EA07BZ,SAASK,EAAgCzT,EAAMkT,GAC3C,OAAO,SAASQ,EAA6Bt8B,GACzCk8B,GAActT,IACQ,IAAlBkT,EAAW97B,KACXA,EAAEu8B,iBAEFv8B,EAAEw8B,aAAc,IAh8BEH,CAAgC1T,GAAUmT,GAChElS,EAAO6S,iBAAiBZ,EAAWG,EAAiBD,GACpD,IAAIW,EAAmBtI,GAAWzL,IAClC+T,EAAiBx8B,KAAK87B,GAClB/tB,IACAomB,GAAgB1L,IAAUzoB,KAAK27B,EAAWnT,EAAK9Y,MAAM7M,MAAO25B,EAAiBx+B,OAAS,EAAG69B,GAGjG,IAAInsB,EAAQ8Y,EAAK9Y,WACKnP,IAAlBmP,EAAM+sB,UAGN/sB,EAAM+sB,QAAUC,GAAwBlU,EAAK9Y,MAAM/E,MAAO,IAE9D,IACIgyB,EADAF,EAAU/sB,EAAM+sB,QAEhBA,IAAYE,EAAaF,EAAQd,KAQzC,SAASiB,EAAaH,EAASf,GAC3B,IAAK,IAAI79B,EAAI,EAAGA,EAAI4+B,EAAQz+B,OAAQH,GAAK,EAAG,CAExC,IAAIg/B,EAAe1uB,GAAWsuB,EAAQ5+B,IAAI4+B,EAAQ5+B,EAAI,IAAIi/B,UAAUpB,GACpEqB,GAAwBtU,GAAUoU,EAAcA,EAAaG,cAX7DJ,CAAaD,EAAYf,GAqBjC,SAASmB,GAAwBrU,EAAMhd,EAAS0gB,GACvC1D,IACDA,EAAOD,IACXyL,GAAWxL,GAAM1oB,KAAK0L,GAClBgd,EAAKnc,IAAOwB,mBACZomB,GAAgBzL,GAAM1oB,KAAKosB,EAAW1D,EAAK3b,IAAS/O,OAAS,GAWrE,SAASk+B,GAAexT,EAAM0D,GAC1B8H,GAAWxL,GAAM1oB,KAAKosB,GAClB1D,EAAKnc,IAAOwB,mBACZomB,GAAgBzL,GAAM1oB,KAAK0oB,EAAK3b,IAAS/O,OAAS,EAAG,MAI7D,SAAS+5B,KACDvE,GACAA,IAAW,EAIXD,GAAuB1K,GAAe0K,IAG1C,IAAIyC,EAAUzC,GAAqByC,QACnCA,GAAWA,EAAQiH,QAAQ1J,IAC3BzlB,GAAoBylB,GAAqB7jB,MAAM/E,MAAOgD,IACtD+lB,GAAqB,KAWzB,SAASwJ,GAAiBr6B,EAAOxB,EAAM1B,EAAOswB,GAC1C,GAAItwB,IAAUw9B,GAAW,CACrB,IAAIC,EAAYC,GAAYx6B,GAC5B,GAAa,MAATlD,EAEAsQ,GAAqBC,IAAYA,GAASotB,gBAAgBF,EAAU1T,OAAQroB,GACxE+7B,EAAU1T,OAAO4T,gBAAgBj8B,OAEpC,CAED,IAAIk8B,EAAwB,MAAbtN,EAAoB7H,GAAYzoB,GAASswB,EAAUtwB,GAClEsQ,GAAqBC,IAAYA,GAAS4qB,aAAasC,EAAU1T,OAAQroB,EAAMk8B,GAC3EH,EAAU1T,OAAOoR,aAAaz5B,EAAMk8B,KAiBpD,SAASC,GAAgB36B,EAAON,EAAU5C,EAAOswB,GAC7C,GAAItwB,IAAUw9B,GAAd,CAEA,IAAI3U,EAAO6U,GAAYx6B,GACnB6M,EAAQ8Y,EAAK9Y,MAGbA,QAA0BnP,IAAjBmP,EAAM+tB,SAEf/tB,EAAM+tB,OAASf,GAAwBlU,EAAK9Y,MAAM/E,MAAO,IAE7D,IACI+yB,EADAC,EAAYjuB,GAASA,EAAM+tB,OAE/B,GAAIE,IAAcD,EAAYC,EAAUp7B,KAoD5C,SAASq7B,EAAqBH,EAAQ99B,GAClC,IAAK,IAAI9B,EAAI,EAAGA,EAAI4/B,EAAOz/B,OAAQH,GAAK,EAEpCsQ,GAAWsvB,EAAO5/B,IAAI4/B,EAAO5/B,EAAI,IAAM8B,EAtDvCi+B,CAAqBF,EAAW/9B,GAuyBxC,SAASk+B,EAAkBrV,IAEnBA,EAAK3kB,MAA6B,EAAnB2kB,EAAK3kB,KAAK8I,MACzB6b,EAAK3kB,KAAK8I,KAAU,GAzyBpBkxB,CAAkBrV,OAEjB,CAGD7oB,EAAqB,MAAbswB,EAAoBA,EAAUtwB,GAASA,EAC/C,IAAI+pB,EAASlB,EAAKkB,OAElBzZ,GAAqBC,IAAYA,GAASkgB,YAAY1G,EAAQnnB,EAAU5C,GACnE+pB,EAAO0G,YAAc1G,EAAO0G,YAAY7tB,EAAU5C,GAC/C+pB,EAAOnnB,GAAY5C,IAcnC,SAAS02B,GAAYnvB,EAAM0pB,EAAejhB,EAASie,EAAO3lB,EAAQ61B,GAE9D,OACI52B,KAAMA,EACNrE,MAAO+tB,EACPjmB,MAAO,EACPgF,QAASA,EACTie,MAAOA,EACPqL,WAAY,KACZ8E,mBAAex9B,EACfk9B,YAAQl9B,EACRk8B,aAASl8B,EACTu9B,OAAQA,EACRp+B,KAAM,KACNkpB,MAAO,KACP3gB,OAAQA,EACRuuB,qBAAsB,KACtBpL,SAAU,KACV4S,gBAAiB,KACjB9T,WAAY,MAoBpB,SAASwS,GAAwBuB,EAAYC,GACzC,IAAI/E,EAAqB,KAAb8E,EACRE,EAAY,KAChB,GAAIhF,EAAQ,EAKR,IAJA,IAAInrB,EAAQiwB,GAAc,GACtBhwB,EAAMD,EAAQmrB,EACdiF,EAAwB,IAAdF,EACVvI,EAAOhoB,GAAMQ,WACRtQ,EAAImQ,EAAOnQ,EAAIoQ,EAAKpQ,IAAK,CAC9B,IAAIwgC,EAAe1I,EAAK93B,GACpBygC,EAAmBF,EAAUC,EAAaZ,OAASY,EAAa5B,QACpE,IAAK,IAAI8B,KAAcD,EACnB,GAAIA,EAAiBnhC,eAAeohC,GAAa,CAE7C,IAAIC,EAAeF,EAAiBC,IADpCJ,EAAYA,OAEgBhhC,eAAeohC,GAC7BJ,EAAUI,GAAYv+B,KAAKnC,EAAG2gC,GACvCL,EAAUI,IAAe1gC,EAAG2gC,IAKjD,OAAOL,EAYX,SAASM,GAAiB57B,EAAO67B,EAAc/+B,IAl3C/C,SAASg/B,EAAgBjzB,EAAS7I,EAAO+7B,GAErC7P,GAAgBrjB,EADI7I,EAAQ6I,EAAQ,GACIkzB,GAi3CxCD,CAAgBE,GAAkBh8B,GAAQ67B,IAAc/+B,GA8B5D,SAASm/B,GAAeC,EAAmBC,EAAmBC,GAC1D,IACIvvB,EADWgkB,GACMhkB,MAChBA,EAAMsuB,kBAEPtuB,EAAMsuB,gBAxqDd,SAASkB,EAA6BC,EAA0BC,EAA0BH,GACtF,IAAII,GAAwB,MACxB3zB,GAAW,KAAMuzB,GAAkB,KAAMI,EAAsB,EAAG,EAAG,MAErEC,KACAC,KACAC,EAAyB,EAC7B,GAAIJ,EAEA,IADA,IAAIK,GAAwB,EACnB5hC,EAAI,EAAGA,EAAIuhC,EAAyBphC,OAAQH,IAGjD,GAAU,KAFNyN,EAAI8zB,EAAyBvhC,IAG7B4hC,GAAwB,MAEvB,CACD,IAAI7jB,EAAOtQ,EACX,GAAIm0B,EAAuB,CACvB,IAAI9/B,EAAQy/B,IAA2BvhC,GACvCwhC,EAAqBr/B,KAAKL,GAC1B2/B,EAAa1jB,GAAQyjB,EAAqBrhC,OAAS,OAGnDwhC,IACAF,EAAa1jB,GAAQ,EAOrC,GADAlQ,EAAQ,GAA+B8zB,EACnCL,EAEA,IADIM,GAAwB,EACnB5hC,EAAI,EAAGA,EAAIshC,EAAyBnhC,OAAQH,IAAK,CACtD,IAAIyN,EAEJ,GAAU,KAFNA,EAAI6zB,EAAyBthC,IAG7B4hC,GAAwB,MAEvB,CACD,IAAIjP,EAAYllB,EACZm0B,GACI9/B,EAAQw/B,IAA2BthC,GACvCwhC,EAAqBr/B,KAAKL,GAC1B4/B,EAAc/O,GAAa6O,EAAqBrhC,OAAS,GAGzDuhC,EAAc/O,GAAa,GAK3C,IAAIkP,EAAa5iC,OAAO4I,KAAK45B,GACzBK,EAAa7iC,OAAO4I,KAAK65B,GACzBK,EAAuBF,EAAW1hC,OAClC6hC,EAAaH,EAAW1hC,OAAS2hC,EAAW3hC,OAE5C8hC,EAAyB,EAAbD,EAA4B,EAAI,EAGhD,IAAShiC,EAAI,EAAmCA,EAAIiiC,EAAWjiC,IAC3D6N,EAAQ1L,KAAK,MAEjB,IACI+/B,EAA0B,EAAbF,EAA4B,EAE7C,IAAShiC,EAAI,EAAGA,EAAIgiC,EAAYhiC,IAAK,CACjC,IAAImiC,EAAiBniC,GAAK+hC,EAEtBK,GADArkB,EAAOokB,EAAiBL,EAAW9hC,EAAI+hC,GAAwBF,EAAW7hC,GACxDmiC,EAAiBT,EAAc3jB,GAAQ0jB,EAAa1jB,IACtEskB,EAAeb,EAAqBY,GACpC1Q,EAAoB,EAAJ1xB,EAAmBkiC,EACnCI,EAAqB,EAAJtiC,EATP,EAUVuiC,EAActN,GAAmBlX,EAAMokB,EAAgBf,GAAkB,MAC7ExN,GAAQ/lB,EAASy0B,EAAgBpP,GAASqP,EAAaH,EAAiB1Q,IACxEiC,GAAQ9lB,EAASy0B,EAAgBvkB,GACjC0T,GAAS5jB,EAASy0B,EAAgB,MAElC1O,GAAQ/lB,EAAS6jB,EAAewB,GADbqP,GAAgC,OAAjBF,EAAwB,EAAgB,GACnBD,EAAiBE,IACxE3O,GAAQ9lB,EAAS6jB,EAAe3T,GAChC0T,GAAS5jB,EAAS6jB,EAAe,MAMrC,OAFAkC,GAAQ/lB,EAAS,EAA4BqlB,GAAS,EAAG,EAAGgP,IAC5DhQ,GAAgBrkB,EAAS2zB,EAAqBrhC,OAAS,GAChD0N,EAmlDCwzB,CAA6BH,EAAmBC,EAAmBC,KAEvED,GAAqBA,EAAkBhhC,QACvC+gC,GAAqBA,EAAkB/gC,SACvCqiC,GAAoB3wB,EAAM7M,MAAQyJ,IAa1C,SAASuyB,GAAkBh8B,GACvB,IAAIy9B,EAAiBC,GAAK19B,GAS1B,OARK5F,MAAMiL,QAAQo4B,KAKfA,EAAiB7X,GAAS5lB,EAAQyJ,IA7tD1C,SAASk0B,EAAoBC,EAAUC,GAEnC,IAAIh1B,EAAUg1B,EAAqBh4B,QAEnC,OADAgD,EAAQ,GAA2B+0B,EAC5B/0B,EA0tDC80B,CALWF,EAAAA,EACM5wB,MAImBsuB,kBAErCsC,EAgBX,SAASD,GAAoBx9B,IA56C7B,SAAS89B,EAAcj1B,EAASwE,EAAU0wB,EAAYC,GAClD,GAkKJ,SAASC,EAAep1B,GACpB,OAAO6J,GAAQ7J,EAAS,GAnKpBo1B,CAAep1B,GAAU,CAIzB,IAHA,IAAIge,EAAShe,EAAQ,GAAyBge,OAC1CqX,EAAkBzP,GAAmB5lB,GACrCuzB,EAAiB1N,GAAkB7lB,GAC9B7N,EAAI,EAAmCA,EAAI6N,EAAQ1N,OAAQH,GAAK,EAErE,GAAI0X,GAAQ7J,EAAS7N,GAAI,CACrB,IAAI+d,EAAO8V,GAAQhmB,EAAS7N,GACxB8B,EAAQuvB,GAASxjB,EAAS7N,GAC1BuzB,EAAOhC,GAAY1jB,EAAS7N,GAC5BmjC,KAAwB,EAAP5P,GAEjB6P,EAAethC,EADI9B,EAAIkjC,IAKFlR,GAAYoR,EAAcD,KAG/CC,EAAe/R,GAASxjB,EADP8jB,GAAsB4B,KAStCvB,GAAYoR,EAAcD,KAC3BC,EAAe9P,GAAgBzlB,EAAS0lB,IAExC4P,EACAzQ,GAAS7G,EAAQ9N,IAAMqlB,EAA6B/wB,EAAU2wB,GAI9D7Q,GAAStG,EAAQ9N,EAAMqlB,EAAc/wB,EADb,EAAPkhB,EAA2B6N,EAAiB,KACH2B,GAE9D9Q,GAASpkB,EAAS7N,GAAG,GAG7BkyB,GAAgBrkB,GAAS,IAo4C7Bi1B,CAAc9B,GAAkBh8B,GAAQqN,IAwB5C,SAASgxB,GAAiBr+B,EAAOs+B,EAAYxhC,EAAOyhC,GAChD,IAAIC,EAAa,KACb1hC,IAII0hC,EAHAD,EAGahZ,GAAYzoB,GAASyhC,EAOrBzhC,GAGrBovB,GAAgB8P,GAAkBh8B,GAAQs+B,EAAYE,GAuB1D,SAASC,GAAkBz+B,EAAO0+B,EAASC,IA7qD3C,SAASC,EAAiB/1B,EAAS61B,EAASC,GACxC,IAAI7B,EAAa9Q,GACb6S,GAAkB,EAClBC,GAAwB,EAG5B,GAAsB,iBAAXJ,EAAqB,CAC5B,IAAIK,EAAoBl2B,EAAQ,GAC5Bk2B,GAAqBA,IAAsBL,EAC3CI,GAAwB,GAGxBj2B,EAAQ,GAAgC61B,EACxC5B,EAAa4B,EAAQM,MAAM,OAG3BH,GAAkB,QAItB/B,EAAa4B,EAAUzkC,OAAO4I,KAAK67B,GAAW1S,GAC9CnjB,EAAQ,GAAgC,KAE5C61B,EAAWA,GAAWzS,GACtB,IAAI4Q,EAAa8B,EAAS1kC,OAAO4I,KAAK87B,GAAU3S,GAChD2S,EAASA,GAAU1S,GAUnB,IATA,IAAIgT,EAAoBpC,EAAW1hC,OAE/B+jC,GAAQ,EACRC,EAFkB1Q,GAAmB5lB,GAGrCu2B,EAAY,EACZC,EAAYxC,EAAW1hC,OAAS2hC,EAAW3hC,OAIxCgkC,EAAWt2B,EAAQ1N,QAAUikC,EAAYC,GAAW,CACvD,IAAIC,EAAiBF,GAAaH,EAGlC,IAAKH,IAA0BQ,EAAgB,CAC3C,IAAIC,EAAoBD,EAAiBF,EAAYH,EAAoBG,EACrEI,EAAUF,EAAiBxC,EAAWyC,GAAqB1C,EAAW0C,GACtEtpB,EAAWqpB,IAAkBT,GAAyBH,EAAQc,GAAYb,EAAOa,GAErF,IADIzmB,EAAO8V,GAAQhmB,EAASs2B,MACfK,EAAS,CAClB,IAAI1iC,EAAQuvB,GAASxjB,EAASs2B,GAE1B3S,GADA+B,EAAOhC,GAAY1jB,EAASs2B,GACNriC,EAAOmZ,KAC7BwW,GAAS5jB,EAASs2B,EAAUlpB,IACxBonB,EAAe/O,GAAgBzlB,EAAS0lB,MAGvBtY,IACjBgX,GAASpkB,EAASs2B,GAAU,GAC5BD,GAAQ,QAIf,CACD,IAAIO,EAAe3Q,GAAwBjmB,EAAS22B,EAASL,GAC7D,GAAIM,EAAe,EAAG,CAElB,IAAIC,EAAiBrT,GAASxjB,EAAS42B,GACnCE,EAAgBpT,GAAY1jB,EAAS42B,GAEzC,GADAzQ,GAAwBnmB,EAASs2B,EAAUM,GACvCC,IAAmBzpB,EAAU,CAC7B,IAAIonB,EAAe/O,GAAgBzlB,EAAS82B,GAC5ClT,GAAS5jB,EAASs2B,EAAUlpB,GACxBonB,IAAiBpnB,IACjBgX,GAASpkB,EAASs2B,GAAU,GAC5BD,GAAQ,SAOhBvP,GAAuB9mB,EAASs2B,EAAUG,EAAgBE,EAD5CvP,GAAmBuP,EAASF,EAAgB5Q,GAAkB7lB,IACAoN,GAC5EipB,GAAQ,GAIpBC,GAAY,EACZC,IAKJ,KAAOD,EAAWt2B,EAAQ1N,QAAQ,CAC9B,IACIykC,EAA4C,IAAnB,GADzBrR,EAAOhC,GAAY1jB,EAASs2B,KAEhC,GAAIL,GAAyBc,EACzB,MAEgB5S,GADhBlwB,EAAQuvB,GAASxjB,EAASs2B,GACSS,KAEnC3S,GAASpkB,EAASs2B,GAAU,GAC5B1S,GAAS5jB,EAASs2B,EAAU,MAC5BD,GAAQ,GAEZC,GAAY,EAMhB,IADA,IAAI/R,EAAYsB,GAAkB7lB,GAC3Bu2B,EAAYC,GAAW,CAC1B,IAAIQ,EAAiBT,GAAaH,EAClC,GAAIH,GAAyBe,EACzB,MACAN,EAAoBM,EAAiBT,EAAYH,EAAoBG,EAAzE,IACIrmB,EAAO8mB,EAAiB/C,EAAWyC,GAAqB1C,EAAW0C,GAEnEhR,GADAzxB,EAAQ+iC,IAAkBhB,GAAyBH,EAAQ3lB,GAAS4lB,EAAO5lB,GACd,EAAtDkX,GAAmBlX,EAAM8mB,EAAgBzS,IACpDvkB,EAAQ1L,KAAKoxB,EAAMxV,EAAMjc,GACzBsiC,IACAF,GAAQ,EAERA,GACAhS,GAAgBrkB,GAAS,GAujD7B+1B,CAAiB5C,GAAkBh8B,GAAQ0+B,EAASC,GAWxD,SAAS38B,GAAKhC,EAAOlD,GAIjB,IAAIgjC,EAAWpY,GAAe5qB,EAAOuQ,IACjCsY,EAAO0N,GAAYrzB,EAAO,EAAiB8/B,EAAU,KAAM,MAE/DnP,IAAW,EACX1G,GAAYjE,GAAeL,GAAOma,EAAUla,IAShD,SAASma,GAAY//B,EAAOlD,GACxB,GAAIA,IAAUw9B,GAAW,CAErB,IAAI0F,EAAexF,GAAYx6B,GAI/BoN,GAAqBC,IAAYA,GAASof,SAASuT,EAAanZ,OAAQtB,GAAYzoB,IAChFkjC,EAAanZ,OAAOoZ,YAAc1a,GAAYzoB,IAe1D,SAAS05B,GAAgBlE,EAAiB4N,EAAW1E,GACjD,IAAI3E,EAAWsJ,GAAoB7N,EAAiB4N,EAAW1E,GAE3D3uB,EAAQ6jB,GAAqB7jB,MAkBjC,OAjBkB2uB,EAAaxH,UAmBnC,SAASoM,EAAkBC,EAAgBxJ,EAAUxrB,GACjD,IAAIP,EAAQssB,GAAiB/rB,EAAI2oB,SAAU3oB,EAAIqtB,cAAertB,EAAIstB,SAAUttB,EAAIisB,WAG5EgJ,EAAgBC,GAAc3a,GAAU8K,GAAqB7jB,MAAM7M,MAAOizB,GAAgB/C,GAAgB3iB,eAAemjB,GAAqB7J,OAAQxb,EAAIoC,cAAe3C,EAAO+rB,EAAUxrB,EAAIutB,OAAS,EAAgB,EAAqB9H,OAGhPJ,GAAqB1vB,KAAOs/B,EAC5BA,EAAcv2B,IAAa2mB,GAC3BsG,GAA6BtG,GAAqB0C,aAAcyD,EAAUyJ,GACtEp1B,IACA6rB,KA5BAqJ,CAAkB9N,EAAiB4N,EAAW1E,GAE9CtwB,KAGAP,GAAe2nB,EAAiBkJ,EAAa5wB,OAAQ4wB,EAAa3wB,QAASC,IACvE0wB,EAAa/I,cA3pBzB,SAAS+N,EAAyBzN,IAK7BjoB,GAAM2nB,eAAiB3nB,GAAM2nB,kBAAoBt1B,KAAK41B,EAAUnN,GAASzqB,OAAS,EAAIsO,IAupB/E+2B,CAAyBlO,IAE7BzlB,GAASA,EAAMke,OAqEvB,SAAS0V,EAAmBJ,EAAgBxJ,EAAU+D,EAAQ/tB,GAC1D,IAAI6zB,EAAmB7zB,EAAMquB,oBACJx9B,IAArBgjC,GAAkCL,GAAkBK,EAAiBvlC,UACrEulC,EAwBR,SAASC,EAAsBN,EAAgBzF,EAAQ/tB,GACnD,IAAI6zB,EAAmB7zB,EAAMquB,gBAAkBruB,EAAMquB,kBACrDwF,EAAiBL,GAAkB,KAGnC,IAFA,IAAItV,EAAQle,EAAMke,MACd/vB,EAAI,EACDA,EAAI+vB,EAAM5vB,QAAQ,CACrB,IAAI08B,EAAW9M,EAAM/vB,GACrB,GAAiB,IAAb68B,EACA,MACJ,GAAiB,IAAbA,EAAJ,CAKA,IAAI+I,EAAoBhG,EAAO/C,GAC3BgJ,EAAY9V,EAAM/vB,EAAI,QACA0C,IAAtBkjC,IACoBF,EAAiBL,KAAoBK,EAAiBL,QAC5DljC,KAAKyjC,EAAmBC,GAE1C7lC,GAAK,OATDA,GAAK,EAWb,OAAO0lC,EA9CgBC,CAAsBN,EAAgBzF,EAAQ/tB,IAErE,IAAIquB,EAAgBwF,EAAiBL,GACrC,GAAInF,EACA,IAAK,IAAIlgC,EAAI,EAAGA,EAAIkgC,EAAc//B,OAAQH,GAAK,EAC3C67B,EAASqE,EAAclgC,IAAMkgC,EAAclgC,EAAI,GA5EnDylC,CAAmBnO,EAAiBuE,EAAU2E,EAAaZ,OAAQ/tB,GAEnE2uB,EAAanJ,gBACbmJ,EAAanJ,iBAEVwE,EAqBX,SAASsJ,GAAoBngC,EAAOkgC,EAAW1E,GAS3C,GALAvhC,OAAO+B,eAAekkC,EAAW/P,IAAkBxd,YAAY,EAAO7V,MAAO4zB,KAC3D,MAAdplB,KACAsa,GAAS3b,IAAcqB,OAE3BA,GAAWtL,GAASkgC,EAChBh1B,GAAmB,CACnB,IAAIpD,EAAQ4oB,GAAqB7jB,MAAM/E,MACS,IAAnC,KAARA,GAID4oB,GAAqB7jB,MAAM/E,MACvB9H,GAAS,GAA+C,KAAR8H,EAAiC,EAKrF4oB,GAAqB7jB,MAAM/E,YAG9B,CACD,IAAI8uB,EAAW4E,EAAa5E,SACxBA,GACAA,EAAS4E,GAKjB,OAH+B,MAA3BA,EAAasF,YAAyD,GAAnCpQ,GAAqB7jB,MAAMxI,MAC9D+wB,GAAgB1E,GAAqB7J,OAAQ2U,EAAasF,YAEvDZ,EAwEX,SAASa,GAAiBC,EAAa30B,EAAa40B,GAEhD,IAAI/W,EAAeJ,GAAoBkX,EAAa30B,GAChD20B,EACA,KAIJ,OAHI9W,GAA4C,IAA5BA,EAAard,MAAMxI,OACnC6lB,EAAelE,GAAekE,GAAclpB,KAAKkM,MAGjD+zB,EAAwB,KAAO,EAC/B50B,EACA,KACA,QAEA6d,GAcR,SAASrC,GAAU7nB,EAAOg0B,EAAUlnB,EAASie,EAAOiK,GAGhD,IACI1K,EAAayW,GADGpQ,GAAWD,GAAuB1K,GAAe0K,IACpB9K,IAE7Csb,EAAU7zB,GAAS8zB,cAAwC,IAC3Dxb,EAAO0N,GAAYrzB,EAAO,EAAmBkhC,EAASp0B,GAAW,KAAMie,GAAS,KAAMT,GAC1FL,GAAYjE,GAAeL,GAAOub,EAAStb,IACvC1a,KACAya,EAAK9Y,MAAMouB,OAASjH,EAChBwD,IAAa,EAAGxD,EAAUlpB,GAAM6rB,kBAAmB7rB,GAAM6sB,aAAc,UAK/E4I,GAAc3a,GAAU5lB,EAAQyJ,GAAekc,EAAK3kB,MACpD,IAAImyB,EAAUxN,EAAKwN,QACfA,IAEA7I,EAAWzgB,IAAWspB,EAAQtL,aAElCwN,GAA0BL,GAC1BrE,IAAW,EAEXwC,GAAWA,EAAQiH,QAAQzU,GAC3B1a,GAAoB0a,EAAK9Y,MAAM/E,MAAOgD,IAO1C,SAASs2B,GAAsBphC,GAC3B0wB,GAAuB8J,GAAYx6B,GAEnC2wB,IAAW,EACXD,GAAqB1vB,KAAKgM,IAAgB,EACrCukB,IAGDnlB,GAAiBwZ,GAAU9a,GAAOwB,IAQ1C,SAAS+0B,KACD1Q,GACAA,IAAW,EAKXD,GAAuB1K,GAAe0K,IAO1C,IAJA,IAAI7I,EAAY6I,GAEZ4Q,EAAYzZ,EAAU7mB,KAAKgM,IAExBs0B,EAAYzZ,EAAU7mB,KAAKiM,IAAO9R,QACrCstB,GAAWZ,EAAWyZ,GA2D9B,SAASC,GAAkBC,GACvB,IAAI3Z,EAAa8I,GAAWD,GAAuB1K,GAAe0K,IAE9DpG,EAAazC,EAAU7mB,KACvBinB,EA9BR,SAASwZ,EAAYC,EAAeC,EAAUH,GAE1C,IADA,IAAItZ,EAAQwZ,EAAc1gC,KAAKiM,IACtBjS,EAAI2mC,EAAU3mC,EAAIktB,EAAM/sB,OAAQH,IAAK,CAC1C,IAAI4mC,EAAmB1Z,EAAMltB,GAAGgG,KAAK0I,IAAO2T,GAC5C,GAAIukB,IAAqBJ,EACrB,OAAOtZ,EAAMltB,GAEZ,KAAI4mC,EAAmBJ,GAQxB,MANA/Y,GAAWiZ,EAAe1mC,GASlC,OAAO,KAYQymC,CAAY5Z,EAAWyC,EAAWtd,IAAew0B,GAChE,GAAIvZ,EACAyI,GAAuBzI,EAEvB0I,IAAW,EACXa,GAAUvJ,EAASjnB,KAAMinB,OAExB,CAED,IAAIwJ,EAAUwB,GAAgB5lB,GA0BtC,SAASw0B,EAAyBpK,EAAWryB,GAEzC,IAAI08B,EAAkB18B,EAAOyH,MAAMouB,OAOnC,OAJIxD,GAAaqK,EAAgB3mC,QAAwC,MAA9B2mC,EAAgBrK,MACvDqK,EAAgBrK,GACZD,GAAYC,EAAW,KAAM3sB,GAAM6rB,kBAAmB7rB,GAAM6sB,aAAc,OAE3EmK,EAAgBrK,GAnCqBoK,CAAyBL,EAAa3Z,GAAY,KAAM,EAAqBiJ,MACjHxG,EAAWzgB,MACX4nB,EAAQ5nB,IAAWygB,EAAWzgB,IAASk4B,cAE3CvQ,GAAUC,EAASxJ,EAAWoL,GAAYmO,EAAa,EAAc,KAAM,KAAM,KAAM/P,IAS3F,OAPI5J,IACIvb,IAEA0b,GAAWH,EAAWI,EAAUqC,EAAWtd,KAE/Csd,EAAWtd,OAER2nB,GAAe1M,EAASjnB,MAyBnC,SAASghC,KACLlQ,KACAnB,IAAW,EACXD,GAAuB9K,GAAS7b,IAChC6nB,GAAUhM,GAASjc,KAUvB,SAASipB,GAAiBqP,GAEtB,IAAIlN,EAAUnP,GAASqc,GAInBzN,EAAWO,EAAQ/zB,KAEnBkhC,GAAa1N,IAA+B,EAAlBA,EAAS1qB,KACnCq4B,GAAsB3N,EAAUO,EAASP,EAASrqB,KAI1D,SAAS+3B,GAAarc,GAClB,OAA4C,IAAtB,EAAdA,EAAK/b,KAuBjB,SAASs4B,GAAczW,EAAWC,GAC9B,IAAIyW,EAAgBlb,GAAkBvB,IACtC,IAAKyc,EAAcx1B,MAAMwa,WAMrB,IALA,IACIib,EAAQD,EAAcx1B,MAAMwa,WAC5B,IAAIjtB,MAFcuxB,EAAYA,EAAUxwB,OAAS,EAAI,GAE1Bkd,KAAK,MAChCkqB,EAAQD,EAAMz8B,QACd28B,EAAiBH,EAAcx1B,MAAMkZ,MACf,OAAnByc,GAAyB,CAC5B,IAAIC,EAAc9W,EAAYD,GAAsB8W,EAAgB7W,EAAWC,GAAiB,EAC5FjF,EAAW6b,EAAe3lC,KAC1B0lC,EAAME,GACNF,EAAME,GAAa5lC,KAAO2lC,GAG1BF,EAAMG,GAAeD,EACrBA,EAAe3lC,KAAO,MAE1B0lC,EAAME,GAAeD,EACrBA,EAAiB7b,GAW7B,IAAI+b,MAUJ,SAASrb,GAAWsb,EAAWC,EAAe7X,QACpB,IAAlB6X,IAA4BA,EAAgB,GAChD,IAAIjd,EAAO0N,GAAYsP,EAAW,EAAoB,KAAM,KAAM5X,GAAS,KAAM,MAEnD,OAA1BpF,EAAK9Y,MAAMwa,aACX1B,EAAK9Y,MAAMwa,WAAaub,GAE5BjS,IAAW,EAEX,IAAIvrB,EAAS4gB,GAAeL,GAC5B,GAAImE,GAAoB1kB,EAAQwgB,IAU5B,IATA,IAAIyc,EAAgBlb,GAAkBvB,IAClCid,EAAgBR,EAAcx1B,MAAMwa,WAAWub,GAC/CE,EAAgBT,EAAcxc,KAC9Ba,GAAuB,EACvBqc,OAAc,EACd7Y,EAAqC,IAAtB9kB,EAAOyH,MAAMxI,MAC3B0+B,EAAc/c,GAAe5gB,KAC1B29B,EAAY/hC,KAAKkM,IACrB9H,EACGy9B,GAAe,CAClB,GAA2B,IAAvBA,EAAcx+B,KAA6B,CAE3C,IAAI2+B,EAAuB7b,GAAkB2b,GACzCG,EAAqBD,EAAqBn2B,MAAMwa,WAAWwb,EAAcxb,YAC7E,GAAI4b,EAAoB,CACpBP,KAAwBhc,GAAuBoc,EAAcD,EAAc7iC,OAC3E6iC,EAAgBI,EAChBH,EAAgBE,EAAqBnd,KACrC,eAIAqd,EAAQJ,EAAcD,EAAc7iC,QAClC6M,MAAM/E,OAAS,KACrBsiB,GAAoB8Y,EAAO99B,EAAQwgB,GAAUsE,GAM7C,IAAIgZ,EAFmB,OAAvBL,EAAchmC,MAAiBimC,IAAkBT,EAAcxc,OAG/Dgd,GADIK,EAAQR,GAAsBhc,MACZ7Z,MACtBi2B,EAAgBI,EAAMrd,MAE1Bgd,EAAgBA,EAAchmC,MAe1C,SAAS0jC,GAAcl0B,EAAa82B,EAAmBha,GAQnD,OAPI9c,EAAY9B,IACZ8B,EAAY9B,IAAMX,IAAQuf,EAErBje,KACLJ,GAAM8d,WAAaua,GAEvB92B,EAAY9B,IAAQ4e,EACbA,EAqCX,SAASgQ,GAActT,GAEnB,IADA,IAAIxZ,EAAcwZ,EACY,MAAvBxZ,EAAY1C,KACf0C,EAAYvC,KAAU,EACtBuC,EAAcA,EAAY1C,IAE9B0C,EAAYvC,KAAU,EAe1B,SAASs5B,EAAaC,GAEd,IAAIC,EADJD,EAAYE,OAASnT,KAErBiT,EAAYE,MAAQ,IAAI/gC,QAAQ,SAAU5G,GAAK,OAAO0nC,EAAQ1nC,IAC9DynC,EAAYG,UAAU,WAClBvP,GAAgBoP,GAChBC,EAAM,MACND,EAAYE,MAAQnT,MApB5BgT,CAAa/2B,EAAYlC,KAwB7B,SAAS8pB,GAAgBoP,GACrB,IAAK,IAAIroC,EAAI,EAAGA,EAAIqoC,EAAY1Q,WAAWx3B,OAAQH,IAAK,CACpD,IAAIyoC,EAAgBJ,EAAY1Q,WAAW33B,GAG3Cu5B,GAFemP,GAA8BD,GAETE,GAAYF,GAAgBA,IASxE,SAASE,GAAYhiC,GAIjB,IAFA,IACI2lB,EADeoc,GAA8B/hC,GACpBkkB,KACtByB,EAAU3d,KACb2d,EAAYA,EAAU3d,IAE1B,OAAO2d,EAeX,SAASsc,GAAcjiC,GACnB,IAAIknB,EAAW6a,GAA8B/hC,GAG7CwgC,GAAsBtZ,EAAS7nB,KAAM6nB,EAAUlnB,GAOnD,SAASkiC,GAAwBvc,GAC7B2M,GAAgB3M,EAAUnd,KAoC9B,SAASg4B,GAAsB3N,EAAU3L,EAAUlnB,GAC/C,IAAIgwB,EAAUH,GAAUgD,EAAU3L,GAC9Bib,EAAYtP,EAAS9qB,IACrBsqB,EAAW8P,EAAU9P,SACrBsD,EAAYwM,EAAUxM,UAC1B,IACIpD,KAUR,SAAS6P,EAAgBzM,EAAWxvB,EAAOnG,GACnC21B,GAAsB,EAARxvB,GACdwvB,EAAU,EAAgB31B,GAX1BoiC,CAAgBzM,EAAW9C,EAAS1qB,IAAQnI,GAC5CqyB,EAASW,GAAeH,GAAW7yB,GACnCmwB,KAYR,SAASkS,EAAgB1M,EAAW31B,GAC5B21B,GACAA,EAAU,EAAgB31B,GAb1BqiC,CAAgB1M,EAAW31B,GAE/B,QACIiwB,GAAUD,IAiClB,IAAI2I,MAOJ,SAAS2J,MAE4B,IAA7Bn5B,GAAM4sB,oBACN5sB,GAAM4sB,kBAAoB9R,GAASzqB,QAEvCyqB,GAAS5b,IAAiBc,GAAM4sB,kBAOpC,SAASt4B,GAAKtC,GACV,OAAOonC,GAAepnC,GAASA,EAAQw9B,GAmB3C,SAAS6J,GAAaC,GAIlBxe,GAASzqB,QAAUipC,EACnBxe,GAASvN,KAAKiiB,IAAY8J,GAG1BH,KASJ,SAASI,GAA+BnzB,GACpC,IAAIozB,EAAc1e,GAAS5b,IAE3B,OADA4b,GAAS5b,IAAiBc,GAAM4sB,kBAAoBxmB,EAC7CozB,EAQX,SAASC,GAAoBvkC,GACzB4lB,GAAS5b,IAAiBhK,EAc9B,SAASwkC,GAAe/kC,GAIpB,IADA,IAAIglC,GAAY,EACPzpC,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,GAAK,EAEpCkpC,GAAezkC,EAAOzE,MAAQypC,GAAY,GAE9C,IAAKA,EACD,OAAOnK,GAGX,IAAIoK,EAAUjlC,EAAO,GACrB,IAASzE,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,GAAK,EACpC0pC,GAAWnf,GAAY9lB,EAAOzE,IAAMyE,EAAOzE,EAAI,GAEnD,OAAO0pC,EASX,SAASC,GAAeC,EAAQC,EAAItG,GAEhC,OADgB2F,GAAeW,GACZD,EAASrf,GAAYsf,GAAMtG,EAASjE,GAG3D,SAASwK,GAAeF,EAAQC,EAAIE,EAAIC,EAAIzG,GAExC,OADgB0G,GAAgBJ,EAAIG,GACjBJ,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMzG,EAASjE,GAGlF,SAAS4K,GAAeN,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAI7G,GAChD,IAAIkG,EAAYQ,GAAgBJ,EAAIG,GAEpC,OADAP,EAAYP,GAAekB,IAAOX,GACfG,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMG,EAAK5f,GAAY6f,GAAM7G,EACxFjE,GAGR,SAAS+K,GAAeT,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIhH,GAExD,OADgBiH,GAAgBX,EAAIG,EAAII,EAAIG,GAExCX,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMG,EAAK5f,GAAY6f,GAAME,EAAK/f,GAAYggB,GACtFhH,EACJjE,GAGR,SAASmL,GAAeb,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIpH,GAChE,IAAIkG,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAE5C,OADAd,EAAYP,GAAeyB,IAAOlB,GAE9BG,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMG,EAAK5f,GAAY6f,GAAME,EAAK/f,GAAYggB,GAAMG,EAC5FngB,GAAYogB,GAAMpH,EACtBjE,GAGR,SAASsL,GAAehB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIvH,GACxE,IAAIkG,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAE5C,OADAd,EAAYQ,GAAgBU,EAAIG,IAAOrB,GAEnCG,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMG,EAAK5f,GAAY6f,GAAME,EAAK/f,GAAYggB,GAAMG,EAC5FngB,GAAYogB,GAAME,EAAKtgB,GAAYugB,GAAMvH,EAC7CjE,GAGR,SAASyL,GAAenB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI1H,GAChF,IAAIkG,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAG5C,OAFAd,EAAYQ,GAAgBU,EAAIG,IAAOrB,GACvCA,EAAYP,GAAe+B,IAAOxB,GAE9BG,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMG,EAAK5f,GAAY6f,GAAME,EAAK/f,GAAYggB,GAAMG,EAC5FngB,GAAYogB,GAAME,EAAKtgB,GAAYugB,GAAME,EAAKzgB,GAAY0gB,GAAM1H,EACpEjE,GAGR,SAAS4L,GAAetB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI7H,GACxF,IAAIkG,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAE5C,OADAd,EAAYe,GAAgBG,EAAIG,EAAIG,EAAIG,IAAO3B,GAE3CG,EAASrf,GAAYsf,GAAME,EAAKxf,GAAYyf,GAAMG,EAAK5f,GAAY6f,GAAME,EAAK/f,GAAYggB,GAAMG,EAC5FngB,GAAYogB,GAAME,EAAKtgB,GAAYugB,GAAME,EAAKzgB,GAAY0gB,GAAME,EAAK5gB,GAAY6gB,GAAM7H,EAC3FjE,GAGR,SAASjN,GAAMrtB,EAAOlD,GAGlB,IAAIixB,EAAgB/tB,EAAQyJ,GACxBskB,GAAiBjjB,GAAM9J,KAAK7F,SAC5B2P,GAAM9J,KAAK+sB,GAAiB,MAEhCnI,GAASmI,GAAiBjxB,EAU9B,SAASupC,GAAUrmC,GACf,OAAOwlB,GAAaxlB,EAAOmxB,IAW/B,SAASmV,GAActmC,GAGnB,OAAOsL,GAAWtL,GAEtB,SAASumC,GAAcC,GAGnB,OAAO5gB,GAASnb,IAAiB+7B,GAGrC,SAAS9I,GAAK19B,GACV,OAAOwlB,GAAaxlB,EAAO4lB,IAE/B,SAAS4U,GAAYx6B,GACjB,OAphHJ,SAASymC,EAAoBzmC,EAAO2M,GAEhC,OAAO8Y,GADKD,GAAaxlB,EAAO2M,IAmhHzB85B,CAAoBzmC,EAAO4lB,IAGtC,SAAS8gB,KAIL,OAAO9gB,GAASA,GAAS5b,OAG7B,SAASk6B,GAAepnC,IAEa,IAA7B8oB,GAAS5b,KACTi6B,KACJ,IAAI0C,EAAe/gB,GAAS5b,IAC5B,GAAI28B,GAAgB/gB,GAASzqB,OACzByqB,GAASA,GAAS5b,OAAoBlN,MAErC,CAAA;;;;;;;;AA5lHT,SAAS8pC,EAAYtjC,EAAGtJ,EAAGu3B,GAMvB,QAASjuB,GAAMA,GAAKtJ,GAAMA,IAAMsJ,IAAMtJ,EAslH7B4sC,CAAYhhB,GAAS+gB,GAAe7pC,GAMzC,OADA8oB,GAAS5b,OACF,GAzkNf,SAAS68B,EAA0Bv6B,EAAcilB,EAAoBuV,EAAU1a,GAC3E,GAAImF,EAAoB,CACpB,IAAI3U,EAAM,8GAAgHkqB,EAAW,sBAAwB1a,EAAY,KAOzK,MANI9f,IACAsQ,GACI,wJAIF,IAAI1X,MAAM0X,IA2jNhBiqB,CAA0Bv6B,GAAcilB,GAAoB3L,GAAS+gB,GAAe7pC,GACpF8oB,GAASA,GAAS5b,OAAoBlN,EAM1C,OAAO,EAGX,SAASiqC,GAAsBjqC,GAE3B,OADAonC,GAAepnC,GACRA,EAGX,SAASmoC,GAAgB+B,EAAMC,GAC3B,IAAIxC,EAAYP,GAAe8C,GAC/B,OAAO9C,GAAe+C,IAASxC,EAGnC,SAASe,GAAgBwB,EAAMC,EAAMC,EAAMC,GACvC,IAAI1C,EAAYQ,GAAgB+B,EAAMC,GACtC,OAAOhC,GAAgBiC,EAAMC,IAAS1C,EAE1C,SAAS2C,KACL,OAAOt8B,GAMX,SAASu8B,GAAqBC,GAC1B,IAAIC,GAA6B3hB,GAASnb,MAAqBmb,GAASnb,SAAwBtN,KAAKmqC,GACrG,GAAIp8B,GAAmB,CACnB,IAAIs8B,EAAwBl8B,GAAWnQ,OAAS,EAC5CssC,EAAsB38B,GAAMunB,iBAAmBvnB,GAAMunB,mBAErDmV,KAD0B18B,GAAMunB,eAAel3B,OAAS2P,GAAMunB,eAAevnB,GAAMunB,eAAel3B,OAAS,IAAM,IAEjHssC,EAAoBtqC,KAAKqqC,EAAuBD,EAA4B,IAiCxF,SAAS7D,GAA8B/hC,GAInC,OAFmBA,EAAUwuB,IAIjC,IA+HWuX,GA/HPC,GAAgBvX,GAChBwX,GAAyBvX,GA6D7B,SAASwX,GAAkBrE,GACvB,OACI7Q,cACA6Q,UAAWA,EACXD,MAAOoE;;;;;;;;AAwGf,SAASG,GAA4Cj/B,EAASi+B,EAAU1a,EAAW2b,GAC/E,IAAInrB,EAAM,8GAAgHkqB,EAAW,sBAAwB1a,EAAY,KAMzK,OALI2b,IACAnrB,GACI,wJAcZ,SAASorB,EAAeprB,EAAK/T,GACzB,IAAIo/B,EAAM,IAAI/iC,MAAM0X,GAEpB,OADAsrB,GAAiBD,EAAKp/B,GACfo/B,EAdAD,CAAeprB,EAAK/T,GAgB/B,SAASq/B,GAAiBD,EAAKp/B,GAC3Bo/B,EAAI3sB,IAAuBzS,EAC3Bo/B,EAAIzsB,IAAgB3S,EAAQs/B,SAAS/oC,KAAKyJ,GAK9C,SAASu/B,GAAmB7hB,GACxB,OAAO,IAAIrhB,MAAM,wDAA0DqhB;;;;;;;OAc/E,SAAS8hB,GAAexiB,EAAMyiB,EAAgBC,GAU1C,IAAIpf,EAAQtD,EAAKsD,MACbqf,EAAoB,KAARrf,EAChB,OAAIqf,IAAcF,GACdziB,EAAKsD,OAAiB,KAARA,EAAsCof,EACpD1iB,EAAK4iB,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4B7iB,EAAM2iB,EAAWxoC,GAClD,OAAkB,KAAb6lB,EAAKsD,SAAuCqf,GAAa3iB,EAAK4iB,WAAazoC,IAC5E6lB,EAAK4iB,UAAYzoC,EAAQ,GAClB,GAOf,SAAS2oC,GAAW9iB,EAAM7lB,GACtB,OAAO6lB,EAAK+iB,MAAM5oC,GAKtB,SAAS6oC,GAAchjB,EAAM7lB,GACzB,OAAO6lB,EAAK+iB,MAAM5oC,GAKtB,SAAS8oC,GAAejjB,EAAM7lB,GAC1B,OAAO6lB,EAAK+iB,MAAM5oC,GAKtB,SAAS+oC,GAAqBljB,EAAM7lB,GAChC,OAAO6lB,EAAK+iB,MAAM5oC,GAKtB,SAASgpC,GAAYnjB,EAAM7lB,GACvB,OAAO6lB,EAAK+iB,MAAM5oC;;;;;;;;AAhJX0nC,GAkCRvuC,EAAQuuC,oBAAsBvuC,EAAQuuC,uBAzBnBA,GAA4B,SAAI,GAAK,WASvDA,GAAkBA,GAA0B,OAAI,GAAK,SAIrDA,GAAkBA,GAAwB,KAAI,GAAK,OAWnDA,GAAkBA,GAA6B,UAAI,GAAK,YAqH5D,IAAIuB,IACAC,oBAAgBxrC,EAChByrC,oBAAgBzrC,EAChB0rC,wBAAoB1rC,EACpB2rC,yBAAqB3rC,EACrB4rC,uBAAmB5rC,EACnB6rC,sBAAkB7rC,EAClB8rC,2BAAuB9rC,EACvB+rC,oBAAgB/rC,EAChBgsC,wBAAoBhsC,EACpBisC,wBAAoBjsC,EACpBksC,iBAAalsC,EACbmsC,gBAAYnsC,EACZosC,wBAAoBpsC,EACpBqsC,iBAAarsC,EACbssC,sBAAkBtsC,EAClBusC,oBAAgBvsC,EAChBwsC,wBAAoBxsC,GAUpBysC,GAAO,aACPC,GAAiB,IAAIrnC;;;;;;;OACzB,SAASsnC,GAAS5mC,GACd,IAAIhI,EAAM2uC,GAAeplC,IAAIvB,GAK7B,OAJKhI,IACDA,EAAM+H,EAAUC,GAAS,IAAM2mC,GAAex1B,KAC9Cw1B,GAAezjC,IAAIlD,EAAOhI,IAEvBA,EAWX,IAAI6uC,GAA6B,cAC7BC,GAAyB,UAWzBC,GAAmB,EACvB,SAASC,GAAqBpmC,GAC1B,GAAIA,GAAQA,EAAKgZ,KAAOitB,GAA4B,CAEhD,IAAII,EAAmC,MAAtBrmC,EAAKsmC,eAAyBtmC,EAAKsmC,gBAAkBxxC,EAAQuuC,kBAAkBkD,MAC5FvmC,EAAKs6B,OAAOxjC,QAAUlB,OAAO4I,KAAKwB,EAAKrD,MAAM7F,OAE7CkJ,EAAKgZ,GADLqtB,EACU,IAAMF,KAGND,GAMlB,OAHIlmC,GAAQA,EAAKgZ,KAAOktB,KACpBlmC,EAAO,MAEJA,GAAQ,KAEnB,SAASwmC,GAAahlB,EAAMxa,EAAKy/B,EAAYhuC,GAEzC,UAAkB,EAAb+oB,EAAKsD,QACL9lB,EAFWwiB,EAAKklB,UAES1/B,EAAIs7B,aAAemE,GAAahuC,IAKlE,SAASkuC,GAAwBnlB,EAAMxa,EAAKy/B,EAAYhuC,GACpD,QAAI+tC,GAAahlB,EAAMxa,EAAKy/B,EAAYhuC,KACpC+oB,EAAKklB,UAAU1/B,EAAIs7B,aAAemE,GAAchuC,GACzC,GAIf,SAASmuC,GAAsBplB,EAAMxa,EAAKy/B,EAAYhuC,GAClD,IAAIgqC,EAAWjhB,EAAKklB,UAAU1/B,EAAIs7B,aAAemE,GACjD,GAAkB,EAAbjlB,EAAKsD,QAAsCxb,GAAam5B,EAAUhqC,GAAQ,CAC3E,IAAIouC,EAAc7/B,EAAIwnB,SAASiY,GAAYtsC,KAC3C,MAAMspC,GAA4CmB,GAASa,mBAAmBjkB,EAAMxa,EAAIs3B,WAAYuI,EAAc,KAAOpE,EAAUoE,EAAc,KAAOpuC,EAAmD,IAA9B,EAAb+oB,EAAKsD,SAG7K,SAASgiB,GAAwBtlB,GAE7B,IADA,IAAIulB,EAAWvlB,EACRulB,GACsB,EAArBA,EAAS//B,IAAIvD,QACbsjC,EAASjiB,OAAS,GAEtBiiB,EAAWA,EAASC,qBAAuBD,EAAShmC,OAG5D,SAASkmC,GAAsCzlB,EAAM0lB,GAEjD,IADA,IAAIH,EAAWvlB,EACRulB,GAAYA,IAAaG,GAC5BH,EAASjiB,OAAS,GAClBiiB,EAAWA,EAASC,qBAAuBD,EAAShmC,OAG5D,SAASomC,GAAc3lB,EAAM8c,EAAW7J,EAAW2S,GAC/C,IAMI,OADAN,GAHgC,SADlBtlB,EAAKxa,IAAIu9B,MAAMjG,GACL76B,MACpB+gC,GAAchjB,EAAM8c,GAAWrC,cAC/Bza,GAEGojB,GAASc,YAAYlkB,EAAM8c,EAAW7J,EAAW2S,GAE5D,MAAOxuC,GAEH4oB,EAAK6lB,KAAKC,aAAa5vB,YAAY9e,IAG3C,SAAS2uC,GAAsB/lB,GAC3B,OAAIA,EAAKzgB,OAEEyjC,GADUhjB,EAAKzgB,OACWygB,EAAKgmB,cAAclJ,WAEjD,KAOX,SAASmJ,GAAajmB,GAElB,OADiBA,EAAKzgB,OAEXygB,EAAKgmB,cAAczmC,OAGnB,KAGf,SAAS2mC,GAAWlmB,EAAMxa,GACtB,OAAoB,UAAZA,EAAIvD,OACR,KAAK,EACD,OAAO+gC,GAAchjB,EAAMxa,EAAIs3B,WAAWqJ,cAC9C,KAAK,EACD,OAAOrD,GAAW9iB,EAAMxa,EAAIs3B,WAAWsJ,YAGnD,SAASC,GAAqB1wC,EAAQgD,GAClC,OAAOhD,EAASA,EAAS,IAAMgD,EAAOA,EAE1C,SAAS2tC,GAAgBtmB,GACrB,QAASA,EAAKzgB,WAAwC,MAA3BygB,EAAKgmB,cAAc/jC,OAElD,SAASskC,GAAevmB,GACpB,SAASA,EAAKzgB,QAAuC,MAA3BygB,EAAKgmB,cAAc/jC,OAEjD,SAASukC,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,KACAC,EAAkB,EAClBC,KAaJ,OAZIH,GACAA,EAAkBhkC,QAAQ,SAAUxJ,GAChC,IAAI4tC,EAAK5vC,EAAOgC,EAAI,GAAIstC,EAAUM,EAAG,GAAIC,EAAYD,EAAG,GACjC,iBAAZN,GACPG,EAAeH,GAAWO,EAC1BH,GAAmBL,GAAcC,IAGjCK,EAAWL,GAAWO,KAIzBJ,eAAgBA,EAAgBE,WAAYA,EAAYD,gBAAiBA,GAEtF,SAASI,GAAalmC,EAAMmmC,GACxB,OAAOnmC,EAAKlD,IAAI,SAAU5G,GACtB,IAAIkC,EACAyE,EACAqE,EAWJ,OAVI1N,MAAMiL,QAAQvI,IACSgL,GAAvB9I,EAAKhC,EAAOF,EAAO,IAAe,GAAI2G,EAAQzE,EAAG,KAGjD8I,EAAQ,EACRrE,EAAQ3G,GAER2G,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuBspC,GACvE9yC,OAAO+B,eAAeyH,EAAOkB,GAAU7H,MAAOiwC,EAAYn6B,cAAc,KAEnE9K,MAAOA,EAAOrE,MAAOA,EAAO4mC,SAAUA,GAAS5mC,MAGhE,SAASupC,GAAuBnnB,EAAMonB,EAAY5hC,GAC9C,IAAI6e,EAAe7e,EAAI6e,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAapiB,QAC0C,IAAlC,SAArBoiB,EAAapiB,QACboiB,EAAa6K,QAAQmY,uBAClBhjB,EAAa6K,QAAQmY,sBAAsBvC,gBACvCxxC,EAAQuuC,kBAAkByF,OAG3BtE,GAAchjB,EAAMxa,EAAI6e,aAAayY,WAAWqJ,mBAP3D,EAWOiB,EAGf,IAAIG,GAAmB,IAAIC,QAC3B,SAASC,GAAkBp0C,GACvB,IAAI4D,EAAQswC,GAAiBpoC,IAAI9L,GAMjC,OALK4D,KACDA,EAAQ5D,EAAQ,WAAc,OAAOixC,MAC/BjxC,QAAUA,EAChBk0C,GAAiBzmC,IAAIzN,EAAS4D,IAE3BA,EAOX,SAASywC,GAAqB1nB,EAAMU,EAAQwB,EAAYylB,EAAahyC,GAElD,IAAX+qB,IACAwB,EAAalC,EAAKxY,SAAS0a,WAAWgkB,GAAWlmB,EAAMA,EAAKxa,IAAIoiC,sBAEpEC,GAAwB7nB,EAAMU,EAAQ,EAAGV,EAAKxa,IAAIu9B,MAAMztC,OAAS,EAAG4sB,EAAYylB,EAAahyC,GAEjG,SAASkyC,GAAwB7nB,EAAMU,EAAQwI,EAAY4e,EAAU5lB,EAAYylB,EAAahyC,GAC1F,IAAK,IAAIR,EAAI+zB,EAAY/zB,GAAK2yC,EAAU3yC,IAAK,CACzC,IAAI4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,GACT,GAAhB4yC,EAAQ9lC,OACR+lC,GAAgBhoB,EAAM+nB,EAASrnB,EAAQwB,EAAYylB,EAAahyC,GAGpER,GAAK4yC,EAAQE,YAGrB,SAASC,GAA0BloB,EAAMmoB,EAAgBznB,EAAQwB,EAAYylB,EAAahyC,GAEtF,IADA,IAAIyyC,EAAWpoB,EACRooB,IAAa9B,GAAgB8B,IAChCA,EAAWA,EAAS7oC,OAMxB,IAJA,IAAIovB,EAAWyZ,EAAS7oC,OACpB8oC,EAAYpC,GAAamC,GAEzBN,EAAWO,EAAUvL,UAAYuL,EAAUJ,WACtC9yC,EAFQkzC,EAAUvL,UAAY,EAEd3nC,GAAK2yC,EAAU3yC,IAAK,CACzC,IAAI4yC,EAAUpZ,EAASnpB,IAAIu9B,MAAM5tC,GAC7B4yC,EAAQI,iBAAmBA,GAC3BH,GAAgBrZ,EAAUoZ,EAASrnB,EAAQwB,EAAYylB,EAAahyC,GAGxER,GAAK4yC,EAAQE,WAEjB,IAAKtZ,EAASpvB,OAAQ,CAElB,IAAI+oC,EAAiBtoB,EAAK6lB,KAAK0C,iBAAiBJ,GAChD,GAAIG,EACA,IAASnzC,EAAI,EAAGA,EAAImzC,EAAehzC,OAAQH,IACvCqzC,GAAqBxoB,EAAMsoB,EAAenzC,GAAIurB,EAAQwB,EAAYylB,EAAahyC,IAK/F,SAASqyC,GAAgBhoB,EAAM+nB,EAASrnB,EAAQwB,EAAYylB,EAAahyC,GACrE,GAAoB,EAAhBoyC,EAAQ9lC,MACRimC,GAA0BloB,EAAM+nB,EAAQU,UAAUtuC,MAAOumB,EAAQwB,EAAYylB,EAAahyC,OAEzF,CACD,IAAI+yC,EAAKxC,GAAWlmB,EAAM+nB,GAe1B,GAde,IAAXrnB,GAAmD,SAAhBqnB,EAAQ9lC,OACnB,GAAvB8lC,EAAQY,cAEkB,GAAvBZ,EAAQY,cACRH,GAAqBxoB,EAAM0oB,EAAIhoB,EAAQwB,EAAYylB,EAAahyC,GAEzC,GAAvBoyC,EAAQY,cAERH,GADexF,GAAchjB,EAAM+nB,EAAQjL,WAAWrC,cACvBiO,EAAIhoB,EAAQwB,EAAYylB,EAAahyC,IAIxE6yC,GAAqBxoB,EAAM0oB,EAAIhoB,EAAQwB,EAAYylB,EAAahyC,GAEhD,SAAhBoyC,EAAQ9lC,MAER,IADA,IAAI2mC,EAAgB5F,GAAchjB,EAAM+nB,EAAQjL,WAAW+L,cAAcC,eAChEx4B,EAAI,EAAGA,EAAIs4B,EAActzC,OAAQgb,IACtCo3B,GAAqBkB,EAAct4B,GAAIoQ,EAAQwB,EAAYylB,EAAahyC,GAG5D,EAAhBoyC,EAAQ9lC,QAAgC8lC,EAAQ7Y,QAAQv2B,MACxDkvC,GAAwB7nB,EAAMU,EAAQqnB,EAAQjL,UAAY,EAAGiL,EAAQjL,UAAYiL,EAAQE,WAAY/lB,EAAYylB,EAAahyC,IAI1I,SAAS6yC,GAAqBxoB,EAAMkmB,EAAYxlB,EAAQwB,EAAYylB,EAAahyC,GAC7E,IAAI6R,EAAWwY,EAAKxY,SACpB,OAAQkZ,GACJ,KAAK,EACDlZ,EAAS4c,YAAYlC,EAAYgkB,GACjC,MACJ,KAAK,EACD1+B,EAASkI,aAAawS,EAAYgkB,EAAYyB,GAC9C,MACJ,KAAK,EACDngC,EAASma,YAAYO,EAAYgkB,GACjC,MACJ,KAAK,EACDvwC,EAAO2B,KAAK4uC,IAIxB,IAAI6C,GAAe,kBACnB,SAASC,GAAerwC,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAIswC,EAAQtwC,EAAKswC,MAAMF,IACvB,OAAQE,EAAM,GAAIA,EAAM,IAE5B,OAAQ,GAAItwC,GAEhB,SAASuwC,GAAiBlc,GAEtB,IADA,IAAI/qB,EAAQ,EACH9M,EAAI,EAAGA,EAAI63B,EAAS13B,OAAQH,IACjC8M,GAAS+qB,EAAS73B,GAAG8M,MAEzB,OAAOA,EA2CX,SAASknC,GAAkBvmC,GACvB,OAAY,MAALA,EAAYA,EAAEtK,WAAa;;;;;;;;AA2BtC,SAAS8wC,GAAgBC,GACrB,IAAI7qC,EAAO6qC,EAAoB7qC,KAC3B8qC,EAAYD,EAAoB7X,MAChC+X,EAAiBF,EAAoB5jC,WACrC+jC,KACAhkC,GACAhH,KAAMA,EACNuyB,SAAU,KACV19B,QAASg2C,EAAoBh2C,QAC7B86B,SAAUkb,EAAoBlb,UAAY,KAC1CvB,aAAcyc,EAAoBzc,cAAgB,KAClDJ,eAAgB6c,EAAoB7c,gBAAkB,KACtDE,sBAAuB2c,EAAoB3c,uBAAyB,KACpEuO,WAAYoO,EAAoBpO,YAAc,KAC9ClG,OAAQ0U,GAAaJ,EAAoBtU,OAAQyU,GACjDA,eAAgBA,EAChBzV,QAAS0V,GAAaJ,EAAoBtV,SAC1CnsB,aAAcg9B,GAAqByE,EAAoBzhC,eAAiB,KACxE0pB,SAAU+X,EAAoB/X,UAAY,KAC1CvsB,OAAQvG,EAAK3J,UAAU60C,UAAY,KACnC1kC,QAASxG,EAAK3J,UAAU80C,WAAa,KACrC9jC,iBAAkBrH,EAAK3J,UAAU+0C,oBAAsB,KACvD7jC,oBAAqBvH,EAAK3J,UAAUg1C,uBAAyB,KAC7D5jC,cAAezH,EAAK3J,UAAUi1C,iBAAmB,KACjD3jC,iBAAkB3H,EAAK3J,UAAUk1C,oBAAsB,KACvD1jC,UAAW7H,EAAK3J,UAAUkpB,aAAe,KACzCgV,OAAQsW,EAAoBW,kBAAoB12C,EAAQqH,wBAAwBsvC,OAChFpX,cAAe0W,EACX,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3E1rC,IAAIqsC,KACT,KACJpX,SAAUwW,EACN,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAWzrC,IAAIssC,KACrF,KACJrkB,UAAWujB,EAAoBvjB,UAC/B2L,UAAW4X,EAAoB5X,WAAa,KAC5C2Y,SAAUf,EAAoBe,UAAY,MAE1CC,EAAUhB,EAAoBe,SAElC,OADAC,GAAWA,EAAQ1nC,QAAQ,SAAUvF,GAAM,OAAOA,EAAGoI,KAC9CA,EAEX,SAAS0kC,GAAoB1rC,GAKzB,OAJUA,EAAK8rC,gBAAkB9rC,EAAK+rC,eAM1C,SAASJ,GAAe3rC,GAKpB,OAJUA,EAAKgsC,UAMnB,SAASC,GAAejlC,GASpB,OAPIhH,KAAMgH,EAAIhH,KACVksC,UAAWllC,EAAIklC,cACfC,aAAcnlC,EAAImlC,iBAClB1yC,QAASuN,EAAIvN,YACb3E,QAASkS,EAAIlS,YACbs3C,wBAAyB,MAIjC,IAAIC,MA+CJ,SAASpB,GAAa5mC,EAAKioC,GACvB,GAAW,MAAPjoC,EACA,OAAOgoC,GACX,IAAIE,KACJ,IAAK,IAAIC,KAAenoC,EACpB,GAAIA,EAAIpO,eAAeu2C,GAAc,CACjC,IAAInV,EAAahzB,EAAImoC,GACjBC,EAAepV,EACfthC,MAAMiL,QAAQq2B,KACdoV,EAAepV,EAAW,GAC1BA,EAAaA,EAAW,IAE5BkV,EAAUlV,GAAcmV,EACpBF,IACCA,EAAUG,GAAgBD,GAIvC,OAAOD,EAgBX,IAAIG,GAAkB9B,GAetB,SAAS+B,GAAWC,GAChB,OACIzyC,KAAMyyC,EAAQzyC,KACdtF,QAAS+3C,EAAQ/3C,QACjBg4C,MAAuB,IAAjBD,EAAQC,KACdhlC,UAAW+kC,EAAQ5sC,KAAK3J,UAAUkpB,aAAe;;;;;;;OA0BzD,SAASutB,GAAyBC,GAyF9B,IAxFA,IAAIC,EARR,SAASC,EAAajtC,GAClB,OAAOpK,OAAOkgB,eAAe9V,EAAK3J,WAAWD,YAO7B62C,CAAaF,EAAW/sC,MACpCktC,EAAU,WACV,IAAIC,EAAKxyC,EACLyyC,OAAW/zC,EACf,GAhBR,SAASg0C,EAAeN,GAEpB,MAA+B,mBADrBA,EACQpd,SAcV0d,CAAeN,GACfK,EAAWJ,EAAUlB,gBAAkBkB,EAAUjB,mBAEhD,CACD,GAAIiB,EAAUlB,eACV,MAAM,IAAIjrC,MAAM,wCAEpBusC,EAAWJ,EAAUjB,eAEzB,IAAIuB,EAAUN,EAAUO,UAOxB,GANID,IAEAt3B,GAAe+2B,EAAWxW,OAAQ+W,EAAQ/W,QAC1CvgB,GAAe+2B,EAAW/B,eAAgBsC,EAAQtC,gBAClDh1B,GAAe+2B,EAAWxX,QAAS+X,EAAQ/X,UAE3C6X,EAAU,CAEV,IAAII,EAAqBT,EAAW3e,aAChCqf,EAAsBL,EAAShf,aAC/Bqf,IAEIV,EAAW3e,aADXof,EAC0B,SAAUxR,EAAgB0R,GAChDD,EAAoBzR,EAAgB0R,GACpCF,EAAmBxR,EAAgB0R,IAIbD,GAIlCz3B,GAAe+2B,EAAWxW,OAAQ6W,EAAS7W,QAC3CvgB,GAAe+2B,EAAW/B,eAAgBoC,EAASpC,gBACnDh1B,GAAe+2B,EAAWxX,QAAS6X,EAAS7X,SAG5CwX,EAAWxlC,oBACPwlC,EAAWxlC,qBAAuB6lC,EAAS7lC,oBAC/CwlC,EAAW1lC,iBAAmB0lC,EAAW1lC,kBAAoB+lC,EAAS/lC,iBACtE0lC,EAAWplC,iBAAmBolC,EAAWplC,kBAAoBylC,EAASzlC,iBACtEolC,EAAWtlC,cAAgBslC,EAAWtlC,eAAiB2lC,EAAS3lC,cAChEslC,EAAWvmC,QAAUumC,EAAWvmC,SAAW4mC,EAAS5mC,QACpDumC,EAAWllC,UAAYklC,EAAWllC,WAAaulC,EAASvlC,UACxDklC,EAAWxmC,OAASwmC,EAAWxmC,QAAU6mC,EAAS7mC,OAElD,IAAIqlC,EAAWwB,EAASxB,SACxB,GAAIA,EACA,IACI,IAAK,IAAI+B,EAAax1C,EAASyzC,GAAWgC,EAAeD,EAAWn1C,QAASo1C,EAAal1C,KAAMk1C,EAAeD,EAAWn1C,OAAQ,CAC9H,IAAIqzC,EAAU+B,EAAan1C,MACvBozC,GAAWA,IAAYiB,IACvBjB,EAAQkB,IAIpB,MAAOc,GAASV,GAAQp0C,MAAO80C,GAC/B,QACI,IACQD,IAAiBA,EAAal1C,OAASiC,EAAKgzC,EAAWG,SAASnzC,EAAG5D,KAAK42C,GAEhF,QAAU,GAAIR,EAAK,MAAMA,EAAIp0C,OAGrC,MAAO,QAIP,IAAIg1C,EAAiBf,EAAU32C,UAC3B03C,IACAhB,EAAWxlC,oBACPwlC,EAAWxlC,qBAAuBwmC,EAAexmC,oBACrDwlC,EAAW1lC,iBACP0lC,EAAW1lC,kBAAoB0mC,EAAe1mC,iBAClD0lC,EAAWplC,iBACPolC,EAAWplC,kBAAoBomC,EAAepmC,iBAClDolC,EAAWtlC,cAAgBslC,EAAWtlC,eAAiBsmC,EAAetmC,cACtEslC,EAAWvmC,QAAUumC,EAAWvmC,SAAWunC,EAAevnC,QAC1DumC,EAAWllC,UAAYklC,EAAWllC,WAAakmC,EAAelmC,UAC9DklC,EAAWxmC,OAASwmC,EAAWxmC,QAAUwnC,EAAexnC,QAGhEymC,EAAYp3C,OAAOkgB,eAAek3B,IAE/BA,GAEa,UADFE;;;;;;;OAatB,IAAIc,GAAiB,iBAqBrB,SAASC,GAAmBlB,GACxB,IAAImB,EAA2BnB,EAAW/B,eACtCmD,EAAQpB,EAAW/sC,KAAK3J,UACxB62C,EAAU,SAAUT,GACpB,GAAIyB,EAAyBj4C,eAAew2C,GAAe,CAOvD,IANA,IAAID,EAAc0B,EAAyBzB,GACvC2B,EAAkBJ,GAAiBxB,EAGnC6B,OAAmBh1C,EACnBi1C,EAAaH,GACTE,GAAoBC,GACxB14C,OAAOkgB,eAAew4B,KAAgB14C,OAAOkgB,eAAelgB,OAAOS,YACnEg4C,EAAmBz4C,OAAO4B,yBAAyB82C,EAAY9B,GAC/D8B,EAAa14C,OAAOkgB,eAAew4B,GAEvC,IACIC,EAAWF,GAAoBA,EAAiB/rC,IAEpD1M,OAAO+B,eAAew2C,EAAO3B,GACzB7rC,IAJS0tC,GAAoBA,EAAiB1tC,MAKzC4tC,OAAWl1C,EAAY,WAAc,OAAO7D,KAAK44C,KACtD9rC,IAAK,SAAU7J,GACX,IAAI+1C,EAAgBh5C,KAAKw4C,IACpBQ,IACDA,KAEA54C,OAAO+B,eAAenC,KAAMw4C,IAAkBv1C,MAAO+1C,EAAeC,UAAU,KAElF,IAAIhkC,GAAiBjV,KAAKS,eAAem4C,GACrCM,EAAgBF,EAAc/B,GAC9BiC,EACAA,EAAcnkC,aAAe9R,EAG7B+1C,EAAc/B,GACV,IAAIpiC,GAAa7U,KAAK44C,GAAkB31C,EAAOgS,GAEnDA,EAEA7U,OAAO+B,eAAenC,KAAM44C,GAAmB31C,MAAOA,EAAOg2C,UAAU,IAGvEj5C,KAAK44C,GAAmB31C,EAExB81C,GACAA,EAASx3C,KAAKvB,KAAMiD,QAKxC,IAAK,IAAIg0C,KAAgByB,EACrBhB,EAAQT,GAKa,MAArBM,EAAWxmC,SACXwmC,EAAWxmC,OAASooC,GAAiB5B,EAAWxmC,SAEpDwmC,EAAWvmC,QAAUmoC,GAAiB5B,EAAWvmC,SAErD,SAASmoC,GAAiBC,GACtB,OAAO,WACH,IAAIJ,EAAgBh5C,KAAKw4C,IACJ,MAAjBQ,IACAh5C,KAAKq5C,YAAYL,GACjBh5C,KAAKw4C,IAAkB,MAEvBY,GACAA,EAAa53C,MAAMxB;;;;;;;OAgB/B,IAAIs5C,GACA,SAASA,GAA6BC,EAAiBC,GACnDx5C,KAAKu5C,gBAAkBA,EACvBv5C,KAAKw5C,mBAAqBA,GAIlC,SAASC,KACL,MAAM,IAAIpuC,MAAM,kCAYpB,IAAIquC,GAA0B,WAC1B,SAASA,KAsCT,OAhCAA,EAAS74C,UAAU84C,kBAAoB,SAAUC,GAAc,MAAMH,MAIrEC,EAAS74C,UAAUg5C,mBAAqB,SAAUD,GAAc,MAAMH,MAItEC,EAAS74C,UAAUi5C,kCAAoC,SAAUF,GAC7D,MAAMH,MAKVC,EAAS74C,UAAUk5C,mCAAqC,SAAUH,GAC9D,MAAMH,MAKVC,EAAS74C,UAAUm5C,WAAa,aAIhCN,EAAS74C,UAAUo5C,cAAgB,SAAUzvC,KAI7CkvC,EAAS74C,UAAUq5C,YAAc,SAAUN,KAChCn4C,GACP4f,MACDq4B,GAtCsB,GA8CzBS,GAAmB,IAAIj2C,EAAe,mBAMtCk2C,GACA,SAASA,OAoBTC,GACA,SAASA,OAITC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwBzyC,GAC7B,IAAIvE,EAAQ8H,MAAM,kCAAoC1B,EAAU7B,GAAa,kDAE7E,OADAvE,EAAMi3C,IAAmB1yC,EAClBvE,EAEX,IAAIi3C,GAAkB,cAClBC,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8B55C,UAAU65C,wBAA0B,SAAU5yC,GACxE,MAAMyyC,GAAwBzyC,IAE3B2yC,EANuC,GAQ9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBjvC,KAAO,IAAI+uC,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCp+B,EAAWiK,EAASo0B,GACzD76C,KAAKymB,QAAUA,EACfzmB,KAAK66C,UAAYA,EACjB76C,KAAK86C,WAAa,IAAI5xC,IACtB,IAAK,IAAI/H,EAAI,EAAGA,EAAIqb,EAAUlb,OAAQH,IAAK,CACvC,IAAI9B,EAAUmd,EAAUrb,GACxBnB,KAAK86C,WAAWhuC,IAAIzN,EAAQ07C,cAAe17C,IAanD,OAVAu7C,EAAgC/5C,UAAU65C,wBAA0B,SAAU5yC,GAC1E,IAAIzI,EAAUW,KAAK86C,WAAW3vC,IAAIrD,GAIlC,IAHKzI,GAAWW,KAAKymB,UACjBpnB,EAAUW,KAAKymB,QAAQi0B,wBAAwB5yC,KAE9CzI,EACD,MAAMk7C,GAAwBzyC,GAElC,OAAO,IAAIkzC,GAA8B37C,EAASW,KAAK66C,YAEpDD,EApByC,GAsBhDI,GAA+C,SAAUC,GAEzD,SAASD,EAA8B37C,EAASmrB,GAC5C,IAAItS,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAQjC,OAPAkY,EAAM7Y,QAAUA,EAChB6Y,EAAMsS,SAAWA,EACjBtS,EAAMhR,SAAW7H,EAAQ6H,SACzBgR,EAAM6iC,cAAgB17C,EAAQ07C,cAC9B7iC,EAAMgjC,mBAAqB77C,EAAQ67C,mBACnChjC,EAAM6oB,OAAS1hC,EAAQ0hC,OACvB7oB,EAAM6nB,QAAU1gC,EAAQ0gC,QACjB7nB,EAKX,OAfAxX,EAAUs6C,EAA+BC,GAYzCD,EAA8Bn6C,UAAUC,OAAS,SAAUwO,EAAUilC,EAAkB4G,EAAoB3wB,GACvG,OAAOxqB,KAAKX,QAAQyB,OAAOwO,EAAUilC,EAAkB4G,EAAoB3wB,GAAYxqB,KAAKwqB,WAEzFwwB,EAhBuC,CAiBhDV,IAwBEc,GACA,SAASA,GAAWC,GAChBr7C,KAAKq7C,cAAgBA,GAoBzBC,GACA,SAASA,OAOTC,GACA,SAASA,OAgBTC,GACA,SAASA,OAITC,GAAkB,IAAIvyC,IAoFtBwyC,GAA8B,SAAUT,GASxC,SAASS,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAIzjC,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAEjC,OADAkY,EAAM0jC,UAAYD,EACXzjC,EAkDX,OA9DAxX,EAAUg7C,EAAcT,GAkBxBS,EAAa76C,UAAUg7C,KAAO,SAAU54C,GAASg4C,EAAOp6C,UAAUmC,KAAKzB,KAAKvB,KAAMiD,IASlFy4C,EAAa76C,UAAUu/B,UAAY,SAAU0b,EAAiBv4C,EAAOw4C,GACjE,IAAIC,EACAC,EAAU,SAAU7N,GAAO,OAAO,MAClC8N,EAAa,WAAc,OAAO,MAClCJ,GAA8C,iBAApBA,GAC1BE,EAAch8C,KAAK47C,UAAY,SAAU34C,GACrCk5C,WAAW,WAAc,OAAOL,EAAgB94C,KAAKC,MACrD,SAAUA,GAAS64C,EAAgB94C,KAAKC,IACxC64C,EAAgBv4C,QAChB04C,EAAUj8C,KAAK47C,UAAY,SAAUxN,GAAO+N,WAAW,WAAc,OAAOL,EAAgBv4C,MAAM6qC,MAC9F,SAAUA,GAAO0N,EAAgBv4C,MAAM6qC,KAE3C0N,EAAgBC,WAChBG,EAAal8C,KAAK47C,UAAY,WAAcO,WAAW,WAAc,OAAOL,EAAgBC,cACxF,WAAcD,EAAgBC,eAItCC,EAAch8C,KAAK47C,UAAY,SAAU34C,GAASk5C,WAAW,WAAc,OAAOL,EAAgB74C,MAC9F,SAAUA,GAAS64C,EAAgB74C,IACnCM,IACA04C,EACIj8C,KAAK47C,UAAY,SAAUxN,GAAO+N,WAAW,WAAc,OAAO54C,EAAM6qC,MAAc,SAAUA,GAAO7qC,EAAM6qC,KAEjH2N,IACAG,EACIl8C,KAAK47C,UAAY,WAAcO,WAAW,WAAc,OAAOJ,OAAoB,WAAcA,OAG7G,IAAIK,EAAOnB,EAAOp6C,UAAUu/B,UAAU7+B,KAAKvB,KAAMg8C,EAAaC,EAASC,GAIvE,OAHIJ,aAA2Bj8C,EAAKw8C,cAChCP,EAAgBphC,IAAI0hC,GAEjBA,GAEJV,EA/DsB,CAgE/B77C,EAAKy8C,SAiCHC,GAA2B,WAC3B,SAASA,IACLv8C,KAAKqlC,OAAQ,EACbrlC,KAAKw8C,YACLx8C,KAAKy8C,QAAU,IAAIf,GACnB17C,KAAKsB,OAAS,EA0DlB,OApDAi7C,EAAU17C,UAAUgJ,IAAM,SAAUT,GAAM,OAAOpJ,KAAKw8C,SAAS3yC,IAAIT,IAKnEmzC,EAAU17C,UAAU67C,OAAS,SAAUtzC,GACnC,OAAOpJ,KAAKw8C,SAASE,OAAOtzC,IAMhCmzC,EAAU17C,UAAU8b,KAAO,SAAUvT,GACjC,OAAOpJ,KAAKw8C,SAAS7/B,KAAKvT,IAM9BmzC,EAAU17C,UAAU87C,OAAS,SAAUvzC,EAAIwzC,GACvC,OAAO58C,KAAKw8C,SAASG,OAAOvzC,EAAIwzC,IAMpCL,EAAU17C,UAAU8N,QAAU,SAAUvF,GAAMpJ,KAAKw8C,SAAS7tC,QAAQvF,IAKpEmzC,EAAU17C,UAAU0kB,KAAO,SAAUnc,GACjC,OAAOpJ,KAAKw8C,SAASj3B,KAAKnc,IAE9BmzC,EAAU17C,UAAUg8C,QAAU,WAAc,OAAO78C,KAAKw8C,SAASxwC,SACjEuwC,EAAU17C,UAAUiI,KAAuB,WAAc,OAAO9I,KAAKw8C,SAAS1zC,QAC9EyzC,EAAU17C,UAAUyD,SAAW,WAAc,OAAOtE,KAAKw8C,SAASl4C,YAClEi4C,EAAU17C,UAAUi8C,MAAQ,SAAU9yC,GAClChK,KAAKw8C,SAgBb,SAASO,EAAUC,GACf,OAAOA,EAAKL,OAAO,SAAUM,EAAMznC,GAC/B,IAAI0nC,EAAW38C,MAAMiL,QAAQgK,GAAQunC,EAAUvnC,GAAQA,EACvD,OAAOynC,EAAKx5C,OAAOy5C;;;;;;;OAnBHH,CAAU/yC,GAC1BhK,KAAKqlC,OAAQ,EACbrlC,KAAKsB,OAAStB,KAAKw8C,SAASl7C,OAC5BtB,KAAKm9C,KAAOn9C,KAAKw8C,SAASx8C,KAAKsB,OAAS,GACxCtB,KAAKoH,MAAQpH,KAAKw8C,SAAS,IAE/BD,EAAU17C,UAAUu8C,gBAAkB,WAAcp9C,KAAKy8C,QAAQZ,KAAK77C,OAEtEu8C,EAAU17C,UAAUuyB,SAAW,WAAcpzB,KAAKqlC,OAAQ,GAE1DkX,EAAU17C,UAAU+oB,QAAU,WAC1B5pB,KAAKy8C,QAAQV,WACb/7C,KAAKy8C,QAAQnc,eAEVic,EA/DmB,GAuF1Bc,GACA,SAASA,OAITC,IACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAWC,GACvC39C,KAAK09C,UAAYA,EACjB19C,KAAK49C,QAAUD,GAAUL,GAiC7B,OA/BAG,EAAuB58C,UAAUgjC,KAAO,SAAUga,GAE9C,OADkB79C,KAAK09C,qBAAqBhE,GACvB15C,KAAK89C,YAAYD,GAAQ79C,KAAK+9C,eAAeF,IAEtEJ,EAAuB58C,UAAUk9C,eAAiB,SAAUF,GACxD,IAAI3lC,EAAQlY,KACRmF,EAAKhC,EAAO06C,EAAK1Y,MAhCZ,KAgC+B,GAAI5lC,EAAS4F,EAAG,GAAI64C,EAAa74C,EAAG,GAI5E,YAHmBtB,IAAfm6C,IACAA,EAAa,WAEVC,OAAOC,OAAO3+C,GAChB+J,KAAK,SAAU/J,GAAU,OAAOA,EAAOy+C,KACvC10C,KAAK,SAAUkB,GAAQ,OAAO2zC,GAAc3zC,EAAMjL,EAAQy+C,KAC1D10C,KAAK,SAAUkB,GAAQ,OAAO0N,EAAMwlC,UAAU7D,mBAAmBrvC,MAE1EizC,EAAuB58C,UAAUi9C,YAAc,SAAUD,GACrD,IAAI14C,EAAKhC,EAAO06C,EAAK1Y,MA1CZ,KA0C+B,GAAI5lC,EAAS4F,EAAG,GAAI64C,EAAa74C,EAAG,GACxEi5C,EA1Ce,YA+CnB,YAJmBv6C,IAAfm6C,IACAA,EAAa,UACbI,EAAqB,IAElBH,OAAOC,OAAOl+C,KAAK49C,QAAQL,kBAAoBh+C,EAASS,KAAK49C,QAAQJ,mBACvEl0C,KAAK,SAAU/J,GAAU,OAAOA,EAAOy+C,EAAaI,KACpD90C,KAAK,SAAUjK,GAAW,OAAO8+C,GAAc9+C,EAASE,EAAQy+C,MAEhDv8C,GACrB4f,KACAjf,EAAQ,EAAGsI,KACXnI,EAAW,qBAAsBm3C,GAAU2D,MAC5CI,GAnCoC,GAsC3C,SAASU,GAAcl7C,EAAOo7C,EAAYL,GACtC,IAAK/6C,EACD,MAAM,IAAIoI,MAAM,gBAAkB2yC,EAAa,SAAWK,EAAa,KAE3E,OAAOp7C;;;;;;;OAsBX,IA+LWq7C,GA/LPC,GACA,SAASA,OA8BTC,GACA,SAASA,OAYTC,GAAyB,SAAUxD,GAEnC,SAASwD,IACL,OAAkB,OAAXxD,GAAmBA,EAAOz5C,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAU+9C,EAASxD,GAIZwD,EALiB,CAM1BnzB,IA0DEozB,GAAiC,SAAUzD,GAE3C,SAASyD,IACL,OAAkB,OAAXzD,GAAmBA,EAAOz5C,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUg+C,EAAiBzD,GAIpByD,EALyB,CAMlCD,IAoBEE,GACA,SAASA,GAAoBn7B,EAAIzb,EAAa62C,EAAW9N,EAAehM,EAAQ+Z,GAC5E7+C,KAAKwjB,GAAKA,EACVxjB,KAAK+H,YAAcA,EACnB/H,KAAK4+C,UAAYA,EACjB5+C,KAAK8wC,cAAgBA,EACrB9wC,KAAK8kC,OAASA,EACd9kC,KAAK6+C,WAAaA,GAOtBC,GACA,SAASA,OAOTC,GACA,SAASA,OAmBTC,IAfuB,IAAI96C,EAAe,wBAgB1C,SAAS86C,QASTC,GACA,SAASA;;;;;;;QAIFX,GASRh/C,EAAQg/C,sBAAwBh/C,EAAQg/C,yBALnBA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IAAIY,GACA,SAASA,OAYTC,GAA2B,WAC3B,SAASV,EAAQW,EAAOpwC,GACpBhP,KAAKo/C,MAAQA,EACbp/C,KAAKq/C,QAAU,KACfr/C,KAAKs/C,kBAAoB,KAIzBt/C,KAAKu/C,WAAa,KAClBv/C,KAAKgP,QAAUA,EAiNnB,OA9MAyvC,EAAQ59C,UAAUw8B,qBAAuB,SAAUrR,EAAMhd,GACrDhP,KAAKo/C,MAAQpzB,EACbhsB,KAAKgP,QAAUA,GAEnB5O,OAAO+B,eAAes8C,EAAQ59C,UAAW,aACrCsK,IAAK,WACD,OAAoD,KAAxB,GAApBnL,KAAKo/C,MAAMnvC,MAEvB6I,YAAY,EACZC,cAAc,IAElB0lC,EAAQ59C,UAAU+oB,QAAU,WACpB5pB,KAAKs/C,mBAAqBjX,GAAaroC,KAAKo/C,SAC5Cp/C,KAAKs/C,kBAAkBE,OAAOx/C,KAAKs/C,kBAAkBp1C,QAAQlK,OAC7DA,KAAKs/C,kBAAoB,MAE7BzwB,GAAa7uB,KAAKo/C,QAEtBX,EAAQ59C,UAAUwR,UAAY,SAAUotC,GAAYjgB,GAAex/B,KAAKo/C,MAAOK,IAmC/EhB,EAAQ59C,UAAU6+C,aAAe,WAAcpgB,GAAct/B,KAAKo/C,QAsDlEX,EAAQ59C,UAAU2+C,OAAS,WAAcx/C,KAAKo/C,MAAMnvC,MAAU,GAyD9DwuC,EAAQ59C,UAAU8+C,SAAW,WAAc3/C,KAAKo/C,MAAMnvC,KAAU,GAsBhEwuC,EAAQ59C,UAAUkpC,cAAgB,WAC9B,IAAI1T,EAAkBO,KAClBP,EAAgBwE,OAChBxE,EAAgBwE,QAEpBkP,GAAc/pC,KAAKgP,SACfqnB,EAAgB9kB,KAChB8kB,EAAgB9kB,OASxBktC,EAAQ59C,UAAU++C,eAAiB,YA/8EvC,SAASA,EAAe93C,GACpB4vB,IAAqB,EACrB,IACIqS,GAAcjiC,GAElB,QACI4vB,IAAqB,GAy8EwBkoB,CAAe5/C,KAAKgP,UACrEyvC,EAAQ59C,UAAUg/C,yBAA2B,SAAUC,GAAS9/C,KAAKs/C,kBAAoBQ,GACzFrB,EAAQ59C,UAAUk/C,iBAAmB,WAAc//C,KAAKq/C,QAAU,MAClEZ,EAAQ59C,UAAUm/C,eAAiB,SAAUC,GAAUjgD,KAAKq/C,QAAUY,GAC/DxB,EA1NmB,GA6N1ByB,GAA6B,SAAUjF,GAEvC,SAASiF,EAAYd,GACjB,IAAIlnC,EAAQ+iC,EAAO15C,KAAKvB,KAAMo/C,EAAO,OAASp/C,KAE9C,OADAkY,EAAMknC,MAAQA,EACPlnC,EAIX,OARAxX,EAAUw/C,EAAajF,GAMvBiF,EAAYr/C,UAAUkpC,cAAgB,WAAcC,GAAwBhqC,KAAKo/C,QACjFc,EAAYr/C,UAAU++C,eAAiB,YA58E3C,SAASO,EAAyB1yB,GAC9BiK,IAAqB,EACrB,IACIsS,GAAwBvc,GAE5B,QACIiK,IAAqB,GAs8E4ByoB,CAAyBngD,KAAKo/C,QAC5Ec,EATqB,CAU9Bf,IASEiB,GAA4C,SAAUnF,GAEtD,SAASoF,IACL,OAAkB,OAAXpF,GAAmBA,EAAOz5C,MAAMxB,KAAMqB,YAAcrB,KAO/D,OATAU,EAAU2/C,EAA6BpF,GAIvCoF,EAA4Bx/C,UAAU65C,wBAA0B,SAAU5yC,GAGtE,OAAO,IAAIw4C,GADQx4C,EAAUwuC,iBAG1B+J,EAVoC,CAW7C1F;;;;;;;OACF,SAAS4F,GAAW12C,GAChB,IAAI22C,KACJ,IAAK,IAAIC,KAAe52C,EAChBA,EAAIpJ,eAAeggD,IAEnBD,EAAMl9C,MAAOuC,SADEgE,EAAI42C,GACcC,aAAcD,IAGvD,OAAOD,EAKX,IAAIG,GAAe,IAAIz8C,EAAe,sBAAwBN,WAAY,OAAQvE,QAAS,WAAc,OAAO2uC,GAAkBriC,GAAOi1C,QAKrIA,GAAY,IAAI18C,EAAe,mBAAqBN,WAAY,OAAQvE,QAAS,WAAc,OAAOwhD,sBAAsBt7C,KAAK8C,WAIjIi4C,GAAoC,SAAUrF,GAE9C,SAAS6F,EAAoBC,GACzB,IAAI7oC,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAKjC,OAJAkY,EAAM6oC,aAAeA,EACrB7oC,EAAM6iC,cAAgBgG,EAAav2C,KACnC0N,EAAMhR,SAAW65C,EAAajvB,UAAU,GAAG,GAC3C5Z,EAAMgjC,sBACChjC,EAqFX,OA5FAxX,EAAUogD,EAAqB7F,GAS/B76C,OAAO+B,eAAe2+C,EAAoBjgD,UAAW,UACjDsK,IAAK,WACD,OAAOo1C,GAAWvgD,KAAK+gD,aAAahgB,SAExCjoB,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe2+C,EAAoBjgD,UAAW,WACjDsK,IAAK,WACD,OAAOo1C,GAAWvgD,KAAK+gD,aAAahhB,UAExCjnB,YAAY,EACZC,cAAc,IAElB+nC,EAAoBjgD,UAAUC,OAAS,SAAUwO,EAAUilC,EAAkB4G,EAAoB3wB,GAC7F,IAAIw2B,OAA4Cn9C,IAAvBs3C,EACrB9kB,EAAkB7L,EAAWA,EAASlb,SAASnE,IAAI8zC,IAAoBxrC,GACvEub,EAAWgyB,EACX1lB,GAAct7B,KAAKkH,SAAUmvB,EAAgB3iB,eAAe,KAAM1T,KAAK+gD,aAAantC,eACpF0qB,GAAkBjI,EAAiB8kB,GAGnC3R,EAAchf,IAAaw2B,EAC3Bx2B,EAASlb,SAASnE,IAAIw1C,IACtB3S,GAAkB6S,sBAAsBt7C,KAAK8C,SAE7C6mB,EAAWkK,GAAgB/C,EAAgB3iB,eAAesb,EAAUhvB,KAAK+gD,aAAantC,cAAe+pB,IAAa,EAAG,KAAM,KAAM,KAAM,MAAO6L,EAAaxpC,KAAK+gD,aAAahiB,OAAS,EAAgB,GAC1M7P,EAAS3e,IAAcia,GAAYA,EAASlb,UAAY,KAExD,IACIxH,EACAm5C,EAFAnpB,EAAUH,GAAUzI,EAAU,MAGlC,IAeI,GAdImH,EAAgBwE,OAChBxE,EAAgBwE,QAEpBomB,EAActtC,GAAYutC,EAAclyB,EAAUhvB,KAAK+gD,cAEvDvX,EAAY1Q,WAAWx1B,KAAKwE,EAAYw+B,GAAoB,EAAGtmC,KAAK+gD,aAAa1hD,UAAWW,KAAK+gD,eACjG5jB,GAA6B8jB,EAAY1nB,aAAczxB,EAAWm5C,EAAY95C,MAC9E85C,EAAY95C,KAAKmJ,IAAWxI,EA5mExC,SAASq5C,EAAsBr5C,EAAW0J,GACtC,IAAIyvC,EAAcpX,GAA8B/hC,GAE5CmJ,EAAQgwC,EAAYj1B,KAAKnc,IAC7BiB,GAAe,EAAGU,EAAIT,OAAQS,EAAIR,QAASC,GAC3CG,GAAoB6vC,EAAYjuC,MAAM/E,MAAOgD,GA2mErCkwC,CAAsBr5C,EAAW9H,KAAK+gD,cAGlCxM,EAGA,IAFA,IAAIpuC,EAAQ,EACRi7C,EAAgBH,EAAYjuC,MAAMwa,cAC7BrsB,EAAI,EAAGA,EAAIozC,EAAiBjzC,OAAQH,IAAK,CAI9C,IAHA,IAAIkgD,EAAW9M,EAAiBpzC,GAC5BmgD,EAAa,KACbznB,EAAgB,KACXrsB,EAAI,EAAGA,EAAI6zC,EAAS//C,OAAQkM,IAAK,CACtC,IAAI67B,EAAQ7P,KAAcrzB,EAAO,EAAiBk7C,EAAS7zC,GAAI,KAAM,MACjEqsB,EACAA,EAAc72B,KAAOqmC,EAAMr2B,MAG3BsuC,EAAajY,EAAMr2B,MAEvB6mB,EAAgBwP,EAAMr2B,MAE1BouC,EAAc99C,KAAKg+C,GAI3BhpB,GAAuB2oB,EAAaA,EAAY95C,KAAK0I,IAAQ/H,EAAW,GACxEm5C,EAAY95C,KAAK8I,MAAU,EAE/B,QACI0nB,GAAUG,EAAS,MACfzB,EAAgB9kB,KAChB8kB,EAAgB9kB,MAExB,IAAIgwC,EAAe,IAAIC,GAAexhD,KAAK+6C,cAAejzC,EAAWonB,EAAU5f,EAAU0f,GAKzF,OAJIgyB,IAEAO,EAAa5mB,SAAS4kB,WAAWvsC,MAAMkZ,MAAQ+0B,EAAYjuC,OAExDuuC,GAEJT,EA7F4B,CA8FrCxG,IASEkH,GAAgC,SAAUvG,GAE1C,SAASwG,EAAgB1G,EAAe/d,EAAU9N,EAAU5f,EAAU0f,GAClE,IAAI9W,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAQjC,OAPAkY,EAAMwpC,cACNxpC,EAAM8kB,SAAWA,EACjB9kB,EAAMyiB,SAAWziB,EAAMklB,kBAAoB,IAAI8iB,GAAYhxB,GAC3DhX,EAAMyiB,SAAS4kB,WAAa/lB,IAAa,EAAG,EAAc,KAAM,KAAM,KAAMtK,GAC5EhX,EAAM5I,SAAWA,EACjB4I,EAAMypC,SAAW,IAAIvG,GAAWpsB,GAChC9W,EAAM6iC,cAAgBA,EACf7iC,EAWX,OArBAxX,EAAU+gD,EAAiBxG,GAY3BwG,EAAgB5gD,UAAU+oB,QAAU,WAEhC5pB,KAAK0hD,WAAW/yC,QAAQ,SAAUvF,GAAM,OAAOA,MAC/CpJ,KAAK0hD,WAAa,MAEtBD,EAAgB5gD,UAAUwR,UAAY,SAAUotC,GAE5Cz/C,KAAK0hD,WAAWp+C,KAAKm8C,IAElBgC,EAtBwB,CAuBjCpH,IAcEuH,GAAgB,oBAOhBC,GAAaC,IAEbC,GAAkB,EAoCtB,SAASC,KAEL,OAAOC,GAA+B1qB,MAQ1C,SAAS0qB,GAA+Bn2B,GACpC,IAAIyN,EAAezN,EAAKyN,aACpBhuB,EAAS4gB,GAAeL,GACxBo2B,EAAiB32C,GAAUA,EAAOguB,aACtC,OAAIA,GAAgB2oB,EACT3oB,EAEJzN,EAAKyN,cACRhuB,OAAQ22C,EACRp2B,KAAMA,EACNq2B,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAwB,MAAlBT,EAAyB,EAAIA,EAAeS,KAAOT,EAAeC,IACxES,KAAwB,MAAlBV,EAAyB,EAAIA,EAAeU,KAAOV,EAAeE,IACxES,KAAwB,MAAlBX,EAAyB,EAAIA,EAAeW,KAAOX,EAAeG,IACxES,KAAwB,MAAlBZ,EAAyB,EAAIA,EAAeY,KAAOZ,EAAeI,IACxES,KAAwB,MAAlBb,EAAyB,EAAIA,EAAea,KAAOb,EAAeK,IACxES,KAAwB,MAAlBd,EAAyB,EAAIA,EAAec,KAAOd,EAAeM,IACxES,KAAwB,MAAlBf,EAAyB,EAAIA,EAAee,KAAOf,EAAeO,IACxES,KAAwB,MAAlBhB,EAAyB,EAAIA,EAAegB,KAAOhB,EAAeQ,IACxES,YAAa,KACbC,iBAAkB,KAClBC,WAAY,KACZjmB,kBAAmB,MAiB3B,SAASL,GAASvrB,IARlB,SAAS8xC,EAAmBC,EAAI/xC,IA5EhC,SAASgyC,EAASl0C,EAAU9E,GACxB,IAAIgZ,EAAKhZ,EAAKo3C,IAGJ,MAANp+B,IACAA,EAAKhZ,EAAKo3C,IAAiBG,MAI/B,IAAI0B,EAAWjgC,EAAKq+B,GAIhB6B,EAAO,GAAKD,EAIZE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EAFW,IAAXA,EAILE,EAAMC,EAAMt0C,EAASozC,KAAOgB,EAASp0C,EAASmzC,KAAOiB,EAChDE,EAAMt0C,EAASkzC,KAAOkB,EAASp0C,EAASizC,KAAOmB,EAGpDC,EAAMC,EAAMt0C,EAASgzC,KAAOoB,EAASp0C,EAAS+yC,KAAOqB,EAChDE,EAAMt0C,EAAS8yC,KAAOsB,EAASp0C,EAAS6yC,KAAOuB,EAoDxDF,CAASD,EAAI/xC,EAAIhH,MAQjB84C,CAAmBtB,KAA2BxwC,GAElD,SAASqyC,GAAgBj6C,EAAOqE,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,GACzB61C,GAAsB9B,KAA2Bp4C,EAAOqE,GAQnE,SAAS81C,KACL,OAAOC,GAAsBhC,MAQjC,SAASiC,KACL,OAAOC,GAAuBlC,MAQlC,SAASmC,KACL,OAAOC,GAAwBpC,MAGnC,SAASqC,KACL,OAAOC,GAA6BtC,KAA2B,MAkCnE,SAASuC,GAAgBC,GAErB,IAIItzB,EAJWqG,KAESvkB,MAEHke,MACrB,GAAIA,EACA,IAAK,IAAI/vB,EAAI,EAAGA,EAAI+vB,EAAM5vB,OAAQH,GAAQ,EAAG,CACzC,IAAI68B,EAAW9M,EAAM/vB,GACrB,GAAiB,IAAb68B,EACA,MACJ,GAAIA,GAAYwmB,EACZ,OAAOtzB,EAAM/vB,EAAI,IAYjC,SAASmjD,GAA6Bf,EAAIv0C,GACtC,GAAIu0C,EAAGnmB,kBACH,OAAOmmB,EAAGnmB,kBACd,IAAIqnB,EAAclB,EAAGz3B,KACrB,OAzlIJ,SAAS44B,EAAY1xC,GACjB,OAAkD,OAA5B,KAAdA,EAAM/E,OAwlIVy2C,CAAYD,EAAYzxC,OACjBuwC,EAAGnmB,kBAAoB,IAAI+hB,GAAUsF,EAAYt9C,KAAM6H,GAE9B,IAA3By1C,EAAYzxC,MAAMxI,KAChB+4C,EAAGnmB,kBAKlB,SAASunB,EAA8BF,GACnC,IAAIz1B,EAaR,SAAS41B,EAA4B94B,GACjC,KAA2B,IAApBA,EAAK9Y,MAAMxI,MACdshB,EAAOA,EAAKE,KAAK9b,IAErB,OAAO4b,EAjBQ84B,CAA4BH,GACvCI,EAAe71B,EAASuK,aAE5B,OADkBsrB,GAAgBA,EAAaznB,mBAG3C,IAAI+hB,GAAUnwB,EAAS7nB,KAAM6nB,EACxBhD,KAAK5b,IAAY4e,EAAShc,MAAM/E,OAAS,KAZhB02C,CAA8BF,EAAYz4B,KAAK9b,KAE1E,KAkCX,SAAS4zC,GAAsBvqB,EAAc3vB,EAAOqE,QAClC,IAAVA,IAAoBA,EAAQ,GAChC,IAAI62C,EAiFR,SAASC,EAAan7C,GAClB,IAAI4Z,EAAK5Z,EAAMg4C,IACf,MAAqB,iBAAPp+B,EAAkBA,EAAKq+B,GAAa,KAnFlCkD,CAAan7C,GAG7B,GAAkB,OAAdk7C,EAEA,IADA,IAAIx1C,EAAWiqB,EACRjqB,IAGHA,EAAW01C,GAA0B11C,EAAUw1C,EAAW72C,KAH7C,CAWb,IAAI6d,EAAOxc,EAASwc,KAChBm5B,EAAYn5B,EAAK9Y,MAAM/E,MACvBwuB,EAAoB,KAAZwoB,EACZ,GAAc,IAAVxoB,EAIA,IAHA,IAAInrB,EAAQ2zC,GAAa,GACrB1zC,EAAMD,EAAQmrB,EACdxD,EAAOnN,EAAKE,KAAKnc,IAAO4B,WACnBtQ,EAAImQ,EAAOnQ,EAAIoQ,EAAKpQ,IAAK,CAG9B,IAAIwgC,EAAe1I,EAAK93B,GACxB,GAAIwgC,EAAan3B,OAASZ,GAAS+3B,EAAa5E,SAC5C,OAAOjR,EAAKE,KAAK5b,IAAYjP,GAMzC,IAAI67B,OAAW,EACf,GAAI1tB,IAAaiqB,IACZyD,EAAWkoB,GAA+Bp5B,EAAMliB,IACjD,OAAOozB,EAKP1tB,EADQ,EAARrB,GAAgC,EAARA,IAAyBk3C,GAAa71C,GACnD,KAGAA,EAAS/D,OAIhC,IACI65C,EAAiB/1C,GADAkoB,KAA0BvL,KAAKzb,KAEpD,IACI,OAAO5E,GAAO/B,EAAOqE,GAEzB,QACIoB,GAAmB+1C,IAG3B,SAASF,GAA+Bp5B,EAAMliB,GAC1C,IAAIoyB,EAAUlQ,EAAKE,KAAKnc,IAAOosB,eAC/B,GAAID,EACA,IAAK,IAAI76B,EAAI,EAAGA,EAAI66B,EAAQ16B,OAAQH,GAAK,EAAG,CACxC,IAAIqQ,EAAMwqB,EAAQ76B,GAClB,GAAIqQ,EAAIhH,OAASZ,EACb,OAAOwyB,GAAiB5qB,EAAKrQ,EAAI,EAAG66B,EAASlQ,EAAKE,KAAKnc,KAInE,OAAO,KAqCX,SAASm1C,GAA0BK,EAAe5B,EAAUx1C,GAWxD,IAPA,IAAIy1C,EAAO,GAAKD,EACZ6B,EAAgB,IAAX7B,EACLE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EAGLn0C,EAAmB,EAARrB,EAA2Bo3C,EAAc95C,OAAS85C,EAC1D/1C,GAAU,CAab,IARIg2C,EACQ3B,EAAMC,EAAKt0C,EAASozC,IAAMpzC,EAASmzC,IAAQmB,EAAKt0C,EAASkzC,IAAMlzC,EAASizC,IAGxEoB,EAAMC,EAAKt0C,EAASgzC,IAAMhzC,EAAS+yC,IAAQuB,EAAKt0C,EAAS8yC,IAAM9yC,EAAS6yC,KAIxEuB,EACR,OAAOp0C,EAEX,GAAY,EAARrB,GAAgC,EAARA,IAAyBk3C,GAAa71C,GAC9D,OAAO,KAYX,MARIg2C,EACQ3B,EAAMC,EAAKt0C,EAAS4zC,KAAO5zC,EAAS2zC,KAASW,EAAKt0C,EAAS0zC,KAAO1zC,EAASyzC,KAG3EY,EAAMC,EAAKt0C,EAASwzC,KAAOxzC,EAASuzC,KAASe,EAAKt0C,EAASszC,KAAOtzC,EAASqzC,MAI3Ee,GAIR,OAAO,KAHPp0C,EAAWA,EAAS/D,OAM5B,OAAO,KAQX,SAAS45C,GAAa71C,GAClB,QAASA,EAAS/D,QAAU+D,EAAS/D,OAAOugB,KAAKE,OAAS1c,EAASwc,KAAKE,KAxQ7C,IAAIo0B,GA0QnC,IAAImF,GACA,SAASA,GAAmBC,GACxBxlD,KAAKwlD,KAAOA,GAWpB,SAASxB,GAAsBT,GAC3B,OAAOA,EAAGF,aAAeE,EAAGF,WAAa,IAAIoC,GAAalC,EAAGz3B,KAAKkB,SAGtE,IAAIy4B,GACA,SAASC,GAAcrK,GACnBr7C,KAAKq7C,cAAgBA,GAU7B,SAAS+I,GAAwBb,GAC7B,IAAKA,EAAGH,iBAAkB,CACtB,IAAIuC,EAAYpC,EAAGz3B,KAEf85B,EAAaz5B,GAAew5B,GAC5Bl1B,EAAayW,GAAiB0e,EAAYD,EAAU35B,MAAM,GAC1Dqb,EAAUse,EAAU35B,KAAKxb,IAAU82B,cAAwC,IAC3Ena,EAAiBkM,GAAkB,EAAmBssB,EAAU35B,KAAM45B,EAAYve,EAAS5W,EAAY,MAC3GL,GAAYw1B,EAAYve,EAASse,EAAU35B,MACvC25B,EAAUrsB,UACVnM,EAAemM,QAAUqsB,EAAUrsB,QAAQtL,aAE/C,IAAI63B,EAAYF,EAAU3yC,MACrB6yC,EAAU/rB,uBACX+rB,EAAU/rB,qBACNH,GAAY,GAAoB,EAAG,KAAM,KAAMksB,EAAW,OAElE14B,EAAena,MAAQ6yC,EAAU/rB,qBACjC6rB,EAAUt5B,sBAAwBc,EAClCuZ,GAAcif,EAAU35B,KAAM65B,EAAU1/C,MAAOsqB,GAC/C8yB,EAAGH,iBAAmB,IAAI0C,GAAmB34B,EAAgBw4B,GAEjE,OAAOpC,EAAGH,iBAEd,IAAI2C,GAA8B,WAC9B,SAASA,EAAaC,GAClBhmD,KAAKgmD,WAAaA,EAiBtB,OAfAD,EAAallD,UAAUsK,IAAM,SAAUvB,GACnC,OAAIA,IAAU20C,GACH2F,GAAuBlkD,KAAKgmD,YAEnCp8C,IAAU40C,GACH4F,GAAwBpkD,KAAKgmD,YAEpCp8C,IAAUwxC,GACH4I,GAAsBhkD,KAAKgmD,YAElCp8C,IAAU0hB,GACHg5B,GAA6BtkD,KAAKgmD,WAAY,MAElDlC,GAAsB9jD,KAAKgmD,WAAYp8C,IAE3Cm8C,EAnBsB,GAyB7BD,GAAoC,WACpC,SAASG,EAAoBC,EAAiBC,GAC1CnmD,KAAKkmD,gBAAkBA,EACvBlmD,KAAKmmD,UAAYA,EACjBnmD,KAAKomD,aAwGT,OAtGAhmD,OAAO+B,eAAe8jD,EAAoBplD,UAAW,WACjDsK,IAAK,WAED,OAAO64C,GADQ/B,GAA+BjiD,KAAKmmD,aAGvDrtC,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe8jD,EAAoBplD,UAAW,YACjDsK,IAAK,WACD,IAAImE,EAAW2yC,GAA+BjiD,KAAKmmD,WACnD,OAAO,IAAIJ,GAAaz2C,IAE5BwJ,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe8jD,EAAoBplD,UAAW,kBAEjDsK,IAAK,WACD,IAAIk7C,EAAkBl6B,GAAensB,KAAKmmD,WAAW5sB,aACrD,OAAO8sB,EAAkB,IAAIN,GAAaM,GAAmB,IAAIn7C,IAErE4N,YAAY,EACZC,cAAc,IAElBktC,EAAoBplD,UAAU+Y,MAAQ,WAElC,IADA,IAAI6W,EAAazwB,KAAKkmD,gBAAgB/+C,KAC/BspB,EAAWrd,IAAO9R,QACrBtB,KAAK8Z,OAAO,IAGpBmsC,EAAoBplD,UAAUsK,IAAM,SAAUhF,GAAS,OAAOnG,KAAKomD,UAAUjgD,IAAU,MACvF/F,OAAO+B,eAAe8jD,EAAoBplD,UAAW,UACjDsK,IAAK,WAED,OADiBnL,KAAKkmD,gBAAgB/+C,KACpBiM,IAAO9R,QAE7BwX,YAAY,EACZC,cAAc,IAElBktC,EAAoBplD,UAAU0uC,mBAAqB,SAAU4T,EAAan0C,EAAS7I,GAC/E,IAAImgD,EAActmD,KAAKumD,aAAapgD,GAChCqgD,EAAUrD,EACT5T,mBAAmBvgC,MAAehP,KAAKkmD,gBAAiBI,GAG7D,OAFAE,EAAQ3G,yBAAyB7/C,MACjCA,KAAKomD,UAAU73B,OAAO+3B,EAAa,EAAGE,GAC/BA,GAEXP,EAAoBplD,UAAU4lD,gBAAkB,SAAUC,EAAkBvgD,EAAOmJ,EAAUilC,EAAkBoS,GAC3G,IAAIC,EAAkBt3C,GAAYtP,KAAKkiD,gBAClCyE,GAAeC,IAChBD,EAAcC,EAAgBz7C,IAAImwC,GAAa,OAEnD,IAAIiG,EAAemF,EAAiB5lD,OAAO8lD,EAAiBrS,OAAkB1wC,EAAW8iD,GAEzF,OADA3mD,KAAK6mD,OAAOtF,EAAa5mB,SAAUx0B,GAC5Bo7C,GAEX0E,EAAoBplD,UAAUgmD,OAAS,SAAUL,EAASrgD,GACtD,GAAIqgD,EAAQn9B,UACR,MAAM,IAAIhe,MAAM,sDAEpB,IAAI+sB,EAAYouB,EAAQjH,WACpB+G,EAActmD,KAAKumD,aAAapgD,GACpCgoB,GAAWnuB,KAAKkmD,gBAAiB9tB,EAAWkuB,GAC5C,IAAIj4B,EAAQruB,KAAKkmD,gBAAgB/+C,KAAKiM,IAClCwZ,EAAa05B,EAAc,EAAIj4B,EAAM/sB,OACpC2qB,GAAcoC,EAAMi4B,EAAc,IAAKt5B,OACxChtB,KAAKkmD,gBAAgBl5B,OAIzB,OAHAe,GAA2B/tB,KAAKkmD,gBAAiB9tB,GAAW,EAAMxL,GAClE45B,EAAQ3G,yBAAyB7/C,MACjCA,KAAKomD,UAAU73B,OAAO+3B,EAAa,EAAGE,GAC/BA,GAEXP,EAAoBplD,UAAUimD,KAAO,SAAUN,EAASO,GACpD,IAAI5gD,EAAQnG,KAAKkK,QAAQs8C,GAGzB,OAFAxmD,KAAKw/C,OAAOr5C,GACZnG,KAAK6mD,OAAOL,EAASxmD,KAAKumD,aAAaQ,IAChCP,GAEXP,EAAoBplD,UAAUqJ,QAAU,SAAUs8C,GAAW,OAAOxmD,KAAKomD,UAAUl8C,QAAQs8C,IAC3FP,EAAoBplD,UAAUiZ,OAAS,SAAU3T,GAC7C,IAAImgD,EAActmD,KAAKumD,aAAapgD,GAAQ,GAC5CyoB,GAAW5uB,KAAKkmD,gBAAiBI,GACjCtmD,KAAKomD,UAAU73B,OAAO+3B,EAAa,IAEvCL,EAAoBplD,UAAU2+C,OAAS,SAAUr5C,GAC7C,IAAImgD,EAActmD,KAAKumD,aAAapgD,GAAQ,GAE5C,OADAqoB,GAAWxuB,KAAKkmD,gBAAiBI,GAC1BtmD,KAAKomD,UAAU73B,OAAO+3B,EAAa,GAAG,IAAM,MAEvDL,EAAoBplD,UAAU0lD,aAAe,SAAUpgD,EAAO6gD,GAE1D,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAAT7gD,EACOnG,KAAKkmD,gBAAgB/+C,KAAKiM,IAAO9R,OAAS0lD,EAO9C7gD,GAEJ8/C,EA5G4B,GAqHvC,SAAS/B,GAAuBX,GAC5B,IAAKA,EAAGJ,YAAa,CAEjB,IAAIn0B,EAAWu0B,EAAGz3B,KACd+5B,EAAY72B,EAAShc,MAEzBuwC,EAAGJ,YAAc,IAAI8D,GAAcj4B,EAAShD,KAAMg4B,GAAsBT,GAAKsC,EAAUzkB,OAAQzK,KAAe3H,EAAS7nB,KAAK6I,KAEhI,OAAOuzC,EAAGJ,YAEd,IAAI8D,GAA+B,WAC/B,SAASC,EAAeC,EAAwB9D,EAAY+D,EAAQC,EAAWC,GAC3EtnD,KAAKmnD,uBAAyBA,EAC9BnnD,KAAKqjD,WAAaA,EAClBrjD,KAAKonD,OAASA,EACdpnD,KAAKqnD,UAAYA,EACjBrnD,KAAKsnD,SAAWA,EAYpB,OAVAJ,EAAermD,UAAU0uC,mBAAqB,SAAUvgC,EAAS64B,EAAe1hC,GAC5E,IAAIioB,EAnxJZ,SAASm5B,EAAuBt2C,EAAOjC,EAASw4C,EAAiBh0C,EAAU8lB,GACvE,IAAIW,EAAYnD,GACZoD,EAAwBrD,GAC5BC,IAAW,EACXD,GAAuB,KACvB,IAAIvI,EAAQ8K,GAAgB5lB,EAAUvC,EAAOjC,EAAS,EAAqBioB,MAC3E3I,EAAMzd,IAAoB22C,EACtBluB,IACAhL,EAAMte,IAAWspB,EAAQ4O,cAE7B,IAAI9Z,EAAWoL,IAAa,EAAG,EAAc,KAAM,KAAM,KAAMlL,GAG/D,OAFAwI,GAAWmD,EACXpD,GAAuBqD,EAChB9L,EAswJYm5B,CAAuBvnD,KAAKonD,OAAQp4C,EAAShP,KAAKmnD,uBAAwBnnD,KAAKqnD,UAAWrnD,KAAKsnD,UAC1Gzf,GACA1Z,GAAW0Z,EAAezZ,EAAUjoB,GAExCmyB,GAAuBlK,EAAUpuB,KAAKonD,OAAQp4C,EAAS,GACvD,IAAIw3C,EAAU,IAAIrH,GAAU/wB,EAASjnB,KAAM6H,GAE3C,OADAw3C,EAAQjH,WAAanxB,EACdo4B,GAEJU,EAlBuB;;;;;;;OAkClC,SAASO,GAAclQ,GACnBA,EAAWxa,SAAWA;;;;;;;OAU1B,IAAI2qB,GAAe,eAmKnB,SAASC,GAAe77B,EAAMoC,EAAY05B,GAItC,IAAI77B,EAAWoL,KACf/G,GAAYlC,EAAYpC,EAAKkB,QAAU,KAAMjB,GAE7C,IAAI1a,EAAoBya,EAAKE,KAAKnc,IAAOwB,kBAiBzC,OAhBIA,IACIu2C,IAAiB15B,GAAcpC,EAAK9Y,QAAUkb,EAAWlb,MAAMkZ,OAC/DJ,EAAK9Y,MAAMhQ,KAAOkrB,EAAWlb,MAAMkZ,MACnCgC,EAAWlb,MAAMkZ,MAAQJ,EAAK9Y,OAEzB40C,IAAiB15B,GAAcpC,EAAK9Y,QAAU40C,EAAa50C,MAAMhQ,MACtE8oB,EAAK9Y,MAAMhQ,KAAO4kD,EAAa50C,MAAMhQ,KACrC4kD,EAAa50C,MAAMhQ,KAAO8oB,EAAK9Y,OAG/B8Y,EAAK9Y,MAAMhQ,KAAO,KAElBkrB,EAAWlC,OAASF,EAAKE,OACzBF,EAAK9Y,MAAMzH,OAAS2iB,EAAWlb,QAGf,IAApB8Y,EAAK9Y,MAAMxI,MAA8BshB,EAAKO,uBAC9C+D,GAAYlC,EAAYpC,EAAKO,sBAAsBW,QAAU,KAAMjB,GAC/D1a,IACAya,EAAK9Y,MAAM8mB,qBAAuBhO,EAAKO,sBAAsBrZ,MAC7D8Y,EAAKO,sBAAsBrZ,MAAMzH,OAASugB,EAAK9Y,OAE5C8Y,EAAKO,uBAETP;;;;;;;;AAuZX,IAAI+7B,IACAx7C,QAASsuC,GACThtC,WAAY,WAAc,OAAO,IAAIyyC,IACrCrzC,SAEA+6C,GAA+B,SAAU7M,GAEzC,SAAS8M,EAAeC,EAAc9F,GAClC,IAAIhqC,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAgBjC,OAdAkY,EAAM+vC,wBACN/vC,EAAMwpC,cAGNxpC,EAAM+vC,qBAFYD,EAAaE,YAEUxR,UAOzCx+B,EAAM5I,SAAW0Z,GAAeg/B,EAAc9F,GAL1C2F,IACIx7C,QAASivC,GACT/uC,SAAU2L,KAIlBA,EAAM8kB,SAAW9kB,EAAM5I,SAASnE,IAAI68C,GACpC9vC,EAAMiwC,yBAA2B,IAAI/H,GAC9BloC,EAWX,OA7BAxX,EAAUqnD,EAAgB9M,GAoB1B8M,EAAelnD,UAAU+oB,QAAU,WAE/B5pB,KAAK0hD,WAAW/yC,QAAQ,SAAUvF,GAAM,OAAOA,MAC/CpJ,KAAK0hD,WAAa,MAEtBqG,EAAelnD,UAAUwR,UAAY,SAAUotC,GAE3Cz/C,KAAK0hD,WAAWp+C,KAAKm8C,IAElBsI,EA9BuB,CA+BhCzM,IACE8M,GAAmC,SAAUnN,GAE7C,SAASoN,EAAmBzO,GACxB,IAAI1hC,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAEjC,OADAkY,EAAM0hC,WAAaA,EACZ1hC,EAKX,OATAxX,EAAU2nD,EAAoBpN,GAM9BoN,EAAmBxnD,UAAUC,OAAS,SAAUohD,GAC5C,OAAO,IAAI4F,GAAc9nD,KAAK45C,WAAYsI,IAEvCmG,EAV2B,CAWpC9M;;;;;;;;AAkBF,SAAS+M,GAAcC,EAAYC,EAAQC,GAEvC,IAAItiD,EAAQqkC,GAA+B+d,GACvCtlD,EAjtLR,SAASylD,IAEL,OAAOj2C,GA+sLKi2C,GACRxb,GAAsBub,EAAUD,EAAOjnD,KAAKknD,GAAWD,KACvD3b,KAEJ,OADAnC,GAAoBvkC,GACblD,EAYX,SAAS0lD,GAAcJ,EAAYC,EAAQI,EAAKH,GAE5C,IAAItiD,EAAQqkC,GAA+B+d,GACvCtlD,EAAQonC,GAAeue,GACvB1b,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAASG,GAAOJ,EAAOI,IACnE/b,KAEJ,OADAnC,GAAoBvkC,GACblD,EAaX,SAAS4lD,GAAcN,EAAYC,EAAQrb,EAAMC,EAAMqb,GAEnD,IAAItiD,EAAQqkC,GAA+B+d,GACvCtlD,EAAQmoC,GAAgB+B,EAAMC,GAC9BF,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,GAAQob,EAAOrb,EAAMC,IAChFP,KAEJ,OADAnC,GAAoBvkC,GACblD,EAcX,SAAS6lD,GAAcP,EAAYC,EAAQrb,EAAMC,EAAMC,EAAMob,GAEzD,IAAItiD,EAAQqkC,GAA+B+d,GACvC3d,EAAYQ,GAAgB+B,EAAMC,GAClCnqC,EAAQonC,GAAegD,IAASzC,EAChCsC,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,EAAMC,GAAQmb,EAAOrb,EAAMC,EAAMC,IAC5FR,KAEJ,OADAnC,GAAoBvkC,GACblD,EAeX,SAAS8lD,GAAcR,EAAYC,EAAQrb,EAAMC,EAAMC,EAAMC,EAAMmb,GAE/D,IAAItiD,EAAQqkC,GAA+B+d,GACvCtlD,EAAQ0oC,GAAgBwB,EAAMC,EAAMC,EAAMC,GAC1CJ,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,EAAMC,EAAMC,GAAQkb,EAAOrb,EAAMC,EAAMC,EAAMC,IACxGT,KAEJ,OADAnC,GAAoBvkC,GACblD,EAgBX,SAAS+lD,GAAcT,EAAYC,EAAQrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAMR,GAErE,IAAItiD,EAAQqkC,GAA+B+d,GACvC3d,EAAYe,GAAgBwB,EAAMC,EAAMC,EAAMC,GAC9CrqC,EAAQonC,GAAe4e,IAASre,EAChCsC,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,EAAMC,EAAMC,EAAM2b,GACzET,EAAOrb,EAAMC,EAAMC,EAAMC,EAAM2b,IACnCpc,KAEJ,OADAnC,GAAoBvkC,GACblD,EAiBX,SAASimD,GAAcX,EAAYC,EAAQrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAMV,GAE3E,IAAItiD,EAAQqkC,GAA+B+d,GACvC3d,EAAYe,GAAgBwB,EAAMC,EAAMC,EAAMC,GAC9CrqC,EAAQmoC,GAAgB6d,EAAME,IAASve,EACvCsC,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,GAC/EX,EAAOrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,IACzCtc,KAEJ,OADAnC,GAAoBvkC,GACblD,EAkBX,SAASmmD,GAAcb,EAAYC,EAAQrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAME,EAAMZ,GAEjF,IAAItiD,EAAQqkC,GAA+B+d,GACvC3d,EAAYe,GAAgBwB,EAAMC,EAAMC,EAAMC,GAClD1C,EAAYQ,GAAgB6d,EAAME,IAASve,EAC3C,IAAI3nC,EAAQonC,GAAegf,IAASze,EAChCsC,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAME,GACrFb,EAAOrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAME,IAC/Cxc,KAEJ,OADAnC,GAAoBvkC,GACblD,EAmBX,SAASqmD,GAAcf,EAAYC,EAAQrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAME,EAAME,EAAMd,GAEvF,IAAItiD,EAAQqkC,GAA+B+d,GACvC3d,EAAYe,GAAgBwB,EAAMC,EAAMC,EAAMC,GAC9CrqC,EAAQ0oC,GAAgBsd,EAAME,EAAME,EAAME,IAAS3e,EACnDsC,GAAsBub,EAAUD,EAAOjnD,KAAKknD,EAAStb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAME,EAAME,GAC3Ff,EAAOrb,EAAMC,EAAMC,EAAMC,EAAM2b,EAAME,EAAME,EAAME,IACrD1c,KAEJ,OADAnC,GAAoBvkC,GACblD,EAeX,SAASumD,GAAcjB,EAAYC,EAAQiB,EAAMhB,GAI7C,IAFA,IAAItiD,EAAQqkC,GAA+B+d,GACvC3d,GAAY,EACPzpC,EAAI,EAAGA,EAAIsoD,EAAKnoD,OAAQH,IAC7BkpC,GAAeof,EAAKtoD,MAAQypC,GAAY,GAE5C,IAAI3nC,EAAQ2nC,EAAYsC,GAAsBsb,EAAOhnD,MAAMinD,EAASgB,IAAS5c,KAE7E,OADAnC,GAAoBvkC,GACblD;;;;;;;OAiBX,SAASymD,GAAKvjD,EAAOwjD,GACjB,IACIvS,EADAnmC,EAAQs8B,KAERrZ,EAAgB/tB,EAAQyJ,GACxBqB,EAAMI,mBACN+lC,EAqBR,SAASwS,EAAWjlD,EAAMk4B,GACtB,GAAIA,EACA,IAAK,IAAI17B,EAAI,EAAGA,EAAI07B,EAASv7B,OAAQH,IAAK,CACtC,IAAIi2C,EAAUva,EAAS17B,GACvB,GAAIwD,IAASyyC,EAAQzyC,KACjB,OAAOyyC,EAInB,MAAM,IAAI/rC,MAAM,mBAAqB1G,EAAO,gBA9B9BilD,CAAWD,EAAU14C,EAAM6sB,cACrC7sB,EAAM9J,KAAK+sB,GAAiBkjB,EACxBA,EAAQ/kC,YACPpB,EAAM4e,mBAAqB5e,EAAM4e,sBAAwBvsB,KAAK4wB,EAAekjB,EAAQ/kC,YAI1F+kC,EAAUnmC,EAAM9J,KAAK+sB,GAEzB,IAAI21B,EAAezS,EAAQ/3C,UAE3B,OADAm0B,GAAMrtB,EAAO0jD,GACNA,EA+BX,SAASC,GAAU3jD,EAAOoiD,EAAYpd,GAClC,IAAI0e,EAAehmB,GAAK19B,GACxB,OAAO4jD,GAAO5jD,GAASwiD,GAAcJ,EAAYsB,EAAaG,UAAW7e,EAAI0e,GACzEA,EAAaG,UAAU7e,GAa/B,SAAS8e,GAAU9jD,EAAOoiD,EAAYpd,EAAII,GACtC,IAAIse,EAAehmB,GAAK19B,GACxB,OAAO4jD,GAAO5jD,GAAS0iD,GAAcN,EAAYsB,EAAaG,UAAW7e,EAAII,EAAIse,GAC7EA,EAAaG,UAAU7e,EAAII,GAcnC,SAAS2e,GAAU/jD,EAAOoiD,EAAYpd,EAAII,EAAIG,GAC1C,IAAIme,EAAehmB,GAAK19B,GACxB,OAAO4jD,GAAO5jD,GACV2iD,GAAcP,EAAYsB,EAAaG,UAAW7e,EAAII,EAAIG,EAAIme,GAC9DA,EAAaG,UAAU7e,EAAII,EAAIG,GAevC,SAASye,GAAUhkD,EAAOoiD,EAAYpd,EAAII,EAAIG,EAAII,GAC9C,IAAI+d,EAAehmB,GAAK19B,GACxB,OAAO4jD,GAAO5jD,GACV4iD,GAAcR,EAAYsB,EAAaG,UAAW7e,EAAII,EAAIG,EAAII,EAAI+d,GAClEA,EAAaG,UAAU7e,EAAII,EAAIG,EAAII,GAY3C,SAASse,GAAUjkD,EAAOoiD,EAAY3iD,GAClC,IAAIikD,EAAehmB,GAAK19B,GACxB,OAAO4jD,GAAO5jD,GAASqjD,GAAcjB,EAAYsB,EAAaG,UAAWpkD,EAAQikD,GAC7EA,EAAaG,UAAUxoD,MAAMqoD,EAAcjkD,GAEnD,SAASmkD,GAAO5jD,GACZ,OAAOonC,KAAWpmC,KAAKhB,EAAQyJ,IAAeynC;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAkClD,IAAIgT,GAA2B,WAC3B,SAASA,EAAUC,GACftqD,KAAKuqD,QAAU,KACfvqD,KAAKsqD,KAAO,KACZtqD,KAAKsqD,KAAe,MAARA,EAAe,KAAOA,EA2FtC,OAzFAD,EAAUxpD,UAAU2pD,MAAQ,SAAU/c,EAAWgd,EAAWC,EAASlF,GAC7DkF,EACA1qD,KAAKsqD,KAAOK,GAAY3qD,KAAKsqD,KAAM7c,EAAWgd,EAAmB,MAARjF,EAAeA,EAAO,MAG/ExlD,KAAKuqD,QAAUI,GAAY3qD,KAAKuqD,QAAS9c,EAAWgd,EAAmB,MAARjF,EAAeA,EAAO,OAG7F6E,EAAUxpD,UAAU+pD,MAAQ,WAAc,OAAO5qD,KAAKsqD,KAAO,IAAID,EAAUrqD,KAAKsqD,MAAQ,MACxFD,EAAUxpD,UAAUqrB,MAAQ,WACxB,OAAkB,OAAdlsB,KAAKsqD,KAEE,KAEU,OAAjBtqD,KAAKuqD,QAGEvqD,KAIA,IAAIqqD,EAAUrqD,KAAKsqD,OAGlCD,EAAUxpD,UAAUmtB,UAAY,WAG5B,IAFA,IAAIpQ,EAAS,KACTitC,EAAQ7qD,KAAKsqD,KACVO,GAAO,CACV,IAAIC,KACJD,EAAMjlD,OAAOtC,KAAKwnD,GAClB,IAAIC,GACA/nD,KAAM,KACNg6C,KAAM6N,EAAM7N,KACZyN,UAAWI,EAAMJ,UACjB7kD,OAAQklD,EACRA,gBAAiB,MAErBC,EAAY/nD,KAAO4a,EACnBA,EAASmtC,EACTF,EAAQA,EAAM7nD,KAElB,OAAO4a,EAAS,IAAIysC,EAAUzsC,GAAU,MAE5CysC,EAAUxpD,UAAUqnC,WAAa,WAG7B,IAFA,IAAItqB,EAAS,KACTitC,EAAQ7qD,KAAKsqD,KACVO,GAAO,CACV,IAAIE,GACA/nD,KAAM,KACNg6C,KAAM6N,EAAM7N,KACZyN,UAAWI,EAAMJ,UACjB7kD,UACAklD,gBAAiBD,EAAMjlD,QAE3BmlD,EAAY/nD,KAAO4a,EACnBA,EAASmtC,EACTF,EAAQA,EAAM7nD,KAElB,OAAO4a,EAAS,IAAIysC,EAAUzsC,GAAU,MAE5CysC,EAAUxpD,UAAUstB,WAAa,SAAUhoB,GAEvC,IADA,IAAI0kD,EAAQ7qD,KAAKsqD,KACVO,GAGHA,EAAMC,gBAAgBv8B,OAAOpoB,EAAO,EAAG0kD,EAAMjlD,QAC7CilD,EAAQA,EAAM7nD,MAGtBqnD,EAAUxpD,UAAU0/B,QAAU,SAAUzU,GACpCpR,GAAI1a,KAAKuqD,QAASz+B,GAClBpR,GAAI1a,KAAKsqD,KAAMx+B,IAEnBu+B,EAAUxpD,UAAU+tB,WAAa,WAE7B,IADA,IAAIi8B,EAAQ7qD,KAAKsqD,KACVO,GAAO,CAGV,IAAIC,EAAkBD,EAAMC,gBACxBE,EAAgBF,EAAgB5gD,QAAQ2gD,EAAMjlD,QACpCklD,EAAgBv8B,OAAOy8B,EAAe,GAGxC,GAAG1pD,QACXupD,EAAM7N,KAAK5pB,WAEfy3B,EAAQA,EAAM7nD,OAGfqnD,EA/FmB,GAyG9B,SAASY,GAAyBj4C,EAAO9L,GACrC,IAAIq1B,EAAavpB,EAAMupB,WACvB,GAAIA,EACA,IAAK,IAAIp7B,EAAI,EAAGA,EAAIo7B,EAAWj7B,OAAQH,GAAK,EACxC,GAAIo7B,EAAWp7B,KAAO+F,EAClB,OAAOq1B,EAAWp7B,EAAI,GAIlC,OAAO,KASX,SAAS+pD,GAA0Bp/B,EAAMthB,GAMrC,IALA,IAAIyuB,EAAOnN,EAAKE,KAAKnc,IAAO4B,WACxBxD,EAAQ6d,EAAK9Y,MAAM/E,MAEnBqD,EAAQrD,GAAS,GACjBsD,EAAMD,GAFU,KAARrD,GAGH9M,EAAImQ,EAAOnQ,EAAIoQ,EAAKpQ,IAAK,CAC9B,IAAIqQ,EAAMynB,EAAK93B,GACf,GAAIqQ,EAAIhH,OAASA,GAAQgH,EAAIurB,SACzB,OAAO57B,EAGf,OAAO,KAEX,SAASgqD,GAAqB5xB,EAAczN,EAAM05B,EAAM4F,GACpD,GAAI5F,aAAgBD,GAChB,OAAOC,EAAKA,KAAKjsB,EAAczN,EAAMs/B,GAGrC,IAAIC,EAAcH,GAA0Bp/B,EAAM05B,GAClD,OAAoB,OAAhB6F,EACOv/B,EAAKE,KAAK5b,IAAYi7C,GAG9B,KAEX,SAAS3wC,GAAImwC,EAAO/+B,GAEhB,IADA,IAAIyN,EAAe0oB,GAA+Bn2B,GAC3C++B,GAAO,CACV,IAAIJ,EAAYI,EAAMJ,UAClBjgD,EAAOigD,EAAUjgD,KACrB,GAAIA,EAEqB,QADjB4gD,EAAeF,GAA0Bp/B,EAAMthB,KAKhC,QADXoT,EAASutC,GAAqB5xB,EAAczN,EAAM2+B,EAAUjF,MAAQh7C,EAAM4gD,KAE1EE,GAAST,EAAOjtC,QAMxB,IADA,IAAI1W,EAAWujD,EAAUvjD,SAChB/F,EAAI,EAAGA,EAAI+F,EAAS5F,OAAQH,IAAK,CACtC,IAAIiqD,EAKIxtC,EAJa,QADjBwtC,EAAeH,GAAyBn/B,EAAK9Y,MAAO9L,EAAS/F,MAM9C,QADXyc,EAASutC,GAAqB5xB,EAAczN,EAAM2+B,EAAUjF,KAAM4F,KAElEE,GAAST,EAAOjtC,GAKhCitC,EAAQA,EAAM7nD,MAGtB,SAASsoD,GAAST,EAAOU,GACrBV,EAAMjlD,OAAOtC,KAAKioD,GAClBV,EAAM7N,KAAK5pB,WAUf,SAASu3B,GAAYa,EAAU/d,EAAWgd,EAAWjF,GACjD,OACIxiD,KAAMwoD,EACNxO,KAAMvP,EACNgd,UAZR,SAASgB,EAAgBhB,EAAWjF,GAChC,IAAIh6C,EAAUjL,MAAMiL,QAAQi/C,GAC5B,OACIjgD,KAAMgB,EAAU,KAAOi/C,EACvBvjD,SAAUsE,EAAUi/C,EAAY,KAChCjF,KAAMA,GAOKiG,CAAgBhB,EAAWjF,GACtC5/C,OAAQ6nC,EAAUie,YAClBZ,gBAAiB,MAGzB,IAkFIa,GAlF4B,WAC5B,SAASC,IACL5rD,KAAKqlC,OAAQ,EACbrlC,KAAKy8C,QAAU,IAAIf,GACnB17C,KAAK6rD,WAEL7rD,KAAK0rD,eA0ET,OAxEAtrD,OAAO+B,eAAeypD,EAAW/qD,UAAW,UACxCsK,IAAK,WAAc,OAAOnL,KAAK6rD,QAAQvqD,QACvCwX,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeypD,EAAW/qD,UAAW,SACxCsK,IAAK,WACD,IAAIvF,EAAS5F,KAAK6rD,QAClB,OAAOjmD,EAAOtE,OAASsE,EAAO,GAAK,MAEvCkT,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeypD,EAAW/qD,UAAW,QACxCsK,IAAK,WACD,IAAIvF,EAAS5F,KAAK6rD,QAClB,OAAOjmD,EAAOtE,OAASsE,EAAOA,EAAOtE,OAAS,GAAK,MAEvDwX,YAAY,EACZC,cAAc,IAMlB6yC,EAAW/qD,UAAUgJ,IAAM,SAAUT,GAAM,OAAOpJ,KAAK6rD,QAAQhiD,IAAIT,IAKnEwiD,EAAW/qD,UAAU67C,OAAS,SAAUtzC,GACpC,OAAOpJ,KAAK6rD,QAAQnP,OAAOtzC,IAM/BwiD,EAAW/qD,UAAU8b,KAAO,SAAUvT,GAClC,OAAOpJ,KAAK6rD,QAAQlvC,KAAKvT,IAM7BwiD,EAAW/qD,UAAU87C,OAAS,SAAUvzC,EAAIwzC,GACxC,OAAO58C,KAAK6rD,QAAQlP,OAAOvzC,EAAIwzC,IAMnCgP,EAAW/qD,UAAU8N,QAAU,SAAUvF,GAAMpJ,KAAK6rD,QAAQl9C,QAAQvF,IAKpEwiD,EAAW/qD,UAAU0kB,KAAO,SAAUnc,GAClC,OAAOpJ,KAAK6rD,QAAQtmC,KAAKnc,IAE7BwiD,EAAW/qD,UAAUg8C,QAAU,WAAc,OAAO78C,KAAK6rD,QAAQ7/C,MAAM,IACvE4/C,EAAW/qD,UAAUiI,KAAuB,WAAc,OAAO9I,KAAK6rD,QAAQ/iD,QAC9E8iD,EAAW/qD,UAAUyD,SAAW,WAAc,OAAOtE,KAAK6rD,QAAQvnD,YAClEsnD,EAAW/qD,UAAUi8C,MAAQ,SAAU9yC,GACnChK,KAAK6rD,QAr3Pb,SAASC,EAAQ9O,GAGb,IAFA,IAAIp/B,KACAzc,EAAI,EACDA,EAAI67C,EAAK17C,QAAQ,CACpB,IAAIkU,EAAOwnC,EAAK77C,GACZZ,MAAMiL,QAAQgK,GACVA,EAAKlU,OAAS,GACd07C,EAAOxnC,EAAK/R,OAAOu5C,EAAKhxC,MAAM7K,EAAI,IAClCA,EAAI,GAGJA,KAIJyc,EAAOta,KAAKkS,GACZrU,KAGR,OAAOyc,EAk2PYkuC,CAAQ9hD,GACvBhK,KAAKqlC,OAAQ,GAEjBumB,EAAW/qD,UAAUu8C,gBAAkB,WAAcp9C,KAAKy8C,QAAQZ,KAAK77C,OACvE4rD,EAAW/qD,UAAUuyB,SAAW,WAAcpzB,KAAKqlC,OAAQ,GAC3DumB,EAAW/qD,UAAU+oB,QAAU,WAC3B5pB,KAAKy8C,QAAQV,WACb/7C,KAAKy8C,QAAQnc,eAEVsrB,EAhFoB,GA6F/B,SAASf,GAAMkB,EAAatB,EAAWC,EAASlF,GAE5C,IAAI/X,EAAY,IAAIke,GAOpB,OAp5MJ,SAASK,EAAkBC,GAEvB,OAAOl1B,KACFA,GACIF,GAAqByC,SAAWzC,GAAqByC,QAAQsxB,SAC1D,IAAIqB,GAy4MFD,CAAkB3B,IACxBG,MAAM/c,EAAWgd,EAAWC,EAASlF,GAC7CnlB,GAAwB,KAAMoN,EAAWA,EAAU7jB,SAChC,MAAfmiC,GACAv4B,GAAMu4B,EAAate,GAEhBA,EAOX,SAASye,GAAaze,GAElB,QAAIA,EAAUpI,QACVoI,EAAUqP,MAFMrP,EAEcie,aAC9Bje,EAAU2P,mBACH;;;;;;;;;;;;;;OAoBf,IAAI+O,GAAQ,8BACZ,SAASC,GAAwBnpD,EAAOuH,GACpC,OAAQvH,aAAiBqJ,QAAUrJ,EAAMkpD,MAAW3hD,EA8DxD,SAAS6hD,GAA8BC,EAAet7B,GAClD,IAAIu7B,EAAU,IAAIjgD,OAAOggD,GAEzB,OADAC,EAAQJ,IAASn7B,EACVu7B;;;;;;;OAaX,SAASC,GAAU39C,GAGf,QAASA,GAA2B,mBAAbA,EAAIvF,KAK/B,SAASmjD,GAAa59C,GAGlB,QAASA,GAAgC,mBAAlBA,EAAIuxB;;;;;;;OAa/B,IAAIssB,GAAkB,IAAIxoD,EAAe,2BAIrCyoD,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAI10C,EAAQlY,KACZA,KAAK4sD,SAAWA,EAChB5sD,KAAK6sD,aAAc,EACnB7sD,KAAKkD,MAAO,EACZlD,KAAK8sD,YAAc,IAAInkD,QAAQ,SAAUqB,EAAK+iD,GAC1C70C,EAAMtP,QAAUoB,EAChBkO,EAAM80C,OAASD,IAiCvB,OA7BAJ,EAAsB9rD,UAAUosD,gBAAkB,WAC9C,IAAI/0C,EAAQlY,KACZ,IAAIA,KAAK6sD,YAAT,CAGA,IAAIK,KACAnR,EAAW,WACX7jC,EAAMhV,MAAO,EACbgV,EAAMtP,WAEV,GAAI5I,KAAK4sD,SACL,IAAK,IAAIzrD,EAAI,EAAGA,EAAInB,KAAK4sD,SAAStrD,OAAQH,IAAK,CAC3C,IAAIgsD,EAAantD,KAAK4sD,SAASzrD,KAC3BqrD,GAAUW,IACVD,EAAkB5pD,KAAK6pD,GAInCxkD,QAAQykD,IAAIF,GAAmB5jD,KAAK,WAAcyyC,MAAesR,MAAM,SAAUjqD,GAAK8U,EAAM80C,OAAO5pD,KAClE,IAA7B8pD,EAAkB5rD,QAClBy6C,IAEJ/7C,KAAK6sD,aAAc,IAECprD,GACpB4f,KACAjf,EAAQ,EAAGqI,EAAOiiD,KAAmBtqD,EAAQ,EAAGsI,KAChDnI,EAAW,qBAAsBhC,SAClCosD,GAxCmC,GA6DtCW,GAAS,IAAIppD,EAAe,SAQ5BqpD,IACAlhD,QAASihD,GACT3/C,WATJ,SAAS6/C,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,MAS5C1gD,SAEJ,SAAS0gD,KACL,OAAOnhD,OAAOohD,aAAa,GAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,WAMpD,IAqDIC,GACAC,GAtDAC,GAAuB,IAAI9pD,EAAe,wBAK1C+pD,GAAc,IAAI/pD,EAAe,eASjCgqD,GAAyB,IAAIhqD,EAAe,wBAK5CiqD,GAAmB,IAAIjqD,EAAe,iCAStCkqD,GAAyB,WACzB,SAASA,KAcT,OAZAA,EAAQvtD,UAAUwtD,IAAM,SAAU7/C,GAE9BuT,QAAQssC,IAAI7/C,IAGhB4/C,EAAQvtD,UAAUytD,KAAO,SAAU9/C,GAE/BuT,QAAQusC,KAAK9/C,IAEP/M,GACN4f,MACD+sC,GAdqB,GA+DxBG,GApCJ,SAASC,KACL,IAAIC,EAAMhmD,EAA+B,IACzC,SAAIgmD,KACAX,GAAQW,EAAW,SAEfV,GAASD,GAAc,OAChB,IA8BFU,GACjB,SAASE,GAAUC,EAAMC,GACrB,OAAO,KAgCX,IAAIC,GAAiBN,GA3DrB,SAASO,GAAY1rC,EAAWnV,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzB8/C,GAAOe,YAAY1rC,EAAWnV,IAyDO,SAAUmV,EAAWnV,GAAS,OAAOygD,IAUjFK,GAAWR,GAjEf,SAASS,GAAMC,EAAOrvB,GAElB,OADAkuB,GAAMoB,WAAWD,EAAOrvB,GACjBA,GA+DyB,SAAU1+B,EAAGa,GAAK,OAAOA,GAczDotD,GAAoBZ,GA3ExB,SAASa,GAAeC,EAAW3iC,GAC/B,OAAOohC,GAAMwB,eAAeD,EAAW3iC,IA0EW,SAAU2iC,EAAW3iC,GAAU,OAAO,MAOxF6iC,GAAkBhB,GA/EtB,SAASiB,GAAaC,GAClB3B,GAAM0B,aAAaC;;;;;;;QA8E2B,SAAU1tD,GAAK,OAAO,MAmFpE2tD,GAAwB,WACxB,SAASA,EAAOvqD,GACZ,IAAI4tC,EAAK5tC,EAAGwqD,qBAAsBA,OAA8B,IAAP5c,GAAwBA,EA2BjF,GA1BA/yC,KAAK4vD,sBAAuB,EAC5B5vD,KAAK6vD,sBAAuB,EAI5B7vD,KAAK8vD,UAAW,EAIhB9vD,KAAK+vD,WAAa,IAAIrU,IAAa,GAMnC17C,KAAKgwD,iBAAmB,IAAItU,IAAa,GAMzC17C,KAAKiwD,SAAW,IAAIvU,IAAa,GAIjC17C,KAAKkwD,QAAU,IAAIxU,IAAa,GACb,oBAARryC,KACP,MAAM,IAAIgC,MAAM,kDAEpBhC,KAAK8mD,oBACMnwD,KACNowD,SAAW,EADLpwD,KAENqwD,OAFMrwD,KAEQswD,OAASjnD,KAAKE,QAC7BF,KAAkB,cAHXrJ,KAIFswD,OAJEtwD,KAIYswD,OAAOC,KAAKlnD,KAAkB,cAEjDA,KAA2B,uBANpBrJ,KAOFswD,OAPEtwD,KAOYswD,OAAOC,KAAK,IAAIlnD,KAA2B,uBAE9DsmD,GAAwBtmD,KAA6B,yBAT9CrJ,KAUFswD,OAVEtwD,KAUYswD,OAAOC,KAAKlnD,KAA6B,yBAkGxE,SAASmnD,EAAiCC,GACtCA,EAAKH,OAASG,EAAKH,OAAOC,MACtB5rD,KAAM,UACN+rD,YAAcC,eAAiB,GAC/BC,aAAc,SAAUC,EAAUtnD,EAAS5H,EAAQmvD,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQR,GACDI,EAASK,WAAWvvD,EAAQmvD,EAAMC,EAAWC,GAExD,QACIG,GAAQV,KAGhBW,SAAU,SAAUP,EAAUtnD,EAAS5H,EAAQ89C,EAAUsR,EAAWC,EAAWrkD,GAC3E,IAEI,OADAskD,GAAQR,GACDI,EAASQ,OAAO1vD,EAAQ89C,EAAUsR,EAAWC,EAAWrkD,GAEnE,QACIwkD,GAAQV,KAGhBa,UAAW,SAAUT,EAAUtnD,EAAS5H,EAAQ4vD,GAC5CV,EAASW,QAAQ7vD,EAAQ4vD,GACrBhoD,IAAY5H,IAGe,aAAvB4vD,EAAaE,QACbhB,EAAKb,qBAAuB2B,EAAaG,UACzCC,GAAYlB,IAEgB,aAAvBc,EAAaE,SAClBhB,EAAKZ,qBAAuB0B,EAAaK,aAIrDC,cAAe,SAAUhB,EAAUtnD,EAAS5H,EAAQ4B,GAGhD,OAFAstD,EAAS3uC,YAAYvgB,EAAQ4B,GAC7BktD,EAAKqB,kBAAkB,WAAc,OAAOrB,EAAKP,QAAQrU,KAAKt4C,MACvD,KAvIXitD,CAZWxwD,MAqFf,OAvEA0vD,EAAOqC,gBAAkB,WAAc,OAA6C,IAAtC1oD,KAAKE,QAAQ4B,IAAI,kBAC/DukD,EAAOsC,oBAAsB,WACzB,IAAKtC,EAAOqC,kBACR,MAAM,IAAI1mD,MAAM,mDAGxBqkD,EAAOuC,uBAAyB,WAC5B,GAAIvC,EAAOqC,kBACP,MAAM,IAAI1mD,MAAM,mDAexBqkD,EAAO7uD,UAAUqxD,IAAM,SAAU9oD,EAAI2nD,EAAWC,GAC5C,OAAOhxD,KAAKswD,OAAO4B,IAAI9oD,EAAI2nD,EAAWC,IAc1CtB,EAAO7uD,UAAUsxD,QAAU,SAAU/oD,EAAI2nD,EAAWC,EAAWrsD,GAC3D,IAAI8rD,EAAOzwD,KAAKswD,OACZQ,EAAOL,EAAK2B,kBAAkB,gBAAkBztD,EAAMyE,EAAIipD,GAAeC,GAAMA,IACnF,IACI,OAAO7B,EAAK0B,QAAQrB,EAAMC,EAAWC,GAEzC,QACIP,EAAK8B,WAAWzB,KAOxBpB,EAAO7uD,UAAU2xD,WAAa,SAAUppD,EAAI2nD,EAAWC,GACnD,OAAOhxD,KAAKswD,OAAOkC,WAAWppD,EAAI2nD,EAAWC,IAejDtB,EAAO7uD,UAAUixD,kBAAoB,SAAU1oD,GAC3C,OAAOpJ,KAAKqwD,OAAO6B,IAAI9oD,IAEpBsmD,EAtHgB,GAwH3B,SAAS4C,MACT,IAAID,MACJ,SAASV,GAAYlB,GACjB,GAAqB,GAAjBA,EAAKL,WAAkBK,EAAKb,uBAAyBa,EAAKX,SAC1D,IACIW,EAAKL,WACLK,EAAKT,iBAAiBnU,KAAK,MAE/B,QAEI,GADA4U,EAAKL,YACAK,EAAKb,qBACN,IACIa,EAAKqB,kBAAkB,WAAc,OAAOrB,EAAKR,SAASpU,KAAK,QAEnE,QACI4U,EAAKX,UAAW,IAiDpC,SAASmB,GAAQR,GACbA,EAAKL,WACDK,EAAKX,WACLW,EAAKX,UAAW,EAChBW,EAAKV,WAAWlU,KAAK,OAG7B,SAASsV,GAAQV,GACbA,EAAKL,WACLuB,GAAYlB,GAMhB,IA+QIgC,GA/QAC,GAA4B,WAC5B,SAASA,IACL1yD,KAAK4vD,sBAAuB,EAC5B5vD,KAAK6vD,sBAAuB,EAC5B7vD,KAAK8vD,UAAW,EAChB9vD,KAAK+vD,WAAa,IAAIrU,GACtB17C,KAAKgwD,iBAAmB,IAAItU,GAC5B17C,KAAKiwD,SAAW,IAAIvU,GACpB17C,KAAKkwD,QAAU,IAAIxU,GAMvB,OAJAgX,EAAW7xD,UAAUqxD,IAAM,SAAU9oD,GAAM,OAAOA,KAClDspD,EAAW7xD,UAAU2xD,WAAa,SAAUppD,GAAM,OAAOA,KACzDspD,EAAW7xD,UAAUixD,kBAAoB,SAAU1oD,GAAM,OAAOA,KAChEspD,EAAW7xD,UAAUsxD,QAAU,SAAU/oD,GAAM,OAAOA,KAC/CspD,EAdoB,GA8B3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAI16C,EAAQlY,KACZA,KAAK4yD,QAAUA,EACf5yD,KAAK6yD,cAAgB,EACrB7yD,KAAK8yD,eAAgB,EAOrB9yD,KAAK+yD,UAAW,EAChB/yD,KAAKgzD,cACLhzD,KAAKizD,sBACLL,EAAQV,IAAI,WAAch6C,EAAMg7C,iBAAmB7pD,KAAKE,QAAQ4B,IAAI,sBA6IxE,OA3IAwnD,EAAY9xD,UAAUoyD,oBAAsB,WACxC,IAAI/6C,EAAQlY,KACZA,KAAK4yD,QAAQ7C,WAAW3vB,WACpBp9B,KAAM,WACFkV,EAAM66C,UAAW,EACjB76C,EAAM46C,eAAgB,KAG9B9yD,KAAK4yD,QAAQd,kBAAkB,WAC3B55C,EAAM06C,QAAQ3C,SAAS7vB,WACnBp9B,KAAM,WACF0sD,GAAOuC,yBACP9oD,EAAkB,WACd+O,EAAM46C,eAAgB,EACtB56C,EAAMi7C,+BAU1BR,EAAY9xD,UAAUuyD,4BAA8B,WAGhD,OAFApzD,KAAK6yD,eAAiB,EACtB7yD,KAAK+yD,UAAW,EACT/yD,KAAK6yD,eAMhBF,EAAY9xD,UAAUwyD,4BAA8B,WAEhD,GADArzD,KAAK6yD,eAAiB,EAClB7yD,KAAK6yD,cAAgB,EACrB,MAAM,IAAIxnD,MAAM,qCAGpB,OADArL,KAAKmzD,uBACEnzD,KAAK6yD,eAKhBF,EAAY9xD,UAAUivD,SAAW,WAC7B,OAAO9vD,KAAK8yD,eAAwC,IAAvB9yD,KAAK6yD,gBAAwB7yD,KAAK4yD,QAAQ/C,sBAE3E8C,EAAY9xD,UAAUsyD,qBAAuB,WACzC,IAAIj7C,EAAQlY,KACZ,GAAIA,KAAK8vD,WAEL3mD,EAAkB,WACd,KAAmC,IAA5B+O,EAAM86C,WAAW1xD,QAAc,CAClC,IAAIgyD,EAAKp7C,EAAM86C,WAAWO,MAC1BC,aAAaF,EAAGG,WAChBH,EAAGI,OAAOx7C,EAAM66C,UAEpB76C,EAAM66C,UAAW,QAGpB,CAED,IAAIY,EAAY3zD,KAAK4zD,kBACrB5zD,KAAKgzD,WAAahzD,KAAKgzD,WAAWtW,OAAO,SAAU4W,GAC/C,OAAIA,EAAGO,WAAYP,EAAGO,SAASF,KAC3BH,aAAaF,EAAGG,YACT,KAIfzzD,KAAK+yD,UAAW,IAGxBJ,EAAY9xD,UAAU+yD,gBAAkB,WACpC,OAAK5zD,KAAKkzD,iBAIHlzD,KAAKkzD,iBAAiBY,WAAWjqD,IAAI,SAAU5I,GAClD,OACI0L,OAAQ1L,EAAE0L,OAGVonD,iBAAkB9yD,EAAE8yD,iBACpB5sD,KAAMlG,EAAEkG,YAIpBwrD,EAAY9xD,UAAUmzD,YAAc,SAAUV,EAAIW,EAASJ,GACvD,IAAI37C,EAAQlY,KACRyzD,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAYtX,WAAW,WACnBjkC,EAAM86C,WAAa96C,EAAM86C,WAAWtW,OAAO,SAAU4W,GAAM,OAAOA,EAAGG,YAAcA,IACnFH,EAAGp7C,EAAM66C,SAAU76C,EAAM07C,oBAC1BK,IAEPj0D,KAAKgzD,WAAW1vD,MAAOowD,OAAQJ,EAAIG,UAAWA,EAAWI,SAAUA,KAcvElB,EAAY9xD,UAAUqzD,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAa7zD,KAAKkzD,iBAClB,MAAM,IAAI7nD,MAAM,8HAIpBrL,KAAKg0D,YAAYN,EAAQO,EAASJ,GAClC7zD,KAAKmzD,wBAMTR,EAAY9xD,UAAUszD,uBAAyB,WAAc,OAAOn0D,KAAK6yD,eAOzEF,EAAY9xD,UAAUuzD,cAAgB,SAAUC,EAAOnnD,EAAUonD,GAE7D,UAEU7yD,GACV4f,KACA9e,EAAW,qBAAsBmtD,MAClCiD,GA3JyB,GAkK5B4B,GAAqC,WACrC,SAASA,IAELv0D,KAAKw0D,cAAgB,IAAItrD,IACzBurD,GAAmBC,YAAY10D,MA8CnC,OAvCAu0D,EAAoB1zD,UAAU8zD,oBAAsB,SAAU/qD,EAAOgrD,GACjE50D,KAAKw0D,cAAc1nD,IAAIlD,EAAOgrD,IAMlCL,EAAoB1zD,UAAUg0D,sBAAwB,SAAUjrD,GAAS5J,KAAKw0D,cAAc15C,OAAOlR,IAInG2qD,EAAoB1zD,UAAUi0D,0BAA4B,WAAc90D,KAAKw0D,cAAc56C,SAK3F26C,EAAoB1zD,UAAUk0D,eAAiB,SAAUC,GAAQ,OAAOh1D,KAAKw0D,cAAcrpD,IAAI6pD,IAAS,MAIxGT,EAAoB1zD,UAAUo0D,oBAAsB,WAAc,OAAO10D,MAAM4lB,KAAKnmB,KAAKw0D,cAAc5uD,WAIvG2uD,EAAoB1zD,UAAUq0D,mBAAqB,WAAc,OAAO30D,MAAM4lB,KAAKnmB,KAAKw0D,cAAcxrD,SAOtGurD,EAAoB1zD,UAAUs0D,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsBn1D,KAAMg1D,EAAMI,IAE1C3zD,GAClB4f,KACA9e,EAAW,yBACZgyD,GAjDiC,GAoEpCE,GAAqB,IAhBgB,WACrC,SAASY,KAMT,OAJAA,EAAoBx0D,UAAU6zD,YAAc,SAAU73B,KACtDw4B,EAAoBx0D,UAAUs0D,sBAAwB,SAAUt4B,EAAUm4B,EAAMI,GAC5E,OAAO,MAEJC,EAP6B,IAyBpCC,IAAW,EACXC,IAAiB,EAEjBC,GAA2B,IAAItxD,EAAe;;;;;;;OAyBlD,SAASuxD,KAEL,OADAF,IAAiB,EACVD,GAOX,IAAII,GACA,SAASA,GAAa/wD,EAAMiF,GACxB5J,KAAK2E,KAAOA,EACZ3E,KAAK4J,MAAQA,GAUrB,SAAS+rD,GAAermD,GACpB,GAAImjD,KAAcA,GAAUppC,YACvBopC,GAAUnjD,SAASnE,IAAIqqD,IAA0B,GAClD,MAAM,IAAInqD,MAAM,iFAEpBonD,GAAYnjD,EAASnE,IAAIyqD,IACzB,IAAIC,EAAQvmD,EAASnE,IAAI6iD,GAAsB,MAG/C,OAFI6H,GACAA,EAAMlnD,QAAQ,SAAUiuC,GAAQ,OAAOA,MACpC6V,GAOX,SAASqD,GAAsBC,EAAuBpxD,EAAMX,QACtC,IAAdA,IAAwBA,MAC5B,IAAInC,EAAO,aAAe8C,EACtBqxD,EAAS,IAAI9xD,EAAerC,GAChC,OAAO,SAAUo0D,QACU,IAAnBA,IAA6BA,MACjC,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAAS5mD,SAASnE,IAAIqqD,IAA0B,GAC7D,GAAIO,EACAA,EAAsB/xD,EAAUP,OAAOwyD,GAAgBxyD,QAAS4I,QAAS2pD,EAAQzpD,UAAU,SAE1F,CACD,IAAI6pD,EAAoBpyD,EAAUP,OAAOwyD,GAAgBxyD,QAAS4I,QAAS2pD,EAAQzpD,UAAU,IAC7FopD,GAAerqD,GAASxK,QAASkD,UAAWoyD,EAAmBzxD,KAAM9C,KAG7E,OAAOw0D,GAAeL,IAQ9B,SAASK,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAI7qD,MAAM,uBAEpB,IAAK6qD,EAAS5mD,SAASnE,IAAImrD,EAAe,MACtC,MAAM,IAAIjrD,MAAM,wFAEpB,OAAO6qD,EAiBX,SAASC,KACL,OAAO1D,KAAcA,GAAUppC,UAAYopC,GAAY,KAU3D,IAAImD,GAA6B,WAE7B,SAASA,EAAYW,GACjBv2D,KAAKu2D,UAAYA,EACjBv2D,KAAKw2D,YACLx2D,KAAKy2D,qBACLz2D,KAAK02D,YAAa,EAgItB,OAtGAd,EAAY/0D,UAAU81D,uBAAyB,SAAUC,EAAe7yD,GACpE,IAAImU,EAAQlY,KAMR62D,EAiGZ,SAASC,EAAUC,GASf,MAPqB,SAAjBA,EACS,IAAIrE,IAGc,YAAjBqE,OAA6BlzD,EAAYkzD,IAC/C,IAAIrH,IAASC,qBAAsB8F,OAxG1BqB,CADM/yD,EAAUA,EAAQ8yD,YAAShzD,GAE1CG,IAAeqI,QAASqjD,GAAQnjD,SAAUsqD,IAG9C,OAAOA,EAAO3E,IAAI,WACd,IAAI8E,EAAiB1rD,GAASxK,QAASkD,UAAWA,EAAWuH,OAAQ2M,EAAM5I,SAAU3K,KAAMiyD,EAAchd,WAAWj1C,OAChHsyD,EAAYL,EAAc91D,OAAOk2D,GACjCE,EAAmBD,EAAU3nD,SAASnE,IAAI6W,GAAc,MAC5D,IAAKk1C,EACD,MAAM,IAAI7rD,MAAM,iEAIpB,OAFA4rD,EAAU5kD,UAAU,WAAc,OAAOyH,GAAO5B,EAAMs+C,SAAUS,KAChEJ,EAAO/E,kBAAkB,WAAc,OAAO+E,EAAO3G,QAAQ9vB,WAAYp9B,KAAM,SAAUO,GAAS2zD,EAAiBh1C,YAAY3e,QAgG3I,SAAS4zD,EAA6BrlB,EAAc+kB,EAAQpX,GACxD,IACI,IAAI7hC,EAAS6hC,IACb,OAAI+M,GAAU5uC,GACHA,EAAOyvC,MAAM,SAAUjqD,GAG1B,MAFAyzD,EAAO/E,kBAAkB,WAAc,OAAOhgB,EAAa5vB,YAAY9e,KAEjEA,IAGPwa,EAEX,MAAOxa,GAGH,MAFAyzD,EAAO/E,kBAAkB,WAAc,OAAOhgB,EAAa5vB,YAAY9e,KAEjEA,GA9GK+zD,CAA6BD,EAAkBL,EAAQ,WAC1D,IAAIO,EAAaH,EAAU3nD,SAASnE,IAAIwhD,IAExC,OADAyK,EAAWnK,kBACJmK,EAAWtK,YAAYxjD,KAAK,WAE/B,OADA4O,EAAMm/C,mBAAmBJ,GAClBA,SAqBvBrB,EAAY/0D,UAAUy2D,gBAAkB,SAAU1d,EAAY2d,GAC1D,IAAIr/C,EAAQlY,UACY,IAApBu3D,IAA8BA,MAClC,IAAIC,EAAkBx3D,KAAKsP,SAASnE,IAAIivC,IACpCr2C,EAAU0zD,MAAmBF,GAEjC,OADkBC,EAAgBE,gBAAgB3zD,IAC/B81C,mBAAmBD,GACjCtwC,KAAK,SAAUstD,GAAiB,OAAO1+C,EAAMy+C,uBAAuBC,EAAe7yD,MAE5F6xD,EAAY/0D,UAAUw2D,mBAAqB,SAAUJ,GACjD,IAAIhX,EAASgX,EAAU3nD,SAASnE,IAAIwsD,IACpC,GAAIV,EAAUhP,qBAAqB3mD,OAAS,EACxC21D,EAAUhP,qBAAqBt5C,QAAQ,SAAUkO,GAAK,OAAOojC,EAAOvJ,UAAU75B,SAE7E,CAAA,IAAIo6C,EAAUj6B,SAAS46B,cAIxB,MAAM,IAAIvsD,MAAM,cAAgB1B,EAAUstD,EAAUj6B,SAASp8B,aAAe,yIAH5Eq2D,EAAUj6B,SAAS46B,cAAc3X,GAMrCjgD,KAAKw2D,SAASlzD,KAAK2zD,IAKvBrB,EAAY/0D,UAAUwR,UAAY,SAAUotC,GAAYz/C,KAAKy2D,kBAAkBnzD,KAAKm8C,IACpFr/C,OAAO+B,eAAeyzD,EAAY/0D,UAAW,YAKzCsK,IAAK,WAAc,OAAOnL,KAAKu2D,WAC/Bz9C,YAAY,EACZC,cAAc,IAKlB68C,EAAY/0D,UAAU+oB,QAAU,WAC5B,GAAI5pB,KAAK02D,WACL,MAAM,IAAIrrD,MAAM,4CAEpBrL,KAAKw2D,SAASxqD,QAAQ2C,QAAQ,SAAUpP,GAAU,OAAOA,EAAOqqB,YAChE5pB,KAAKy2D,kBAAkB9nD,QAAQ,SAAUqwB,GAAY,OAAOA,MAC5Dh/B,KAAK02D,YAAa,GAEtBt2D,OAAO+B,eAAeyzD,EAAY/0D,UAAW,aACzCsK,IAAK,WAAc,OAAOnL,KAAK02D,YAC/B59C,YAAY,EACZC,cAAc,IAEJtX,GACV4f,KACA9e,EAAW,qBAAsB+I,MAClCsqD,GArIyB,GAqKhC,SAAS6B,GAAeI,EAAKhxC,GAOzB,OANItmB,MAAMiL,QAAQqb,GACRA,EAAK81B,OAAO8a,GAAgBI,GAG5B92D,KAAa82D,EAAKhxC,GAOhC,IAAI8wC,GAAgC,WAEhC,SAASA,EAAeG,EAAO71C,EAAUs0C,EAAWwB,EAAmBC,EAA2BC,GAC9F,IAAI//C,EAAQlY,KACZA,KAAK83D,MAAQA,EACb93D,KAAKiiB,SAAWA,EAChBjiB,KAAKu2D,UAAYA,EACjBv2D,KAAK+3D,kBAAoBA,EACzB/3D,KAAKg4D,0BAA4BA,EACjCh4D,KAAKi4D,YAAcA,EACnBj4D,KAAKk4D,uBACLl4D,KAAKm4D,UACLn4D,KAAKo4D,cAAe,EACpBp4D,KAAKq4D,sBAAuB,EAC5Br4D,KAAKs4D,SAAU,EAKft4D,KAAKu4D,kBAILv4D,KAAK84B,cACL94B,KAAKq4D,qBAAuB5C,KAC5Bz1D,KAAK83D,MAAM9H,iBAAiB5vB,WAAYp9B,KAAM,WAAckV,EAAM4/C,MAAM5F,IAAI,WAAch6C,EAAMsgD,YAChG,IAAIC,EAAoB,IAAI54D,EAAK64D,WAAW,SAAUC,GAClDzgD,EAAMogD,QAAUpgD,EAAM4/C,MAAMhI,WAAa53C,EAAM4/C,MAAMjI,uBAChD33C,EAAM4/C,MAAMlI,qBACjB13C,EAAM4/C,MAAMhG,kBAAkB,WAC1B6G,EAAS31D,KAAKkV,EAAMogD,SACpBK,EAAS5c,eAGb+T,EAAW,IAAIjwD,EAAK64D,WAAW,SAAUC,GAGzC,IAAIC,EACJ1gD,EAAM4/C,MAAMhG,kBAAkB,WAC1B8G,EAAY1gD,EAAM4/C,MAAM7H,SAAS7vB,UAAU,WACvCsvB,GAAOuC,yBAGP9oD,EAAkB,WACT+O,EAAMogD,SAAYpgD,EAAM4/C,MAAMjI,sBAC9B33C,EAAM4/C,MAAMlI,uBACb13C,EAAMogD,SAAU,EAChBK,EAAS31D,MAAK,UAK9B,IAAI61D,EAAc3gD,EAAM4/C,MAAM/H,WAAW3vB,UAAU,WAC/CsvB,GAAOsC,sBACH95C,EAAMogD,UACNpgD,EAAMogD,SAAU,EAChBpgD,EAAM4/C,MAAMhG,kBAAkB,WAAc6G,EAAS31D,MAAK,QAGlE,OAAO,WACH41D,EAAUt4B,cACVu4B,EAAYv4B,iBAGpBtgC,KAAK8vD,SACDjwD,EAAKi5D,MAAML,EAAmB3I,EAASpG,KAAK5pD,EAAUi5D,UA8H9D,IAAIC,EAUJ,OAtIAA,EAAmBrB,EAiBnBA,EAAe92D,UAAU61C,UAAY,SAAUuiB,EAAoB9d,GAC/D,IAIIuL,EAJAxuC,EAAQlY,KACZ,IAAKA,KAAKi4D,YAAY/0D,KAClB,MAAM,IAAImI,MAAM,iJAIhBq7C,EADAuS,aAA8B3e,GACX2e,EAIfj5D,KAAKg4D,0BAA0Btd,wBAAwBue,GAE/Dj5D,KAAKu4D,eAAej1D,KAAKojD,EAAiB3L,eAE1C,IAAIvwB,EAAWk8B,aAA4B1L,GACvC,KACAh7C,KAAKu2D,UAAUprD,IAAImwC,IAEnB4d,EAAUxS,EAAiB5lD,OAAOwK,GAASI,QAD1ByvC,GAAsBuL,EAAiBx/C,SACasjB,GACzE0uC,EAAQ7mD,UAAU,WAAc6F,EAAMihD,iBAAiBD,KACvD,IAAItE,EAAcsE,EAAQ5pD,SAASnE,IAAIwnD,GAAa,MASpD,OARIiC,GACAsE,EAAQ5pD,SAASnE,IAAIopD,IAChBI,oBAAoBuE,EAAQvX,SAAStG,cAAeuZ,GAE7D50D,KAAKo5D,eAAeF,GAChBzD,MACAz1D,KAAKiiB,SAASosC,IAAI,oGAEf6K,GAYXvB,EAAe92D,UAAU23D,KAAO,WAC5B,IAAItgD,EAAQlY,KACZ,GAAIA,KAAKo4D,aACL,MAAM,IAAI/sD,MAAM,6CAEpB,IAAI4jD,EAAQ+J,EAAiBK,aAC7B,IACIr5D,KAAKo4D,cAAe,EACpBp4D,KAAKm4D,OAAOxpD,QAAQ,SAAUqd,GAAQ,OAAOA,EAAK+d,kBAC9C/pC,KAAKq4D,sBACLr4D,KAAKm4D,OAAOxpD,QAAQ,SAAUqd,GAAQ,OAAOA,EAAK4zB,mBAG1D,MAAOx8C,GAEHpD,KAAK83D,MAAMhG,kBAAkB,WAAc,OAAO55C,EAAM6/C,kBAAkB71C,YAAY9e,KAE1F,QACIpD,KAAKo4D,cAAe,EACpBrJ,GAASE,KAQjB0I,EAAe92D,UAAUy4D,WAAa,SAAU9S,GAC5C,IAAIx6B,EAAOw6B,EACXxmD,KAAKm4D,OAAO70D,KAAK0oB,GACjBA,EAAKg0B,eAAehgD,OAKxB23D,EAAe92D,UAAU2tB,WAAa,SAAUg4B,GAC5C,IAAIx6B,EAAOw6B,EACX1sC,GAAO9Z,KAAKm4D,OAAQnsC,GACpBA,EAAK+zB,oBAET4X,EAAe92D,UAAUu4D,eAAiB,SAAU7X,GAChDvhD,KAAKs5D,WAAW/X,EAAa5mB,UAC7B36B,KAAKw4D,OACLx4D,KAAK84B,WAAWx1B,KAAKi+C,GAELvhD,KAAKu2D,UAAUprD,IAAI+iD,OAA4BzqD,OAAOzD,KAAKk4D,qBACjEvpD,QAAQ,SAAUqwB,GAAY,OAAOA,EAASuiB,MAE5DoW,EAAe92D,UAAUs4D,iBAAmB,SAAU5X,GAClDvhD,KAAKwuB,WAAW+yB,EAAa5mB,UAC7B7gB,GAAO9Z,KAAK84B,WAAYyoB,IAG5BoW,EAAe92D,UAAUkpB,YAAc,WAEnC/pB,KAAKm4D,OAAOnsD,QAAQ2C,QAAQ,SAAUqd,GAAQ,OAAOA,EAAKpC,aAE9DxpB,OAAO+B,eAAew1D,EAAe92D,UAAW,aAI5CsK,IAAK,WAAc,OAAOnL,KAAKm4D,OAAO72D,QACtCwX,YAAY,EACZC,cAAc,IAIlB4+C,EAAe0B,WAAaxK,GAAe,yBAC1BmK,EAAmBv3D,GAChC4f,KACA9e,EAAW,qBAAsBmtD,GAAQtB,GAAS9iD,GAC9C0W,GACA24B,GACAgS,MACLgL,GAxM4B,GA2MnC,SAAS79C,GAAOkjC,EAAMuc,GAClB,IAAIpzD,EAAQ62C,EAAK9yC,QAAQqvD,GACrBpzD,GAAS,GACT62C,EAAKzuB,OAAOpoB,EAAO;;;;;;;OAmB3B,IAAIqzD,GAAiC,WACjC,SAASA,EAAgBC,GAIrB,GAHAz5D,KAAKy5D,WAAaA,EAClBz5D,KAAK05D,cAAgB15D,KAAKy5D,WAAWE,eAAeC,mBAAmB,sBACvE55D,KAAK65D,iBAAmB75D,KAAK05D,cAAcI,KACd,MAAzB95D,KAAK65D,iBAA0B,CAG/B,IAAIE,EAAY/5D,KAAK05D,cAAc/9B,cAAc,QACjD37B,KAAK05D,cAActpC,YAAY2pC,GAC/B/5D,KAAK65D,iBAAmB75D,KAAK05D,cAAc/9B,cAAc,QACzDo+B,EAAU3pC,YAAYpwB,KAAK65D,kBAE/B75D,KAAK65D,iBAAiBG,UAAY,wDAC9Bh6D,KAAK65D,iBAAiBn7B,eAAkB1+B,KAAK65D,iBAAiBn7B,cAAc,QAMhF1+B,KAAK65D,iBAAiBG,UAClB,mEAOIh6D,KAAKi6D,oBANTj6D,KAAK65D,iBAAiBn7B,eAAiB1+B,KAAK65D,iBAAiBn7B,cAAc,YAkHvF,SAASw7B,IACL,IACI,QAAS7xD,OAAO8xD,UAEpB,MAAO/2D,GACH,OAAO;;;;;;;OAlHC82D,GAC2Bl6D,KAAKo6D,8BAKbp6D,KAAKq6D,mCAhB5Br6D,KAAKi6D,oBAAsBj6D,KAAKs6D,wBA8GxC,OAvFAd,EAAgB34D,UAAUy5D,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAOn3D,GACH,OAAO,KAEX,IAAIq3D,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,KAAK,MACT,IAAIf,EAAOW,EAAIvyD,SAAS4xD,KAExB,OADAA,EAAKnsC,YAAYmsC,EAAKgB,YACfhB,GAOXN,EAAgB34D,UAAUu5D,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAIT,GAAO,IAAIzxD,OACV8xD,WACAY,gBAAgBR,EAAM,aACtBT,KAEL,OADAA,EAAKnsC,YAAYmsC,EAAKgB,YACfhB,EAEX,MAAO12D,GACH,OAAO,OASfo2D,EAAgB34D,UAAUw5D,kCAAoC,SAAUE,GAEpE,IAAIS,EAAah7D,KAAK05D,cAAc/9B,cAAc,YAClD,MAAI,YAAaq/B,GACbA,EAAWhB,UAAYO,EAChBS,IAEXh7D,KAAK65D,iBAAiBG,UAAYO,EAG9Bv6D,KAAKy5D,WAAWwB,cAChBj7D,KAAKk7D,mBAAmBl7D,KAAK65D,kBAE1B75D,KAAK65D,mBAUhBL,EAAgB34D,UAAUq6D,mBAAqB,SAAU3B,GAGrD,IAFA,IAAI4B,EAAU5B,EAAGtyB,WAER9lC,EAAIg6D,EAAQ75D,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACI68B,EADSm9B,EAAQ3lD,KAAKrU,GACJwD,KACL,cAAbq5B,GAAyD,IAA7BA,EAAS9zB,QAAQ,SAC7CqvD,EAAG34B,gBAAgB5C,GAI3B,IADA,IAAIo9B,EAAY7B,EAAGuB,WACZM,GACCA,EAAUnuC,WAAaouC,KAAKC,cAC5Bt7D,KAAKk7D,mBAAmBE,GAC5BA,EAAYA,EAAUznB,aAGvB6lB,EA/HyB,GAkLhC+B,GAAmB,8DAEnBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAMpvD,OAAOovD,IACLzmB,MAAMsmB,KAAqBG,EAAIzmB,MAAMumB,IAClCE,GACPjG,MACA1zC,QAAQusC,KAAK,wCAA0CoN,EAAM,sCAE1D,UAAYA;;;;;;;;AAcvB,SAASC,GAAOC,GACZ,IAAIjkB,EAAKxyC,EACL6E,KACJ,IACI,IAAK,IAAI+oC,EAAKpwC,EAASi5D,EAAKz2B,MAAM,MAAO02B,EAAK9oB,EAAG/vC,QAAS64D,EAAG34D,KAAM24D,EAAK9oB,EAAG/vC,OAEvEgH,EADQ6xD,EAAG54D,QACF,EAGjB,MAAOo1C,GAASV,GAAQp0C,MAAO80C,GAC/B,QACI,IACQwjB,IAAOA,EAAG34D,OAASiC,EAAK4tC,EAAGuF,SAASnzC,EAAG5D,KAAKwxC,GAEpD,QAAU,GAAI4E,EAAK,MAAMA,EAAIp0C,OAEjC,OAAOyG,EAEX,SAAS8uD,KAEL,IADA,IAIIgD,EAAK32D,EAJL42D,KACK12D,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpC02D,EAAK12D,GAAMhE,UAAUgE,GAGzB,IAAI2E,KACJ,IACI,IAAK,IAAIgyD,EAASr5D,EAASo5D,GAAOE,EAAWD,EAAOh5D,QAASi5D,EAAS/4D,KAAM+4D,EAAWD,EAAOh5D,OAAQ,CAClG,IAAI9B,EAAI+6D,EAASh5D,MACjB,IAAK,IAAI2L,KAAK1N,EACNA,EAAET,eAAemO,KACjB5E,EAAI4E,IAAK,IAIzB,MAAOstD,GAASJ,GAAQv4D,MAAO24D,GAC/B,QACI,IACQD,IAAaA,EAAS/4D,OAASiC,EAAK62D,EAAO1jB,SAASnzC,EAAG5D,KAAKy6D,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAIv4D,OAEjC,OAAOyG,EAOX,IAgJImyD,GA0DOC,GA1MPC,GAAgBV,GAAO,0BAGvBW,GAAkCX,GAAO,kDACzCY,GAAmCZ,GAAO,SAC1Ca,GAA4B1D,GAAMyD,GAAkCD,IAEpEG,GAAiB3D,GAAMwD,GAAiCX,GAAO,oMAI/De,GAAkB5D,GAAMyD,GAAkCZ,GAAO,+LAGjEgB,GAAiB7D,GAAMuD,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYjB,GAAO,gEAEnBkB,GAAelB,GAAO,UACtBmB,GAAanB,GAAO,idAWpBoB,GAAcjE,GAAM8D,GAAWC,GAAcC,IAK7CE,GAA0C,WAC1C,SAASA,IAGLh9D,KAAKi9D,oBAAqB,EAC1Bj9D,KAAKk9D,OAiFT,OA/EAF,EAAyBn8D,UAAUs8D,iBAAmB,SAAU5D,GAK5D,IADA,IAAIhwD,EAAUgwD,EAAGuB,WACVvxD,GAWH,GAVIA,EAAQ0jB,WAAaouC,KAAKC,aAC1Bt7D,KAAKo9D,aAAa7zD,GAEbA,EAAQ0jB,WAAaouC,KAAKgC,UAC/Br9D,KAAKs9D,MAAM/zD,EAAQg0D,WAInBv9D,KAAKi9D,oBAAqB,EAE1B1zD,EAAQuxD,WACRvxD,EAAUA,EAAQuxD,gBAGtB,KAAOvxD,GAAS,CAERA,EAAQ0jB,WAAaouC,KAAKC,cAC1Bt7D,KAAKw9D,WAAWj0D,GAEpB,IAAIvG,EAAOhD,KAAKy9D,sBAAsBl0D,EAASA,EAAQoqC,aACvD,GAAI3wC,EAAM,CACNuG,EAAUvG,EACV,MAEJuG,EAAUvJ,KAAKy9D,sBAAsBl0D,EAASA,EAAQ2kB,YAG9D,OAAOluB,KAAKk9D,IAAIpzD,KAAK,KAEzBkzD,EAAyBn8D,UAAUu8D,aAAe,SAAUliC,GACxD,IAAIjoB,EAAUioB,EAAQwiC,SAASC,cAC/B,GAAKhB,GAAel8D,eAAewS,GAAnC,CAIAjT,KAAKk9D,IAAI55D,KAAK,KACdtD,KAAKk9D,IAAI55D,KAAK2P,GAEd,IADA,IAjJgB2qD,EAiJZzC,EAAUjgC,EAAQ+L,WACb9lC,EAAI,EAAGA,EAAIg6D,EAAQ75D,OAAQH,IAAK,CACrC,IAAI08D,EAAS1C,EAAQ3lD,KAAKrU,GACtB68B,EAAW6/B,EAAOl5D,KAClBm5D,EAAQ9/B,EAAS2/B,cACrB,GAAKZ,GAAYt8D,eAAeq9D,GAAhC,CAIA,IAAI76D,EAAQ46D,EAAO56D,MAEf25D,GAAUkB,KACV76D,EAAQw4D,GAAax4D,IACrB45D,GAAaiB,KA9JLF,EA+Je36D,EAAvBA,GA9JZ26D,EAAStxD,OAAOsxD,IACFz4B,MAAM,KAAKt7B,IAAI,SAAU+zD,GAAU,OAAOnC,GAAamC,EAAOG,UAAYj0D,KAAK,OA8JrF9J,KAAKk9D,IAAI55D,KAAK,IAAK06B,EAAU,KAAMggC,GAAe/6D,GAAQ,UATtDjD,KAAKi9D,oBAAqB,EAWlCj9D,KAAKk9D,IAAI55D,KAAK,UAtBVtD,KAAKi9D,oBAAqB,GAwBlCD,EAAyBn8D,UAAU28D,WAAa,SAAUj0D,GACtD,IAAI0J,EAAU1J,EAAQm0D,SAASC,cAC3BhB,GAAel8D,eAAewS,KAAaopD,GAAc57D,eAAewS,KACxEjT,KAAKk9D,IAAI55D,KAAK,MACdtD,KAAKk9D,IAAI55D,KAAK2P,GACdjT,KAAKk9D,IAAI55D,KAAK,OAGtB05D,EAAyBn8D,UAAUy8D,MAAQ,SAAUA,GAASt9D,KAAKk9D,IAAI55D,KAAK06D,GAAeV,KAC3FN,EAAyBn8D,UAAU48D,sBAAwB,SAAU3xC,EAAMgB,GACvE,GAAIA,IACChB,EAAKmyC,wBAAwBnxC,GAC1BuuC,KAAK6C,kCAAoC7C,KAAK6C,+BAClD,MAAM,IAAI7yD,MAAM,6DAA+DygB,EAAKqyC,WAExF,OAAOrxC,GAEJkwC,EAtFkC,GAyFzCoB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASL,GAAe/6D,GACpB,OAAOA,EAAMkM,QAAQ,KAAM,SACtBA,QAAQivD,GAAuB,SAAUnpB,GAG1C,MAAO,MAAyB,MAFvBA,EAAMqpB,WAAW,GAEJ,QADZrpB,EAAMqpB,WAAW,GACqB,OAAU,OAAW,MAEpEnvD,QAAQkvD,GAAyB,SAAUppB,GAAS,MAAO,KAAOA,EAAMqpB,WAAW,GAAK,MACxFnvD,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAASovD,GAAc9E,EAAY+E,GAC/B,IAAI3E,EAAmB,KACvB,IACIsC,GAAkBA,IAAmB,IAAI3C,GAAgBC,GAEzD,IAAIgF,EAAaD,EAAkBlyD,OAAOkyD,GAAmB,GAC7D3E,EAAmBsC,GAAgBlC,oBAAoBwE,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAIrzD,MAAM,yDAEpBqzD,IACAD,EAAaE,EACbA,EAAa9E,EAAiBG,UAC9BH,EAAmBsC,GAAgBlC,oBAAoBwE,SAClDA,IAAeE,GACxB,IAAIprC,EAAY,IAAIypC,GAChB4B,EAAWrrC,EAAU4pC,iBAAiB0B,GAAmBhF,IAAqBA,GAIlF,OAHIpE,MAAeliC,EAAU0pC,oBACzBl7C,QAAQusC,KAAK,qFAEVsQ,EAEX,QAEI,GAAI/E,EAEA,IADA,IAAI9sC,EAAW8xC,GAAmBhF,IAAqBA,EAChD9sC,EAAS+tC,YACZ/tC,EAASY,YAAYZ,EAAS+tC,aAK9C,SAAS+D,GAAmBtF,GACxB,MAAO,YAAaA,GAIxB,SAASuF,EAAkBvF,GACvB,OAAOA,EAAGtsC,WAAaouC,KAAKC,cAAgC,aAAhB/B,EAAGmE;;;;;;;OALaoB,CAAkBvF,GAC1EA,EAAG1uB,QACH;;;;;;;;AAaGuxB,GAOR98D,EAAQ88D,kBAAoB98D,EAAQ88D,qBANnBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK,eAO3D,IAAI2C,GACA,SAASA,OAgCTC,GAAmB,IAAIC,OAAO,8LAEZ,KAmBlBC,GAAS;;;;;;;OA2Bb,SAASC,GAAel8D,GAEpB,KADAA,EAAQqJ,OAAOrJ,GAAO86D,QAElB,MAAO,GAGX,IAAIqB,EAAWn8D,EAAMgyC,MAAMiqB,IAC3B,OAAKE,GAAY3D,GAAa2D,EAAS,MAAQA,EAAS,IACpDn8D,EAAMgyC,MAAM+pB,KA1BpB,SAASK,EAAkBp8D,GAGvB,IAFA,IAAIq8D,GAAgB,EAChBC,GAAgB,EACXp+D,EAAI,EAAGA,EAAI8B,EAAM3B,OAAQH,IAAK,CACnC,IAAIW,EAAImB,EAAM6L,OAAO3N,GACX,MAANW,GAAcy9D,EACdD,GAAiBA,EAEN,MAANx9D,GAAaw9D,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkBp8D,GAC5CA,GAEPwyD,MACA1zC,QAAQusC,KAAK,0CAA4CrrD,EAAQ,uCAE9D;;;;;;;OAuBX,SAASu8D,GAAaf,GAClB,IAAIv9D,EAAI+1B,KACR,OAAI/1B,EACOA,EAAEu+D,SAASngE,EAAQ88D,gBAAgBsD,KAAMjB,IAAe,GAE/DrS,GAAwBqS,EAAY,QAC7BA,EAAWn6D,WAEfi6D,GAAc1qD,SAAU6X,GAAY+yC,IAe/C,SAASkB,GAAcC,GACnB,IAAI1+D,EAAI+1B,KACR,OAAI/1B,EACOA,EAAEu+D,SAASngE,EAAQ88D,gBAAgByD,MAAOD,IAAgB,GAEjExT,GAAwBwT,EAAa,SAC9BA,EAAYt7D,WAEhB66D,GAAezzC,GAAYk0C,IAgBtC,SAASE,GAAYC,GACjB,IAAI7+D,EAAI+1B,KACR,OAAI/1B,EACOA,EAAEu+D,SAASngE,EAAQ88D,gBAAgB4D,IAAKD,IAAc,GAE7D3T,GAAwB2T,EAAW,OAC5BA,EAAUz7D,WAEdm3D,GAAa/vC,GAAYq0C,IAWpC,SAASE,GAAoBC,GACzB,IAAIh/D,EAAI+1B,KACR,GAAI/1B,EACA,OAAOA,EAAEu+D,SAASngE,EAAQ88D,gBAAgB+D,aAAcD,IAAsB,GAElF,GAAI9T,GAAwB8T,EAAmB,eAC3C,OAAOA,EAAkB57D,WAE7B,MAAM,IAAI+G,MAAM,iFAyBpB,IAqBI+0D,IACAC,mBAAoBjrB,GACpBkrB,mBAAoBppB,GACpBxzC,iBAAoBA,EACpBI,eAAkBA,EAClBy8D,kBAAmB9pB,GACnB+pB,cAAerpB,GACfspB,mBAAoB5c,GACpBl4C,OAAUA,GACV+0D,mBAAoBnc,GACpBoc,2BAA4Btc,GAC5Buc,oBAAqB7c,GACrB8c,qBAAsB5c,GACtB6c,0BAA2B3c,GAC3B4c,sBAAuBtoB,GACvBuoB,iBAAkBvZ,GAClBwZ,4BAA6B3pB,GAC7B4pB,KAAM1gC,GACN2gC,KAAM57D,GACN67D,KAAMpzC,GACNqzC,KAAM/mC,GACNgnC,MAAO/5B,GACPg6B,MAAO/5B,GACPg6B,KAAM/0B,GACNg1B,MAAO/0B,GACPg1B,MAAOrnC,GACPsnC,MAAO1mC,GACP2mC,MAAO5mC,GACP6mC,KAAMzmC,GACN0mC,KAAMzmC,GACN0mC,MAAO7mC,GACP8mC,MAAO1Z,GACP2Z,MAAOtZ,GACPuZ,MAAOrZ,GACPsZ,MAAOrZ,GACPsZ,MAAOrZ,GACPsZ,MAAOrZ,GACPsZ,MAAOpZ,GACPqZ,MAAOnZ,GACPoZ,MAAOlZ,GACPmZ,MAAOjZ,GACPkZ,MAAOxrC,GACPyrC,MAAOvrC,GACPwrC,MAAO93B,GACP+3B,MAAO53B,GACP63B,MAAOz3B,GACP03B,MAAOv3B,GACPw3B,MAAOp3B,GACPq3B,MAAOl3B,GACPm3B,MAAOh3B,GACPi3B,MAAO92B,GACP+2B,MAAOz4B,GACP04B,MAAOthC,GACPuhC,KAAMtkC,GACNukC,MAAO1/B,GACP2/B,KAAMh2C,GACNi2C,KAAM3iC,GACN4iC,OAAQ5Z,GACR6Z,OAAQ1Z,GACR2Z,OAAQ1Z,GACR2Z,OAAQ1Z,GACR2Z,OAAQ1Z,GACR2Z,MAAOx7B,GACPy7B,MAAOta,GACPua,KAAMpZ,GACNqZ,MAAOhY,GACPiY,MAAO32B,GACP42B,MAAO95B,GACP+5B,KAAM73B,GACN83B,KAAMliC,GACNmiC,MAAO3/B,GACP4/B,MAAOhgC,GACPigC,MAAO9gC,GACP+gC,KAAMv8D,GACNw8D,KAAMz+B,GACN0+B,KAAMl9B,GACNm9B,KAAM18B,GACN28B,MAAOtF,GACPuF,MAAOpF,GACPqF,OApGwB,SAAU9lD,EAAMjc,GACxC,YAAcY,IAAVZ,EACgB,qBAATic,GAAwC,eAATA,GAAkC,iBAATA,GAClD,WAATA,GAA8B,WAATA,GAA8B,eAATA,GACjC,qBAATA,EAEDygD,GAAc18D,IA+FrBgiE,MAAOhF,GACPiF,MApHJ,SAASC,GAAeC,GACpB,IAAIlkE,EAAI+1B,KACR,GAAI/1B,EACA,OAAOA,EAAEu+D,SAASngE,EAAQ88D,gBAAgBiJ,OAAQD,IAAiB,GAEvE,GAAIhZ,GAAwBgZ,EAAc,UACtC,OAAOA,EAAa9gE,WAExB,MAAM,IAAI+G,MAAM,0CA6GhBi6D,MAAOxF,IAUPyF,MACAC,GAAmBjlD,IAA2B+1B,eAAgBivB,IAAUA,IACxEE,GAAmBllD,IAA2Bg2B,eAAgBgvB,IAAUA,IACxEG,GAAoBnlD,IAA2Blc,gBAAiBkhE,IAAUA,IAC1EI,GAAkBplD,IAA2BgK,cAAeg7C,IAAUA,IACtEK,GAAcrlD,IAA2Bi2B,UAAW+uB,IAAUA,IAC9DM,GAAgBtlD,IAA2B2nC,YAAaqd,IAAUA,IASlEhoD,GAAW;;;;;;;OACf,SAASuoD,KACL,OAAQvoD,GAAWA,IAAY,IAAIF,GAEvC,SAAS0oD,GAAoBv7D,GACzB,OAAOw7D,GAAoBF,KAAa1/D,WAAWoE,IAEvD,SAASw7D,GAAoBj5D,GACzB,OAAOA,EAAKlD,IAAI,SAAU+d,GAAO,OAErC,SAASq+C,EAAkBr+C,GACvB,IAAInhB,GACAmD,MAAO,IAAI7J,EAASmmE,YAAY,MAChCruC,MAAM,EACNxT,UAAU,EACV8hD,SAAUpmE,EAASqmE,yBAAyBC,MAC5C99D,MAAM,EACN+9D,UAAU,GAEd,SAASC,EAAwB38D,GAEzBnD,EAAK0/D,SADLv8D,IAAUwxC,GACMr7C,EAASqmE,yBAAyBhrB,WAE7CxxC,IAAU0B,GACCvL,EAASqmE,yBAAyB96D,SAE7C1B,IAAU20C,GACCx+C,EAASqmE,yBAAyB7nB,YAE7C30C,IAAU40C,GACCz+C,EAASqmE,yBAAyB5nB,iBAGlCz+C,EAASqmE,yBAAyBC,MAEtD5/D,EAAKmD,MAAQ,IAAI7J,EAASymE,gBAAgB58D,GAE9C,GAAIrJ,MAAMiL,QAAQoc,GAAM,CACpB,GAAmB,IAAfA,EAAItmB,OACJ,MAAM,IAAI+J,MAAM,yCAEpB,IAAK,IAAImC,EAAI,EAAGA,EAAIoa,EAAItmB,OAAQkM,IAAK,CACjC,IAAIi5D,EAAQ7+C,EAAIpa,GAChB,GAAIi5D,aAAiB/7D,GAA+C,aAAnC+7D,EAAMnmE,UAAU8D,eAC7CqC,EAAK4d,UAAW,OAEf,GAAIoiD,aAAiB77D,GAA+C,aAAnC67D,EAAMnmE,UAAU8D,eAClDqC,EAAK6/D,UAAW,OAEf,GAAIG,aAAiB97D,GAA2C,SAAnC87D,EAAMnmE,UAAU8D,eAC9CqC,EAAK8B,MAAO,OAEX,GAAIk+D,aAAiB57D,GAA2C,SAAnC47D,EAAMnmE,UAAU8D,eAC9CqC,EAAKoxB,MAAO,OAEX,GAAI4uC,aAAiBh8D,EACtBhE,EAAKmD,MAAQ,IAAI7J,EAASymE,gBAAgBC,EAAM78D,YAE/C,GAAI68D,aAAiB1/D,EAAW,CACjC,QAA4BlD,IAAxB4iE,EAAMz/D,cACN,MAAM,IAAIqE,MAAM,mCAEpB5E,EAAKmD,MAAQ,IAAI7J,EAASmmE,YAAYO,EAAMz/D,eAC5CP,EAAK0/D,SAAWpmE,EAASqmE,yBAAyBr/D,eAGlDw/D,EAAwBE,SAKhCF,EAAwB3+C,GAE5B,OAAOnhB;;;;;;;OAjEiCw/D,CAAkBr+C,KA2E9D,IAAI8+C,MAiEJ,SAASC,GAA2B5lB,EAAcxhD,GAC9CwhD,EAAaliB,cAAgB,WAAc,OAAOt+B,MAAM4lB,KAAKygD,GAAoBrnE,GAAQsnE,YAAYp1D,YAChG5H,IAAI,SAAUi9D,GAAO,OAAOA,EAAIvwB,gBAAkBuwB,EAAIxwB,iBACtDoG,OAAO,SAAUlrC,GAAO,QAASA,KACtCuvC,EAAajiB,SAAW,WACpB,OAAOv+B,MAAM4lB,KAAKygD,GAAoBrnE,GAAQsnE,YAAYrpC,OAAO3zB,IAAI,SAAU6/C,GAAQ,OAAOA,EAAKlT,aAU3G,SAASowB,GAAoBhtB,GACzB,IAAKmtB,GAAWntB,GACZ,MAAM,IAAIvuC,MAAMuuC,EAAWj1C,KAAO,iCAEtC,IAAI6M,EAAMooC,EAAWsO,YACrB,GAAoC,OAAhC12C,EAAIolC,wBACJ,OAAOplC,EAAIolC,wBAEf,IAAIowB,GACAH,aACIp1D,WAAY,IAAI7J,IAChB41B,MAAO,IAAI51B,KAEfq/D,UACIx1D,WAAY,IAAI7J,IAChB41B,MAAO,IAAI51B,MAmDnB,OAhDA4J,EAAImlC,aAAahoC,QAAQ,SAAUu4D,QAEIrjE,IADZqjE,EACF1wB,UACjBwwB,EAAOH,YAAYrpC,MAAM9iB,IAAIwsD,GAM7BF,EAAOH,YAAYp1D,WAAWiJ,IAAIwsD,KAG1C11D,EAAIvN,QAAQ0K,QAAQ,SAAU8b,GAC1B,IAAI08C,EAAgB18C,EACpB,IAAKs8C,GAAWI,GACZ,MAAM,IAAI97D,MAAM,aAAe87D,EAAcxiE,KAAO,uCAIxD,IAAIyiE,EAAgBR,GAAoBO,GACxCC,EAAcH,SAASx1D,WAAW9C,QAAQ,SAAU04D,GAAS,OAAOL,EAAOH,YAAYp1D,WAAWiJ,IAAI2sD,KACtGD,EAAcH,SAASzpC,MAAM7uB,QAAQ,SAAU04D,GAAS,OAAOL,EAAOH,YAAYrpC,MAAM9iB,IAAI2sD,OAEhG71D,EAAIlS,QAAQqP,QAAQ,SAAUs4D,GAC1B,IAAIK,EAAgBL,EAGpB,GAAIF,GAAWO,GAAgB,CAG3B,IAAIC,EAAgBX,GAAoBU,GACxCC,EAAcN,SAASx1D,WAAW9C,QAAQ,SAAU04D,GAChDL,EAAOH,YAAYp1D,WAAWiJ,IAAI2sD,GAClCL,EAAOC,SAASx1D,WAAWiJ,IAAI2sD,KAEnCE,EAAcN,SAASzpC,MAAM7uB,QAAQ,SAAU04D,GAC3CL,EAAOH,YAAYrpC,MAAM9iB,IAAI2sD,GAC7BL,EAAOC,SAASzpC,MAAM9iB,IAAI2sD,eAGGxjE,IAA5ByjE,EAAc9wB,UACnBwwB,EAAOC,SAASzpC,MAAM9iB,IAAI4sD,GAG1BN,EAAOC,SAASx1D,WAAWiJ,IAAI4sD,KAGvC91D,EAAIolC,wBAA0BowB,EACvBA,EAEX,SAASQ,GAAU5hE,GACf,IAAI6hE,KASJ,OARA7hE,EAAO+I,QAAQ,SAAU1L,GACjB1C,MAAMiL,QAAQvI,GACdwkE,EAAInkE,KAAK9B,MAAMimE,EAAKjkE,EAASgkE,GAAUvkE,KAGvCwkE,EAAInkE,KAAKL,KAGVwkE,EAEX,SAASC,GAA0BzkE,GAC/B,OAYJ,SAAS0kE,EAAsB1kE,GAC3B,YAA0BY,IAAnBZ,EAAMunB,SAbTm9C,CAAsB1kE,GACfA,EAAMunB,SAEVvnB,EAEX,SAASyR,GAAKzR,GACV,OAAO,IAAIlD,EAASymE,gBAAgBvjE,GAExC,SAAS2kE,GAAc3kE,GACnB,IAAIwR,EAAUC,GAAKzR,GACnB,OAASA,MAAOwR,EAASjK,KAAMiK,GAKnC,SAASsyD,GAAW9jE,GAChB,YAA6BY,IAAtBZ,EAAMilD;;;;;;;OA8FjB,SAAS2f,GAAkBr9D,EAAM9H,GAE7B,IAAIoc,EAAegnD,KAAahnD,aAAatU,GACzCqtB,EAoCR,SAASiwC,EAAoBplE,EAAUoc,GAEnC,IAAI3Z,EAAKpF,EAASgoE,kBAAkBrlE,EAASm1B,UAAaoP,EAAa9hC,EAAG8hC,WAAY+gC,EAAY7iE,EAAG6iE,UAAWtX,EAAavrD,EAAGurD,WAChI,GAAItwD,OAAO4I,KAD8I7D,EAAG05C,YAChIv9C,OAAS,EACjC,MAAM,IAAI+J,MAAM,uDAEpB,IAAI48D,EAAU,SAAUC,GAChBppD,EAAare,eAAeynE,IAC5BppD,EAAaopD,GAAOv5D,QAAQ,SAAUw5D,IAsBlD,SAASC,EAAcnlE,GACnB,MAAgC,gBAAzBA,EAAMmB,eAtBGgkE,CAAcD,GAwBlC,SAASE,EAAeplE,GACpB,MAAgC,iBAAzBA,EAAMmB,eAtBQikE,CAAeF,KACpBH,EAAUG,EAAIlpC,WAAaipC,GAASA,EAAQ,KAAOC,EAAI/iE,UAAY0E,KAAK,KAAO,KAH/E4mD,EAAWyX,EAAIG,kBAAoBJ,GAASA,KAS5D,IAAK,IAAIA,KAASppD,EACdmpD,EAAQC,GAEZ,OAASjhC,WAAYA,EAAY+gC,UAAWA,EAAWtX,WAAYA,GA1DxDoX,CAAoBplE,EAAUoc,GACrCypD,EAAqBC,GAAkB9lE,EAASq+B,YAChD0nC,EAAsBD,GAAkB9lE,EAASq9B,aACjD2oC,KACAC,KACAjxB,EAAU,SAAUwwB,GAChBppD,EAAare,eAAeynE,IAC5BppD,EAAaopD,GAAOv5D,QAAQ,SAAUw5D,IAqDlD,SAASzmC,EAAQz+B,GACb,MAAgC,UAAzBA,EAAMmB,eArDGs9B,CAAQymC,GAuD5B,SAASS,EAAS3lE,GACd,MAAgC,WAAzBA,EAAMmB,eArDQwkE,CAAST,KACdQ,EAAgBT,GAASC,EAAIU,qBAAuBX,GAHpDQ,EAAeR,GAASC,EAAIU,qBAAuBX,KAQnE,IAAK,IAAIA,KAASppD,EACd44B,EAAQwwB,GAEZ,OACIvjE,KAAM6F,EAAK7F,KACX6F,KAAM,IAAIzK,EAASymE,gBAAgBh8D,GACnCs+D,kBAAmB,EACnB5hE,SAAUxE,EAASwE,SACnB6F,KAAMg5D,GAAoBv7D,GAAOqtB,KAAMA,EACvCkJ,OAAQhgC,KAAawnE,EAAoBG,GACzC3oC,QAASh/B,KAAa0nE,EAAqBE,GAC3CrvC,WACAyvC,WACIC,mBAA8CnlE,IAA/B2G,EAAK3J,UAAUw4C,aAElC4vB,eAAgB,KAChBC,iBA3CR,SAASC,EAA0B3+D,GAC/B,OAAOpK,OAAOkgB,eAAe9V,EAAK3J,aAAeT,OAAOS,UA0ClCsoE,CAA0B3+D,IAuCpD,SAASg+D,GAAkB5iE,GACvB,OAAOA,EAAO+2C,OAAO,SAAU9yC,EAAK5G,GAChC,IAAIkC,EAAKhC,EAAOF,EAAMkiC,MAAM,KAAKt7B,IAAI,SAAUu/D,GAAS,OAAOA,EAAMrL,SAAY,GAAImK,EAAQ/iE,EAAG,GAEhG,OADA0E,EAAIq+D,GAD2G/iE,EAAG,IACzF+iE,EAClBr+D;;;;;;;OA4Ff,SAASw/D,GAAmB5iE,GACxB,YAAyB5C,IAAlB4C,EAAKmH,SAEhB,IAAI07D,MACAC,GAAchpD,IAA2BlU,QAASC,OAAQC,SAAU+8D,IAAuBA,IAC/F,SAASE,GAAmB/iE,GACxB,OAAO8iE,MAAe9iE,EAE1B,SAASgjE,GAAqBhjE,GAC1B,YAA2B5C,IAApB4C,EAAKkH,WAEhB,SAAS+7D,GAAsBjjE,GAC3B,YAA4B5C,IAArB4C,EAAKiH;;;;;;;;;;;;;;;AAsChB,IA0RIi8D,GAvRAroD,GAlIJ,SAASsoD,GAAkBp/D,EAAMq/D,GAE7B,IAAIpjE,EAAOojE,IAAajmE,WAAY,MAChC4N,EAAM,KACVpR,OAAO+B,eAAeqI,EAAMk7D,IACxBv6D,IAAK,WACD,GAAY,OAARqG,EAAc,CAEd,IAAIs4D,EAAeT,GAAmB5iE,IAASgjE,GAAqBhjE,IAChE+iE,GAAmB/iE,IAASijE,GAAsBjjE,GAClDsG,OAAOlJ,GACNimE,GAAiBT,GAAmB5iE,IAAS+D,IAAS/D,EAAKmH,SAC5Db,EAAOg5D,GAAoBv7D,GAEtB6+D,GAAmB5iE,GACxBsG,EAAOtG,EAAKsG,MAAQi5D,GAAoBv/D,EAAKsG,MAExC08D,GAAqBhjE,KAC1BsG,EAAOtG,EAAKsG,MAAQi5D,GAAoBv/D,EAAKsG,WAIjD,IAAIa,OAAW/J,EACX8J,OAAa9J,EACb0I,OAAW1I,EACX6J,OAAc7J,EAClB,GAAKimE,EAOA,GAAIT,GAAmB5iE,GAExBmH,EAAW,IAAI7N,EAASymE,gBAAgB//D,EAAKmH,eAE5C,GAAI47D,GAAmB/iE,GAExB8F,EAAW,IAAIxM,EAASymE,gBAAgB//D,EAAK8F,eAE5C,GAAIk9D,GAAqBhjE,GAE1BkH,EAAa,IAAI5N,EAASymE,gBAAgB//D,EAAKkH,gBAE9C,CAAA,IAAI+7D,GAAsBjjE,GAM3B,MAAM,IAAI4E,MAAM,sBAJhBqC,EAAc,IAAI3N,EAASymE,gBAAgB//D,EAAKiH,kBAhBhDE,EAAW,IAAI7N,EAASymE,gBAAgBh8D,GAsB5C,IAAIu/D,EAAahqE,EAAS6pE,mBACtBjlE,KAAM6F,EAAK7F,KACX6F,KAAM,IAAIzK,EAASymE,gBAAgBh8D,GACnC5G,WAapB,SAASomE,EAAkBpmE,GACvB,OAAkB,MAAdA,GAA4C,iBAAfA,EACtB,IAAI7D,EAASmmE,YAAYtiE,GAGzB,IAAI7D,EAASymE,gBAAgB5iE,GAlBZomE,CAAkBvjE,EAAK7C,YACnCgK,SAAUA,EACVD,WAAYA,EACZpB,SAAUA,EACVmB,YAAaA,EACbX,KAAMA,IACPg9D,WACHv4D,EAAMzR,EAASkqE,cAAcF,EAAY3J,GAAgB,QAAU51D,EAAK7F,KAAO,uBAEnF,OAAO6M,MAuFf04D,GAAYxlE,EAAc,YAAa,SAAUoiE,GAEjD,YADY,IAARA,IAAkBA,MACfA,QACRjjE,OAAWA,EAAW,SAAU2G,EAAM/D,GAAQ,OA9QjD,SAAS0jE,EAAiB3/D,EAAM67B,GAC5B,IAAI70B,EAAM,KACVpR,OAAO+B,eAAeqI,EAAMi7D,IACxBt6D,IAAK,WACD,GAAY,OAARqG,EAAc,CACd,IAAI44D,EAAe,IAAIrqE,EAASsqE,aAC5BC,EAAe,SAAW9/D,GAAQA,EAAK7F,MAAQ,qBAC/CqF,EAAMjK,EAASwqE,6BAA6B1C,GAAkBr9D,EAAM67B,GAAY+jC,EAAcrqE,EAASyqE,qBAC3Gh5D,EAAMzR,EAASkqE,cAAcjgE,EAAI+/D,WAAY3J,GAAgBkK,EAAcF,GAE/E,OAAO54D,OAoQ8D,cAAmBhH,EAAM/D,KAyFtGgkE,GAAY/lE,EAAc,YAAa,SAAU5C,GAEjD,YADU,IAANA,IAAgBA,MACZf,GAAWi1C,gBAAiB12C,EAAQqH,wBAAwB+jE,SAAW5oE,IAChFooE,QAAWrmE,EAAW,SAAU2G,EAAM/D,GAAQ,OAhajD,SAASkkE,EAAiBngE,EAAM9H,GAC5B,IAAI8O,EAAM,MAzrcd,SAASo5D,EAAyCloE,GAC1CmF,EAAyBnF,IACzBiF,EAAiC+S,IAAIhY,GAyrczCkoE,CAAyCloE,GACzCtC,OAAO+B,eAAeqI,EAAMg7D,IACxBr6D,IAAK,WACD,GAAY,OAARqG,EAAc,CACd,GAAI3J,EAAyBnF,GAAW,CACpC,IAAIa,GAAS,cAAgBoG,EAAUa,GAAQ,sBAQ/C,MAPI9H,EAASqF,aACTxE,EAAMD,KAAK,mBAAqBqG,EAAUjH,EAASqF,cAEnDrF,EAASsF,WAAatF,EAASsF,UAAU1G,QACzCiC,EAAMD,KAAK,iBAAmB4L,KAAKvF,UAAUjH,EAASsF,YAE1DzE,EAAMD,KAAK,2DACL,IAAI+H,MAAM9H,EAAMuG,KAAK,OAG/B,IAAIsgE,EAAe,IAAIrqE,EAASsqE,aAE5BlwC,EAAWp6B,EAAS8qE,cAAcnoE,EAASy3B,SAAU,QAAUxwB,EAAUa,GAAQ,kBACjFsgE,oBAAqBpoE,EAASooE,sBAAuB,IAEzD,QAAwBjnE,IAApBs2B,EAAS4wC,OAAsB,CAC/B,IAAIA,EAAS5wC,EAAS4wC,OAAOlhE,IAAI,SAAUukC,GAAO,OAAOA,EAAI9pC,aAAewF,KAAK,MACjF,MAAM,IAAIuB,MAAM,iDAAmD1B,EAAUa,GAAQ,KAAOugE,GAIhG,IAAI/gE,EAAMjK,EAASirE,6BAA6BjqE,KAAa8mE,GAAkBr9D,EAAM9H,IAAay3B,SAAUA,EAAU1oB,WAAY,IAAIvI,IAAOs0B,MAAO,IAAIt0B,IAAO+hE,iBAAoBb,EAAcrqE,EAASyqE,qBAC1Mh5D,EAAMzR,EAASkqE,cAAcjgE,EAAI+/D,WAAY3J,GAAgB,QAAU51D,EAAK7F,KAAO,qBAAsBylE,GAazH,SAASc,EAAiBpjE,GACtB,YAAqCjE,IAA9BiE,EAAUqjE,gBATDD,CAAiB1gE,IACjBm8D,GAA2Bn1D,EAAKhH,EAAK2gE,iBAG7C,OAAO35D,OAwX8D,cAAmBhH,EAAM/D,KAMtG2kE,GAAO1mE,EAAc,OAAQ,SAAUlE,GAAK,OAAQO,GAAWs2C,MAAM,GAAQ72C,SAAQqD,OAAWA,EAAW,SAAU2G,EAAM/D,GAAQ,OA1JvI,SAAS4kE,EAAY7gE,EAAM/D,GACvB,IAAI+K,EAAM,KACVpR,OAAO+B,eAAeqI,EAAMo7D,IACxBz6D,IAAK,WACD,GAAY,OAARqG,EAAc,CACd,IAAI84D,EAAe,QAAU5+C,GAAYlhB,GAAQ,gBAE7CR,EAAMjK,EAASurE,yBACf3mE,KAFS6F,EAAK7F,KAGd6F,KAAM,IAAIzK,EAASymE,gBAAgBh8D,GACnCuC,KAAMg5D,GAAoBv7D,GAC1Bm/C,SAAUljD,EAAK9B,KACf0yC,UAAoBxzC,IAAd4C,EAAK4wC,MAAqB5wC,EAAK4wC,OAEzC7lC,EAAMzR,EAASkqE,cAAcjgE,EAAI+/D,WAAY3J,GAAgBkK,GAEjE,OAAO94D,OA0I+I,cAAmBhH,EAAM/D,KAmBvL8kE,GAA0B,SAAUv2C,GACpC,OAAO,SAAUrzB,EAAQgD,GAErB,IADA,IAAIS,KACKC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCD,EAAKC,EAAK,GAAKhE,UAAUgE,GAE7B,IAAIzE,EAAce,EAAOf,YACpBA,EAAYH,eAAe,cAzBhB,SAAUkB,GAC9B,IAAIf,EAAce,EAAOf,YACrB4qE,EAAmB5qE,EAAYm3C,UAC/BD,EAAUl3C,EAAYm3C,WACtBhX,UACAhB,WACAyV,mBAEAg2B,IACAhrD,GAAes3B,EAAQ/W,OAAQyqC,EAAiBzqC,QAChDvgB,GAAes3B,EAAQ/X,QAASyrC,EAAiBzrC,SACjDvf,GAAes3B,EAAQtC,eAAgBg2B,EAAiBh2B,iBAepDi2B,CAAkB9pE,GAGRqzB,EADAp0B,EAAYm3C,WAElBpzC,GAAQS,EAAK,KAOzBsmE,GAAQrlE,EAAkB,QAAS,SAAUwiE,GAAuB,OAAUA,oBAAqBA,SAA2BhlE,EAAW0nE,GAAwB,SAAUzzB,GAAW,OAAOA,EAAQ/W,cAKrM4qC,GAAStlE,EAAkB,SAAU,SAAUwiE,GAAuB,OAAUA,oBAAqBA,SAA2BhlE,EAAW0nE,GAAwB,SAAUzzB,GAAW,OAAOA,EAAQ/X,eAKvM6rC,GAAcvlE,EAAkB,cAAe,SAAUiiE,GAAoB,OAAUA,iBAAkBA,KAgCzGuD,GAAexlE,EAAkB,eAAgB,SAAU44B,EAAW75B,GAAQ,OAAU65B,UAAWA,EAAW75B,KAAMA,KA0CpH0mE,GAAWpnE,EAAc,WAAY,SAAU8lB,GAAY,OAAOA,QAAa3mB,OAAWA,EAY9F,SAAU2G,EAAM/D,GAAQ,OA/uBxB,SAASslE,EAAgBvhE,EAAMggB,GAC3B,IAAImsB,EAAe6wB,GAAUh9C,EAASmsB,cAAgB+vB,IAClDxe,EAAc,KAClB9nD,OAAO+B,eAAeqI,EAAMq7D,IACxB16D,IAAK,WACD,GAAoB,OAAhB+8C,EAAsB,CACtB,IAAIzhD,GACA+D,KAAMkK,GAAKlK,GACXksC,UAAW8wB,GAAUh9C,EAASksB,WAAagwB,IAAe78D,IAAI6K,IAC9DiiC,aAAcA,EAAa9sC,IAAI+9D,IAC/B3jE,QAASujE,GAAUh9C,EAASvmB,SAAWyiE,IAClC78D,IAAI69D,IACJ79D,IAAI+9D,IACTtoE,QAASkoE,GAAUh9C,EAASlrB,SAAWonE,IAClC78D,IAAI69D,IACJ79D,IAAI+9D,IACToE,YAAY,GAEZhiE,EAAMjK,EAASgsE,gBAAgBtlE,GACnCyhD,EACInoD,EAASkqE,cAAcjgE,EAAI+/D,WAAY3J,GAAgB,QAAU51D,EAAK7F,KAAO,mBAErF,OAAOujD,KAGf,IAAI39B,EAAgB,KACpBnqB,OAAO+B,eAAeqI,EAAMm7D,IACxBx6D,IAAK,WACD,GAAsB,OAAlBof,EAAwB,CACxB,IAAI9jB,GACA9B,KAAM6F,EAAK7F,KACX6F,KAAMkK,GAAKlK,GACXuC,KAAMg5D,GAAoBv7D,GAC1BxG,UAAW,IAAIjE,EAASymE,gBAAgBh8C,EAASxmB,WAAa0iE,IAC9DziE,QAAS,IAAIlE,EAASymE,iBAClBh8C,EAASvmB,SAAWyiE,GACpBl8C,EAASlrB,SAAWonE,MAGxB18D,EAAMjK,EAASksE,gBAAgBxlE,GACnC8jB,EACIxqB,EAASkqE,cAAcjgE,EAAI+/D,WAAY3J,GAAgB,QAAU51D,EAAK7F,KAAO,qBAErF,OAAO4lB,KAGfosB,EAAahoC,QAAQ,SAAUu9D,GAIvBA,EAAYzrE,eAAe+kE,IAE3BmB,GAA2BuF,EAAY51B,eAAgB9rC,GAEjD0hE,EAAYzrE,eAAeglE,KAAsByG,EAAYzrE,eAAemlE,MAElFsG,EAAYf,gBAAkB3gE,OA6pB1C,SAAS2hE,EAAqBvyB,EAAYl3C,GACtC,IAAIuB,EAAWvB,GAAYA,EAASuB,YAChCvB,GAAYA,EAASpD,UACrB2E,EAAUT,EAASS,GAAUvB,EAASpD,WAE1Cs6C,EAAWrvB,cAAgBzmB,GACvBzE,QAASuhB,GAAmCg5B,GAAchsC,SAAUgsC,IACpE51C,UAAWtB,GAAYA,EAASsB,UAChCC,QAASA,MAkB4DuG,EAAM/D,KA+B/E2lE,GAAU,IATVzC,GACA,SAASA,GAAQ0C,GACbrsE,KAAKqsE,KAAOA,EACZrsE,KAAKssE,MAAQD,EAAKlnC,MAAM,KAAK,GAC7BnlC,KAAKusE,MAAQF,EAAKlnC,MAAM,KAAK,GAC7BnlC,KAAKwsE,MAAQH,EAAKlnC,MAAM,KAAKn5B,MAAM,GAAGlC,KAAK,OAIzB,qBAyBtB2iE,GACA,SAASA,GAAc9nE,EAAM86C,GACzBz/C,KAAK2E,KAAOA,EACZ3E,KAAKy/C,SAAWA,GAOpBitB,GAA2B,WAC3B,SAASA,EAAUC,EAAYphE,EAAQqhE,GACnC5sE,KAAK2sE,WAAaA,EAClB3sE,KAAK4sE,cAAgBA,EACrB5sE,KAAKgoE,aACLhoE,KAAKuL,OAAS,KACVA,GAAUA,aAAkBshE,IAC5BthE,EAAOuhE,SAAS9sE,MA4BxB,OAzBAI,OAAO+B,eAAeuqE,EAAU7rE,UAAW,YACvCsK,IAAK,WAAc,OAAOnL,KAAK4sE,cAAct9D,UAC7CwJ,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeuqE,EAAU7rE,UAAW,qBACvCsK,IAAK,WAAc,OAAOnL,KAAK4sE,cAAc9kE,WAC7CgR,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeuqE,EAAU7rE,UAAW,WACvCsK,IAAK,WAAc,OAAOnL,KAAK4sE,cAAc59D,SAC7C8J,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeuqE,EAAU7rE,UAAW,cACvCsK,IAAK,WAAc,OAAOnL,KAAK4sE,cAAc95B,YAC7Ch6B,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeuqE,EAAU7rE,UAAW,kBACvCsK,IAAK,WAAc,OAAOnL,KAAK4sE,cAAcG,gBAC7Cj0D,YAAY,EACZC,cAAc,IAEX2zD,EAnCmB,GAwC1BG,GAA8B,SAAU5xB,GAExC,SAAS4xB,EAAaF,EAAYphE,EAAQqhE,GACtC,IAAI10D,EAAQ+iC,EAAO15C,KAAKvB,KAAM2sE,EAAYphE,EAAQqhE,IAAkB5sE,KAOpE,OANAkY,EAAMw4C,cACNx4C,EAAM+uB,cACN/uB,EAAM2sB,WACN3sB,EAAM4sB,UACN5sB,EAAM80D,cACN90D,EAAMmjC,cAAgBsxB,EACfz0D,EAsEX,OA/EAxX,EAAUmsE,EAAc5xB,GAWxB4xB,EAAahsE,UAAUisE,SAAW,SAAU5gD,GACpCA,IACAlsB,KAAKgtE,WAAW1pE,KAAK4oB,GACrBA,EAAM3gB,OAASvL,OAGvB6sE,EAAahsE,UAAU8sB,YAAc,SAAUzB,GAC3C,IAAI6C,EAAa/uB,KAAKgtE,WAAW9iE,QAAQgiB,IACrB,IAAhB6C,IACA7C,EAAM3gB,OAAS,KACfvL,KAAKgtE,WAAWz+C,OAAOQ,EAAY,KAG3C89C,EAAahsE,UAAUosE,oBAAsB,SAAU/gD,EAAOghD,GAC1D,IACI/nE,EADA+S,EAAQlY,KAERmtE,EAAentE,KAAKgtE,WAAW9iE,QAAQgiB,IACrB,IAAlBihD,KACChoE,EAAKnF,KAAKgtE,YAAYz+C,OAAO/sB,MAAM2D,EAAI3B,GAAU2pE,EAAe,EAAG,GAAID,IACxEA,EAAYv+D,QAAQ,SAAU7M,GACtBA,EAAEyJ,QACFzJ,EAAEyJ,OAAOoiB,YAAY7rB,GAEzBA,EAAEyJ,OAAS2M,MAIvB20D,EAAahsE,UAAU6a,aAAe,SAAU0xD,EAAUC,GACtD,IAAIC,EAAWttE,KAAKgtE,WAAW9iE,QAAQkjE,IACrB,IAAdE,EACAttE,KAAK8sE,SAASO,IAGVA,EAAS9hE,QACT8hE,EAAS9hE,OAAOoiB,YAAY0/C,GAEhCA,EAAS9hE,OAASvL,KAClBA,KAAKgtE,WAAWz+C,OAAO++C,EAAU,EAAGD,KAG5CR,EAAahsE,UAAUgqD,MAAQ,SAAUJ,GAErC,OADczqD,KAAKutE,SAAS9iB,GACb,IAAM,MAEzBoiB,EAAahsE,UAAU0sE,SAAW,SAAU9iB,GACxC,IAAIzuB,KAEJ,OADAwxC,GAAsBxtE,KAAMyqD,EAAWzuB,GAChCA,GAEX6wC,EAAahsE,UAAU4sE,cAAgB,SAAUhjB,GAC7C,IAAIzuB,KAEJ,OADA0xC,GAAmB1tE,KAAMyqD,EAAWzuB,GAC7BA,GAEX57B,OAAO+B,eAAe0qE,EAAahsE,UAAW,YAC1CsK,IAAK,WACD,OAAOnL,KAAKgtE,WAAWtwB,OAAO,SAAU5wB,GAAQ,OAAOA,aAAgB+gD,KAE3E/zD,YAAY,EACZC,cAAc,IAElB8zD,EAAahsE,UAAU8sE,oBAAsB,SAAU1uC,EAAW2uC,GAC9D5tE,KAAKgoE,UAAUr5D,QAAQ,SAAUqwB,GACzBA,EAASr6B,MAAQs6B,GACjBD,EAASygB,SAASmuB,MAIvBf,EAhFsB,CAiF/BH,IAOF,SAASc,GAAsBtyC,EAASuvB,EAAWzuB,GAC/Cd,EAAQ8xC,WAAWr+D,QAAQ,SAAUmd,GAC7BA,aAAgB+gD,KACZpiB,EAAU3+B,IACVkQ,EAAQ14B,KAAKwoB,GAEjB0hD,GAAsB1hD,EAAM2+B,EAAWzuB,MAInD,SAAS0xC,GAAmBx/C,EAAYu8B,EAAWzuB,GAC3C9N,aAAsB2+C,IACtB3+C,EAAW8+C,WAAWr+D,QAAQ,SAAUmd,GAChC2+B,EAAU3+B,IACVkQ,EAAQ14B,KAAKwoB,GAEbA,aAAgB+gD,IAChBa,GAAmB5hD,EAAM2+B,EAAWzuB,KAMpD,IAAI6xC,GAAyB,IAAI3kE,IAIjC,SAAS4kE,GAAanB,GAClB,OAAOkB,GAAuB1iE,IAAIwhE,IAAe,KAErD,SAASoB,GAAejiD,GACpB+hD,GAAuB/gE,IAAIgf,EAAK6gD,WAAY7gD;;;;;;;;;;;;;;;AAqBhD,IA2FWkiD,GA/EPC,GAAenY,GAAsB,KAAM,SAVzCzpD,QAAS4hD,GAAa1hD,SAAU,YAChCF,QAASupD,GAAa7oD,MAAOzB,MAC7Be,QAASkoD,GAAqBxnD,UAC9BV,QAAS+hD,GAASrhD,WAsCpBmhE,GAAY,IAAIhqE,EAAe,YAyB/BiqE,GAAe,IAAIjqE,EAAe,gBAsBlCkqE,GAAsB,IAAIlqE,EAAe,uBAClC8pE,GAIR1uE,EAAQ0uE,6BAA+B1uE,EAAQ0uE,gCAHnBA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK,SAmB3E,IAAIK,KAEIhiE,QAASsrD,GACT/pD,SAAU+pD,GACV5qD,MAAO2iD,GAAQtB,GAAS9iD,GAAU0W,GAAc24B,GAA0BgS,MAG1EtgD,QAASsgD,GACT/+C,SAAU++C,GACV5/C,OAAQ,IAAIrC,EAAYgiD,OAE1BrgD,QAASqtC,GAAU9rC,SAAU8rC,GAAU3sC,SACzCwgD,IACElhD,QAASkQ,GAAiB5O;;;;;;;;AAtBhC,SAAS2gE,KACL,OAAO9iD,IAqB0Dze,UAC/DV,QAAS+e,GAAiBzd,WApBhC,SAAS4gE,KACL,OAAO9iD,IAmB0D1e,UAE7DV,QAAS6hE,GACTvgE,WApBR,SAAS6gE,GAAeC,GACpB,OAAOA,GAAU,SAoBb1hE,OAAQ,IAAItC,EAAOyjE,IAAY,IAAIxjE,EAAY,IAAIE,MASvD8jE,GAAmC,WAQnC,OAJoBjtE,GAChBqqE,IAAW9nE,UAAWqqE,KACtB9rE,EAAW,qBAAsBo1D,MAJrC,SAAS+W,EAAkBzuB,MAFO,GA8ItC,SAAStkB,GAAc3P,EAAMonB,EAAY5hC,GACrC,IAGI+nD,EAHAoV,EAAQn9D,EAAI0pB,QACZigB,EAAqBnvB,EAAK6lB,KAAK+8B,eAC/Bp7D,EAAWwY,EAAKxY,SAEpB,GAAIwY,EAAKzgB,SAAW4vC,EAAoB,CAEhCoe,EADAoV,EAAMhqE,KACD6O,EAASmoB,cAAcgzC,EAAMhqE,KAAMgqE,EAAME,IAGzCr7D,EAAS8zB,cAAc,IAEhC,IAAIwnC,EAAW37B,GAAuBnnB,EAAMonB,EAAY5hC,GACpDs9D,GACAt7D,EAAS4c,YAAY0+C,EAAUvV,QAInCA,EAAK/lD,EAASirB,kBAAkB0c,GAEpC,GAAIwzB,EAAMz9C,MACN,IAAK,IAAI/vB,EAAI,EAAGA,EAAIwtE,EAAMz9C,MAAM5vB,OAAQH,IAAK,CACzC,IAAIgE,EAAKhC,EAAOwrE,EAAMz9C,MAAM/vB,GAAI,GAChCqS,EAAS4qB,aAAam7B,EADmCp0D,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAOo0D,EAEX,SAASwV,GAAuB/iD,EAAMooB,EAAU5iC,EAAK+nD,GACjD,IAAK,IAAIp4D,EAAI,EAAGA,EAAIqQ,EAAIuuB,QAAQz+B,OAAQH,IAAK,CACzC,IAAI6tE,EAASx9D,EAAIuuB,QAAQ5+B,GACrB8tE,EAAqBC,GAA0BljD,EAAMxa,EAAIs3B,UAAWuJ,GAAqB28B,EAAOrtE,OAAQqtE,EAAO/vC,YAC/GkwC,EAAeH,EAAOrtE,OACtBytE,EAAepjD,EACG,cAAlBgjD,EAAOrtE,SACPwtE,EAAe,KACfC,EAAeh7B,GAEnB,IAAIi7B,EAAaD,EAAa57D,SAAS+rB,OAAO4vC,GAAgB5V,EAAIyV,EAAO/vC,UAAWgwC,GACpFjjD,EAAKsjD,YAAY99D,EAAI+9D,YAAcpuE,GAAKkuE,GAGhD,SAASH,GAA0BljD,EAAM7lB,EAAO84B,GAC5C,OAAO,SAAU2S,GAAS,OAAOD,GAAc3lB,EAAM7lB,EAAO84B,EAAW2S,IAmC3E,SAAS49B,GAA2BxjD,EAAMxa,EAAKy/B,EAAYhuC,GACvD,IAAKkuC,GAAwBnlB,EAAMxa,EAAKy/B,EAAYhuC,GAChD,OAAO,EAEX,IAAIwsE,EAAUj+D,EAAIwnB,SAASiY,GACvBy+B,EAAS1gC,GAAchjB,EAAMxa,EAAIs3B,WACjC6mC,EAAgBD,EAAOv9B,cACvBxtC,EAAO8qE,EAAQ9qE,KACnB,OAAwB,GAAhB8qE,EAAQxhE,OACZ,KAAK,GAmBb,SAAS2hE,EAAoB5jD,EAAMyjD,EAASE,EAAed,EAAIlqE,EAAM1B,GACjE,IAAI4sE,EAAkBJ,EAAQI,gBAC1BC,EAAcD,EAAkB7jD,EAAK6lB,KAAKte,UAAUksC,SAASoQ,EAAiB5sE,GAASA,EAC3F6sE,EAA6B,MAAfA,EAAsBA,EAAYxrE,WAAa,KAC7D,IAAIkP,EAAWwY,EAAKxY,SACP,MAATvQ,EACAuQ,EAAS4qB,aAAauxC,EAAehrE,EAAMmrE,EAAajB,GAGxDr7D,EAASotB,gBAAgB+uC,EAAehrE,EAAMkqE,GA3B1Ce,CAAoB5jD,EAAMyjD,EAASE,EAAeF,EAAQZ,GAAIlqE,EAAM1B,GACpE,MACJ,KAAK,GA4Bb,SAAS8sE,EAAgB/jD,EAAM2jD,EAAehrE,EAAM1B,GAChD,IAAIuQ,EAAWwY,EAAKxY,SAChBvQ,EACAuQ,EAASugB,SAAS47C,EAAehrE,GAGjC6O,EAASwgB,YAAY27C,EAAehrE,GAjChCorE,CAAgB/jD,EAAM2jD,EAAehrE,EAAM1B,GAC3C,MACJ,KAAK,GAkCb,SAAS+sE,EAAgBhkD,EAAMyjD,EAASE,EAAehrE,EAAM1B,GACzD,IAAI6sE,EAAc9jD,EAAK6lB,KAAKte,UAAUksC,SAASngE,EAAQ88D,gBAAgByD,MAAO58D,GAC9E,GAAmB,MAAf6sE,EAAqB,CACrBA,EAAcA,EAAYxrE,WAC1B,IAAI2rE,EAAOR,EAAQ/qC,OACP,MAARurC,IACAH,GAA4BG,QAIhCH,EAAc,KAElB,IAAIt8D,EAAWwY,EAAKxY,SACD,MAAfs8D,EACAt8D,EAAS8f,SAASq8C,EAAehrE,EAAMmrE,GAGvCt8D,EAASmgB,YAAYg8C,EAAehrE,GAlDhCqrE,CAAgBhkD,EAAMyjD,EAASE,EAAehrE,EAAM1B,GACpD,MACJ,KAAK,GAmDb,SAASitE,EAAmBlkD,EAAMyjD,EAASE,EAAehrE,EAAM1B,GAC5D,IAAI4sE,EAAkBJ,EAAQI,gBAC1BC,EAAcD,EAAkB7jD,EAAK6lB,KAAKte,UAAUksC,SAASoQ,EAAiB5sE,GAASA,EAC3F+oB,EAAKxY,SAASkgB,YAAYi8C,EAAehrE,EAAMmrE;;;;;;;OAjDvCI,CAJ4B,SAAZ1+D,EAAIvD,OACA,GAAhBwhE,EAAQxhE,MACRyhE,EAAOjpC,cACPza,EACyByjD,EAASE,EAAehrE,EAAM1B,GAGnE,OAAO,EAwDX,IAAIktE,GAAkB,IAAI/vE,OACtBgwE,GAAsB5/B,GAASllC,IAC/B+kE,GAAsB7/B,GAASvlC,IAC/BqlE,GAAsB9/B,GAAS8K,IAkDnC,SAASi1B,GAAmBppE,EAAMqpE,EAAQplE,QAChB,IAAlBA,IAA4BA,EAAgBE,GAASN,oBACzD,IAAIuE,EAASF,GAAmBlI,GAChC,IACI,GAAmB,EAAfqpE,EAAOviE,MACP,OAAOuiE,EAAO5mE,MAKlB,GAHmB,EAAf4mE,EAAOviE,QACP7C,EAAgB,MAED,EAAfolE,EAAOviE,MACP,OAAO9G,EAAKsf,QAAQtb,IAAIqlE,EAAO5mE,MAAOwB,GAE1C,IAAIqlE,EAAaD,EAAOhgC,SACxB,OAAQigC,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAOnpE,EAEf,IAAIupE,EAAcvpE,EAAKwpE,KAAKC,eAAeH,GAC3C,GAAIC,EAAa,CACb,IAAIG,EAAmB1pE,EAAKqf,WAAWkqD,EAAYvqE,OAKnD,YAJyBtC,IAArBgtE,IACAA,EAAmB1pE,EAAKqf,WAAWkqD,EAAYvqE,OAC3C2qE,GAAwB3pE,EAAMupE,IAE/BG,IAAqBV,QAAkBtsE,EAAYgtE,EAEzD,GAAIL,EAAO5mE,MAAMvF,iBAyB9B,SAAS0sE,EAAcvmD,EAAUhZ,GAC7B,OAAyB,MAAlBA,EAAI5N,aAJf,SAASotE,EAA0BxmD,EAAUykC,GACzC,OAAOzkC,EAASmmD,KAAKM,QAAQ/mE,QAAQ+kD,IAAU,EAGb+hB,CAA0BxmD,EAAUhZ,EAAI5N,aACnD,SAAnB4N,EAAI5N,YAAyB4mB,EAASmmD,KAAKO,QA3BFH,CAAc5pE,EAAMqpE,EAAO5mE,MAAMvF,iBAAkB,CACxF,IACI8B,EAAQgB,EAAKqf,WAAWllB,OAQ5B,OAPA6F,EAAKwpE,KAAKC,eAAeJ,EAAOhgC,WAC5BviC,MAAO,KACPhL,MAJgButE,EAAO5mE,MAAMvF,gBAIRhF,QACrB0N,QAAU5G,MAAOA,EACjByD,MAAO4mE,EAAO5mE,OAElBzC,EAAKqf,WAAWrgB,GAASgqE,GACjBhpE,EAAKqf,WAAWrgB,GACpB2qE,GAAwB3pE,EAAMA,EAAKwpE,KAAKC,eAAeJ,EAAOhgC,WAEjE,OAAmB,EAAfggC,EAAOviE,MACL7C,EAEJjE,EAAKsf,QAAQtb,IAAIqlE,EAAO5mE,MAAOwB,GAE1C,QACIiE,GAAmBE,IAU3B,SAASuhE,GAAwBtmD,EAAUkmD,GACvC,IAAIS,EACJ,OAA4B,UAApBT,EAAYziE,OAChB,KAAK,IACDkjE,EAsBZ,SAASC,EAAa5mD,EAAU7kB,EAAMoH,GAClC,IAAI4Z,EAAM5Z,EAAKzL,OACf,OAAQqlB,GACJ,KAAK,EACD,OAAO,IAAIhhB,EACf,KAAK,EACD,OAAO,IAAIA,EAAK4qE,GAAmB/lD,EAAUzd,EAAK,KACtD,KAAK,EACD,OAAO,IAAIpH,EAAK4qE,GAAmB/lD,EAAUzd,EAAK,IAAKwjE,GAAmB/lD,EAAUzd,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIpH,EAAK4qE,GAAmB/lD,EAAUzd,EAAK,IAAKwjE,GAAmB/lD,EAAUzd,EAAK,IAAKwjE,GAAmB/lD,EAAUzd,EAAK,KACpI,QAEI,IADA,IAAIskE,EAAY,IAAI9wE,MAAMomB,GACjBxlB,EAAI,EAAGA,EAAIwlB,EAAKxlB,IACrBkwE,EAAUlwE,GAAKovE,GAAmB/lD,EAAUzd,EAAK5L,IAErD,OAAO,IAAKwE,EAAKJ,KAAK/D,MAAMmE,EAAMnC,QAAU,GAAS6tE,MAtCxCD,CAAa5mD,EAAUkmD,EAAYztE,MAAOytE,EAAY3jE,MACnE,MACJ,KAAK,KACDokE,EAsCZ,SAASG,EAAa9mD,EAAUnrB,EAAS0N,GACrC,IAAI4Z,EAAM5Z,EAAKzL,OACf,OAAQqlB,GACJ,KAAK,EACD,OAAOtnB,IACX,KAAK,EACD,OAAOA,EAAQkxE,GAAmB/lD,EAAUzd,EAAK,KACrD,KAAK,EACD,OAAO1N,EAAQkxE,GAAmB/lD,EAAUzd,EAAK,IAAKwjE,GAAmB/lD,EAAUzd,EAAK,KAC5F,KAAK,EACD,OAAO1N,EAAQkxE,GAAmB/lD,EAAUzd,EAAK,IAAKwjE,GAAmB/lD,EAAUzd,EAAK,IAAKwjE,GAAmB/lD,EAAUzd,EAAK,KACnI,QAEI,IADA,IAAIskE,EAAY9wE,MAAMomB,GACbxlB,EAAI,EAAGA,EAAIwlB,EAAKxlB,IACrBkwE,EAAUlwE,GAAKovE,GAAmB/lD,EAAUzd,EAAK5L,IAErD,OAAO9B,EAAQmC,WAAM,EAAQgC,EAAS6tE,KAtDzBC,CAAa9mD,EAAUkmD,EAAYztE,MAAOytE,EAAY3jE,MACnE,MACJ,KAAK,KACDokE,EAAaZ,GAAmB/lD,EAAUkmD,EAAY3jE,KAAK,IAC3D,MACJ,KAAK,IACDokE,EAAaT,EAAYztE,MAWjC,OAJIkuE,IAAehB,IAAiC,MAAdgB,GAA4C,iBAAfA,GACzC,OAApBT,EAAYziE,OAAqE,mBAA3BkjE,EAAWpnD,cACnE2mD,EAAYziE,OAAS,aAEHpK,IAAfstE,EAA2BhB,GAAkBgB,EAgHxD,SAASI,GAAmBC,EAAa5zC,GACrC,IAAIgX,EAAgB48B,EAAY38B,cAAcC,eAI9C,IAHiB,MAAblX,GAAqBA,GAAagX,EAActzC,UAChDs8B,EAAYgX,EAActzC,OAAS,GAEnCs8B,EAAY,EACZ,OAAO,KAEX,IAAI5R,EAAO4oB,EAAchX,GAMzB,OALA5R,EAAKwlB,oBAAsB,KAC3BigC,GAAgB78B,EAAehX,GAE/BwR,GAASiB,mBAAmBrkB,GAC5B0lD,GAAiB1lD,GACVA,EA+BX,SAAS2lD,GAAyBH,EAAaI,EAAU5lD,GACrD,IAAI6lD,EAAiBD,EAAW1/B,GAAW0/B,EAAUA,EAASpgE,IAAIoiC,oBAC9D49B,EAAYr/B,cAKhBuB,GAAqB1nB,EAAM,EAJVA,EAAKxY,SAAS0a,WAAW2jD,GACxB7lD,EAAKxY,SAASmgC,YAAYk+B,QAG8BhuE,GAE9E,SAAS6tE,GAAiB1lD,GACtB0nB,GAAqB1nB,EAAM,EAAqB,KAAM,UAAMnoB,GAEhE,SAASiuE,GAAWh/D,EAAK3M,EAAOlD,GAExBkD,GAAS2M,EAAIxR,OACbwR,EAAIxP,KAAKL,GAGT6P,EAAIyb,OAAOpoB,EAAO,EAAGlD,GAG7B,SAASwuE,GAAgB3+D,EAAK3M,GAEtBA,GAAS2M,EAAIxR,OAAS,EACtBwR,EAAIygD,MAGJzgD,EAAIyb,OAAOpoB,EAAO;;;;;;;OAW1B,IAAI4rE,GAAgB,IAAI3xE,OAMxB,SAAS4xE,GAAkCtrB,GACvC,OAAOA,EAAiBurB,eAE5B,IAAIC,GAAmC,SAAUj3B,GAE7C,SAASi3B,EAAkBhrE,EAAU6zC,EAAek3B,EAAgBE,EAASC,EAAUl3B,GACnF,IAAIhjC,EAGJ+iC,EAAO15C,KAAKvB,OAASA,KAOrB,OANAkY,EAAMhR,SAAWA,EACjBgR,EAAM6iC,cAAgBA,EACtB7iC,EAAMi6D,QAAUA,EAChBj6D,EAAMk6D,SAAWA,EACjBl6D,EAAMgjC,mBAAqBA,EAC3BhjC,EAAM+5D,eAAiBA,EAChB/5D,EA2CX,OAvDAxX,EAAUwxE,EAAmBj3B,GAc7B76C,OAAO+B,eAAe+vE,EAAkBrxE,UAAW,UAC/CsK,IAAK,WACD,IAAIknE,KACAtxC,EAAS/gC,KAAKmyE,QAClB,IAAK,IAAItsE,KAAYk7B,EAEjBsxC,EAAU/uE,MAAOuC,SAAUA,EAAU66C,aADlB3f,EAAOl7B,KAG9B,OAAOwsE,GAEXv5D,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+vE,EAAkBrxE,UAAW,WAC/CsK,IAAK,WACD,IAAImnE,KACJ,IAAK,IAAIzsE,KAAY7F,KAAKoyE,SAEtBE,EAAWhvE,MAAOuC,SAAUA,EAAU66C,aADnB1gD,KAAKoyE,SAASvsE,KAGrC,OAAOysE,GAEXx5D,YAAY,EACZC,cAAc,IAKlBm5D,EAAkBrxE,UAAUC,OAAS,SAAUwO,EAAUilC,EAAkB4G,EAAoB3wB,GAC3F,IAAKA,EACD,MAAM,IAAInf,MAAM,+BAEpB,IAAIknE,EAAU9+B,GAAkBzzC,KAAKiyE,gBACjCO,EAAqBD,EAAQxjC,MAAM,GAAG7T,QAAQu3C,kBAAkB3pC,UAChE9c,EAAOojB,GAASE,eAAehgC,EAAUilC,MAAwB4G,EAAoBo3B,EAAS/nD,EAAUunD,IACxGjqE,EAAYmnC,GAAejjB,EAAMwmD,GAAoBx1C,SAIzD,OAHIme,GACAnvB,EAAKxY,SAAS4qB,aAAa4Q,GAAchjB,EAAM,GAAGmmB,cAAe,aAAci6B,GAAQC,MAEpF,IAAIqG,GAAc1mD,EAAM,IAAI2mD,GAAS3mD,GAAOlkB,IAEhDoqE,EAxD2B,CAyDpC53B,IACEo4B,GAA+B,SAAUz3B,GAEzC,SAASy3B,EAActzB,EAAOwzB,EAAUC,GACpC,IAAI36D,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAQjC,OAPAkY,EAAMknC,MAAQA,EACdlnC,EAAM06D,SAAWA,EACjB16D,EAAM26D,WAAaA,EACnB36D,EAAM46D,OAAS56D,EAAMknC,MAAM5tC,IAAIu9B,MAAM,GACrC72B,EAAMyiB,SAAWi4C,EACjB16D,EAAMklB,kBAAoBw1C,EAC1B16D,EAAM8kB,SAAW61C,EACV36D,EAqBX,OA/BAxX,EAAUgyE,EAAez3B,GAYzB76C,OAAO+B,eAAeuwE,EAAc7xE,UAAW,YAC3CsK,IAAK,WACD,OAAO,IAAIiwC,GAAWpM,GAAchvC,KAAKo/C,MAAOp/C,KAAK8yE,OAAOhqC,WAAWqJ,gBAE3Er5B,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeuwE,EAAc7xE,UAAW,YAC3CsK,IAAK,WAAc,OAAO,IAAI4nE,GAAU/yE,KAAKo/C,MAAOp/C,KAAK8yE,SACzDh6D,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAeuwE,EAAc7xE,UAAW,iBAC3CsK,IAAK,WAAc,OAAOnL,KAAK6yE,WAAWjyE,aAC1CkY,YAAY,EACZC,cAAc,IAElB25D,EAAc7xE,UAAU+oB,QAAU,WAAc5pB,KAAK4yE,SAAShpD,WAC9D8oD,EAAc7xE,UAAUwR,UAAY,SAAUotC,GAAYz/C,KAAK4yE,SAASvgE,UAAUotC,IAC3EizB,EAhCuB,CAiChCr4B,IACF,SAAS24B,GAAwBhnD,EAAM2iD,EAAOe,GAC1C,OAAO,IAAIuD,GAAkBjnD,EAAM2iD,EAAOe,GAE9C,IAAIuD,GAAmC,WACnC,SAASA,EAAkB7zB,EAAO0zB,EAAQI,GACtClzE,KAAKo/C,MAAQA,EACbp/C,KAAK8yE,OAASA,EACd9yE,KAAKkzE,MAAQA,EAIblzE,KAAK80C,kBA4FT,OA1FA10C,OAAO+B,eAAe8wE,EAAkBpyE,UAAW,WAC/CsK,IAAK,WAAc,OAAO,IAAIiwC,GAAWp7C,KAAKkzE,MAAM/gC,gBACpDr5B,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe8wE,EAAkBpyE,UAAW,YAC/CsK,IAAK,WAAc,OAAO,IAAI4nE,GAAU/yE,KAAKo/C,MAAOp/C,KAAK8yE,SACzDh6D,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe8wE,EAAkBpyE,UAAW,kBAE/CsK,IAAK,WAGD,IAFA,IAAI6gB,EAAOhsB,KAAKo/C,MACZuvB,EAAQ3uE,KAAK8yE,OAAOvnE,QAChBojE,GAAS3iD,GACb2iD,EAAQ18B,GAAajmB,GACrBA,EAAOA,EAAKzgB,OAEhB,OAAOygB,EAAO,IAAI+mD,GAAU/mD,EAAM2iD,GAAS,IAAIoE,GAAU/yE,KAAKo/C,MAAO,OAEzEtmC,YAAY,EACZC,cAAc,IAElBk6D,EAAkBpyE,UAAU+Y,MAAQ,WAEhC,IADA,IACSzY,EADCnB,KAAK80C,eAAexzC,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAI6qB,EAAOulD,GAAmBvxE,KAAKkzE,MAAO/xE,GAC1CiuC,GAASW,YAAY/jB,KAG7BinD,EAAkBpyE,UAAUsK,IAAM,SAAUhF,GACxC,IAAI6lB,EAAOhsB,KAAK80C,eAAe3uC,GAC/B,GAAI6lB,EAAM,CACN,IAAImnD,EAAM,IAAIR,GAAS3mD,GAEvB,OADAmnD,EAAItzB,yBAAyB7/C,MACtBmzE,EAEX,OAAO,MAEX/yE,OAAO+B,eAAe8wE,EAAkBpyE,UAAW,UAC/CsK,IAAK,WAAc,OAAOnL,KAAK80C,eAAexzC,QAC9CwX,YAAY,EACZC,cAAc,IAElBk6D,EAAkBpyE,UAAU0uC,mBAAqB,SAAU4T,EAAan0C,EAAS7I,GAC7E,IAAIqgD,EAAUrD,EAAY5T,mBAAmBvgC,OAE7C,OADAhP,KAAK6mD,OAAOL,EAASrgD,GACdqgD,GAEXysB,EAAkBpyE,UAAU4lD,gBAAkB,SAAUC,EAAkBvgD,EAAOmJ,EAAUilC,EAAkBoS,GACzG,IAAIC,EAAkBt3C,GAAYtP,KAAKkiD,eAClCyE,GAAiBD,aAA4B1L,KAC9C2L,EAAcC,EAAgBz7C,IAAImwC,KAEtC,IAAIiG,EAAemF,EAAiB5lD,OAAO8lD,EAAiBrS,OAAkB1wC,EAAW8iD,GAEzF,OADA3mD,KAAK6mD,OAAOtF,EAAa5mB,SAAUx0B,GAC5Bo7C,GAEX0xB,EAAkBpyE,UAAUgmD,OAAS,SAAUL,EAASrgD,GACpD,GAAIqgD,EAAQn9B,UACR,MAAM,IAAIhe,MAAM,sDAEpB,IAAI+nE,EAAW5sB;;;;;;;;AAIf,OAvTR,SAAS6sB,EAAmBC,EAAY9B,EAAa5zC,EAAW5R,GAC5D,IAAI4oB,EAAgB48B,EAAY38B,cAAcC,eAC5B,OAAdlX,QAAoC/5B,IAAd+5B,IACtBA,EAAYgX,EAActzC,QAE9B0qB,EAAKwlB,oBAAsB8hC,EAC3BxB,GAAWl9B,EAAehX,EAAW5R,GAMzC,SAASunD,EAAoBC,EAAexnD,GACxC,IAAIynD,EAAiB1hC,GAAsB/lB,GAC3C,GAAKynD,GAAkBA,IAAmBD,KACzB,GAAbxnD,EAAKsD,OADT,CAWAtD,EAAKsD,OAAS,GACd,IAAIokD,EAAiBD,EAAet5C,SAASw5C,gBACxCD,IACDA,EAAiBD,EAAet5C,SAASw5C,oBAE7CD,EAAepwE,KAAK0oB,GAKxB,SAAS4nD,EAA4BrB,EAASx+B,GAC1C,KAAoB,EAAhBA,EAAQ9lC,OAAZ,CAGAskE,EAAQttB,WAAa,EACrBlR,EAAQ9lC,OAAS,EAEjB,IADA,IAAI+jC,EAAgB+B,EAAQxoC,OACrBymC,GACHA,EAAc6hC,YAAc,EAC5B7hC,EAAgBA,EAAczmC,QAXlCqoE,CAA4B5nD,EAAKzgB,OAAOiG,IAAKwa,EAAKgmB,gBA1BlDuhC,CAAoB/B,EAAaxlD,GACjCojB,GAASiB,mBAAmBrkB,GAE5B2lD,GAAyBH,EADV5zC,EAAY,EAAIgX,EAAchX,EAAY,GAAK,KACd5R,GA2S5CqnD,CAAmBrzE,KAAKo/C,MAAOp/C,KAAKkzE,MAAO/sE,EAD5BitE,EAASh0B,OAExBg0B,EAASvzB,yBAAyB7/C,MAC3BwmD,GAEXysB,EAAkBpyE,UAAUimD,KAAO,SAAUN,EAAS1vC,GAClD,GAAI0vC,EAAQn9B,UACR,MAAM,IAAIhe,MAAM,oDAEpB,IAAI6L,EAAgBlX,KAAK80C,eAAe5qC,QAAQs8C,EAAQpH,OAExD,OAnPR,SAAS00B,EAAiBtC,EAAauC,EAAcC,GACjD,IAAIp/B,EAAgB48B,EAAY38B,cAAcC,eAC1C9oB,EAAO4oB,EAAcm/B,GACzBtC,GAAgB78B,EAAem/B,GACX,MAAhBC,IACAA,EAAep/B,EAActzC,QAEjCwwE,GAAWl9B,EAAeo/B,EAAchoD,GAGxCojB,GAASiB,mBAAmBrkB,GAC5B0lD,GAAiB1lD,GAEjB2lD,GAAyBH,EADVwC,EAAe,EAAIp/B,EAAco/B,EAAe,GAAK,KACpBhoD,GAqO5C8nD,CAAiB9zE,KAAKkzE,MAAOh8D,EAAeJ,GACrC0vC,GAEXysB,EAAkBpyE,UAAUqJ,QAAU,SAAUs8C,GAC5C,OAAOxmD,KAAK80C,eAAe5qC,QAAQs8C,EAAQpH,QAE/C6zB,EAAkBpyE,UAAUiZ,OAAS,SAAU3T,GAC3C,IAAI4lB,EAAWwlD,GAAmBvxE,KAAKkzE,MAAO/sE,GAC1C4lB,GACAqjB,GAASW,YAAYhkB,IAG7BknD,EAAkBpyE,UAAU2+C,OAAS,SAAUr5C,GAC3C,IAAI6lB,EAAOulD,GAAmBvxE,KAAKkzE,MAAO/sE,GAC1C,OAAO6lB,EAAO,IAAI2mD,GAAS3mD,GAAQ,MAEhCinD,EApG2B,GAsGtC,SAASgB,GAAwBjoD,GAC7B,OAAO,IAAI2mD,GAAS3mD,GAExB,IAAI2mD,GAA0B,WAC1B,SAASA,EAASvzB,GACdp/C,KAAKo/C,MAAQA,EACbp/C,KAAKs/C,kBAAoB,KACzBt/C,KAAKq/C,QAAU,KAmEnB,OAjEAj/C,OAAO+B,eAAewwE,EAAS9xE,UAAW,aACtCsK,IAAK,WAAc,OAh/P3B,SAAS+oE,EAAgBloD,GACrB,IAAImoD,KAEJ,OADAzgC,GAAqB1nB,EAAM,OAAiBnoB,OAAWA,EAAWswE,GAC3DA,EA6+PuBD,CAAgBl0E,KAAKo/C,QAC/CtmC,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAewwE,EAAS9xE,UAAW,WACtCsK,IAAK,WAAc,OAAOnL,KAAKo/C,MAAMpwC,SACrC8J,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAewwE,EAAS9xE,UAAW,aACtCsK,IAAK,WAAc,OAAoD,IAAzB,IAAnBnL,KAAKo/C,MAAM9vB,QACtCxW,YAAY,EACZC,cAAc,IAElB45D,EAAS9xE,UAAU6+C,aAAe,WAAcpO,GAAwBtxC,KAAKo/C,QAC7EuzB,EAAS9xE,UAAU2+C,OAAS,WAAcx/C,KAAKo/C,MAAM9vB,QAAS,GAC9DqjD,EAAS9xE,UAAUkpC,cAAgB,WAC/B,IAAIqqC,EAAKp0E,KAAKo/C,MAAMvN,KAAKxb,gBACrB+9C,EAAGv5C,OACHu5C,EAAGv5C,QAEP,IACIuU,GAASS,mBAAmB7vC,KAAKo/C,OAErC,QACQg1B,EAAG7iE,KACH6iE,EAAG7iE,QAIfohE,EAAS9xE,UAAU++C,eAAiB,WAAcxQ,GAASU,mBAAmB9vC,KAAKo/C,QACnFuzB,EAAS9xE,UAAU8+C,SAAW,WAAc3/C,KAAKo/C,MAAM9vB,OAAS,GAChEqjD,EAAS9xE,UAAUwR,UAAY,SAAUotC,GAChCz/C,KAAKo/C,MAAMkwB,cACZtvE,KAAKo/C,MAAMkwB,gBAEftvE,KAAKo/C,MAAMkwB,YAAYhsE,KAAKm8C,IAEhCkzB,EAAS9xE,UAAU+oB,QAAU,WACrB5pB,KAAKq/C,QACLr/C,KAAKq/C,QAAQ7wB,WAAWxuB,MAEnBA,KAAKs/C,mBACVt/C,KAAKs/C,kBAAkBE,OAAOx/C,KAAKs/C,kBAAkBp1C,QAAQlK,OAEjEovC,GAASW,YAAY/vC,KAAKo/C,QAE9BuzB,EAAS9xE,UAAUk/C,iBAAmB,WAClC//C,KAAKq/C,QAAU,KACfqyB,GAAiB1xE,KAAKo/C,OACtBhQ,GAASiB,mBAAmBrwC,KAAKo/C,QAErCuzB,EAAS9xE,UAAUm/C,eAAiB,SAAUC,GAC1C,GAAIjgD,KAAKs/C,kBACL,MAAM,IAAIj0C,MAAM,qDAEpBrL,KAAKq/C,QAAUY,GAEnB0yB,EAAS9xE,UAAUg/C,yBAA2B,SAAUC,GACpD,GAAI9/C,KAAKq/C,QACL,MAAM,IAAIh0C,MAAM,iEAEpBrL,KAAKs/C,kBAAoBQ,GAEtB6yB,EAvEkB,GAyE7B,SAAS0B,GAAmBroD,EAAMxa,GAC9B,OAAO,IAAI8iE,GAAatoD,EAAMxa,GAElC,IAAI8iE,GAA8B,SAAUr5B,GAExC,SAASq5B,EAAaC,EAAa5D,GAC/B,IAAIz4D,EAAQ+iC,EAAO15C,KAAKvB,OAASA,KAGjC,OAFAkY,EAAMq8D,YAAcA,EACpBr8D,EAAMy4D,KAAOA,EACNz4D,EAYX,OAjBAxX,EAAU4zE,EAAcr5B,GAOxBq5B,EAAazzE,UAAU0uC,mBAAqB,SAAUvgC,GAClD,OAAO,IAAI2jE,GAASvjC,GAASG,mBAAmBvvC,KAAKu0E,YAAav0E,KAAK2wE,KAAM3wE,KAAK2wE,KAAKz1C,QAAQf,SAAUnrB,KAE7G5O,OAAO+B,eAAemyE,EAAazzE,UAAW,cAC1CsK,IAAK,WACD,OAAO,IAAIiwC,GAAWpM,GAAchvC,KAAKu0E,YAAav0E,KAAK2wE,KAAK7nC,WAAWqJ,gBAE/Er5B,YAAY,EACZC,cAAc,IAEXu7D,EAlBsB,CAmB/B/1B,IACF,SAASi2B,GAAiBxoD,EAAM2iD,GAC5B,OAAO,IAAIoE,GAAU/mD,EAAM2iD,GAE/B,IAAIoE,GAA2B,WAC3B,SAASA,EAAU/mD,EAAM2iD,GACrB3uE,KAAKgsB,KAAOA,EACZhsB,KAAK2uE,MAAQA,EAOjB,OALAoE,EAAUlyE,UAAUsK,IAAM,SAAUvB,EAAOwB,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgBE,GAASN,oBAElDokC,GAASY,WAAWhwC,KAAKgsB,KAAMhsB,KAAK2uE,QADhB3uE,KAAK2uE,OAA8D,IAAlC,SAAnB3uE,KAAK2uE,MAAM1gE,QACsBA,MAAO,EAAcrE,MAAOA,EAAO4mC,SAAUA,GAAS5mC,IAAUwB,IAEvI2nE,EAVmB,GA0B9B,SAAS0B,GAAiBzoD,GACtB,OAAO,IAAI0oD,GAAgB1oD,EAAKxY,UAEpC,IAAIkhE,GAAiC,WACjC,SAASA,EAAgB7jB,GACrB7wD,KAAK6wD,SAAWA,EA4FpB,OA1FA6jB,EAAgB7zE,UAAU49B,kBAAoB,SAAUmwC,GACpD,OAAO5uE,KAAK6wD,SAASpyB,kBAAkBmwC,IAE3C8F,EAAgB7zE,UAAU86B,cAAgB,SAAUpwB,EAAQopE,GACxD,IAAIxvE,EAAKhC,EAAO6xC,GAAe2/B,GAAmB,GAC9Cpb,EAAKv5D,KAAK6wD,SAASl1B,cADkDx2B,EAAG,GAAjBA,EAAG,IAK9D,OAHIoG,GACAvL,KAAK6wD,SAASzgC,YAAY7kB,EAAQguD,GAE/BA,GAEXmb,EAAgB7zE,UAAU+zE,eAAiB,SAAUjhE,GAAe,OAAOA,GAC3E+gE,EAAgB7zE,UAAUg0E,qBAAuB,SAAUC,GACvD,IAAIztC,EAAUrnC,KAAK6wD,SAASvpB,cAAc,IAI1C,OAHIwtC,GACA90E,KAAK6wD,SAASzgC,YAAY0kD,EAAeztC,GAEtCA,GAEXqtC,EAAgB7zE,UAAUitB,WAAa,SAAUgnD,EAAe7xE,GAC5D,IAAI6oB,EAAO9rB,KAAK6wD,SAAS/iC,WAAW7qB,GAIpC,OAHI6xE,GACA90E,KAAK6wD,SAASzgC,YAAY0kD,EAAehpD,GAEtCA,GAEX4oD,EAAgB7zE,UAAUk0E,aAAe,SAAUD,EAAe/lC,GAC9D,IAAK,IAAI5tC,EAAI,EAAGA,EAAI4tC,EAAMztC,OAAQH,IAC9BnB,KAAK6wD,SAASzgC,YAAY0kD,EAAe/lC,EAAM5tC,KAGvDuzE,EAAgB7zE,UAAUm0E,gBAAkB,SAAUlpD,EAAMmpD,GAGxD,IAFA,IAAIH,EAAgB90E,KAAK6wD,SAAS3iC,WAAWpC,GACzC6nB,EAAc3zC,KAAK6wD,SAASld,YAAY7nB,GACnC3qB,EAAI,EAAGA,EAAI8zE,EAAc3zE,OAAQH,IACtCnB,KAAK6wD,SAASn1C,aAAao5D,EAAeG,EAAc9zE,GAAIwyC,IAGpE+gC,EAAgB7zE,UAAU2tB,WAAa,SAAUymD,GAC7C,IAAK,IAAI9zE,EAAI,EAAGA,EAAI8zE,EAAc3zE,OAAQH,IAAK,CAC3C,IAAI2qB,EAAOmpD,EAAc9zE,GACrB2zE,EAAgB90E,KAAK6wD,SAAS3iC,WAAWpC,GAC7C9rB,KAAK6wD,SAASljC,YAAYmnD,EAAehpD,KAGjD4oD,EAAgB7zE,UAAUkvC,YAAc,SAAUp8B,EAAauhE,GAC3D,IAAK,IAAI/zE,EAAI,EAAGA,EAAI+zE,EAAa5zE,OAAQH,IACrCnB,KAAK6wD,SAASjjC,YAAYsnD,EAAa/zE,KAG/CuzE,EAAgB7zE,UAAU0+B,OAAS,SAAU4S,EAAextC,EAAM86C,GAC9D,OAAOz/C,KAAK6wD,SAAStxB,OAAO4S,EAAextC,EAAM86C,IAErDi1B,EAAgB7zE,UAAUs0E,aAAe,SAAUxzE,EAAQgD,EAAM86C,GAC7D,OAAOz/C,KAAK6wD,SAAStxB,OAAO59B,EAAQgD,EAAM86C,IAE9Ci1B,EAAgB7zE,UAAUqvE,mBAAqB,SAAU/9B,EAAeijC,EAAcC,GAClFr1E,KAAK6wD,SAASn9B,YAAYye,EAAeijC,EAAcC,IAE3DX,EAAgB7zE,UAAU+uE,oBAAsB,SAAUz9B,EAAewiC,EAAkBW,GACvF,IAAInwE,EAAKhC,EAAO6xC,GAAe2/B,GAAmB,GAAI9F,EAAK1pE,EAAG,GAAIR,EAAOQ,EAAG,GACtD,MAAlBmwE,EACAt1E,KAAK6wD,SAASzyB,aAAa+T,EAAextC,EAAM2wE,EAAgBzG,GAGhE7uE,KAAK6wD,SAASjwB,gBAAgBuR,EAAextC,EAAMkqE,IAG3D6F,EAAgB7zE,UAAU00E,oBAAsB,SAAUpjC,EAAeijC,EAAcC,KACvFX,EAAgB7zE,UAAUkvE,gBAAkB,SAAU59B,EAAere,EAAW0hD,GACxEA,EACAx1E,KAAK6wD,SAAS98B,SAASoe,EAAere,GAGtC9zB,KAAK6wD,SAAS78B,YAAYme,EAAere,IAGjD4gD,EAAgB7zE,UAAUmvE,gBAAkB,SAAU79B,EAAesjC,EAAWC,GAC1D,MAAdA,EACA11E,KAAK6wD,SAASv9B,SAAS6e,EAAesjC,EAAWC,GAGjD11E,KAAK6wD,SAASl9B,YAAYwe,EAAesjC,IAGjDf,EAAgB7zE,UAAU80E,oBAAsB,SAAUxjC,EAAeyjC,EAAYxwE,GACjF+sC,EAAcyjC,GAAYp0E,MAAM2wC,EAAe/sC,IAEnDsvE,EAAgB7zE,UAAUg1E,QAAU,SAAUlG,EAAexnE,GAAQnI,KAAK6wD,SAASj+B,SAAS+8C,EAAexnE,IAC3GusE,EAAgB7zE,UAAUi1E,QAAU,WAAc,MAAM,IAAIzqE,MAAM,6CAC3DqpE,EA9FyB,GAgGpC,SAASjlC,GAAkBmK,EAAYruC,EAAQwqE,EAAqBvkE,GAChE,OAAO,IAAIwkE,GAAap8B,EAAYruC,EAAQwqE,EAAqBvkE,GAErE,IAAIwkE,GAA8B,WAC9B,SAASA,EAAaC,EAAaxvD,EAASwhC,EAAsB0oB,GAC9D3wE,KAAKi2E,YAAcA,EACnBj2E,KAAKymB,QAAUA,EACfzmB,KAAKioD,qBAAuBA,EAC5BjoD,KAAK2wE,KAAOA,EACZ3wE,KAAKy2D,qBACLz2D,KAAK02D,YAAa,EAClB12D,KAAKsP,SAAWtP,KA9tBxB,SAASk2E,EAAa/uE,GAGlB,IAFA,IAAIqK,EAAMrK,EAAKwpE,KACX3sE,EAAYmD,EAAKqf,WAAa,IAAIjmB,MAAMiR,EAAIxN,UAAU1C,QACjDH,EAAI,EAAGA,EAAIqQ,EAAIxN,UAAU1C,OAAQH,IAAK,CAC3C,IAAIg1E,EAAU3kE,EAAIxN,UAAU7C,GACN,KAAhBg1E,EAAQloE,YAEWpK,IAAjBG,EAAU7C,KACV6C,EAAU7C,GAAK2vE,GAAwB3pE,EAAMgvE,KAutBrDD,CAAal2E,MAiCjB,OA/BAg2E,EAAan1E,UAAUsK,IAAM,SAAUvB,EAAOwB,EAAegrE,QACnC,IAAlBhrE,IAA4BA,EAAgBE,GAASN,yBACrC,IAAhBorE,IAA0BA,EAAc,GAC5C,IAAInoE,EAAQ,EAOZ,OANkB,EAAdmoE,EACAnoE,GAAS,EAEU,EAAdmoE,IACLnoE,GAAS,GAENsiE,GAAmBvwE,MAAQ4J,MAAOA,EAAO4mC,SAAUA,GAAS5mC,GAAQqE,MAAOA,GAAS7C,IAE/FhL,OAAO+B,eAAe6zE,EAAan1E,UAAW,YAC1CsK,IAAK,WAAc,OAAOnL,KAAKmL,IAAInL,KAAKi2E,cACxCn9D,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe6zE,EAAan1E,UAAW,4BAC1CsK,IAAK,WAAc,OAAOnL,KAAKmL,IAAIwvC,KACnC7hC,YAAY,EACZC,cAAc,IAElBi9D,EAAan1E,UAAU+oB,QAAU,WAC7B,GAAI5pB,KAAK02D,WACL,MAAM,IAAIrrD,MAAM,iBAAmB1B,EAAU3J,KAAKg9B,SAASp8B,aAAe,gCAE9EZ,KAAK02D,YAAa,EApnB1B,SAAS2f,EAAsB7rD,EAAU8rD,GAGrC,IAFA,IAAI9kE,EAAMgZ,EAASmmD,KACftnD,EAAY,IAAIzhB,IACXzG,EAAI,EAAGA,EAAIqQ,EAAIxN,UAAU1C,OAAQH,IAEtC,GAAoB,OADNqQ,EAAIxN,UAAU7C,GAChB8M,MAAgC,CACxC,IAAI+uB,EAAWxS,EAAShE,WAAWrlB,GACnC,GAAI67B,GAAYA,IAAamzC,GAAiB,CAC1C,IAAI99D,EAAY2qB,EAASjT,YACA,mBAAd1X,GAA6BgX,EAAUrN,IAAIghB,KAClD3qB,EAAU7Q,MAAMw7B,GAChB3T,EAAU3O,IAAIsiB,MA0mB1Bq5C,CAAsBr2E,MACtBA,KAAKy2D,kBAAkB9nD,QAAQ,SAAUqwB,GAAY,OAAOA,OAEhEg3C,EAAan1E,UAAUwR,UAAY,SAAUotC,GAAYz/C,KAAKy2D,kBAAkBnzD,KAAKm8C,IAC9Eu2B,EA1CsB,GAoD7BO,GAAqB/lC,GAASuO,IAC9By3B,GAAoBhmC,GAAS0O,IAC7Bu3B,GAAqBjmC,GAAS4K,IAC9Bs7B,GAA2BlmC,GAASgO,IACpCm4B,GAAsBnmC,GAAS+N,IAC/Bq4B,GAA4BpmC,GAASllB,IACrCurD,GAAwBrmC,GAASllC,IACjCwrE,GAAwBtmC,GAASvlC;;;;;;;OA+BrC,SAAS0lE,GAAKoG,EAAY9oE,EAAO0kC,EAAmBsB,EAAYrqC,EAAO3G,EAAO8J,EAAMisB,EAAU+G,GAC1F,IAAI56B,EAAKutC,GAAuBC,GAAoBC,EAAiBztC,EAAGytC,eAAgBE,EAAa3tC,EAAG2tC,WAAYD,EAAkB1tC,EAAG0tC,gBACpI9S,IACDA,MAEC/G,IACDA,MAKJ/1B,EAAQsH,EAAkBtH,GAC1B,IAAI+zE,EAAU/jC,GAAalmC,EAAMpD,EAAUC,IAC3C,OAEIk/B,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAEdwH,WAAYA,EACZ9oE,MAAOA,EACP4lE,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EAAGtkC,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EACtGqB,gBAAiB,EAAGF,WAAYA,EAAYjb,SAAUA,EACtD2b,aAAcO,GAAiBlc,GAAW+G,QAASA,EACnD7E,QAAS,KACThuB,UAAYtD,MAAOA,EAAO3G,MAAOA,EAAO8J,KAAMiqE,GAC9C7uE,KAAM,KACN0iD,MAAO,KACPpW,UAAW,MAGnB,SAAS0iC,GAAuBnrD,EAAMxa,GAClC,OAAO4lE,GAA0BprD,EAAMxa,GAE3C,SAAS6lE,GAAmBrrD,EAAMxa,GAG9B,IADA,IAAI4iC,EAAWpoB,EACRooB,EAAS7oC,SAAW+mC,GAAgB8B,IACvCA,EAAWA,EAAS7oC,OAKxB,OAAO+rE,GAAYljC,EAAS7oC,OAAQ0mC,GAAamC,IAFtB,EAEuD5iC,EAAItE,SAASjK,MAAOuO,EAAItE,SAASH,MAEvH,SAASwqE,GAAwBvrD,EAAMxa,GAEnC,IAEIwrB,EAAWs6C,GAAYtrD,EAAMxa,EAAIjG,QAFG,MAAZiG,EAAIvD,OAAiC,EAEEuD,EAAItE,SAASjK,MAAOuO,EAAItE,SAASH,MACpG,GAAIyE,EAAIuuB,QAAQz+B,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAIqQ,EAAIuuB,QAAQz+B,OAAQH,IAAK,CACzC,IAAI6tE,EAASx9D,EAAIuuB,QAAQ5+B,GACrBq2E,EAAmBx6C,EAASgyC,EAAOnpE,UACvC,IAAI4mD,GAAa+qB,GAKb,MAAM,IAAInsE,MAAM,WAAa2jE,EAAOnpE,SAAW,wBAA0Bm3B,EAASp8B,YAAY+D,KAAO,MAJrG,IAAIw7B,EAAeq3C,EAAiBp3C,UAAUq3C,GAAoBzrD,EAAMxa,EAAIjG,OAAOu9B,UAAWkmC,EAAO/vC,YACrGjT,EAAKsjD,YAAY99D,EAAI+9D,YAAcpuE,GAAKg/B,EAAaG,YAAY/6B,KAAK46B,GAOlF,OAAOnD,EAEX,SAASy6C,GAAoBzrD,EAAM7lB,EAAO84B,GACtC,OAAO,SAAU2S,GAAS,OAAOD,GAAc3lB,EAAM7lB,EAAO84B,EAAW2S,IAmF3E,SAASwlC,GAA0BprD,EAAMxa,GAErC,IAAIkmE,GAAoC,KAAZlmE,EAAIvD,OAAsC,EAClEyiE,EAAcl/D,EAAItE,SACtB,OAAoB,UAAZsE,EAAIvD,OACR,KAAK,IACD,OAAOqpE,GAAYtrD,EAAMxa,EAAIjG,OAAQmsE,EAAsBhH,EAAYztE,MAAOytE,EAAY3jE,MAC9F,KAAK,KACD,OA0BZ,SAAS4qE,EAAY3rD,EAAM2iD,EAAO+I,EAAsBr4E,EAAS0N,GAC7D,IAAI4Z,EAAM5Z,EAAKzL,OACf,OAAQqlB,GACJ,KAAK,EACD,OAAOtnB,IACX,KAAK,EACD,OAAOA,EAAQ2wC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,KACtE,KAAK,EACD,OAAO1N,EAAQ2wC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,IAAKijC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,KAC9H,KAAK,EACD,OAAO1N,EAAQ2wC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,IAAKijC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,IAAKijC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,KACtL,QAEI,IADA,IAAIskE,EAAY9wE,MAAMomB,GACbxlB,EAAI,EAAGA,EAAIwlB,EAAKxlB,IACrBkwE,EAAUlwE,GAAK6uC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK5L,IAEtE,OAAO9B,EAAQmC,WAAM,EAAQgC,EAAS6tE,KA1C/BsG,CAAY3rD,EAAMxa,EAAIjG,OAAQmsE,EAAsBhH,EAAYztE,MAAOytE,EAAY3jE,MAC9F,KAAK,KACD,OAAOijC,GAAWhkB,EAAMxa,EAAIjG,OAAQmsE,EAAsBhH,EAAY3jE,KAAK,IAC/E,KAAK,IACD,OAAO2jE,EAAYztE,OAG/B,SAASq0E,GAAYtrD,EAAM2iD,EAAO+I,EAAsB/xE,EAAMoH,GAC1D,IAAI4Z,EAAM5Z,EAAKzL,OACf,OAAQqlB,GACJ,KAAK,EACD,OAAO,IAAIhhB,EACf,KAAK,EACD,OAAO,IAAIA,EAAKqqC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,KACvE,KAAK,EACD,OAAO,IAAIpH,EAAKqqC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,IAAKijC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIpH,EAAKqqC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,IAAKijC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,IAAKijC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK,KACvL,QAEI,IADA,IAAIskE,EAAY,IAAI9wE,MAAMomB,GACjBxlB,EAAI,EAAGA,EAAIwlB,EAAKxlB,IACrBkwE,EAAUlwE,GAAK6uC,GAAWhkB,EAAM2iD,EAAO+I,EAAsB3qE,EAAK5L,IAEtE,OAAO,IAAKwE,EAAKJ,KAAK/D,MAAMmE,EAAMnC,QAAU,GAAS6tE,MAuCjE,IAyvCIuG,GAzvCAC,MACJ,SAAS7nC,GAAWhkB,EAAM2iD,EAAO+I,EAAsBlH,EAAQplE,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgBE,GAASN,oBACtC,EAAfwlE,EAAOviE,MACP,OAAOuiE,EAAO5mE,MAElB,IAAIkuE,EAAY9rD,EACG,EAAfwkD,EAAOviE,QACP7C,EAAgB,MAEpB,IAAI2sE,EAAcvH,EAAOhgC,SACrBunC,IAAgBnB,KAGhBc,KAA0B/I,IAASA,EAAMzzC,QAAQuL,gBAEjDkoC,GAAyB,EAAf6B,EAAOviE,QACjBypE,GAAuB,EACvB/I,EAAQA,EAAMpjE,QAGlB,IADA,IAAIysE,EAAahsD,EACVgsD,GAAY,CACf,GAAIrJ,EACA,OAAQoJ,GACJ,KAAKxB,GAED,OAAO9B,GADQwD,GAAaD,EAAYrJ,EAAO+I,IAGnD,KAAKlB,GAED,OADeyB,GAAaD,EAAYrJ,EAAO+I,GAC/BlkE,SAEpB,KAAKijE,GACD,OAAO,IAAIr7B,GAAWpM,GAAcgpC,EAAYrJ,EAAM7lC,WAAWqJ,eACrE,KAAKukC,GACD,OAAO1nC,GAAcgpC,EAAYrJ,EAAM7lC,WAAW+L,cACtD,KAAK8hC,GACD,GAAIhI,EAAMzzC,QAAQf,SACd,OAAO6U,GAAcgpC,EAAYrJ,EAAM7lC,WAAW3O,SAEtD,MAEJ,KAAKy8C,GAED,OAAO3C,GADMgE,GAAaD,EAAYrJ,EAAO+I,IAGjD,KAAKb,GACL,KAAKC,GACD,OAAOtC,GAAiBwD,EAAYrJ,GACxC,QACI,IAAIuJ,GAAiBR,EAAuB/I,EAAMzzC,QAAQi9C,aACtDxJ,EAAMzzC,QAAQk9C,iBAAiBL,GACnC,GAAIG,EAAe,CACf,IAAIG,EAAeppC,GAAe+oC,EAAYE,EAAcpvC,WAK5D,OAJKuvC,IACDA,GAAiBr7C,SAAUo6C,GAA0BY,EAAYE,IACjEF,EAAWjpC,MAAMmpC,EAAcpvC,WAAauvC,GAEzCA,EAAar7C,UAIpC06C,EAAuBplC,GAAgB0lC,GACvCrJ,EAAQ18B,GAAa+lC,GACrBA,EAAaA,EAAWzsE,OACL,EAAfilE,EAAOviE,QACP+pE,EAAa,MAGrB,IAAI/0E,EAAQ60E,EAAUjmC,KAAKviC,SAASnE,IAAIqlE,EAAO5mE,MAAOiuE,IACtD,OAAI50E,IAAU40E,IACVzsE,IAAkBysE,GAMX50E,EAEJ60E,EAAUjmC,KAAKrnB,SAASlb,SAASnE,IAAIqlE,EAAO5mE,MAAOwB,GAE9D,SAAS6sE,GAAajsD,EAAM2iD,EAAO+I,GAC/B,IAAItjC,EACJ,GAAIsjC,EACAtjC,EAAWpF,GAAchjB,EAAM2iD,EAAM7lC,WAAWrC,mBAIhD,IADA2N,EAAWpoB,EACJooB,EAAS7oC,SAAW+mC,GAAgB8B,IACvCA,EAAWA,EAAS7oC,OAG5B,OAAO6oC,EAEX,SAASkkC,GAAWtsD,EAAMqsD,EAAc7mE,EAAKy/B,EAAYhuC,EAAOw5C,GAC5D,GAAgB,MAAZjrC,EAAIvD,MAA+B,CACnC,IAAImmC,EAAWpF,GAAchjB,EAAMxa,EAAIjG,OAAOu9B,WAAWrC,cAChC,EAArB2N,EAAS5iC,IAAIvD,QACbmmC,EAAS9kB,OAAS,GAS1B,GADA+oD,EAAar7C,SALCxrB,EAAIwnB,SAASiY,GACJtsC,MAIW1B,EAClB,OAAZuO,EAAIvD,MAAgC,CACpCwuC,EAAUA,MACV,IAAIxP,EAAWz4B,GAAaG,OAAOqX,EAAKklB,UAAU1/B,EAAIs7B,aAAemE,IAErEwL,EADgBjrC,EAAIwnB,SAASiY,GACXsnC,iBACd,IAAI1jE,GAAao4B,EAAUhqC,EAA6C,IAAxB,EAAb+oB,EAAKsD,QAGhD,OADAtD,EAAKklB,UAAU1/B,EAAIs7B,aAAemE,GAAchuC,EACzCw5C,EA6CX,SAAS+7B,GAAgCxsD,EAAMsqD,GAC3C,GAAMtqD,EAAKxa,IAAIyzC,UAAYqxB,EAK3B,IAFA,IAAIvnC,EAAQ/iB,EAAKxa,IAAIu9B,MACjBH,EAAY,EACPztC,EAAI,EAAGA,EAAI4tC,EAAMztC,OAAQH,IAAK,CACnC,IAAI4yC,EAAUhF,EAAM5tC,GAChB4rB,EAAWgnB,EAAQxoC,OASvB,KARKwhB,GAAYgnB,EAAQ9lC,MAAQqoE,GAE7BmC,GAAuBzsD,EAAM7qB,EAAG4yC,EAAQ9lC,MAAQqoE,EAAY1nC,KAEtB,IAArCmF,EAAQ8/B,WAAayC,KAEtBn1E,GAAK4yC,EAAQE,YAEVlnB,GAA8B,EAAjBA,EAAS9e,OACzB9M,IAAM4rB,EAAS+b,UAAY/b,EAASknB,YAEhClnB,EAASkqD,iBAAmBX,IAC5B1nC,EAAY8pC,GAA+B1sD,EAAMe,EAAUupD,EAAY1nC,IAE3E7hB,EAAWA,EAASxhB,QAIhC,SAASmtE,GAA+B1sD,EAAM2iD,EAAO2H,EAAY1nC,GAC7D,IAAK,IAAIztC,EAAIwtE,EAAM7lC,UAAY,EAAG3nC,GAAKwtE,EAAM7lC,UAAY6lC,EAAM16B,WAAY9yC,IAAK,CAC5E,IAAI4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,GACzB4yC,EAAQ9lC,MAAQqoE,GAChBmC,GAAuBzsD,EAAM7qB,EAAG4yC,EAAQ9lC,MAAQqoE,EAAY1nC,KAGhEztC,GAAK4yC,EAAQE,WAEjB,OAAOrF,EAEX,SAAS6pC,GAAuBzsD,EAAM7lB,EAAOmwE,EAAY1nC,GACrD,IAAIypC,EAAeppC,GAAejjB,EAAM7lB,GACxC,GAAKkyE,EAAL,CAGA,IAAInrE,EAAWmrE,EAAar7C,SACvB9vB,IAGLkiC,GAASC,eAAerjB,EAAM7lB,GACb,QAAbmwE,GACAznC,GAA4B7iB,EAAM,IAA6C4iB,IAC/E1hC,EAAS0oC,qBAEI,QAAb0gC,GACAppE,EAAS2oC,wBAEI,QAAbygC,GACAznC,GAA4B7iB,EAAM,IAA0C4iB,IAC5E1hC,EAAS4oC,kBAEI,QAAbwgC,GACAppE,EAAS6oC,qBAEI,OAAbugC,GACAppE,EAAS6c;;;;;;;OAgDjB,SAASsmB,GAAmBrkB,GAExB,IADA,IAAI2sD,EAAW3sD,EAAKxa,IAAIonE,mBACjB5sD,EAAKzgB,QAAUgnC,GAAevmB,IAAO,CACxC,IAAI6sD,EAAS7sD,EAAKgmB,cAClBhmB,EAAOA,EAAKzgB,OAGZ,IADA,IAAIgG,EAAMsnE,EAAO/vC,UAAY+vC,EAAO5kC,WAC3B9yC,EAAI,EAAGA,GAAKoQ,EAAKpQ,IAED,UADjB4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,IAChB8M,OACQ,UAAhB8lC,EAAQ9lC,QACR8lC,EAAQ8W,MAAMiuB,SAAWH,KAAc5kC,EAAQ8W,MAAMiuB,UACtD3pC,GAAYnjB,EAAM7qB,GAAGiyB,aAEJ,EAAhB2gB,EAAQ9lC,OAA+B9M,EAAI4yC,EAAQE,WAAa4kC,EAAO/vC,YACjD,SAArBiL,EAAQ8/B,YACa,UAArB9/B,EAAQ8/B,aAEV1yE,GAAK4yC,EAAQE,YAKzB,GAAyB,UAArBjoB,EAAKxa,IAAIyzC,UACT,IAAS9jD,EAAI,EAAGA,EAAI6qB,EAAKxa,IAAIu9B,MAAMztC,OAAQH,IAAK,CAC5C,IAAI4yC,EACiB,WADjBA,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,IAChB8M,OAA2D,UAAhB8lC,EAAQ9lC,OAC5DkhC,GAAYnjB,EAAM7qB,GAAGiyB,WAGzBjyB,GAAK4yC,EAAQE,YAIzB,SAAS8kC,GAAoB/sD,EAAM+nB,GAC/B,IAAItG,EAAY0B,GAAYnjB,EAAM+nB,EAAQjL,WAC1C,GAAK2E,EAAUpI,MAAf,CAGA,IAAI2zC,EACAC,OAAYp1E,EAChB,GAAoB,SAAhBkwC,EAAQ9lC,MAAyC,CACjD,IAAIirE,EAAanlC,EAAQxoC,OAAOA,OAChC0tE,EAAYE,GAAgBntD,EAAMktD,EAAWpwC,UAAWowC,EAAWpwC,UAAYowC,EAAWjlC,WAAYF,EAAQ8W,UAC9GmuB,EAAoB/pC,GAAejjB,EAAM+nB,EAAQxoC,OAAOu9B,WAAW9L,cAE9C,UAAhB+W,EAAQ9lC,QACbgrE,EAAYE,GAAgBntD,EAAM,EAAGA,EAAKxa,IAAIu9B,MAAMztC,OAAS,EAAGyyC,EAAQ8W,UACxEmuB,EAAoBhtD,EAAKlkB,WAE7B2lC,EAAUqP,MAAMm8B,GAGhB,IAFA,IAAIjgD,EAAW+a,EAAQ8W,MAAM7xB,SACzBogD,GAAS,EACJj4E,EAAI,EAAGA,EAAI63B,EAAS13B,OAAQH,IAAK,CACtC,IAAIsuE,EAAUz2C,EAAS73B,GACnBk4E,OAAa,EACjB,OAAQ5J,EAAQ6J,aACZ,KAAK,EACDD,EAAa5rC,EAAUrmC,MACvB,MACJ,KAAK,EACDiyE,EAAa5rC,EACb2rC,GAAS,EAGjBJ,EAAkBvJ,EAAQ5pE,UAAYwzE,EAEtCD,GACA3rC,EAAU2P,mBAGlB,SAAS+7B,GAAgBntD,EAAMkJ,EAAY4e,EAAUylC,EAAU3zE,GAC3D,IAAK,IAAIzE,EAAI+zB,EAAY/zB,GAAK2yC,EAAU3yC,IAAK,CACzC,IAAI4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,GACzB6xC,EAAYe,EAAQnB,eAAe2mC,EAAS/1D,IAIhD,GAHiB,MAAbwvB,GACAptC,EAAOtC,KAAKk2E,GAAcxtD,EAAM+nB,EAASf,IAEzB,EAAhBe,EAAQ9lC,OAA+B8lC,EAAQ7Y,QAAQf,WACtD4Z,EAAQ7Y,QAAQf,SAASy+C,mBAAqBW,EAAST,YACpDS,EAAST,SAAU,CACvB,IAAItH,EAAcxiC,GAAchjB,EAAM7qB,GAOtC,IAJK4yC,EAAQmjC,oBAAsBqC,EAAST,YAAcS,EAAST,WAC/DK,GAAgBntD,EAAM7qB,EAAI,EAAGA,EAAI4yC,EAAQE,WAAYslC,EAAU3zE,GAC/DzE,GAAK4yC,EAAQE,YAEG,SAAhBF,EAAQ9lC,MAER,IADA,IAAI2mC,EAAgB48B,EAAY38B,cAAcC,eACrCx4B,EAAI,EAAGA,EAAIs4B,EAActzC,OAAQgb,IAAK,CAC3C,IAAIm9D,EAAe7kC,EAAct4B,GAC7Bo9D,EAAM3nC,GAAsB0nC,GAC5BC,GAAOA,IAAQlI,GACf2H,GAAgBM,EAAc,EAAGA,EAAajoE,IAAIu9B,MAAMztC,OAAS,EAAGi4E,EAAU3zE,GAI1F,IAAI8tE,EAAiBlC,EAAYr3C,SAASw5C,gBAC1C,GAAID,EACA,IAASp3D,EAAI,EAAGA,EAAIo3D,EAAepyE,OAAQgb,IAAK,CAC5C,IAAI2sB,EAAgByqC,EAAep3D,GACnC68D,GAAgBlwC,EAAe,EAAGA,EAAcz3B,IAAIu9B,MAAMztC,OAAS,EAAGi4E,EAAU3zE,KAIvFmuC,EAAQmjC,oBAAsBqC,EAAST,YAAcS,EAAST,WAE/D33E,GAAK4yC,EAAQE,YAGrB,OAAOruC,EAEX,SAAS4zE,GAAcxtD,EAAM+nB,EAAS4lC,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAO3qC,GAAchjB,EAAM+nB,EAAQjL,WAAWqJ,cAClD,KAAK,EACD,OAAO,IAAIiJ,GAAWpM,GAAchjB,EAAM+nB,EAAQjL,WAAWqJ,eACjE,KAAK,EACD,OAAOnD,GAAchjB,EAAM+nB,EAAQjL,WAAW3O,SAClD,KAAK,EACD,OAAO6U,GAAchjB,EAAM+nB,EAAQjL,WAAW+L,cAClD,KAAK,EACD,OAAO5F,GAAejjB,EAAM+nB,EAAQjL,WAAW9L;;;;;;;OAwC/D,SAAS48C,GAAgB5tD,EAAMonB,EAAY5hC,GACvC,IAAIs9D,EAAW37B,GAAuBnnB,EAAMonB,EAAY5hC,GACnDs9D,GAKL56B,GAA0BloB,EADLxa,EAAIijC,UAAUtuC,MACa,EAAqB2oE,EAAU,UAAMjrE;;;;;;;OA4BzF,SAASg2E,GAAmB5rE,EAAO8oE,EAAY+C,GAE3C,IADA,IAAI9gD,EAAW,IAAIz4B,MAAMu5E,EAAcx4E,QAC9BH,EAAI,EAAGA,EAAI24E,EAAcx4E,OAAQH,IAAK,CAC3C,IAAI+d,EAAO46D,EAAc34E,GACzB63B,EAAS73B,IACL8M,MAAO,EACPtJ,KAAMua,EACN2vD,GAAI,KACJ0J,gBAAiBr5D,EACjB2wD,gBAAiB,KACjBnrC,OAAQ,MAGhB,OAEIoE,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAEdwH,WAAYA,EACZ9oE,MAAOA,EACP4lE,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EACrBtkC,kBACAC,gBAAiB,EACjBC,cACAqB,gBAAiB,EACjBF,WAAY,EAAGjb,SAAUA,EACzB2b,aAAcO,GAAiBlc,GAC/B+G,WACA7E,QAAS,KACThuB,SAAU,KACV/E,KAAM,KACN0iD,MAAO,KACPpW,UAAW,MAuMnB,SAAS3mB,GAAW9B,EAAMonB,EAAY5hC,GAClC,IAAIm+D,EACAn8D,EAAWwY,EAAKxY,SACpBm8D,EAAgBn8D,EAASsa,WAAWtc,EAAIrJ,KAAK4iC,QAC7C,IAAI+jC,EAAW37B,GAAuBnnB,EAAMonB,EAAY5hC,GAIxD,OAHIs9D,GACAt7D,EAAS4c,YAAY0+C,EAAUa,IAE1Bv9B,WAAYu9B,GA0EzB,SAASoK,GAAsB92E,EAAOwsE,GAElC,OADwB,MAATxsE,EAAgBA,EAAMqB,WAAa,IAChCmrE,EAAQ/qC;;;;;;;OAmI9B,SAASs1C,GAAcluD,GACnB,OAA8C,IAAzB,EAAbA,EAAK7d,QAA4D,OAAtB6d,EAAKoP,QAAQv2B,KAEpE,SAASs1E,GAAa1uE,EAAQugB,EAAMouD,GAChC,IAAI//C,EAAWrO,EAAKoP,SAAWpP,EAAKoP,QAAQf,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAASyZ,mBACV,MAAM,IAAIvoC,MAAM,oEAEpB,GAAI8uB,EAASyZ,oBAC2B,SAApCzZ,EAASyZ,mBAAmB3lC,MAC5B,MAAM,IAAI5C,MAAM,mFAAqFygB,EAAKgd,UAAY,KAG9H,GAAiB,MAAbhd,EAAK7d,OAEuC,IAAzB,GADD1C,EAASA,EAAO0C,MAAQ,IAEtC,MAAM,IAAI5C,MAAM,sGAAwGygB,EAAKgd,UAAY,KAGjJ,GAAIhd,EAAK++B,MAAO,CACZ,GAAiB,SAAb/+B,EAAK7d,SACH1C,GAAyD,IAA/B,MAAfA,EAAO0C,QACpB,MAAM,IAAI5C,MAAM,kFAAoFygB,EAAKgd,UAAY,KAEzH,GAAiB,UAAbhd,EAAK7d,OAAyC1C,EAC9C,MAAM,IAAIF,MAAM,wEAA0EygB,EAAKgd,UAAY,KAGnH,GAAIhd,EAAKmoB,WAAY,CACjB,IAAIkmC,EAAY5uE,EAASA,EAAOu9B,UAAYv9B,EAAO0oC,WAAaimC,EAAY,EAC5E,GAAIpuD,EAAKgd,WAAaqxC,GAAaruD,EAAKgd,UAAYhd,EAAKmoB,WAAakmC,EAClE,MAAM,IAAI9uE,MAAM,uEAAyEygB,EAAKgd,UAAY,MAItH,SAASyG,GAAmBhkC,EAAQ6uE,EAAc7H,EAASvjE,GAGvD,IAAIgd,EAAOkc,GAAW38B,EAAOsmC,KAAMtmC,EAAOiI,SAAUjI,EAAQ6uE,EAAc7H,GAG1E,OAFA8H,GAASruD,EAAMzgB,EAAOzD,UAAWkH,GACjCsrE,GAAgBtuD,GACTA,EAEX,SAASsjB,GAAeuC,EAAMrgC,EAAKxC,GAC/B,IAAIgd,EAAOkc,GAAW2J,EAAMA,EAAKr+B,SAAU,KAAM,KAAMhC,GAGvD,OAFA6oE,GAASruD,EAAMhd,EAASA,GACxBsrE,GAAgBtuD,GACTA,EAEX,SAASwjB,GAAoB8jC,EAAYv/B,EAASw+B,EAAS5+D,GACvD,IACI4mE,EADA3mE,EAAemgC,EAAQ7Y,QAAQmY,sBAQnC,OAFIknC,EAJC3mE,EAIc0/D,EAAWzhC,KAAKxb,gBAAgB3iB,eAAeC,EAAaC,GAH5D0/D,EAAWzhC,KAAKr+B,SAK5B00B,GAAWorC,EAAWzhC,KAAM0oC,EAAcjH,EAAYv/B,EAAQ7Y,QAAQu3C,kBAAmBF,GAEpG,SAASrqC,GAAW2J,EAAMr+B,EAAUjI,EAAQymC,EAAexgC,GACvD,IAAIu9B,EAAQ,IAAIxuC,MAAMiR,EAAIu9B,MAAMztC,QAC5BguE,EAAc99D,EAAIgpE,YAAc,IAAIj6E,MAAMiR,EAAIgpE,aAAe,KAWjE,OATIhpE,IAAKA,EACLjG,OAAQA,EACRimC,oBAAqB,KAAMQ,cAAeA,EAC1ChjC,QAAS,KACTlH,UAAW,KAAMinC,MAAOA,EACxBzf,MAAO,GAAkBuiB,KAAMA,EAAMr+B,SAAUA,EAC/C09B,UAAW,IAAI3wC,MAAMiR,EAAIipE,cAAenL,YAAaA,EACrD1gC,WAAY,GAIpB,SAASyrC,GAASruD,EAAMlkB,EAAWkH,GAC/Bgd,EAAKlkB,UAAYA,EACjBkkB,EAAKhd,QAAUA,EAEnB,SAASsrE,GAAgBtuD,GACrB,IAAIonB,EACAd,GAAgBtmB,KAEhBonB,EAAapE,GAAchjB,EAAKzgB,OADlBygB,EAAKgmB,cAC6BzmC,OAAOu9B,WAAWqJ,eAItE,IAFA,IAAI3gC,EAAMwa,EAAKxa,IACXu9B,EAAQ/iB,EAAK+iB,MACR5tC,EAAI,EAAGA,EAAIqQ,EAAIu9B,MAAMztC,OAAQH,IAAK,CACvC,IAAI4yC,EAAUviC,EAAIu9B,MAAM5tC,GACxBiuC,GAASC,eAAerjB,EAAM7qB,GAC9B,IAAIu5E,OAAW,EACf,OAAwB,UAAhB3mC,EAAQ9lC,OACZ,KAAK,EACD,IAAIsrD,EAAK59B,GAAc3P,EAAMonB,EAAYW,GACrCtN,OAAgB5iC,EACpB,GAAoB,SAAhBkwC,EAAQ9lC,MAAsC,CAC9C,IAAI0sE,EAAclnC,GAAkBM,EAAQ7Y,QAAQuL,eACpDA,EAAgB2I,GAASI,oBAAoBxjB,EAAM+nB,EAAS4mC,EAAaphB,GAE7EwV,GAAuB/iD,EAAMya,EAAesN,EAASwlB,GACrDmhB,GACIvoC,cAAeonB,EACf9yB,cAAeA,EACfoO,cAAe,KACf1a,SAAU4Z,EAAQ7Y,QAAQf,SAAWk6C,GAAmBroD,EAAM+nB,QAAWlwC,GAEzD,SAAhBkwC,EAAQ9lC,QACRysE,EAAS7lC,cAAgBm+B,GAAwBhnD,EAAM+nB,EAAS2mC,IAEpE,MACJ,KAAK,EACDA,EAAW5sD,GAAW9B,EAAMonB,EAAYW,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACD2mC,EAAW3rC,EAAM5tC,KACkB,KAAhB4yC,EAAQ9lC,QAEvBysE,GAAa19C,SADEm6C,GAAuBnrD,EAAM+nB,KAGhD,MAEJ,KAAK,GAED2mC,GAAa19C,SADEq6C,GAAmBrrD,EAAM+nB,IAExC,MAEJ,KAAK,OACD2mC,EAAW3rC,EAAM5tC,MAGbu5E,GAAa19C,SADEu6C,GAAwBvrD,EAAM+nB,KAG7B,MAAhBA,EAAQ9lC,OAERosE,GADerrC,GAAchjB,EAAM+nB,EAAQxoC,OAAOu9B,WAAWrC,cAC1Ci0C,EAAS19C,SAAU09C,EAAS19C,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACD09C,GA3iBHz3E,WAAOY,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACD62E,EAnyBL,IAAIn+B,GAoyBC,MACJ,KAAK,EACDq9B,GAAgB5tD,EAAMonB,EAAYW,GAElC2mC,OAAW72E,EAGnBkrC,EAAM5tC,GAAKu5E,EAIfE,GAAyB5uD,EAAM4rD,GAAWiD,iBAE1CC,GAAkB9uD,EAAM,UAAiE,UAA6B,GAE1H,SAAS8jB,GAAmB9jB,GACxB+uD,GAA2B/uD,GAC3BojB,GAASe,iBAAiBnkB,EAAM,GAChCgvD,GAAwBhvD,EAAM4rD,GAAWqD,gBACzC7rC,GAASgB,eAAepkB,EAAM,GAC9B4uD,GAAyB5uD,EAAM4rD,GAAWqD,gBAG1CjvD,EAAKsD,QAAS,GAElB,SAASugB,GAAmB7jB,GACP,EAAbA,EAAKsD,OACLtD,EAAKsD,QAAS,EACdtD,EAAKsD,OAAS,GAGdtD,EAAKsD,QAAS,EAElBkf,GAAexiB,EAAM,EAA8B,KACnD+uD,GAA2B/uD,GAC3BojB,GAASe,iBAAiBnkB,EAAM,GAChCgvD,GAAwBhvD,EAAM4rD,GAAWsD,gBACzCJ,GAAkB9uD,EAAM,SAAiC,UAA8B,GACvF,IAAImvD,EAAW3sC,GAAexiB,EAAM,IAAmC,KACvEwsD,GAAgCxsD,EAAM,SAAqCmvD,EAAW,QAAiC,IACvH/rC,GAASgB,eAAepkB,EAAM,GAC9B4uD,GAAyB5uD,EAAM4rD,GAAWsD,gBAC1CJ,GAAkB9uD,EAAM,UAA+B,UAA8B,GAErFwsD,GAAgCxsD,EAAM,UADtCmvD,EAAW3sC,GAAexiB,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAKxa,IAAIvD,QACT+d,EAAKsD,QAAS,GAElBtD,EAAKsD,QAAS,GACdkf,GAAexiB,EAAM,IAA0C,MAEnE,SAASovD,GAAmBpvD,EAAM+nB,EAASsnC,EAAUrwC,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyBxvD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACjF,OAAwB,UAAhBxnC,EAAQ9lC,OACZ,KAAK,EACD,OAlzEZ,SAASwtE,EAA4BzvD,EAAMxa,EAAKw5B,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAChF,IAAIG,EAAUlqE,EAAIwnB,SAAS13B,OACvBq6E,GAAU,EAqBd,OApBID,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAGw5B,KACxD2wC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAG25B,KACxDwwC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAG+5B,KACxDowC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAGk6B,KACxDiwC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAGs6B,KACxD6vC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAGy6B,KACxD0vC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAG46B,KACxDuvC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAG+6B,KACxDovC,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAG8pE,KACxDK,GAAU,GACVD,EAAU,GAAKlM,GAA2BxjD,EAAMxa,EAAK,EAAG+pE,KACxDI,GAAU,GACPA,EA2xEQF,CAA4BzvD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAASK,EAAyB5vD,EAAMxa,EAAKw5B,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAC7E,IAAII,GAAU,EACV3iD,EAAWxnB,EAAIwnB,SACf0iD,EAAU1iD,EAAS13B,OAqBvB,GApBIo6E,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGw5B,KACrD2wC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG25B,KACrDwwC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG+5B,KACrDowC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGk6B,KACrDiwC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGs6B,KACrD6vC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGy6B,KACrD0vC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG46B,KACrDuvC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG+6B,KACrDovC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG8pE,KACrDK,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG+pE,KACrDI,GAAU,GACVA,EAAS,CACT,IAAI14E,EAAQuO,EAAIrJ,KAAK4iC,OACjB2wC,EAAU,IACVz4E,GAAS82E,GAAsB/uC,EAAIhS,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsB5uC,EAAInS,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsBxuC,EAAIvS,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsBruC,EAAI1S,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsBjuC,EAAI9S,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsB9tC,EAAIjT,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsB3tC,EAAIpT,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsBxtC,EAAIvT,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsBuB,EAAItiD,EAAS,KAC5C0iD,EAAU,IACVz4E,GAAS82E,GAAsBwB,EAAIviD,EAAS,KAChD,IAAI22C,EAAgB7gC,GAAW9iB,EAAMxa,EAAIs3B,WAAWsJ,WACpDpmB,EAAKxY,SAASof,SAAS+8C,EAAe1sE,GAE1C,OAAO04E,EA2YQC,CAAyB5vD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACvF,KAAK,MACD,OAnyCZ,SAASM,EAA8B7vD,EAAMxa,EAAKw5B,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAClF,IAAIlD,EAAeppC,GAAejjB,EAAMxa,EAAIs3B,WACxCzC,EAAYgyC,EAAar7C,SACzB2+C,GAAU,EACVl/B,OAAU54C,EACV63E,EAAUlqE,EAAIwnB,SAAS13B,OAmD3B,OAlDIo6E,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAGw5B,KAC1C2wC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAGw5B,EAAIyR,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAG25B,KAC1CwwC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAG25B,EAAIsR,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAG+5B,KAC1CowC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAG+5B,EAAIkR,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAGk6B,KAC1CiwC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAGk6B,EAAI+Q,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAGs6B,KAC1C6vC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAGs6B,EAAI2Q,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAGy6B,KAC1C0vC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAGy6B,EAAIwQ,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAG46B,KAC1CuvC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAG46B,EAAIqQ,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAG+6B,KAC1CovC,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAG+6B,EAAIkQ,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAG8pE,KAC1CK,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAG8pE,EAAI7+B,IAErDi/B,EAAU,GAAK1qC,GAAahlB,EAAMxa,EAAK,EAAG+pE,KAC1CI,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAK,EAAG+pE,EAAI9+B,IAErDA,GACApW,EAAUgT,YAAYoD,GAET,MAAZjrC,EAAIvD,OACL4gC,GAA4B7iB,EAAM,IAAmCxa,EAAIs3B,YACzEzC,EAAUqP,WAEE,OAAZlkC,EAAIvD,OACJo4B,EAAUsP,YAEPgmC,EA2uCQE,CAA8B7vD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAASO,EAAmC9vD,EAAMxa,EAAKw5B,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACvF,IAAIviD,EAAWxnB,EAAIwnB,SACf2iD,GAAU,EACVD,EAAU1iD,EAAS13B,OAqBvB,GApBIo6E,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGw5B,KACrD2wC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG25B,KACrDwwC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG+5B,KACrDowC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGk6B,KACrDiwC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGs6B,KACrD6vC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAGy6B,KACrD0vC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG46B,KACrDuvC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG+6B,KACrDovC,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG8pE,KACrDK,GAAU,GACVD,EAAU,GAAKvqC,GAAwBnlB,EAAMxa,EAAK,EAAG+pE,KACrDI,GAAU,GACVA,EAAS,CACT,IAAIx0E,EAAO+nC,GAAqBljB,EAAMxa,EAAIs3B,WACtC7lC,OAAQ,EACZ,OAAoB,UAAZuO,EAAIvD,OACR,KAAK,GACDhL,EAAQ,IAAI1C,MAAMy4B,EAAS13B,QACvBo6E,EAAU,IACVz4E,EAAM,GAAK+nC,GACX0wC,EAAU,IACVz4E,EAAM,GAAKkoC,GACXuwC,EAAU,IACVz4E,EAAM,GAAKsoC,GACXmwC,EAAU,IACVz4E,EAAM,GAAKyoC,GACXgwC,EAAU,IACVz4E,EAAM,GAAK6oC,GACX4vC,EAAU,IACVz4E,EAAM,GAAKgpC,GACXyvC,EAAU,IACVz4E,EAAM,GAAKmpC,GACXsvC,EAAU,IACVz4E,EAAM,GAAKspC,GACXmvC,EAAU,IACVz4E,EAAM,GAAKq4E,GACXI,EAAU,IACVz4E,EAAM,GAAKs4E,GACf,MACJ,KAAK,GACDt4E,KACIy4E,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQqmC,GAC1B0wC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQwmC,GAC1BuwC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQ4mC,GAC1BmwC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQ+mC,GAC1BgwC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQmnC,GAC1B4vC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQsnC,GAC1ByvC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQynC,GAC1BsvC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQ4nC,GAC1BmvC,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQ22E,GAC1BI,EAAU,IACVz4E,EAAM+1B,EAAS,GAAGr0B,MAAQ42E,GAC9B,MACJ,KAAK,IACD,IAAI7xB,EAAO1e,EACX,OAAQ0wC,GACJ,KAAK,EACDz4E,EAAQymD,EAAKM,UAAUhf,GACvB,MACJ,KAAK,EACD/nC,EAAQymD,EAAKM,UAAU7e,GACvB,MACJ,KAAK,EACDloC,EAAQymD,EAAKM,UAAU7e,EAAII,GAC3B,MACJ,KAAK,EACDtoC,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,GAC/B,MACJ,KAAK,EACDzoC,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,EAAII,GACnC,MACJ,KAAK,EACD7oC,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,EAAII,EAAIG,GACvC,MACJ,KAAK,EACDhpC,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,EAAII,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACDnpC,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACDtpC,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,GACnD,MACJ,KAAK,GACDr4E,EAAQymD,EAAKM,UAAU7e,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,IAKvEp0E,EAAKlE,MAAQA,EAEjB,OAAO04E,EA6hBQG,CAAmC9vD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyBxvD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GA+C3F,SAASQ,EAA0B/vD,EAAM+nB,EAASnuC,GAC9C,OAAwB,UAAhBmuC,EAAQ9lC,OACZ,KAAK,EACD,OAzyEZ,SAAS+tE,EAA6BhwD,EAAMxa,EAAK5L,GAE7C,IADA,IAAI+1E,GAAU,EACLx6E,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAC3BquE,GAA2BxjD,EAAMxa,EAAKrQ,EAAGyE,EAAOzE,MAChDw6E,GAAU,GAElB,OAAOA,EAmyEQK,CAA6BhwD,EAAM+nB,EAASnuC,GACvD,KAAK,EACD,OAzZZ,SAASq2E,EAA0BjwD,EAAMxa,EAAK5L,GAG1C,IAFA,IAAIozB,EAAWxnB,EAAIwnB,SACf2iD,GAAU,EACLx6E,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAG3BgwC,GAAwBnlB,EAAMxa,EAAKrQ,EAAGyE,EAAOzE,MAC7Cw6E,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAI14E,EAAQ,GACZ,IAAS9B,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAC/B8B,GAAgB82E,GAAsBn0E,EAAOzE,GAAI63B,EAAS73B,IAE9D8B,EAAQuO,EAAIrJ,KAAK4iC,OAAS9nC,EAC1B,IAAI0sE,EAAgB7gC,GAAW9iB,EAAMxa,EAAIs3B,WAAWsJ,WACpDpmB,EAAKxY,SAASof,SAAS+8C,EAAe1sE,GAE1C,OAAO04E,EAsYQM,CAA0BjwD,EAAM+nB,EAASnuC,GACpD,KAAK,MACD,OAzvCZ,SAASs2E,EAA+BlwD,EAAMxa,EAAK5L,GAK/C,IAJA,IAAIyyE,EAAeppC,GAAejjB,EAAMxa,EAAIs3B,WACxCzC,EAAYgyC,EAAar7C,SACzB2+C,GAAU,EACVl/B,OAAU54C,EACL1C,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAC3B6vC,GAAahlB,EAAMxa,EAAKrQ,EAAGyE,EAAOzE,MAClCw6E,GAAU,EACVl/B,EAAU67B,GAAWtsD,EAAMqsD,EAAc7mE,EAAKrQ,EAAGyE,EAAOzE,GAAIs7C,IAapE,OAVIA,GACApW,EAAUgT,YAAYoD,GAET,MAAZjrC,EAAIvD,OACL4gC,GAA4B7iB,EAAM,IAAmCxa,EAAIs3B,YACzEzC,EAAUqP,WAEE,OAAZlkC,EAAIvD,OACJo4B,EAAUsP,YAEPgmC,EAouCQO,CAA+BlwD,EAAM+nB,EAASnuC,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAASu2E,EAAoCnwD,EAAMxa,EAAK5L,GAGpD,IAFA,IAAIozB,EAAWxnB,EAAIwnB,SACf2iD,GAAU,EACLx6E,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAG3BgwC,GAAwBnlB,EAAMxa,EAAKrQ,EAAGyE,EAAOzE,MAC7Cw6E,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIx0E,EAAO+nC,GAAqBljB,EAAMxa,EAAIs3B,WACtC7lC,OAAQ,EACZ,OAAoB,UAAZuO,EAAIvD,OACR,KAAK,GACDhL,EAAQ2C,EACR,MACJ,KAAK,GAED,IADA3C,KACS9B,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAC/B8B,EAAM+1B,EAAS73B,GAAGwD,MAAQiB,EAAOzE,GAErC,MACJ,KAAK,IACD,IAAIuoD,EAAO9jD,EAAO,GACdud,EAASvd,EAAOoG,MAAM,GAC1B/I,EAAQymD,EAAKM,UAAUxoD,MAAMkoD,EAAMlmD,EAAS2f,IAGpDhc,EAAKlE,MAAQA,EAEjB,OAAO04E;;;;;;;OA4gBQQ,CAAoCnwD,EAAM+nB,EAASnuC,GAC9D,QACI,KAAM,eAzDHm2E,CAA0B/vD,EAAM+nB,EAAS/I,GAGxD,SAAS+vC,GAA2B/uD,GAChC,IAAIxa,EAAMwa,EAAKxa,IACf,GAAsB,EAAhBA,EAAIyzC,UAGV,IAAK,IAAI9jD,EAAI,EAAGA,EAAIqQ,EAAIu9B,MAAMztC,OAAQH,IAAK,CACvC,IAAI4yC,EAAUviC,EAAIu9B,MAAM5tC,GACxB,GAAoB,EAAhB4yC,EAAQ9lC,MAAmC,CAC3C,IAAIylE,EAAiB1kC,GAAchjB,EAAM7qB,GAAGg5B,SAASw5C,gBACrD,GAAID,EACA,IAAK,IAAI0I,EAAM,EAAGA,EAAM1I,EAAepyE,OAAQ86E,IAAO,CAClD,IAAInzC,EAAgByqC,EAAe0I,GACnCnzC,EAAc3Z,OAAS,GACvBmiB,GAAsCxI,EAAejd,SAIH,IAA/B,EAArB+nB,EAAQ8/B,cAId1yE,GAAK4yC,EAAQE,aAoCzB,SAASooC,GAAmBrwD,EAAM+nB,EAASsnC,EAAUrwC,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASiB,EAAyBtwD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACjF,IAAIG,EAAU3nC,EAAQ/a,SAAS13B,OAC3Bo6E,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAG/I,GACxC0wC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAG5I,GACxCuwC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAGxI,GACxCmwC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAGrI,GACxCgwC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAGjI,GACxC4vC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAG9H,GACxCyvC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAG3H,GACxCsvC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAGxH,GACxCmvC,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAGunC,GACxCI,EAAU,GACVtqC,GAAsBplB,EAAM+nB,EAAS,EAAGwnC,GA7BxCe,CAAyBtwD,EAAM+nB,EAAS/I,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GA+BpF,SAASgB,EAA0BvwD,EAAM+nB,EAASnuC,GAC9C,IAAK,IAAIzE,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAC/BiwC,GAAsBplB,EAAM+nB,EAAS5yC,EAAGyE,EAAOzE,IA9B/Co7E,CAA0BvwD,EAAM+nB,EAAS/I,IAGtC,EAkCX,SAASwxC,GAAoBxwD,EAAM+nB,GAE/B,GADgB5E,GAAYnjB,EAAM+nB,EAAQjL,WAC5BzD,MACV,MAAM4I,GAA4CmB,GAASa,mBAAmBjkB,EAAM+nB,EAAQjL,WAAY,SAAWiL,EAAQ8W,MAAMrnC,GAAK,aAAc,SAAWuwB,EAAQ8W,MAAMrnC,GAAK,SAAsD,IAA9B,EAAbwI,EAAKsD,QAG1M,SAASygB,GAAY/jB,GACjB,KAAiB,IAAbA,EAAKsD,OAAT,CAMA,GAHA0rD,GAAwBhvD,EAAM4rD,GAAW6E,SACzC7B,GAAyB5uD,EAAM4rD,GAAW6E,SAC1CjE,GAAgCxsD,EAAM,QAClCA,EAAKsjD,YACL,IAAK,IAAInuE,EAAI,EAAGA,EAAI6qB,EAAKsjD,YAAYhuE,OAAQH,IACzC6qB,EAAKsjD,YAAYnuE,MA9gE7B,SAASu7E,EAAoB1wD,GACzB,GAAmB,GAAbA,EAAKsD,MAAX,CAGA,IAAImkD,EAAiB1hC,GAAsB/lB,GAC3C,GAAIynD,EAAgB,CAChB,IAAIC,EAAiBD,EAAet5C,SAASw5C,gBACzCD,IACAjC,GAAgBiC,EAAgBA,EAAexpE,QAAQ8hB,IACvDojB,GAASiB,mBAAmBrkB,MAwgEpC0wD,CAAoB1wD,GAChBA,EAAKxY,SAASoa,aAQtB,SAAS+uD,EAAiB3wD,GAEtB,IADA,IAAIrF,EAAMqF,EAAKxa,IAAIu9B,MAAMztC,OAChBH,EAAI,EAAGA,EAAIwlB,EAAKxlB,IAAK,CAC1B,IAAIqQ,EAAMwa,EAAKxa,IAAIu9B,MAAM5tC,GACT,EAAZqQ,EAAIvD,MACJ+d,EAAKxY,SAASoa,YAAYohB,GAAchjB,EAAM7qB,GAAGgxC,eAEhC,EAAZ3gC,EAAIvD,MACT+d,EAAKxY,SAASoa,YAAYkhB,GAAW9iB,EAAM7qB,GAAGixC,aAE7B,SAAZ5gC,EAAIvD,OAAuD,UAAZuD,EAAIvD,QACxDkhC,GAAYnjB,EAAM7qB,GAAGyoB,WAlBzB+yD,CAAiB3wD,GAEjBsmB,GAAgBtmB,IAChBA,EAAKxY,SAASoW,UAElBoC,EAAKsD,OAAS,KA0BlB,SAASsrD,GAAyB5uD,EAAMU,GACpC,IAAIlb,EAAMwa,EAAKxa,IACf,GAAsB,SAAhBA,EAAIyzC,UAGV,IAAK,IAAI9jD,EAAI,EAAGA,EAAIqQ,EAAIu9B,MAAMztC,OAAQH,IAAK,CACvC,IAAI4yC,EAAUviC,EAAIu9B,MAAM5tC,GACJ,SAAhB4yC,EAAQ9lC,MAER2uE,GAAe5tC,GAAchjB,EAAM7qB,GAAGslC,cAAe/Z,GAEQ,IAAlC,SAArBqnB,EAAQ8/B,cAId1yE,GAAK4yC,EAAQE,aAIzB,SAAS+mC,GAAwBhvD,EAAMU,GACnC,IAAIlb,EAAMwa,EAAKxa,IACf,GAAsB,SAAhBA,EAAIyzC,UAGV,IAAK,IAAI9jD,EAAI,EAAGA,EAAIqQ,EAAIu9B,MAAMztC,OAAQH,IAAK,CACvC,IAAI4yC,EAAUviC,EAAIu9B,MAAM5tC,GACxB,GAAoB,SAAhB4yC,EAAQ9lC,MAGR,IADA,IAAI2mC,EAAgB5F,GAAchjB,EAAM7qB,GAAG0zC,cAAcC,eAChDx4B,EAAI,EAAGA,EAAIs4B,EAActzC,OAAQgb,IACtCsgE,GAAehoC,EAAct4B,GAAIoQ,QAGwB,IAAlC,SAArBqnB,EAAQ8/B,cAId1yE,GAAK4yC,EAAQE,aAIzB,SAAS2oC,GAAe5wD,EAAMU,GAC1B,IAAImwD,EAAY7wD,EAAKsD,MACrB,OAAQ5C,GACJ,KAAKkrD,GAAWqD,eAC8B,IAAzB,IAAZ4B,KAC+C,KAA/B,GAAZA,GACD/sC,GAAmB9jB,GAEF,GAAZ6wD,GACLC,GAAyB9wD,EAAM4rD,GAAWmF,+BAGlD,MACJ,KAAKnF,GAAWmF,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACA/sC,GAAmB9jB,GAEF,GAAZ6wD,GACLC,GAAyB9wD,EAAMU,IAGvC,MACJ,KAAKkrD,GAAWsD,eAC8B,IAAzB,IAAZ2B,KAC+C,KAA/B,GAAZA,GACDhtC,GAAmB7jB,GAEF,GAAZ6wD,GACLC,GAAyB9wD,EAAM4rD,GAAWoF,+BAGlD,MACJ,KAAKpF,GAAWoF,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACAhtC,GAAmB7jB,GAEF,GAAZ6wD,GACLC,GAAyB9wD,EAAMU,IAGvC,MACJ,KAAKkrD,GAAW6E,QAGZ1sC,GAAY/jB,GACZ,MACJ,KAAK4rD,GAAWiD,gBACZP,GAAgBtuD,IAI5B,SAAS8wD,GAAyB9wD,EAAMU,GACpCsuD,GAAwBhvD,EAAMU,GAC9BkuD,GAAyB5uD,EAAMU,GAEnC,SAASouD,GAAkB9uD,EAAMixD,EAAYC,EAAwBC,GACjE,GAAMnxD,EAAKxa,IAAIyzC,UAAYg4B,GAAiBjxD,EAAKxa,IAAIyzC,UAAYi4B,EAIjE,IADA,IAAIhD,EAAYluD,EAAKxa,IAAIu9B,MAAMztC,OACtBH,EAAI,EAAGA,EAAI+4E,EAAW/4E,IAAK,CAChC,IAAI4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,GAC7B,GAAK4yC,EAAQ9lC,MAAQgvE,GAAgBlpC,EAAQ9lC,MAAQivE,EAEjD,OADA9tC,GAASC,eAAerjB,EAAM+nB,EAAQjL,WAC9Bq0C,GACJ,KAAK,EACDpE,GAAoB/sD,EAAM+nB,GAC1B,MACJ,KAAK,EACDyoC,GAAoBxwD,EAAM+nB,GAIhCA,EAAQ8/B,WAAaoJ,GAAiBlpC,EAAQ8/B,WAAaqJ,IAG7D/7E,GAAK4yC,EAAQE;;;;;;;QA/HzB,SAAW2jC,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,QAoIlB,IAAI/qB,IAAc,EAClB,SAASuwB,KACL,IAAIvwB,GAAJ,CAGAA,IAAc,EACd,IAAIwwB,EAAW5nB,KA0CnB,SAAS6nB,IACL,OACIjuC,eAAgBkuC,GAChBjuC,eAAgBkuC,GAChBjuC,mBAAoBkuC,GACpBjuC,oBAAqBkuC,GACrBjuC,kBAAmBkuC,GACnBjuC,iBAAkBkuC,GAClBjuC,sBAAuBkuC,GACvBjuC,eAAgBkuC,GAChBjuC,mBAAoBkuC,GACpBjuC,mBAAoBkuC,GACpBjuC,YAAakuC,GACbhuC,mBAAoB,SAAUjkB,EAAM8c,GAAa,OAAO,IAAIo1C,GAAclyD,EAAM8c,IAChFoH,YAAaiuC,GACbhuC,iBAAkBiuC,GAClBhuC,eAAgBiuC,IA1DSf,GAmBjC,SAASgB,IACL,OACIjvC,eAAgB,aAChBC,eAAgBivC,GAChBhvC,mBAAoBA,GACpBC,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBY,GAClBX,sBAAuBW,GACvBV,eAAgBU,GAChBT,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUjkB,EAAM8c,GAAa,OAAO,IAAIo1C,GAAclyD,EAAM8c,IAChFoH,YAAa,SAAUlkB,EAAM8c,EAAW7J,EAAW2S,GAC/C,OAAO5lB,EAAKxa,IAAI0+B,YAAYlkB,EAAM8c,EAAW7J,EAAW2S,IAE5DzB,iBAAkB,SAAUnkB,EAAMmxD,GAAa,OAAOnxD,EAAKxa,IAAI2+B,iBAA+B,IAAdgtC,EAAuCqB,GACnHC,GAAwBzyD,IAC5BokB,eAAgB,SAAUpkB,EAAMmxD,GAAa,OAAOnxD,EAAKxa,IAAI4+B,eAA6B,IAAd+sC,EAAuCqB,GAC/GC,GAAwBzyD,KAvCqBsyD,GACrDlvC,GAASC,eAAiBguC,EAAShuC,eACnCD,GAASE,eAAiB+tC,EAAS/tC,eACnCF,GAASG,mBAAqB8tC,EAAS9tC,mBACvCH,GAASI,oBAAsB6tC,EAAS7tC,oBACxCJ,GAASK,kBAAoB4tC,EAAS5tC,kBACtCL,GAASM,iBAAmB2tC,EAAS3tC,iBACrCN,GAASO,sBAAwB0tC,EAAS1tC,sBAC1CP,GAASQ,eAAiBytC,EAASztC,eACnCR,GAASS,mBAAqBwtC,EAASxtC,mBACvCT,GAASU,mBAAqButC,EAASvtC,mBACvCV,GAASW,YAAcstC,EAASttC,YAChCX,GAASY,WAAaA,GACtBZ,GAASa,mBAAqBotC,EAASptC,mBACvCb,GAASc,YAAcmtC,EAASntC,YAChCd,GAASe,iBAAmBktC,EAASltC,iBACrCf,GAASgB,eAAiBitC,EAASjtC,eACnChB,GAASiB,mBAAqBA,IA4ClC,SAASkuC,GAAmBG,EAAYnqC,EAAkB4G,EAAoB3pC,EAAKgZ,EAAUxb,GAEzF,OAAOsgC,GAAeqvC,GAAeD,EAAYl0D,EAD3BA,EAASlb,SAASnE,IAAI8zC,IACgC1K,EAAkB4G,GAAqB3pC,EAAKxC,GAE5H,SAASwuE,GAAoBkB,EAAYnqC,EAAkB4G,EAAoB3pC,EAAKgZ,EAAUxb,GAC1F,IAAIqnB,EAAkB7L,EAASlb,SAASnE,IAAI8zC,IACxCpN,EAAO8sC,GAAeD,EAAYl0D,EAAU,IAAIo0D,GAAsBvoD,GAAkBke,EAAkB4G,GAC1G0jC,EAAkBC,GAA6BttE,GACnD,OAAOutE,GAAqBC,GAAYl+E,OAAQwuC,GAAgB,MAAOuC,EAAMgtC,EAAiB7vE,IAElG,SAAS2vE,GAAeD,EAAYl0D,EAAU6L,EAAiBke,EAAkB4G,GAC7E,IAAI5nB,EAAY/I,EAASlb,SAASnE,IAAI4zD,IAClCjtB,EAAetnB,EAASlb,SAASnE,IAAI6W,IAEzC,OACIwI,SAAUA,EACVlb,SAAUovE,EAAYnqC,iBAAkBA,EACxCq6B,eAAgBzzB,EAAoB5nB,UAAWA,EAAW8C,gBAAiBA,EAAiB7iB,SAJjF6iB,EAAgB3iB,eAAe,KAAM,MAIgEo+B,aAAcA,GAGtI,SAAS2rC,GAAwBnK,EAAY2L,EAAWC,EAAYlwE,GAChE,IAAI6vE,EAAkBC,GAA6BI,GACnD,OAAOH,GAAqBC,GAAYl+E,OAAQyuC,GAAoB,MAAO+jC,EAAY2L,EAAWJ,EAAiB7vE,IAEvH,SAAS0uE,GAAyBpK,EAAYv/B,EAASmrC,EAAYvrE,GAQ/D,OALIurE,EAFwBC,GAAiBh0E,IAAI4oC,EAAQ7Y,QAAQu3C,kBAAkBvlE,SAAStD,QAK3Ek1E,GAA6BI,GAEvCH,GAAqBC,GAAYl+E,OAAQ0uC,GAAqB,MAAO8jC,EAAYv/B,EAASmrC,EAAYvrE,IAEjH,SAASgqE,GAAuB/jC,EAAYsI,EAAgB6zB,EAAqBvkE,GAE7E,OAAOi+B,GAAkBmK,EAAYsI,EAAgB6zB,EAiFzD,SAASqJ,EAAiC5tE,GACtC,IAAIrM,EASJ,SAASk6E,EAAiB7tE,GACtB,IAAI8tE,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkBzkE,MACTukE,aAAcA,EAAcC,uBAAwBA,IAEjE/tE,EAAIxN,UAAU2K,QAAQ,SAAUmd,GAC5B,IAAI2zD,EAAWD,GAAkBr0E,IAAI2gB,EAAKliB,OACxB,KAAbkiB,EAAK7d,OAA8CwxE,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,sBAGpEluE,EAAIy/D,QAAQtiE,QAAQ,SAAUpP,GAC1BogF,GAA2BhxE,QAAQ,SAAU8wE,EAAU71E,GAC/CA,EAAMvF,gBAAgBT,aAAerE,IACrC+/E,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,yBAI/DJ,aAAcA,EAAcC,uBAAwBA,IA9BxDF,CAAiB7tE,GAAsC+tE,EAAyBp6E,EAAGo6E,uBAC5F,OAD+Cp6E,EAAGm6E,cAgClD,SAASM,EAAuBpuE,GAC5B,IAAK,IAAIrQ,EAAI,EAAGA,EAAIqQ,EAAIxN,UAAU1C,OAAQH,IAAK,CAC3C,IAAI+L,EAAWsE,EAAIxN,UAAU7C,GACzBo+E,IAIAryE,EAASe,OAAS,MAEtB,IAAIwxE,EAAWD,GAAkBr0E,IAAI+B,EAAStD,OAC1C61E,IACAvyE,EAASe,OAA0B,KAAjBf,EAASe,MAA8CwxE,EAASxxE,MAClFf,EAASH,KAAOkmC,GAAawsC,EAAS1yE,MACtCG,EAASjK,MAAQw8E,EAASx8E,OAGlC,GAAI08E,GAA2B5kE,KAAO,EAAG,CACrC,IAAI8kE,EAAc,IAAIj4E,IAAI4J,EAAIy/D,SAC9B0O,GAA2BhxE,QAAQ,SAAU8wE,EAAU71E,GACnD,GAAIi2E,EAAY7jE,IAAIpS,EAAMvF,gBAAgBT,YAAa,CACnD,IAAIsJ,GACAtD,MAAOA,EACPqE,MAAOwxE,EAASxxE,OAASsxE,EAAyB,KAA0B,GAC5ExyE,KAAMkmC,GAAawsC,EAAS1yE,MAC5B9J,MAAOw8E,EAASx8E,MAChBkD,MAAOqL,EAAIxN,UAAU1C,QAEzBkQ,EAAIxN,UAAUV,KAAK4J,GACnBsE,EAAIo/D,eAAepgC,GAAS5mC,IAAUsD,MArDtD0yE,CADApuE,EAAMA,EAAInS,QAAQ,WAAc,OAAOixC,MAEhC9+B,GANIA,EArFW4tE,CAAiC5tE,IAG3D,IAyKIwtE,GAQAc,GACAC,GACAC,GAnLAR,GAAoB,IAAIt2E,IACxBy2E,GAA6B,IAAIz2E,IACjCi2E,GAAmB,IAAIj2E,IAC3B,SAAS00E,GAAsB6B,GAC3BD,GAAkB1yE,IAAI2yE,EAAS71E,MAAO61E,GACR,mBAAnBA,EAAS71E,OAAwB61E,EAAS71E,MAAMvF,iBACF,mBAA9Co7E,EAAS71E,MAAMvF,gBAAgBT,YACtC+7E,GAA2B7yE,IAAI2yE,EAAS71E,MAAO61E,GAGvD,SAAS5B,GAA2BoC,EAAMC,GACtC,IACIvF,EAAclnC,GADAA,GAAkBu+B,GAAkCkO,IACtBnxC,MAAM,GAAG7T,QAAQuL,eACjE04C,GAAiBryE,IAAImzE,EAAMtF,GAE/B,SAASmD,KACL0B,GAAkB5lE,QAClB+lE,GAA2B/lE,QAC3BulE,GAAiBvlE,QAQrB,SAASklE,GAA6BttE,GAClC,GAA+B,IAA3BguE,GAAkBzkE,KAClB,OAAOvJ,EAEX,IAAI2uE,EAWJ,SAASC,EAA2C5uE,GAGhD,IAFA,IAAI6uE,KACAC,EAAiB,KACZn/E,EAAI,EAAGA,EAAIqQ,EAAIu9B,MAAMztC,OAAQH,IAAK,CACvC,IAAI4yC,EAAUviC,EAAIu9B,MAAM5tC,GACJ,EAAhB4yC,EAAQ9lC,QACRqyE,EAAiBvsC,GAEjBusC,GAAkC,KAAhBvsC,EAAQ9lC,OAC1BuxE,GAAkBxjE,IAAI+3B,EAAQ7mC,SAAStD,SACvCy2E,EAAkC/8E,KAAKg9E,EAAex3C,WACtDw3C,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2C5uE,GACxF,GAAsD,IAAlD2uE,EAAuC7+E,OACvC,OAAOkQ,EAIXA,EAAMA,EAAInS,QAAQ,WAAc,OAAOixC,KACvC,IAAK,IAAInvC,EAAI,EAAGA,EAAIg/E,EAAuC7+E,OAAQH,IAC/Do/E,EAAgC/uE,EAAK2uE,EAAuCh/E,IAEhF,OAAOqQ,EAiBP,SAAS+uE,EAAgCrB,EAAYsB,GACjD,IAAK,IAAIr/E,EAAIq/E,EAAU,EAAGr/E,EAAI+9E,EAAWnwC,MAAMztC,OAAQH,IAAK,CACxD,IAAI4yC,EAAUmrC,EAAWnwC,MAAM5tC,GAC/B,GAAoB,EAAhB4yC,EAAQ9lC,MAER,OAEJ,GAAoB,KAAhB8lC,EAAQ9lC,MAA2C,CACnD,IAAIf,EAAW6mC,EAAQ7mC,SACnBuyE,EAAWD,GAAkBr0E,IAAI+B,EAAStD,OAC1C61E,IACA1rC,EAAQ9lC,OAAyB,KAAhB8lC,EAAQ9lC,MAA8CwxE,EAASxxE,MAChFf,EAASH,KAAOkmC,GAAawsC,EAAS1yE,MACtCG,EAASjK,MAAQw8E,EAASx8E,UA4E9C,SAASu7E,GAAuBxyD,EAAM+qD,EAAYsE,EAAUrwC,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAC5F,IAAIxnC,EAAU/nB,EAAKxa,IAAIu9B,MAAMgoC,GAE7B,OADAqE,GAAmBpvD,EAAM+nB,EAASsnC,EAAUrwC,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACxD,IAAhBxnC,EAAQ9lC,MACZihC,GAAqBljB,EAAM+qD,GAAY9zE,WACvCY,EAER,SAAS46E,GAAuBzyD,EAAM+qD,EAAYsE,EAAUrwC,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GAC5F,IAAIxnC,EAAU/nB,EAAKxa,IAAIu9B,MAAMgoC,GAE7B,OADAsF,GAAmBrwD,EAAM+nB,EAASsnC,EAAUrwC,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,EAAI+uC,EAAIC,GACxD,IAAhBxnC,EAAQ9lC,MACZihC,GAAqBljB,EAAM+qD,GAAY9zE,WACvCY,EAER,SAASk6E,GAAwB/xD,GAC7B,OAAO+yD,GAAqBC,GAAYj1C,cAAe8F,GAAoB,MAAO7jB,IAEtF,SAASgyD,GAAwBhyD,GAC7B,OAAO+yD,GAAqBC,GAAYp/B,eAAgB9P,GAAoB,MAAO9jB,IAEvF,SAASiyD,GAAiBjyD,GACtB,OAAO+yD,GAAqBC,GAAYp1D,QAASmmB,GAAa,MAAO/jB,IAazE,SAASuxD,GAAoBvxD,EAAM8c,GAC/Bi3C,GAAe/zD,EACfg0D,GAAoBl3C,EAExB,SAASq1C,GAAiBnyD,EAAM8c,EAAW7J,EAAW2S,GAElD,OADA2rC,GAAoBvxD,EAAM8c,GACnBi2C,GAAqBC,GAAY9uC,YAAalkB,EAAKxa,IAAI0+B,YAAa,MAAOlkB,EAAM8c,EAAW7J,EAAW2S,IAElH,SAASwsC,GAAsBpyD,EAAMmxD,GACjC,GAAiB,IAAbnxD,EAAKsD,MACL,MAAMif,GAAmBywC,GAAYc,KAGzC,OADAvC,GAAoBvxD,EAAMy0D,GAAyBz0D,EAAM,IAClDA,EAAKxa,IAAI2+B,iBAChB,SAASuwC,EAAuB10D,EAAM8c,EAAWuyC,GAE7C,IADA,IAAIz1E,KACKP,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCO,EAAOP,EAAK,GAAKhE,UAAUgE,GAE/B,IAAI0uC,EAAU/nB,EAAKxa,IAAIu9B,MAAMjG,GAU7B,OATkB,IAAdq0C,EACAwD,GAAwB30D,EAAM+nB,EAASsnC,EAAUz1E,GAGjDg7E,GAAwB50D,EAAM+nB,EAASsnC,EAAUz1E,GAEjC,MAAhBmuC,EAAQ9lC,OACRsvE,GAAoBvxD,EAAMy0D,GAAyBz0D,EAAM8c,IAErC,IAAhBiL,EAAQ9lC,MACZihC,GAAqBljB,EAAM+nB,EAAQjL,WAAW7lC,WAC9CY,GAlBiDmoB,GAqB7D,SAASqyD,GAAoBryD,EAAMmxD,GAC/B,GAAiB,IAAbnxD,EAAKsD,MACL,MAAMif,GAAmBywC,GAAYc,KAGzC,OADAvC,GAAoBvxD,EAAM60D,GAA0B70D,EAAM,IACnDA,EAAKxa,IAAI4+B,eAChB,SAAS0wC,EAAuB90D,EAAM8c,EAAWuyC,GAE7C,IADA,IAAIz1E,KACKP,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCO,EAAOP,EAAK,GAAKhE,UAAUgE,GAE/B,IAAI0uC,EAAU/nB,EAAKxa,IAAIu9B,MAAMjG,GAU7B,OATkB,IAAdq0C,EACAwD,GAAwB30D,EAAM+nB,EAASsnC,EAAUz1E,GAGjDg7E,GAAwB50D,EAAM+nB,EAASsnC,EAAUz1E,GAEjC,EAAhBmuC,EAAQ9lC,OACRsvE,GAAoBvxD,EAAM60D,GAA0B70D,EAAM8c,IAEtC,IAAhBiL,EAAQ9lC,MACZihC,GAAqBljB,EAAM+nB,EAAQjL,WAAW7lC,WAC9CY,GAlB+CmoB,GAqB3D,SAAS20D,GAAwB30D,EAAM+nB,EAASsnC,EAAU0F,GAEtD,GADc3F,GAAmB55E,WAAM,EAAQgC,GAAUwoB,EAAM+nB,EAASsnC,GAAW0F,IACtE,CACT,IAAIn7E,EAAsB,IAAby1E,EAA+B0F,EAAY,GAAKA,EAC7D,GAAoB,MAAhBhtC,EAAQ9lC,MAAmC,CAE3C,IADA,IAAI+yE,KACK7/E,EAAI,EAAGA,EAAI4yC,EAAQ/a,SAAS13B,OAAQH,IAAK,CAC9C,IAAIsuE,EAAU17B,EAAQ/a,SAAS73B,GAC3B8B,EAAQ2C,EAAOzE,GACC,EAAhBsuE,EAAQxhE,QACR+yE,GA4Ber8E,EA5ByB8qE,EAAQ8I,gBA+BzD,eADP5zE,EAIJ,SAASs8E,EAAoB91D,GACzB,OAAOA,EAAMhc,QAAQ+xE,GAAmB,WAEpC,IADA,IAAIr+E,KACKwC,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCxC,EAAEwC,GAAMhE,UAAUgE,GAEtB,MAAO,IAAMxC,EAAE,GAAG86D,gBAVfsjB,CAAoBt8E,EAAKwK,QAAQ,QAAS,SA7B7BgyE,GAA2Bl+E,IAGvC,IAAI0rE,EAAQ56B,EAAQxoC,OAChBguD,EAAKvqB,GAAchjB,EAAM2iD,EAAM7lC,WAAWqJ,cAC9C,GAAKw8B,EAAMzzC,QAAQv2B,KAMf,IAAK,IAAIy8E,KAAQJ,EAEA,OADT/9E,EAAQ+9E,EAAcI,IAEtBp1D,EAAKxY,SAAS4qB,aAAam7B,EAAI6nB,EAAMn+E,GAGrC+oB,EAAKxY,SAASotB,gBAAgB24B,EAAI6nB,QAV1Cp1D,EAAKxY,SAASof,SAAS2mC,EAAI,YAAcrqD,KAAKvF,UAAUq3E,EAAe,KAAM,KAoB7F,IAAmCr8E,EAHnC,SAASi8E,GAAwB50D,EAAM+nB,EAASsnC,EAAUz1E,GACtDy2E,GAAmB76E,WAAM,EAAQgC,GAAUwoB,EAAM+nB,EAASsnC,GAAWz1E,KA1GzE,SAAWo5E,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,QA2GnB,IAAIkC,GAAoB,WAUxB,SAASC,GAA2Bl+E,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAMqB,WAAW0H,MAAM,EAAG,IAAM/I,EAE3D,MAAOG,GACH,MAAO,yDAGf,SAASq9E,GAAyBz0D,EAAM8c,GACpC,IAAK,IAAI3nC,EAAI2nC,EAAW3nC,EAAI6qB,EAAKxa,IAAIu9B,MAAMztC,OAAQH,IAAK,CACpD,IAAI4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,GAC7B,GAAoB,MAAhB4yC,EAAQ9lC,OAAqC8lC,EAAQ/a,UAAY+a,EAAQ/a,SAAS13B,OAClF,OAAOH,EAGf,OAAO,KAEX,SAAS0/E,GAA0B70D,EAAM8c,GACrC,IAAK,IAAI3nC,EAAI2nC,EAAW3nC,EAAI6qB,EAAKxa,IAAIu9B,MAAMztC,OAAQH,IAAK,CACpD,IAAI4yC,EAAU/nB,EAAKxa,IAAIu9B,MAAM5tC,GAC7B,GAAqB,EAAhB4yC,EAAQ9lC,OAAkC8lC,EAAQ/a,UAAY+a,EAAQ/a,SAAS13B,OAChF,OAAOH,EAGf,OAAO,KAEX,IAAI+8E,GAA+B,WAC/B,SAASA,EAAclyD,EAAM8c,GACzB9oC,KAAKgsB,KAAOA,EACZhsB,KAAK8oC,UAAYA,EACA,MAAbA,IACA9oC,KAAK8oC,UAAYA,EAAY,GAEjC9oC,KAAK+zC,QAAU/nB,EAAKxa,IAAIu9B,MAAMjG,GAG9B,IAFA,IAAI6lC,EAAQ3uE,KAAK+zC,QACbstC,EAASr1D,EACN2iD,GAAiD,IAAzB,EAAdA,EAAM1gE,QACnB0gE,EAAQA,EAAMpjE,OAElB,IAAKojE,EACD,MAAQA,GAAS0S,GACb1S,EAAQ18B,GAAaovC,GACrBA,EAASA,EAAO91E,OAGxBvL,KAAK2uE,MAAQA,EACb3uE,KAAKqhF,OAASA,EA+GlB,OA7GAjhF,OAAO+B,eAAe+7E,EAAcr9E,UAAW,gBAC3CsK,IAAK,WAED,OAAO6jC,GAAchvC,KAAKqhF,OAAQrhF,KAAK2uE,MAAM7lC,WAAWrC,eAAiBzmC,KAAKgsB,MAElFlT,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,YAC3CsK,IAAK,WAAc,OAAOqpE,GAAiBx0E,KAAKqhF,OAAQrhF,KAAK2uE,QAC7D71D,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,aAC3CsK,IAAK,WAAc,OAAOnL,KAAKshF,aAAax5E,WAC5CgR,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,WAC3CsK,IAAK,WAAc,OAAOnL,KAAKshF,aAAatyE,SAC5C8J,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,kBAC3CsK,IAAK,WACD,IAAIuD,KACJ,GAAI1O,KAAK2uE,MACL,IAAK,IAAIxtE,EAAInB,KAAK2uE,MAAM7lC,UAAY,EAAG3nC,GAAKnB,KAAK2uE,MAAM7lC,UAAY9oC,KAAK2uE,MAAM16B,WAAY9yC,IAAK,CAC3F,IAAIogF,EAAWvhF,KAAKqhF,OAAO7vE,IAAIu9B,MAAM5tC,GAChB,MAAjBogF,EAAStzE,OACTS,EAAOpL,KAAKi+E,EAASr0E,SAAStD,OAElCzI,GAAKogF,EAASttC,WAGtB,OAAOvlC,GAEXoK,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,cAC3CsK,IAAK,WACD,IAAI2nC,KACJ,GAAI9yC,KAAK2uE,MAAO,CACZ6S,GAAkBxhF,KAAKqhF,OAAQrhF,KAAK2uE,MAAO77B,GAC3C,IAAK,IAAI3xC,EAAInB,KAAK2uE,MAAM7lC,UAAY,EAAG3nC,GAAKnB,KAAK2uE,MAAM7lC,UAAY9oC,KAAK2uE,MAAM16B,WAAY9yC,IAAK,CAC3F,IAAIogF,EAAWvhF,KAAKqhF,OAAO7vE,IAAIu9B,MAAM5tC,GAChB,MAAjBogF,EAAStzE,OACTuzE,GAAkBxhF,KAAKqhF,OAAQE,EAAUzuC,GAE7C3xC,GAAKogF,EAASttC,YAGtB,OAAOnB,GAEXh6B,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,0BAC3CsK,IAAK,WACD,IAAIukE,EA6DhB,SAAS+R,EAAgBz1D,GACrB,KAAOA,IAASsmB,GAAgBtmB,IAC5BA,EAAOA,EAAKzgB,OAEhB,OAAIygB,EAAKzgB,OACEyjC,GAAchjB,EAAKzgB,OAAQ0mC,GAAajmB,GAAM8c,WAElD,KApEc24C,CAAgBzhF,KAAKshF,cAClC,OAAO5R,EAASA,EAAOv9B,mBAAgBtuC,GAE3CiV,YAAY,EACZC,cAAc,IAElB3Y,OAAO+B,eAAe+7E,EAAcr9E,UAAW,cAC3CsK,IAAK,WACD,OAA4B,EAArBnL,KAAK+zC,QAAQ9lC,MAA2BikC,GAAWlyC,KAAKgsB,KAAMhsB,KAAK+zC,SACtE7B,GAAWlyC,KAAKqhF,OAAQrhF,KAAK2uE,QAErC71D,YAAY,EACZC,cAAc,IAElBmlE,EAAcr9E,UAAUytC,SAAW,SAAUvsB,GAEzC,IADA,IAII2/D,EACAC,EALA/7E,KACKP,EAAK,EAAGA,EAAKhE,UAAUC,OAAQ+D,IACpCO,EAAOP,EAAK,GAAKhE,UAAUgE,GAIN,EAArBrF,KAAK+zC,QAAQ9lC,OACbyzE,EAAa1hF,KAAKgsB,KAAKxa,IACvBmwE,EAAe3hF,KAAK+zC,QAAQjL,YAG5B44C,EAAa1hF,KAAKqhF,OAAO7vE,IACzBmwE,EAAe3hF,KAAK2uE,MAAM7lC,WAI9B,IAAI84C,EAoBZ,SAASC,EAAmB3C,EAAYp2C,GAEpC,IADA,IAAI84C,GAAmB,EACdzgF,EAAI,EAAGA,GAAK2nC,EAAW3nC,IAER,EADN+9E,EAAWnwC,MAAM5tC,GACnB8M,OACR2zE,IAGR,OAAOA,EA5BmBC,CAAmBH,EAAYC,GACjDG,GAAuB,EAW3BJ,EAAWriF,QAVM,WACb,IAAI8F,EAEJ,QADA28E,IAC4BF,GAChBz8E,EAAK4c,EAAQxe,OAAOgC,KAAK/D,MAAM2D,EAAI3B,GAAUue,GAAUnc,IAGxD0qC,KAIXwxC,EAAsBF,IACtB7/D,EAAQxe,MAAM,qEACdwe,EAAQxe,MAAM/B,MAAMugB,EAASve,EAASoC,MAGvCs4E,EAnIuB,GAwJlC,SAASsD,GAAkBx1D,EAAM+nB,EAASjB,GACtC,IAAK,IAAIivC,KAAWhuC,EAAQjB,WACxBA,EAAWivC,GAAWvI,GAAcxtD,EAAM+nB,EAASA,EAAQjB,WAAWivC,IAG9E,SAAShD,GAAqBryD,EAAQtjB,EAAIb,EAAMnD,GAC5C,IAAI48E,EAAYlC,GACZhoD,EAAUioD,GACVkC,EAAejC,GACnB,IACIF,GAAiBpzD,EACjB,IAAI9O,EAASxU,EAAG5H,MAAM+G,EAAMnD,GAI5B,OAHA26E,GAAejoD,EACfkoD,GAAoBiC,EACpBnC,GAAiBkC,EACVpkE,EAEX,MAAOxa,GACH,GArxVR,SAAS8+E,EAAiB9zC,GACtB,QAASxsB,GAAgBwsB,GAoxVjB8zC,CAAiB9+E,KAAO28E,GACxB,MAAM38E,EAEV,MA1yVR,SAAS++E,EAAsB/zC,EAAKp/B,GAOhC,OANMo/B,aAAe/iC,QAGjB+iC,EAAM,IAAI/iC,MAAM+iC,EAAI9pC,aAExB+pC,GAAiBD,EAAKp/B,GACfo/B,EAmyVG+zC,CAAsB/+E,EAAGg/E,OAGvC,SAASA,KACL,OAAOrC,GAAe,IAAI7B,GAAc6B,GAAcC,IAAqB,KAE/E,IAAIpB,GAAuC,WACvC,SAASA,EAAsB/tB,GAC3B7wD,KAAK6wD,SAAWA,EAqBpB,OAnBA+tB,EAAsB/9E,UAAU6S,eAAiB,SAAUwnB,EAASmnD,GAChE,OAAO,IAAIC,GAAetiF,KAAK6wD,SAASn9C,eAAewnB,EAASmnD,KAEpEzD,EAAsB/9E,UAAUg6B,MAAQ,WAChC76B,KAAK6wD,SAASh2B,OACd76B,KAAK6wD,SAASh2B,SAGtB+jD,EAAsB/9E,UAAU0Q,IAAM,WAC9BvR,KAAK6wD,SAASt/C,KACdvR,KAAK6wD,SAASt/C,OAGtBqtE,EAAsB/9E,UAAU0hF,kBAAoB,WAChD,OAAIviF,KAAK6wD,SAAS0xB,kBACPviF,KAAK6wD,SAAS0xB,oBAElB55E,QAAQC,QAAQ,OAEpBg2E,EAvB+B,GAyBtC0D,GAAgC,WAChC,SAASA,EAAezxB,GACpB7wD,KAAK6wD,SAAWA,EAChB7wD,KAAKmH,KAAOnH,KAAK6wD,SAAS1pD,KAmI9B,OAjIAm7E,EAAezhF,UAAU+sB,YAAc,SAAU9B,IAngHrD,SAAS02D,EAAyB12D,GAC9B+hD,GAAuB/yD,OAAOgR,EAAK6gD,YAmgH/B6V,CAAyB1U,GAAahiD,IAClC9rB,KAAK6wD,SAASjjC,aACd5tB,KAAK6wD,SAASjjC,YAAY9B,IAGlCw2D,EAAezhF,UAAU+oB,QAAU,WAAc5pB,KAAK6wD,SAASjnC,WAC/D04D,EAAezhF,UAAU86B,cAAgB,SAAUh3B,EAAM89E,GACrD,IAAIlpB,EAAKv5D,KAAK6wD,SAASl1B,cAAch3B,EAAM89E,GACvCC,EAAWN,KACf,GAAIM,EAAU,CACV,IAAIC,EAAU,IAAI9V,GAAatT,EAAI,KAAMmpB,GACzCC,EAAQh+E,KAAOA,EACfopE,GAAe4U,GAEnB,OAAOppB,GAEX+oB,EAAezhF,UAAUymC,cAAgB,SAAUrkC,GAC/C,IAAIokC,EAAUrnC,KAAK6wD,SAASvpB,cAAcrkC,GACtCy/E,EAAWN,KAIf,OAHIM,GACA3U,GAAe,IAAIrB,GAAUrlC,EAAS,KAAMq7C,IAEzCr7C,GAEXi7C,EAAezhF,UAAUitB,WAAa,SAAU7qB,GAC5C,IAAIkF,EAAOnI,KAAK6wD,SAAS/iC,WAAW7qB,GAChCy/E,EAAWN,KAIf,OAHIM,GACA3U,GAAe,IAAIrB,GAAUvkE,EAAM,KAAMu6E,IAEtCv6E,GAEXm6E,EAAezhF,UAAUuvB,YAAc,SAAU7kB,EAAQ8hE,GACrD,IAAIsV,EAAU7U,GAAaviE,GACvBq3E,EAAe9U,GAAaT,GAC5BsV,GAAWC,GAAgBD,aAAmB9V,IAC9C8V,EAAQ7V,SAAS8V,GAErB5iF,KAAK6wD,SAASzgC,YAAY7kB,EAAQ8hE,IAEtCiV,EAAezhF,UAAU6a,aAAe,SAAUnQ,EAAQ8hE,EAAUD,GAChE,IAAIuV,EAAU7U,GAAaviE,GACvBq3E,EAAe9U,GAAaT,GAC5BwV,EAAa/U,GAAaV,GAC1BuV,GAAWC,GAAgBD,aAAmB9V,IAC9C8V,EAAQjnE,aAAamnE,EAAYD,GAErC5iF,KAAK6wD,SAASn1C,aAAanQ,EAAQ8hE,EAAUD,IAEjDkV,EAAezhF,UAAU8sB,YAAc,SAAUpiB,EAAQu3E,GACrD,IAAIH,EAAU7U,GAAaviE,GACvBq3E,EAAe9U,GAAagV,GAC5BH,GAAWC,GAAgBD,aAAmB9V,IAC9C8V,EAAQh1D,YAAYi1D,GAExB5iF,KAAK6wD,SAASljC,YAAYpiB,EAAQu3E,IAEtCR,EAAezhF,UAAU49B,kBAAoB,SAAUmwC,GACnD,IAAIrV,EAAKv5D,KAAK6wD,SAASpyB,kBAAkBmwC,GACrC8T,EAAWN,KAIf,OAHIM,GACA3U,GAAe,IAAIlB,GAAatT,EAAI,KAAMmpB,IAEvCnpB,GAEX+oB,EAAezhF,UAAUu9B,aAAe,SAAUm7B,EAAI50D,EAAM1B,EAAOw/E,GAC/D,IAAIE,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAE9B8V,EAAQ17C,WADOw7C,EAAYA,EAAY,IAAM99E,EAAOA,GACrB1B,GAEnCjD,KAAK6wD,SAASzyB,aAAam7B,EAAI50D,EAAM1B,EAAOw/E,IAEhDH,EAAezhF,UAAU+/B,gBAAkB,SAAU24B,EAAI50D,EAAM89E,GAC3D,IAAIE,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAE9B8V,EAAQ17C,WADOw7C,EAAYA,EAAY,IAAM99E,EAAOA,GACrB,MAEnC3E,KAAK6wD,SAASjwB,gBAAgB24B,EAAI50D,EAAM89E,IAE5CH,EAAezhF,UAAUkzB,SAAW,SAAUwlC,EAAI50D,GAC9C,IAAIg+E,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAC9B8V,EAAQ99C,QAAQlgC,IAAQ,GAE5B3E,KAAK6wD,SAAS98B,SAASwlC,EAAI50D,IAE/B29E,EAAezhF,UAAUmzB,YAAc,SAAUulC,EAAI50D,GACjD,IAAIg+E,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAC9B8V,EAAQ99C,QAAQlgC,IAAQ,GAE5B3E,KAAK6wD,SAAS78B,YAAYulC,EAAI50D,IAElC29E,EAAezhF,UAAUyyB,SAAW,SAAUimC,EAAIwpB,EAAO9/E,EAAOgL,GAC5D,IAAI00E,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAC9B8V,EAAQ79C,OAAOi+C,GAAS9/E,GAE5BjD,KAAK6wD,SAASv9B,SAASimC,EAAIwpB,EAAO9/E,EAAOgL,IAE7Cq0E,EAAezhF,UAAU8yB,YAAc,SAAU4lC,EAAIwpB,EAAO90E,GACxD,IAAI00E,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAC9B8V,EAAQ79C,OAAOi+C,GAAS,MAE5B/iF,KAAK6wD,SAASl9B,YAAY4lC,EAAIwpB,EAAO90E,IAEzCq0E,EAAezhF,UAAU6yB,YAAc,SAAU6lC,EAAI50D,EAAM1B,GACvD,IAAI0/E,EAAU7U,GAAavU,GACvBopB,GAAWA,aAAmB9V,KAC9B8V,EAAQjyB,WAAW/rD,GAAQ1B,GAE/BjD,KAAK6wD,SAASn9B,YAAY6lC,EAAI50D,EAAM1B,IAExCq/E,EAAezhF,UAAU0+B,OAAS,SAAU59B,EAAQs9B,EAAWwgB,GAC3D,GAAsB,iBAAX99C,EAAqB,CAC5B,IAAIghF,EAAU7U,GAAansE,GACvBghF,GACAA,EAAQ3a,UAAU1kE,KAAK,IAAImpE,GAAcxtC,EAAWwgB,IAG5D,OAAOz/C,KAAK6wD,SAAStxB,OAAO59B,EAAQs9B,EAAWwgB,IAEnD6iC,EAAezhF,UAAUqtB,WAAa,SAAUpC,GAAQ,OAAO9rB,KAAK6wD,SAAS3iC,WAAWpC,IACxFw2D,EAAezhF,UAAU8yC,YAAc,SAAU7nB,GAAQ,OAAO9rB,KAAK6wD,SAASld,YAAY7nB,IAC1Fw2D,EAAezhF,UAAU+xB,SAAW,SAAU9G,EAAM7oB,GAAS,OAAOjD,KAAK6wD,SAASj+B,SAAS9G,EAAM7oB,IAC1Fq/E,EAtIwB,GA6K/BU,GAAkC,SAAU/nC,GAE5C,SAAS+nC,EAAiBppC,EAAYqO,EAAsBg7B,GACxD,IAAI/qE,EAGJ+iC,EAAO15C,KAAKvB,OAASA,KAIrB,OAHAkY,EAAM0hC,WAAaA,EACnB1hC,EAAM+vC,qBAAuBA,EAC7B/vC,EAAM+qE,oBAAsBA,EACrB/qE,EAUX,OAnBAxX,EAAUsiF,EAAkB/nC,GAW5B+nC,EAAiBniF,UAAUC,OAAS,SAAUohD,GAC1Ck7B,KAIA,IAAI5rE,EA7BZ,SAAS0xE,EAAwB1xE,GAC7B,IAAIxN,EAAYzD,MAAM4lB,KAAK3U,EAAIxN,WAC3BitE,EAAU1wE,MAAM4lB,KAAK3U,EAAIy/D,SACzBL,KACJ,IAAK,IAAIhvE,KAAO4P,EAAIo/D,eAChBA,EAAehvE,GAAO4P,EAAIo/D,eAAehvE,GAE7C,OACIvC,QAASmS,EAAInS,QACb6xE,OAAQ1/D,EAAI0/D,OAAQltE,UAAWA,EAAWitE,QAASA,EAASL,eAAgBA,GAoBlEsS,CAAwBzvC,GAAkBzzC,KAAKijF,sBACzD,OAAO7zC,GAASK,kBAAkBzvC,KAAK45C,WAAYsI,GAAkB52C,GAASI,KAAM1L,KAAKioD,qBAAsBz2C,IAE5GwxE,EApB0B,CAqBnCznC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DFj8C,EAAQq2D,eAAiBA,GACzBr2D,EAAQ+2D,eAAiBA,GACzB/2D,EAAQ6jF,gBAr/LR,SAASA,KACD1wB,KAAcA,GAAUppC,WACxBopC,GAAU7oC,WAo/LlBtqB,EAAQ62D,YAAcA,GACtB72D,EAAQs2D,YAAcA,GACtBt2D,EAAQq4D,eAAiBA,GACzBr4D,EAAQ8jF,eAplMR,SAASA,KACL,GAAI7tB,GACA,MAAM,IAAIlqD,MAAM,iDAEpBiqD,IAAW,GAilMfh2D,EAAQm2D,UAAYA,GACpBn2D,EAAQw2D,sBAAwBA,GAChCx2D,EAAQo2D,aAAeA,GACvBp2D,EAAQguD,OAASA,GACjBhuD,EAAQ6uD,iBAAmBA,GAC3B7uD,EAAQ0uD,qBAAuBA,GAC/B1uD,EAAQ2uD,YAAcA,GACtB3uD,EAAQ4uD,uBAAyBA,GACjC5uD,EAAQotD,gBAAkBA,GAC1BptD,EAAQqtD,sBAAwBA,GAChCrtD,EAAQutE,aAAeA,GACvBvtE,EAAQotE,UAAYA,GACpBptE,EAAQ+jF,iBAnzHR,SAASA,GAAiBC,GACtB,OAAOA,EAASz5E,IAAI,SAAU0vD,GAAM,OAAOA,EAAGle,iBAmzHlD/7C,EAAQwuE,aAAeA,GACvBxuE,EAAQqzD,YAAcA,GACtBrzD,EAAQi1D,oBAAsBA,GAC9Bj1D,EAAQikF,qBA/nMR,SAASA,GAAqB/jE,GAC1Bi1C,GAAqBj1C,GA+nMzBlgB,EAAQ6uE,aAAeA,GACvB7uE,EAAQ8uE,oBAAsBA,GAC9B9uE,EAAQ4uE,UAAYA,GACpB5uE,EAAQovE,kBAAoBA,GAC5BpvE,EAAQuvD,eAAiBA,GACzBvvD,EAAQyvD,SAAWA,GACnBzvD,EAAQ6vD,kBAAoBA,GAC5B7vD,EAAQiwD,gBAAkBA,GAC1BjwD,EAAQyd,KAAOA,GACfzd,EAAQo8C,aAAeA,GACvBp8C,EAAQ0iB,aAAeA,GACvB1iB,EAAQy/D,UAAYA,GACpBz/D,EAAQwH,6BAA+BA,EACvCxH,EAAQyH,UAAYA,EACpBzH,EAAQiI,aAAeA,EACvBjI,EAAQ2H,gBAAkBA,EAC1B3H,EAAQuH,MAAQA,EAChBvH,EAAQmI,UAAYA,EACpBnI,EAAQkI,aAAeA,EACvBlI,EAAQmrE,UAAYA,GACpBnrE,EAAQ4qE,UAAYA,GACpB5qE,EAAQssE,YAAcA,GACtBtsE,EAAQusE,aAAeA,GACvBvsE,EAAQosE,MAAQA,GAChBpsE,EAAQqsE,OAASA,GACjBrsE,EAAQ8rE,KAAOA,GACf9rE,EAAQkkF,wBArjIJ7+E,KAAM,mBAsjIVrF,EAAQmkF,kBA9iIJ9+E,KAAM,oBA+iIVrF,EAAQwsE,SAAWA,GACnBxsE,EAAQqqE,QAAUA,GAClBrqE,EAAQ8sE,QAAUA,GAClB9sE,EAAQoE,iBAAmBA,EAC3BpE,EAAQwE,eAAiBA,EACzBxE,EAAQ8K,WAAaA,EACrB9K,EAAQiL,kBAAoBA,EAC5BjL,EAAQ+hB,WAAaA,GACrB/hB,EAAQqM,OAASA,GACjBrM,EAAQ2L,SAAWA,GACnB3L,EAAQgM,SAAWA,GACnBhM,EAAQqmB,mBAAqBA,GAC7BrmB,EAAQ0pB,eAAiBA,GACzB1pB,EAAQslB,0BAA4BA,GACpCtlB,EAAQikB,cAAgBA,GACxBjkB,EAAQ4E,eAAiBA,EACzB5E,EAAQmL,OAASA,EACjBnL,EAAQoL,SAAWA,EACnBpL,EAAQqL,KAAOA,EACfrL,EAAQsL,SAAWA,EACnBtL,EAAQuL,KAAOA,EACfvL,EAAQowD,OAASA,GACjBpwD,EAAQq/C,oBAAsBA,GAC9Br/C,EAAQy/C,SAAWA,GACnBz/C,EAAQ4/C,UAAYA,GACpB5/C,EAAQ2/C,iBAAmBA,GAC3B3/C,EAAQ0/C,aAAeA,GACvB1/C,EAAQ66C,iBAAmBA,GAC3B76C,EAAQo6C,SAAWA,GACnBp6C,EAAQ86C,gBAAkBA,GAC1B96C,EAAQg6C,6BAA+BA,GACvCh6C,EAAQg7C,iBAAmBA,GAC3Bh7C,EAAQ+6C,aAAeA,GACvB/6C,EAAQq7C,yBAA2BA,GACnCr7C,EAAQ87C,WAAaA,GACrB97C,EAAQi8C,gBAAkBA,GAC1Bj8C,EAAQg8C,YAAcA,GACtBh8C,EAAQk8C,sBAAwBA,GAChCl8C,EAAQokF,iBAtgUR,SAASA,GAAiBlgE,GACtB,IAAInkB,EAAUo8C,GAAgBtwC,IAAIqY,GAClC,IAAKnkB,EACD,MAAM,IAAIgM,MAAM,qBAAuBmY,EAAK,WAChD,OAAOnkB;;;;;;;QAmgUXC,EAAQi9C,UAAYA,GACpBj9C,EAAQm+C,uBAAyBA,GACjCn+C,EAAQ+9C,6BAA+BA,GACvC/9C,EAAQi/C,YAAcA,GACtBj/C,EAAQk/C,iBAAmBA,GAC3Bl/C,EAAQo/C,gBAAkBA,GAC1Bp/C,EAAQm/C,QAAUA,GAClBn/C,EAAQgsB,kBAAoBA,GAC5BhsB,EAAQgW,sBAAwBA,GAChChW,EAAQid,gBAAkBA,GAC1Bjd,EAAQ8rB,gBAAkBA,GAC1B9rB,EAAQuV,aAAeA,GACvBvV,EAAQkV,aAAeA,GACvBlV,EAAQ2uE,aAAeA,GACvB3uE,EAAQqkF,0BAA4BnuB,GACpCl2D,EAAQskF,wBAA0Br2B,GAClCjuD,EAAQukF,wBAA0Br4D,GAClClsB,EAAQwkF,wBAA0Br4D,GAClCnsB,EAAQykF,cAAgBjwE,GACxBxU,EAAQ0kF,oBAAsBhwE,GAC9B1U,EAAQ2kF,kCAr4lBR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4B7kF,EAAQqH,wBAAwB+jE;;;;;;;QAo4lBpEprE,EAAQ8kF,SAAWh2B,GACnB9uD,EAAQ+kF,QAAU14E,GAClBrM,EAAQglF,oBAAsBj1E,GAC9B/P,EAAQilF,UAAY77D,GACpBppB,EAAQklF,aAv1IS,EAw1IjBllF,EAAQmlF,kBAAoBnqC,GAC5Bh7C,EAAQolF,iCAAmC9pC,GAC3Ct7C,EAAQqlF,2BAj2lBR,SAASC,GAA0BC,GAE/B,IAAIC,KAEAC,EAAS,IAAI77E,IACjB,SAAS87E,EAAsBtpB,GAC3B,IAAIhzD,EAAUq8E,EAAO55E,IAAIuwD,GACzB,IAAKhzD,EAAS,CACV,IAAIu8E,EAAOJ,EAAiBnpB,GAC5BqpB,EAAOj4E,IAAI4uD,EAAKhzD,EAAUu8E,EAAK37E,KAAKrB,IACpC68E,EAAWxhF,KAAKoF,GAEpB,OAAOA,EAwBX,OAtBAf,EAAiCgH,QAAQ,SAAU7G,GAC3CA,EAAUC,aACVi9E,EAAsBl9E,EAAUC,aAAauB,KAAK,SAAU6wB,GACxDryB,EAAUqyB,SAAWA,EACrBryB,EAAUC,iBAAclE,IAGhC,IAAImE,EAAYF,EAAUE,UACtB88B,EAASh9B,EAAUg9B,SAAWh9B,EAAUg9B,WACxCogD,EAAcp9E,EAAUg9B,OAAOxjC,OACnC0G,GAAaA,EAAU2G,QAAQ,SAAUw2E,EAAUh/E,GAC/C2+B,EAAOxhC,KAAK,IACZ0hF,EAAsBG,GAAU77E,KAAK,SAAUy5E,GAC3Cj+C,EAAOogD,EAAc/+E,GAAS48E,EAC9B/6E,EAAUumB,OAAOvmB,EAAUkC,QAAQi7E,GAAW,GACtB,GAApBn9E,EAAU1G,SACVwG,EAAUE,eAAYnE,SAKtC8D,EAAiCiS,QAC1BjR,QAAQykD,IAAI03B,GAAYx7E,KAAK,WAAc,OAAO,QA8zlB7DhK,EAAQ8lF,wBAA0B/nE,GAClC/d,EAAQ+lF,iBAAmBvmC,GAC3Bx/C,EAAQgmF,eAAiB/mB,GACzBj/D,EAAQimF,gBAAkBpmB,GAC1B7/D,EAAQkmF,cAAgB/pB,GACxBn8D,EAAQmmF,QAAUh9E,EAClBnJ,EAAQomF,gBAAkBl8E,EAC1BlK,EAAQqmF,WAAah8E,EACrBrK,EAAQsmF,eAAiBlhF,EACzBpF,EAAQumF,cAAgBp5B,GACxBntD,EAAQwmF,WAAat5B,GACrBltD,EAAQymF,gBAzOR,SAASn2C,KAEL,OADAwtC,KACOhuC,GAASQ,kBAwOpBtwC,EAAQ0mF,sBAAwB5I,GAChC99E,EAAQ2mF,uBA/OR,SAASt2C,GAAsBswC,EAAMv5B,GAEjC,OADA02B,KACOhuC,GAASO,sBAAsBswC,EAAMv5B,IA8OhDpnD,EAAQ4mF;;;;;;;;AApPR,SAASx2C,GAAiB+vC,GAEtB,OADArC,KACOhuC,GAASM,iBAAiB+vC,IAmPrCngF,EAAQ6mF,uCAAyCtO,GACjDv4E,EAAQ+gE,iBAAmBjrB,GAC3B91C,EAAQghE,iBAAmBppB,GAC3B53C,EAAQkhE,YAAcrpB,GACtB73C,EAAQihE,gBAAkB9pB,GAC1Bn3C,EAAQ8mF,eAAiBr8C,GACzBzqC,EAAQ+mF;;;;;;;;AAh3WR,SAASC,GAAgBvrC,EAA8Ep3C,QACtF,IAATA,IAAmBA,MAEvB,IAAI0yB,EAAkB1yB,EAAK0yB,iBAAmB5iB,GAC1C8f,EAAY5vB,EAAK4vB,WAAa,KAC9BwtB,EAAehG,EAAczE,eAC7ByK,EAAav2C,MAAQuwC,IACrBgG,EAAav2C,KAAOuwC,GAExB,IACI/rB,EAAWsP,GAAkBjI,EAAiB1yB,EAAKk0B,MADpCkpB,EAAajvB,UAAU,GAAG,IAEzC0X,EAAcwE,GAAkBrqC,EAAKgmC,WAAakX,sBAAsBt7C,KAAK8C,SAC7E6mB,EAAWkK,GAAgB/C,EAAgB3iB,eAAesb,EAAU+xB,EAAantC,cAAe+pB,IAAa,EAAG,KAAM,KAAM,KAAM,MAAO6L,EAAauX,EAAahiB,OAAS,EAAgB,GAChM7P,EAAS3e,IAAc5M,EAAK2L,UAAY,KACxC,IACI2xC,EACAn5C,EAFAgwB,EAAUH,GAAUzI,EAAU,MAGlC,IACQmH,EAAgBwE,OAChBxE,EAAgBwE,QAEpBomB,EAActtC,GAAYutC,EAAclyB,EAAU+xB,EAAcxtB,GAEhEzrB,EAAYw+B,GAAoB,EAAGya,EAAa1hD,UAAW0hD,GAC3DvX,EAAY1Q,WAAWx1B,KAAKwE,GAC5Bm5C,EAAY95C,KAAKmJ,IAAWxI,EAC5Bq1B,GAA6B8jB,EAAY1nB,aAAczxB,EAAWm5C,EAAY95C,MAC9ExD,EAAK4iF,cAAgB5iF,EAAK4iF,aAAa53E,QAAQ,SAAU0nC,GAAW,OAAOA,EAAQvuC,EAAWi5C,KAC9F5nB,KACAR,GAAgBoV,IAChBzF,GAAsB2Y,EAAY95C,KAAM85C,EAAan5C,GAEzD,QACIiwB,GAAUD,GACNzB,EAAgB9kB,KAChB8kB,EAAgB9kB,MAExB,OAAOzJ,GA40WXxI,EAAQmhE,iBAAmB5c,GAC3BvkD,EAAQshE,kBAAoB7c,GAC5BzkD,EAAQuhE,mBAAqB5c,GAC7B3kD,EAAQwhE,wBAA0B3c,GAClC7kD,EAAQqhE,yBAA2Btc,GACnC/kD,EAAQohE,iBAAmBnc,GAC3BjlD,EAAQ0hE,eAAiBvZ,GACzBnoD,EAAQ2hE,0BAA4B3pB,GACpCh4C,EAAQyhE,oBAAsBtoB,GAC9Bn5C,EAAQknF,WA5sXR,SAASC,GAAU3+E,GAGfw3B,GADmBuK,GAA8B/hC,GACtBkkB,OA0sX/B1sB,EAAQonF,iBAAmBt+B,GAC3B9oD,EAAQqnF,IAAMlmD,GACdnhC,EAAQ8hE,GAAKpzC,GACb1uB,EAAQ+hE,GAAK/mC,GACbh7B,EAAQuiE,GAAKzmC,GACb97B,EAAQoiE,IAAMrnC,GACd/6B,EAAQqiE,IAAM1mC,GACd37B,EAAQsiE,IAAM5mC,GACd17B,EAAQyiE,IAAM7mC,GACd57B,EAAQgkE,GAAKtkC,GACb1/B,EAAQolE,GAAKv8D,GACb7I,EAAQslE,GAAKl9B,GACbpoC,EAAQ2kE,GAAKpZ,GACbvrD,EAAQ6kE,IAAM32B,GACdluC,EAAQkiE,GAAK/0B,GACbntC,EAAQkkE,GAAKh2C,GACbluB,EAAQ6hE,GAAK57D,GACbjG,EAAQsjE,IAAM93B,GACdxrC,EAAQujE,IAAM53B,GACd3rC,EAAQwjE,IAAMz3B,GACd/rC,EAAQyjE,IAAMv3B,GACdlsC,EAAQ0jE,IAAMp3B,GACdtsC,EAAQ2jE,IAAMl3B,GACdzsC,EAAQ4jE,IAAMh3B,GACd5sC,EAAQ6jE,IAAM92B,GACd/sC,EAAQ8jE,IAAMz4B,GACdrrC,EAAQokE,KAAO5Z,GACfxqD,EAAQqkE,KAAO1Z,GACf3qD,EAAQskE,KAAO1Z,GACf5qD,EAAQukE,KAAO1Z,GACf7qD,EAAQwkE,KAAO1Z,GACf9qD,EAAQ0iE,IAAM1Z,GACdhpD,EAAQ2iE,IAAMtZ,GACdrpD,EAAQ4iE,IAAMrZ,GACdvpD,EAAQ6iE,IAAMrZ,GACdxpD,EAAQ8iE,IAAMrZ,GACdzpD,EAAQ+iE,IAAMrZ,GACd1pD,EAAQgjE,IAAMpZ,GACd5pD,EAAQijE,IAAMnZ,GACd9pD,EAAQkjE,IAAMlZ,GACdhqD,EAAQmjE,IAAMjZ,GACdlqD,EAAQojE,IAAMxrC,GACd53B,EAAQqjE,IAAMvrC,GACd93B,EAAQgiE,IAAM/5B,GACdjoC,EAAQiiE,IAAM/5B,GACdloC,EAAQ4kE,IAAMhY,GACd5sD,EAAQmiE,IAAM/0B,GACdptC,EAAQwiE,GAAKzmC,GACb/7B,EAAQmkE,GAAK3iC,GACbxhC,EAAQykE,IAAMx7B,GACdjpC,EAAQ+kE,GAAK73B,GACbltC,EAAQ8kE,IAAM95B,GACdhrC,EAAQ4hE,GAAK1gC,GACblhC,EAAQglE,GAAKliC,GACb9iC,EAAQilE,IAAM3/B,GACdtlC,EAAQklE,IAAMhgC,GACdllC,EAAQmlE,IAAM9gC,GACdrkC,EAAQ+jE,IAAMthC,GACdziC,EAAQqlE,GAAKz+B,GACb5mC,EAAQulE,GAAK18B,GACb7oC,EAAQsnF,IAAMpzD,GACdl0B,EAAQikE,IAAM1/B,GACdvkC,EAAQ0kE,IAAMta,GACdpqD,EAAQunF,cA71WR,SAASC,GAAah/E,GAClB,OAtBJ,SAASi/E,EAAej/E,GAGpB,OAFkBgiC,GAAYhiC,GAAWwI,IAqBlCy2E,CAAej/E,GAAW4hC;;;;;;;QA61WrCpqC,EAAQ0nF,IA/1QR,SAASC,GAAU/xD,EAAYgyD,GAC3B,IAAIn7D,EAAWoL,KAIf,GAAK+vD,EAAL,CAGA,IAAI1zE,EAAWmjB,KACXwwD,EAAkBh7D,GAAe0X,GAAK3O,KAAgBqC,KACtD6vD,EAAoBD,EACxBptD,KACA,IAAK,IAAI54B,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAAK,CAC1C,IAAIkmF,EAAcH,EAAa/lF,GAC/B,QAAuB,UAAfkmF,GACJ,KAAK,WACD,IAAIC,EAAazjD,GAAmB,UAAdwjD,GACtBD,EAAoBz/B,GAAe2/B,EAAYH,EAAiBC,GAChED,EAAkBG,EAClB,MACJ,KAAK,WACL,KAAM,WACN,KAAM,WAEFF,EAAoBz/B,GADT9jB,GAAmB,UAAdwjD,GACyBF,EAAiBC,GAC1D,MACJ,KAAK,UAID,IACIG,EAAY15D,GADJq5D,IAAe/lF,GACWqS,GAKtC4zE,EAAoBz/B,GADJnuB,GAAYzN,EAASzqB,OAASsO,GAAe,EAAiB23E,EAAW,KAAM,MACjDJ,EAAiBC,GAC/DrtD,KACA,MACJ,KAAM,WACFqtD,EAAoBD,EACpBA,EAAkBh7D,GAAeg7D,GACjC,MACJ,KAAM,UAIF,IACIK,EAAc3jD,GADQ,UAAdwjD,GAERn5D,EAAa/B,GAAeq7D,GAChC75D,GAAYO,EAAYs5D,EAAYx6D,QAAU,KAAMjB,GAErB,IAA3By7D,EAAYx0E,MAAMxI,MAA8Bg9E,EAAYn7D,wBAC5DsB,GAAYO,EAAYs5D,EAAYn7D,sBAAsBW,QAAU,KAAMjB,GAC1Ey7D,EAAYn7D,sBAAsBrZ,MAAM0b,UAAW,EACnD84D,EAAYn7D,sBAAsBllB,KAAKkM,IAAiB,UAyyQ5E/T,EAAQmoF,KA7xQR,SAASC,GAAeC,EAAaC,GAGjC,IAFA,IAAIC,EAAaF,EAAYxiD,MAAMuiB,IAE1BvmD,EAAI,EAAGA,EAAI0mF,EAAWvmF,OAAQH,GAAK,EACxC0mF,EAAW1mF,GAAKymF,EAAaC,EAAW1mF,IAE5C,OAAO0mF,GAwxQXvoF,EAAQwoF,KA7wQR,SAASC,GAAmBb,EAAcl8C,GAEtC,IADgBX,GAAeW,GAE3B,OAAOvK,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAGjC6I,GADI,EAAJ7I,EACOuqB,GAAYsf,GAGZk8C,EAAa/lF,GAG5B,OAAO6I,GA+vQX1K,EAAQ0oF,KAnvQR,SAASC,GAAmBf,EAAcl8C,EAAIG,GAE1C,IADgBC,GAAgBJ,EAAIG,GAEhC,OAAO1K,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAQjC6I,GANI,EAAJ7I,EAMOuqB,GAHQ,EADLw7D,EAAa/lF,GAGNgqC,EAAKH,GAIfk8C,EAAa/lF,GAG5B,OAAO6I,GAguQX1K,EAAQ4oF,KAntQR,SAASC,GAAmBjB,EAAcl8C,EAAIG,EAAII,GAC9C,IAAIX,EAAYQ,GAAgBJ,EAAIG,GAEpC,KADAP,EAAYP,GAAekB,IAAOX,GAE9B,OAAOnK,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAIinF,EAAMlB,EAAa/lF,GAKvB6I,GAAO0hB,GAJQ,EAAN08D,EAGQ78C,EAFF,EAAN68C,EAEmBj9C,EAAKH,QAIjChhC,GAAOk9E,EAAa/lF,GAG5B,OAAO6I,GA8rQX1K,EAAQ+oF,KAhrQR,SAASC,GAAmBpB,EAAcl8C,EAAIG,EAAII,EAAIG,GAElD,IADgBC,GAAgBX,EAAIG,EAAII,EAAIG,GAExC,OAAOjL,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAIinF,EAAMlB,EAAa/lF,GAEnBonF,EAAW,EAANH,EAGTp+E,GAAO0hB,GAJQ,EAAN08D,EAGSG,EAAK78C,EAAKH,EAAOg9C,EAAKp9C,EAAKH,QAI7ChhC,GAAOk9E,EAAa/lF,GAG5B,OAAO6I,GA4pQX1K,EAAQkpF,KA7oQR,SAASC,GAAmBvB,EAAcl8C,EAAIG,EAAII,EAAIG,EAAII,GACtD,IAAIlB,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAE5C,KADAd,EAAYP,GAAeyB,IAAOlB,GAE9B,OAAOnK,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAIinF,EAAMlB,EAAa/lF,GAGnBonF,EAAW,EAANH,EAGTp+E,GAAO0hB,GALQ,EAAN08D,EAIQt8C,EAHF,EAANs8C,EAGoBG,EAAK78C,EAAKH,EAAOg9C,EAAKp9C,EAAKH,QAIxDhhC,GAAOk9E,EAAa/lF,GAG5B,OAAO6I,GAunQX1K,EAAQopF,KAxmQJ,SAASC,GAAmBzB,EAAcl8C,EAAIG,EAAII,EAAIG,EAAII,EAAIG,GAC9D,IAAIrB,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAE5C,KADAd,EAAYQ,GAAgBU,EAAIG,IAAOrB,GAEnC,OAAOnK,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAIinF,EAAMlB,EAAa/lF,GAGnBonF,EAAW,EAANH,EAGTp+E,GAAO0hB,GALQ,EAAN08D,EAISG,EAAKt8C,EAAKH,EAHb,EAANs8C,EAGgCG,EAAK78C,EAAKH,EAAOg9C,EAAKp9C,EAAKH,QAIpEhhC,GAAOk9E,EAAa/lF,GAG5B,OAAO6I,GAklQX1K,EAAQspF,KAjkQR,SAASC,GAAmB3B,EAAcl8C,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,GAC9D,IAAIxB,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAG5C,GAFAd,EAAYQ,GAAgBU,EAAIG,IAAOrB,IACvCA,EAAYP,GAAe+B,IAAOxB,GAE9B,OAAOnK,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAIinF,EAAMlB,EAAa/lF,GAEnB2nF,EAAW,EAANV,EACLG,EAAW,EAANH,EAGTp+E,GAAO0hB,GALQ,EAAN08D,EAISU,EAAK18C,EAAMm8C,EAAKt8C,EAAKH,EAAQg9C,EAAMP,EAAK78C,EAAKH,EAAOg9C,EAAKp9C,EAAKH,QAIhFhhC,GAAOk9E,EAAa/lF,GAG5B,OAAO6I,GA0iQX1K,EAAQypF,KAxhQR,SAASC,GAAmB9B,EAAcl8C,EAAIG,EAAII,EAAIG,EAAII,EAAIG,EAAIG,EAAIG,GAClE,IAAI3B,EAAYe,GAAgBX,EAAIG,EAAII,EAAIG,GAE5C,KADAd,EAAYe,GAAgBG,EAAIG,EAAIG,EAAIG,IAAO3B,GAE3C,OAAOnK,GAGX,IADA,IAAIz2B,EAAM,GACD7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAIinF,EAAMlB,EAAa/lF,GAEnB2nF,EAAW,EAANV,EACLG,EAAW,EAANH,EAGTp+E,GAAO0hB,GALQ,EAAN08D,EAISU,EAAMP,EAAKh8C,EAAKH,EAAOm8C,EAAKt8C,EAAKH,EAAQg9C,EAAMP,EAAK78C,EAAKH,EAAOg9C,EAAKp9C,EAAKH,QAI5FhhC,GAAOk9E,EAAa/lF,GAG5B,OAAO6I,GAkgQX1K,EAAQ2pF,IAx/PR,SAASC,GAAmBhC,EAActhF,GAEtC,IADA,IAAIglC,GAAY,EACPzpC,EAAI,EAAGA,EAAIyE,EAAOtE,OAAQH,IAE/BkpC,GAAezkC,EAAOzE,MAAQypC,GAAY,GAE9C,IAAKA,EACD,OAAOnK,GAEX,IAAIz2B,EAAM,GACV,IAAS7I,EAAI,EAAGA,EAAI+lF,EAAa5lF,OAAQH,IAGjC6I,GADI,EAAJ7I,EACOuqB,GAAY9lB,EAAOshF,EAAa/lF,KAGhC+lF,EAAa/lF,GAG5B,OAAO6I,GAs+PX1K,EAAQ6pF,IAhiRR,SAASC,GAAYzB,EAAa0B,EAAUC,EAAaC,EAAeC,GACpE,IAAIC,EAAmB9B,EAAYxiD,MAAMuiB,IAErCw/B,EAAe,IAAK3mF,MADNgpF,EAAgBA,EAAcjoF,OAAS,EAAI,GACjBkd,UAAK3a,GAEjD,OAyBJ,SAAS6lF,EAA4BC,EAAWC,EAAWH,EAAkBvC,EAAcmC,EAAUC,EAAaC,EAAeC,GAC7H,IAAIK,KACAC,KACAC,EAAiB,EACjBC,EAAW,EACXC,EAAkBZ,GAAYA,EAASM,GAAaN,EAASM,GAAa,KAC1EO,EAAqBZ,GAAeA,EAAYK,GAAaL,EAAYK,GAAa,KAE1F,IADAzC,EAAayC,GAAaE,EACnBD,EAAYH,EAAiBnoF,OAAQsoF,IAAa,CAErD,IAAI3mF,EAAQwmF,EAAiBG,GAE7B,GAAgB,EAAZA,EAAe,CACf,IAAIO,OAAU,EACd,GAAIF,QAA8CpmF,IAA3BomF,EAAgBhnF,GAAsB,CACzDknF,EAAUF,EAAgBhnF,GAE1B,IAAImnF,EAAoBb,EAAgBA,EAAcr/E,QAAQjH,IAAU,GAC7C,IAAvBmnF,GAA6BA,EAAoB,IAAOT,EAExDE,EAAiBvmF,MAAgB,WAAX6mF,IAGtBN,EAAiBvmF,KAAe,WAAV6mF,GACtBJ,KAEJD,EAAUxmF,KAAKL,QAEd,GAAIinF,QAAoDrmF,IAA9BqmF,EAAmBjnF,GAG9C4mF,EAAiBvmF,KAAe,YAFhC6mF,EAAUD,EAAmBjnF,KAG7B6mF,EAAUxmF,KAAKL,QAKf,GADA4mF,EAAiBvmF,MAAM,YACnBqmF,EAAY,GAGW,KAFvBI,EAGI,MAOZ,QAHgBlmF,IAAZsmF,GAAyBA,EAAUH,IACnCA,EAAWG,GAEXZ,EAAe,CACf,IAAIc,EAAed,EAAcr/E,QAAQjH,GAAS,EAC7B,IAAjBonF,GAAsBA,IAAiBV,IACvCC,EAAYF,EAA4BW,EAAcT,EAAWH,EAAkBvC,EAAcmC,EAAUC,EAAaC,EAAeC,UAI1IvmF,GAEL4mF,EAAiBvmF,KAAK,UAAsBL,GAIpD,GAAIomF,EAAU,CACV,IAAIiB,EAAejB,EAASM,GAC5B,GAAIW,EAEA,IADA,IAAIC,EAASnqF,OAAO4I,KAAKshF,GAChBnpF,EAAI,EAAGA,EAAIopF,EAAOjpF,OAAQH,KAEA,IAA3B2oF,EAAU5/E,QADVsgF,EAAKD,EAAOppF,MAIZ0oF,EAAiBvmF,MAAc,WAF3B6C,EAAQmkF,EAAaE,KAGrBrkF,EAAQ6jF,IACRA,EAAW7jF,IAO/B,GAAImjF,EAAa,CACb,IAAImB,EAAkBnB,EAAYK,GAClC,GAAIc,EAEA,IADIF,EAASnqF,OAAO4I,KAAKyhF,GAChBtpF,EAAI,EAAGA,EAAIopF,EAAOjpF,OAAQH,IAAK,CACpC,IAAIqpF,EAEIrkF,GADuB,IAA3B2jF,EAAU5/E,QADVsgF,EAAKD,EAAOppF,MAOZ0oF,EAAiBvmF,MAAc,WAL3B6C,EAAQskF,EAAgBD,KAMxBrkF,EAAQ6jF,IACRA,EAAW7jF,KAM/B,GAAkB,IAAdwjF,GAA6C,iBAAnBH,EAG1B,IAASroF,EAAI6oF,EAAW,EAAG7oF,GAAKqoF,EAAgBroF,IAI5C0oF,EAAiBvmF,MAAU,WAALnC,GAG9B,OAAOyoF,EAvIPF,CAA4B,EAAG,EAAGD,EAAkBvC,EAAcmC,EAAUC,EAAaC,EAAeC,GACjGtC,GA4hRX5nF,EAAQorF,cAAgBlrB,GACxBlgE,EAAQqrF,eAAiBhrB,GACzBrgE,EAAQsrF,aAAe9qB,GACvBxgE,EAAQurF,qBAAuB5qB,GAC/B3gE,EAAQwrF,6BAvrOR,SAASC,GAA4BC,GACjC,OAAO3+B,GAA8B2+B,EAAa,SAurOtD1rF,EAAQ2rF,8BA5qOR,SAASC,GAA6BC,GAClC,OAAO9+B,GAA8B8+B,EAAc,UA4qOvD7rF,EAAQ8rF,+BAjqOR,SAASC,GAA8BC,GACnC,OAAOj/B,GAA8Bi/B,EAAe,WAiqOxDhsF,EAAQisF,4BAtpOR,SAASC,GAA2BC,GAChC,OAAOp/B,GAA8Bo/B,EAAY,QAspOrDnsF,EAAQosF,oCA3oOR,SAASC,GAAmCC,GACxC,OAAOv/B,GAA8Bu/B,EAAoB,gBA2oO7DtsF,EAAQusF,uBAtqUR,SAASC,GAAsBtoE,EAAInkB,GAC/B,IAAI2mB,EAAWy1B,GAAgBtwC,IAAIqY,GACnC,GAAIwC,EACA,MAAM,IAAI3a,MAAM,mCAAqCmY,EAAK,MAAQwC,EAAS4zB,WAAWj1C,KAAO,OAAStF,EAAQu6C,WAAWj1C,MAE7H82C,GAAgB3uC,IAAI0W,EAAInkB,IAkqU5BC,EAAQysF,gBACRzsF,EAAQ0sF,cACR1sF,EAAQ2sF;;;;;;;;AA3zHR,SAAShN,GAAUhxE,EAAO0kC,EAAmBwB,EAAgBF,EAAY/D,EAAag8C,GAClFj+E,GAAS,EACT,IAAI9I,EAAKutC,GAAuBC,GAEhC,OAEI7J,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAEdthE,MAAOA,EACP8oE,YAAa,EACblD,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EAAGtkC,eAdyCztC,EAAGytC,eAcZC,gBAd0E1tC,EAAG0tC,gBAc3CC,WAdO3tC,EAAG2tC,WAccqB,eAAgBA,EAAgBF,WAAYA,EAC9Jjb,YACA2b,aAAc,EACd5U,WACA7E,SACI2zC,GAAI,KACJlqE,KAAM,KACNusB,MAAO,KAAMiJ,SApBN+xD,EAAkBz4C,GAAkBy4C,GAAmB,KAqB9DzZ,kBAAmB,KACnBhsC,cAAe,KACf4M,sBAAuB,KACvB+kC,gBAAiB,KACjBD,aAAc,KACdjoC,YAAaA,GAAeI,IAEhCpjC,SAAU,KACV/E,KAAM,KACN0iD,MAAO,KACPpW,UAAW,OA0xHnBn1C,EAAQ6sF,KAntGR,SAASC,GAAuBllF,EAAU6zC,EAAek3B,EAAgBlxC,EAAQhB,EAASmb,GACtF,OAAO,IAAIg3B,GAAkBhrE,EAAU6zC,EAAek3B,EAAgBlxC,EAAQhB,EAASmb,IAmtG3F57C,EAAQ+sF,KAlVR,SAASC,GAAsBtkC,EAAc+tB,EAAqBwW,GAC9D,OAAO,IAAIvJ,GAAiBh7B,EAAc+tB,EAAqBwW,IAkVnEjtF,EAAQktF,KAtqWR,SAASC,GAAoB7mF,GACzB,OACI4d,GAAIitB,GACJ3L,OAAQl/B,EAAOk/B,OACfgM,cAAelrC,EAAOkrC,cACtB3pC,KAAMvB,EAAOuB,OAkqWrB7H,EAAQotF,KAzuFR,SAAS/qD,GAAao1C,EAAY9oE,EAAO2kC,EAAgBqB,EAAYtuC,EAAMoH,EAAMnI,EAAOm7B,GACpF,IAAI/G,KACJ,GAAIp0B,EACA,IAAK,IAAIsa,KAAQta,EAAO,CACpB,IAAIO,EAAKhC,EAAOyB,EAAMsa,GAAO,GAC7B8Z,EADgD7zB,EAAG,KAE/C8I,MAAO,EACPtJ,KAAMua,EAAMq5D,gBAHyDpzE,EAAG,GAIxE0pE,GAAI,KACJgB,gBAAiB,KACjBnrC,OAAQ,MAIpB,IAAIioD,KACJ,GAAI5sD,EACA,IAAK,IAAIl6B,KAAYk6B,EACjB4sD,EAAWrpF,MAAOkH,KAAM,EAAyB3E,SAAUA,EAAUlE,OAAQ,KAAMs9B,UAAWc,EAAQl6B,KAI9G,OAAO8qE,GAAKoG,EADZ9oE,GAAS,MACsB2kC,EAAgBqB,EAAYtuC,EAAMA,EAAMoH,EAAMisB,EAAU2zD,IAqtF3FrtF,EAAQstF,KA3xHR,SAAS1T,GAAWnC,EAAY9oE,EAAO0kC,EAAmBwB,EAAgBF,EAAY0gC,EAAkBkY,EAAY7zD,EAAU+G,EAASmQ,EAAazJ,EAAe4M,GAE/J,IAAIluC,OADe,IAAf0nF,IAAyBA,MAExB38C,IACDA,EAAcI,IAElB,IAAIyC,EAAKL,GAAuBC,GAAoBC,EAAiBG,EAAGH,eAAgBE,EAAaC,EAAGD,WAAYD,EAAkBE,EAAGF,gBACrIg8B,EAAK,KACLlqE,EAAO,KACPgwE,IACkD9F,GAAlD1pE,EAAKhC,EAAO6xC,GAAe2/B,GAAmB,IAAY,GAAIhwE,EAAOQ,EAAG,IAE5E6zB,EAAWA,MAEX,IADA,IAAI8zD,EAAc,IAAIvsF,MAAMy4B,EAAS13B,QAC5BH,EAAI,EAAGA,EAAI63B,EAAS13B,OAAQH,IAAK,CACtC,IAAI06D,EAAK14D,EAAO61B,EAAS73B,GAAI,GAAIwzC,EAAeknB,EAAG,GAAgCkxB,EAA0BlxB,EAAG,GAC5GmxB,EAAK7pF,EAAO6xC,GAD4D6mB,EAAG,IAC3B,GAAIoxB,EAAOD,EAAG,GAAIE,EAASF,EAAG,GAC9End,OAAkBhsE,EAClB6gC,OAAS7gC,EACb,OAAuB,GAAf8wC,GACJ,KAAK,EACDjQ,EAASqoD,EACT,MACJ,KAAK,EACL,KAAK,EACDld,EAAkBkd,EAG1BD,EAAY3rF,IACN8M,MAAO0mC,EAAck6B,GAAIoe,EAAMtoF,KAAMuoF,EAAQ3U,gBAAiB2U,EAAQrd,gBAAiBA,EAAiBnrC,OAAQA,GAE1H3E,EAAUA,MACV,IAAI4sD,EAAa,IAAIpsF,MAAMw/B,EAAQz+B,QACnC,IAASH,EAAI,EAAGA,EAAI4+B,EAAQz+B,OAAQH,IAAK,CACrC,IAAIgsF,EAAKhqF,EAAO48B,EAAQ5+B,GAAI,GAC5BwrF,EAAWxrF,IACPqJ,KAAM,EACN7I,OAHqCwrF,EAAG,GAGxBluD,UAHwCkuD,EAAG,GAI3DtnF,SAAU,MAIlB,IAAIqrB,GADJ27D,EAAaA,OACUhjF,IAAI,SAAU1E,GACjC,IAAI4tC,EAAK5vC,EAAOgC,EAAI,GAA8BlC,EAAQ8vC,EAAG,GACzD8oB,EAAK14D,EAAO6xC,GAD2BjC,EAAG,IACI,GAClD,OAD2D8oB,EAAG,GAAWA,EAAG,GAC1D54D,KAOtB,OALAowC,EAAwBzC,GAAqByC,GACzC5M,IACAx4B,GAAS,WAKT66B,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAEdwH,WAAYA,EACZ9oE,MAVJA,GAAS,EAWL4lE,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EAAGtkC,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EAAYqB,eAAgBA,EAAgBF,WAAYA,EAC9Jjb,SAAU8zD,EACVn4C,aAAcO,GAAiB43C,GAC/B/sD,QAAS4sD,EACTzxD,SACI2zC,GAAIA,EACJlqE,KAAMA,EACNusB,MAAOA,EACPiJ,SAAU,KAEVs4C,kBAAmB,KACnBhsC,cAAeA,GAAiB,KAChC4M,sBAAuBA,EACvB+kC,gBAAiB,KACjBD,aAAc,KACdjoC,YAAaA,GAAeI,IAEhCpjC,SAAU,KACV/E,KAAM,KACN0iD,MAAO,KACPpW,UAAW,OAwsHnBn1C,EAAQ8tF,sBAAwB/6C,GAChC/yC,EAAQ+tF,mCAAqCrb,GAC7C1yE,EAAQguF,mBA93VR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAKt4C,GAAkBu4C,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EACR,KAAK,EACD,OAAON,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EAAK54C,GAAkB64C,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EAAK54C,GAAkB64C,GAAMC,EAAK94C,GAAkB+4C,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EAAK54C,GAAkB64C,GAAMC,EAAK94C,GAAkB+4C,GAAMC,EAAKh5C,GAAkBi5C,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EAAK54C,GAAkB64C,GAAMC,EAAK94C,GAAkB+4C,GAAMC,EAAKh5C,GAAkBi5C,GACjFC,EAAKl5C,GAAkBm5C,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EAAK54C,GAAkB64C,GAAMC,EAAK94C,GAAkB+4C,GAAMC,EAAKh5C,GAAkBi5C,GACjFC,EAAKl5C,GAAkBm5C,GAAMC,EAAKp5C,GAAkBq5C,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAKt4C,GAAkBu4C,GAAMC,EAAKx4C,GAAkBy4C,GAAMC,EAAK14C,GAAkB24C,GACpFC,EAAK54C,GAAkB64C,GAAMC,EAAK94C,GAAkB+4C,GAAMC,EAAKh5C,GAAkBi5C,GACjFC,EAAKl5C,GAAkBm5C,GAAMC,EAAKp5C,GAAkBq5C,GAAMC,EAAKt5C,GAAkBu5C,GAAMC,EAC/F,QACI,MAAM,IAAItjF,MAAM,8CAg2V5B/L,EAAQsvF,aAt4VR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAIlxE,EAAS,GACJzc,EAAI,EAAGA,EAAiB,EAAbqsF,EAAgBrsF,GAAQ,EACxCyc,EAASA,EAASkxE,EAAe3tF,GAAKg0C,GAAkB25C,EAAe3tF,EAAI,IAE/E,OAAOyc,EAASkxE,EAA4B,EAAbtB,IAk4VnCluF,EAAQyvF,KAzhHR,SAASC,GAAUhrF,GAIf,IAHA,IAAI4sE,KACAK,KACAC,GAAS,EACJ/vE,EAAI,EAAGA,EAAI6C,EAAU1C,OAAQH,IAAK,CACvC,IAAI+L,EAAWlJ,EAAU7C,GACrB+L,EAAStD,QAAU8e,KAA+B,IAAnBxb,EAASjK,QACxCiuE,GAAS,GAEQ,WAAjBhkE,EAASe,OACTgjE,EAAQ3tE,KAAK4J,EAAStD,OAE1BsD,EAAS/G,MAAQhF,EACjByvE,EAAepgC,GAAStjC,EAAStD,QAAUsD,EAE/C,OAEI7N,QAAS,KACTuxE,eAAgBA,EAChB5sE,UAAWA,EACXitE,QAASA,EACTC,OAAQA,IAqgHhB5xE,EAAQ2vF,KAtiHR,SAASC,GAAiBjhF,EAAOrE,EAAO3G,EAAO8J,GAM3C,OAFA9J,EAAQsH,EAAkBtH,IAItBkD,OAAQ,EACR4G,KAJUkmC,GAAalmC,EAAMpD,EAAUC,IAIxBqE,MAAOA,EAAOrE,MAAOA,EAAO3G,MAAOA,IA8hH1D3D,EAAQ6vF,KA3lER,SAASC,GAAaj7C,EAAgBhuC,GAClC,OAEI2iC,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAEdwH,YAAa,EACb9oE,MAAO,EACP4lE,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EACrBtkC,kBACAC,gBAAiB,EACjBC,cAAgBqB,eAAgBA,EAChCF,WAAY,EACZjb,YACA2b,aAAc,EACd5U,WACA7E,QAAS,KACThuB,SAAU,KACV/E,KAAM,KACN0iD,MAAO,KACPpW,WAAatuC,MAAOA,KAmkE5B7G,EAAQ+vF,KAl6FR,SAAS9xB,GAAUvxC,EAAM7lB,GACrB,IAAIqL,EAAMwa,EAAKxa,IAAIu9B,MAAM5oC,GACzB,GAAgB,EAAZqL,EAAIvD,MAA6B,CACjC,IAAIyhE,EAAS1gC,GAAchjB,EAAMxa,EAAIs3B,WACrC,OAAOt3B,EAAI0pB,QAAQf,SAAWu1C,EAAOv1C,SAAWu1C,EAAOv9B,cAEtD,GAAgB,EAAZ3gC,EAAIvD,MACT,OAAO6gC,GAAW9iB,EAAMxa,EAAIs3B,WAAWsJ,WAEtC,GAAgB,MAAZ5gC,EAAIvD,MACT,OAAOghC,GAAejjB,EAAMxa,EAAIs3B,WAAW9L,SAE/C,MAAM,IAAI3xB,MAAM,gDAAkDlF,IAu5FtE7G,EAAQgwF,KA5tFR,SAASl4C,GAAQnpC,EAAOtI,EAAMoH,GAE1B,OAAO4jE,IAAM,EADb1iE,GAAS,GACc,KAAM,EAAGtI,EAAMA,EAAMoH,IA2tFhDzN,EAAQiwF,KAztFR,SAAS7e,GAAYziE,EAAO2kC,EAAgBhpC,EAAO3G,EAAO8J,GACtD,OAAO4jE,IAAM,EAAG1iE,EAAO2kC,EAAgB,EAAGhpC,EAAO3G,EAAO8J,IAytF5DzN,EAAQkwF,KA9iER,SAASC,GAAa1Y,EAAY2Y,GAC9B,OAAO7V,GAAmB,GAAwB9C,EAAY,IAAIx2E,MAAMmvF,KA8iE5EpwF,EAAQqwF,KA5iER,SAASC,GAAc7Y,EAAY8Y,GAI/B,IAHA,IAAI7mF,EAAO5I,OAAO4I,KAAK6mF,GACnBC,EAAS9mF,EAAK1H,OACdw4E,EAAgB,IAAIv5E,MAAMuvF,GACrB3uF,EAAI,EAAGA,EAAI2uF,EAAQ3uF,IAAK,CAC7B,IAAIS,EAAMoH,EAAK7H,GAEf24E,EADY+V,EAAYjuF,IACDA,EAE3B,OAAOi4E,GAAmB,GAAyB9C,EAAY+C,IAoiEnEx6E,EAAQywF,KApjER,SAASC,GAAYjZ,EAAY2Y,GAE7B,OAAO7V,GAAmB,IAAwB9C,EAAY,IAAIx2E,MAAMmvF,EAAW,KAmjEvFpwF,EAAQ2wF,KAjxER,SAAS1W,GAAStrE,EAAOuV,EAAIwV,GACzB,IAAI8zD,KACJ,IAAK,IAAIjnF,KAAYmzB,EAEjB8zD,EAAYxpF,MAAOuC,SAAUA,EAAUyzE,YADrBtgD,EAASnzB,KAG/B,OAEIijC,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAGdwH,YAAa,EAAG9oE,MAAOA,EACvB4lE,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EACrB/iC,gBAAiB,EACjBvB,kBACAC,gBAAiB,EACjBC,cACAmB,WAAY,EACZjb,YACA2b,aAAc,EACd5U,WACA7E,QAAS,KACThuB,SAAU,KACV/E,KAAM,KACN0iD,OAASrnC,GAAIA,EAAIs1D,SAAUtmC,GAAchvB,GAAKwV,SAAU8zD,GACxDr4C,UAAW,OAmvEnBn1C,EAAQ4wF,KA91DR,SAASC,GAAQpZ,EAAY5iC,EAAgB0zC,GAEzC,IADA,IAAI7uD,EAAW,IAAIz4B,MAAMsnF,EAAWvmF,OAAS,GACpCH,EAAI,EAAGA,EAAI0mF,EAAWvmF,OAAQH,IACnC63B,EAAS73B,EAAI,IACT8M,MAAO,EACPtJ,KAAM,KACNkqE,GAAI,KACJ0J,gBAAiB,KACjB1I,gBAAiB,KACjBnrC,OAAQmjD,EAAW1mF,IAG3B,OAEI2nC,WAAY,EACZv9B,OAAQ,KACR8kB,aAAc,KACdyc,cAAe,EACfyiC,aAAc,EAEdwH,WAAYA,EACZ9oE,MAAO,EACP4lE,WAAY,EACZoD,iBAAkB,EAClBC,oBAAqB,EACrBtkC,kBACAC,gBAAiB,EACjBC,cAAgBqB,eAAgBA,EAChCF,WAAY,EAAGjb,SAAUA,EACzB2b,aAAc,EACd5U,WACA7E,QAAS,KACThuB,SAAU,KACV/E,MAAQ4iC,OAAQ88C,EAAW,IAC3Bh9B,MAAO,KACPpW,UAAW,OA4zDnBn1C,EAAQ8wF,KArsWR,SAASC,GAAYrkE,EAAMskE,EAASr/C,EAAYhuC,GAC5C,GAAIuR,GAAaI,UAAU3R,GAAQ,CAC/BA,EAAQuR,GAAaG,OAAO1R,GAC5B,IAAIstF,EAAmBvkE,EAAKxa,IAAIu9B,MAAMuhD,GAASxjD,aAAemE,EAC1DhE,EAAWz4B,GAAaG,OAAOqX,EAAKklB,UAAUq/C,IAClDvkE,EAAKklB,UAAUq/C,GAAoB,IAAI/7E,GAAay4B,GAExD,OAAOhqC,GA+rWX3D,EAAQkxF,KA5tDR,SAASje,GAAQtkE,EAAO8gC,EAAOoB,EAAkBC,GAY7C,IAVA,IAAIqgD,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBrgE,EAAgB,KAChBsgE,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpCp9C,EAAqB,KAChBzyC,EAAI,EAAGA,EAAI4tC,EAAMztC,OAAQH,IAAK,CACnC,IAAI2qB,EAAOijB,EAAM5tC,GAQjB,GAPA2qB,EAAKgd,UAAY3nC,EACjB2qB,EAAKvgB,OAASilB,EACd1E,EAAKghB,aAAe2jD,EACpB3kE,EAAKyjD,YAAcmhB,EACnB5kE,EAAKuE,aAAeygE,EACpBH,GAAiB7kE,EAAK7d,MACtB4iF,GAAsB/kE,EAAK+mB,gBACvB/mB,EAAKoP,QAAS,CACd,IAAIyzC,EAAQ7iD,EAAKoP,QACjByzC,EAAMyJ,gBACF5nD,EAAgBA,EAAc0K,QAAQk9C,gBAAkBh4E,OAAOU,OAAO,MAC1E6tE,EAAMwJ,aAAexJ,EAAMyJ,gBAE3B2Y,GAAmC,EACnCC,GAAoC,EAChCllE,EAAKoP,QAAQf,WACb02D,GAAsB/kE,EAAKoP,QAAQf,SAASy+C,oBASpD,GANAqB,GAAazpD,EAAe1E,EAAMijB,EAAMztC,QACxCmvF,GAAoB3kE,EAAKkN,SAAS13B,OAClCovF,GAAuB5kE,EAAKiU,QAAQz+B,QAC/BwvF,GAAqC,EAAbhlE,EAAK7d,QAC9B2lC,EAAqB9nB,GAER,MAAbA,EAAK7d,MAAiC,CACjC8iF,IACDA,GAAmC,EAEnCvgE,EAAc0K,QAAQk9C,gBAClBh4E,OAAOU,OAAO0vB,EAAc0K,QAAQk9C,iBACxC5nD,EAAc0K,QAAQi9C,aAAe3nD,EAAc0K,QAAQk9C,iBAE/D,IACI1zB,EAAuD,IAA3B,MAAb54B,EAAK7d,OAD6C,IAAhC,KAAb6d,EAAK7d,QAEJy2C,EACrBl0B,EAAc0K,QAAQk9C,gBAAgB5nC,GAAS1kB,EAAK5e,SAAStD,QAAUkiB,GAGlEklE,IACDA,GAAoC,EAEpCxgE,EAAc0K,QAAQi9C,aAClB/3E,OAAOU,OAAO0vB,EAAc0K,QAAQk9C,kBAE5C5nD,EAAc0K,QAAQi9C,aAAa3nC,GAAS1kB,EAAK5e,SAAStD,QAAUkiB,GAEpE44B,IACAl0B,EAAc0K,QAAQu3C,kBAAoB3mD,GAclD,GAXI0E,GACAA,EAAcqjD,YAAc/nD,EAAK7d,MACjCuiB,EAAcymD,kBAAoBnrD,EAAK7d,MACvCuiB,EAAc0mD,qBAAuBprD,EAAK+mB,gBACtC/mB,EAAKoP,SAAWpP,EAAKoP,QAAQf,WAC7B3J,EAAc0mD,qBAAuBprD,EAAKoP,QAAQf,SAASy+C,qBAI/DgY,GAAqB9kE,EAAK7d,MAE1B6d,EAAKmoB,WAAa,EAClBzjB,EAAgB1E,EACXkuD,GAAcluD,KACfglE,EAAsBhlE,QAS1B,KAAO0E,GAAiBrvB,IAAMqvB,EAAcsY,UAAYtY,EAAcyjB,YAAY,CAC9E,IAAIg9C,EAAYzgE,EAAcjlB,OAC1B0lF,IACAA,EAAUpd,YAAcrjD,EAAcqjD,WACtCod,EAAU/Z,qBAAuB1mD,EAAc0mD,qBAK/C4Z,GAHJtgE,EAAgBygE,IAEKjX,GAAcxpD,GACTA,EAAcH,aAGdG,GAQtC,OAEInxB,QAAS,KACT4lD,UAAW0rC,EACXO,cAAeN,EACfhY,mBAAoBiY,EAAoB5iF,MAAOA,EAC/C8gC,MAAOA,EACPoB,iBAAkBA,GAAoBG,GACtCF,eAAgBA,GAAkBE,GAAMJ,YAX1B,SAAUlkB,EAAM8c,EAAW7J,EAAW2S,GACpD,OAAO7C,EAAMjG,GAAW5N,QAAQgV,YAAYlkB,EAAMiT,EAAW2S,IAW7D6oC,aAAcgW,EACdjW,YAAakW,EAAqB98C,mBAAoBA,IAwmD9DxzC,OAAO+B,eAAe7C,EAAS,cAAgB2D,OAAO","sourcesContent":["/**\n * @license Angular v7.0.0-beta.0+42.sha-2fe05ab\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/compiler')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators', '@angular/compiler'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators,global.ng.compiler));\n}(this, (function (exports,rxjs,operators,compiler) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __global$1 = typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global;\n    function ngDevModeResetPerfCounters() {\n        __global$1.ngDevMode = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    var currentElementNode = null;\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData ? viewData[INJECTOR$1] : null,\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n            null // declarationView\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        ngDevMode && assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */);\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        queries && queries.addNode(node); // check if a given container node matches\n        queueLifecycleHooks(node.tNode.flags, tView);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : domRendererFactory3;\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef.rendererType)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef$1(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef$1(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var different = bindingUpdated2(v0, v1);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'Éµx': nextContext,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'Éµql': loadQueryList,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'ÉµgV': getCurrentView,\n        'ÉµrV': restoreView,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµcp': elementClassProp,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµQr': registerContentQuery,\n        'ÉµrS': reserveSlots,\n        'Éµr': reference,\n        'Éµs': elementStyling,\n        'Éµsm': elementStylingMap,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$3)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$3)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty('ngBaseDef')) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.0+42.sha-2fe05ab');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.Éµx = nextContext;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµgV = getCurrentView;\n    exports.ÉµrV = restoreView;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.Éµr = reference;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI1 = i18nInterpolation1;\n    exports.ÉµiI2 = i18nInterpolation2;\n    exports.ÉµiI3 = i18nInterpolation3;\n    exports.ÉµiI4 = i18nInterpolation4;\n    exports.ÉµiI5 = i18nInterpolation5;\n    exports.ÉµiI6 = i18nInterpolation6;\n    exports.ÉµiI7 = i18nInterpolation7;\n    exports.ÉµiI8 = i18nInterpolation8;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}