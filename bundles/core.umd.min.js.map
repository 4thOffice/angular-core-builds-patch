{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","noSideEffects","fn","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","NG_PROV_DEF_FALLBACK","ɵprovFallback","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","newLineIndex","indexOf","substring","concatStringsWithSpace","before","after","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","ɵɵinvalidFactoryDep","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","assertDefined","actual","msg","throwError","expected","comparison","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","keyValueArraySet","keyValueArray","keyValueArrayIndexOf","arrayInsert2","array","value1","value2","end","keyValueArrayGet","_arrayIndexOfSorted","shift","start","middle","current","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","hostVars","hostAttrs","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","RendererStyleFlags3","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","view","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","viewAttachedToChangeDetector","getConstant","resetPreOrderHookFlags","updateTransplantedViewCount","lContainer","amount","viewOrContainer","parent","instructionState","lFrame","createLFrame","bindingsEnabled","checkNoChangesMode","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","getTView","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRootForHostBindings","currentDirectiveIndex","setCurrentDirectiveIndex","getCurrentDirectiveDef","tData","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","enterView","currentLFrame","childLFrame","child","selectedIndex","elementDepthCount","currentNamespace","leaveViewLight","oldLFrame","leaveDI","leaveView","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","setSelectedIndex","getSelectedTNode","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","registerPostOrderHooks","directiveStart","directiveEnd","directiveDef","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","mergeHostAttrs","src","srcMarker","mergeHostAttribute","key1","key2","markerInsertPosition","dstValue","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","includeViewProviders","setIncludeViewProviders","v","oldValue","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","BLOOM_SIZE","mask","b6","b5","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","registerPreOrderHooks","directiveIndex","preOrderHooks","preOrderCheckHooks","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","inertBody","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","prop","ɵɵsanitizeUrlOrResourceUrl","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","classIndexOf","className","classToSearch","startingIndex","foundIndex","length_1","isCssClassMatching","cssClassToMatch","isProjectionMode","isInlineTemplate","hasTagAndTypeMatch","currentSelector","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","bindingsMode","maybeAttrName","matchTemplateAttribute","attr","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","maybeWrapInNotSelector","isNegativeMode","chunk","stringifyCSSSelector","result","currentChunk","valueOrMarker","attrValue","NO_CHANGE","getLViewParent","getRootContext","viewOrComponent","getRootView","componentOrLView","getFirstLContainer","getNearestLContainer","getNextLContainer","container","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","toTStylingRange","prev","getTStylingRangePrev","tStylingRange","getTStylingRangePrevDuplicate","setTStylingRangePrevDuplicate","getTStylingRangeNext","setTStylingRangeNext","getTStylingRangeNextDuplicate","setTStylingRangeNextDuplicate","toDebugStyleBinding","isClassBased","tView_","bindings","range","classBindings","styleBindings","isTemplate","cursor","itemRange","prevDuplicate","nextDuplicate","nextIndex","prevIndex","residualClasses","residualStyles","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","HEADER_OFFSET","nodes","TView","queries","expandoStartIndex","expandoInstructions","firstUpdatePass","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","incompleteFirstPass","enumerable","configurable","TNode","directiveStylingLast","propertyBindings","mergedAttrs","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","elementIndex","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","markTransplantedViewsForRefresh","movedViews","movedLView","refreshDynamicEmbeddedViews","embeddedLView","embeddedTView","setHostBindingsByExecutingExpandoInstructions","instruction","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","expando","getCurrentDirectiveIndex","dirIndex","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","viewData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","ShadowDom","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","hasDirectives","findDirectiveDefMatches","registry","matches","markAsComponentHost","exportsMap","","totalDirectiveHostVars","initTNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","addHostBindingsToExpandoInstructions","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","growHostVarsSpace","cacheMatchingLocalNames","directiveCount","providerCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","componentHostIdx","refreshContainsDirtyView","componentTView","syncViewWithBlueprint","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getLCleanup","getTViewCleanup","loadComponentRenderer","currentDef","unwrapLView","errorHandler","textBindingInternal","setValue","getLContainer","embeddedView","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","detachMovedView","declarationContainer","declarationViewIndex","detachView","removeIndex","indexInContainer","viewToDetach","declarationLContainer","removedLView","lQueries","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","toCall","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","writeDirectStyle","newValue","style","cssText","writeDirectClass","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","nodesInSlot","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef","createTemplateRef","TemplateRefToken","TemplateRef","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","clear","remove","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","viewAttachedToContainer","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","insertView","containerLength","trackMovedView","move","newIndex","viewRefsArr","removeView","detachedView","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","Invalid","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","createInjectorWithoutInjectorInstances","_resolveInjectorDefTypes","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","add","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","typeName","unwrappedProvider","isFactoryProvider","isExistingProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","computeStaticStyling","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","is","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵtemplate","attrsIndex","localRefsIndex","templateFirstCreatePass","tViewConsts","embeddedTViewNode","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵinvalidFactory","ɵɵproperty","setDirectiveInputsWhichShadowsStyling","property","ɵɵelementStart","getNamespace","elementStartFirstCreatePass","elementStart","getElementDepthCount","increaseElementDepthCount","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","hasClassInput","hasStyleInput","ɵɵelement","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","EMPTY_ARRAY$3","markDuplicates","tStylingKey","isPrevDir","isClassBinding","tStylingAtIndex","isMap","foundDuplicate","tStyleRangeAtCursor","isStylingMatch","tStylingKeyCursor","parserState","textEnd","keyEnd","valueEnd","getLastParsedKey","getLastParsedValue","parseClassNameNext","consumeClassToken","startIndex","consumeWhitespace","parseStyleNext","consumeStyleKey","ch","consumeSeparator","consumeStyleValue","ch1","ch2","ch3","lastChIndex","consumeQuotedText","resetParserState","separator","quoteCharCode","ɵɵstyleProp","checkStylingProperty","ɵɵclassProp","ɵɵstyleMap","checkStylingMap","styleKeyValueArraySet","styleStringParser","parseStyle","ɵɵclassMap","classStringParser","parseClassName","stylingFirstUpdatePass","updateStyling","normalizeSuffix","stringParser","hasStylingInputShadow","isInHostBindings","staticPrefix","updateStylingMap","oldKeyValueArray","newKeyValueArray","oldIndex","oldKey","setKey","toStylingKeyValueArray","styleKeyValueArray","unwrappedValue","isHostBindings","wrapInStaticStylingKey","stylingKey","hostDirectiveDef","residual","collectStylingFromTAttrs","collectStylingFromDirectives","templateStylingKey","getTemplateHeadTStylingKey","setTemplateHeadTStylingKey","collectResidual","insertTStylingBinding","tStylingKeyWithStatic","isHostBinding","tBindings","tmplHead","tmplTail","isKeyDuplicateOfStatic","previousNode","setTStylingRangePrev","markDuplicateOfResidualStyling","currentDirective","desiredMarker","currentMarker","tRange","isStylingValuePresent","findStylingValue","applyStyling","isProcedural","addClass","classList","removeClass","removeStyle","removeProperty","setStyle","isPrevDirection","rawKey","containsStatics","isStylingMap","valueAtLViewIndex","currentValue","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstyleMapInterpolate1","ɵɵstyleMapInterpolate2","ɵɵstyleMapInterpolate3","ɵɵstyleMapInterpolate4","ɵɵstyleMapInterpolate5","ɵɵstyleMapInterpolate6","ɵɵstyleMapInterpolate7","ɵɵstyleMapInterpolate8","ɵɵstyleMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","assertDomElement","loadLContext","getComponentAtNodeIndex","getContext","getOwningComponent","elementOrDir","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","componentOrDirective","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","Element","applyChanges","_published","publishGlobalUtil","COMPILED","createRootComponentView","hostRenderer","viewRenderer","createRootComponent","componentDef","rootLView","hostFeatures","instantiateRootComponent","rootTNode","rootTView","createRootContext","LifecycleHooksFeature","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","shouldInheritFields","inheritanceChain","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","animation","defData","ngInherit","mergeHostAttrsAcrossInheritance","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","existingFactoryIndex","registerDestroyHooksIfSupported","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","contextIndex","indexInFactory","providerIsTypeProvider","isClassProvider","existingCallbacksIndex","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","TemplateRef_","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","listener","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","stringifyCSSSelectorList","selectorList","isBoundToModule","tElementNode","rootViewInjector","createChainedInjector","elementName","hostRNode","getNamespace$1","rootFlags","isIsolated","extractAttrsAndClassesFromSelector","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","assignTViewNodeToLView","tParentNode","u","localeEn","plural","Math","floor","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","pluralMapping","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","removeInnerTemplateTranslation","tagMatched","inTemplate","MARKER","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","previousTNodeIndex","icuExpressions","isRootTemplateMessage","allocNodeIndex","templateTranslation","getTranslationForTemplate","search","RegExp","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","phIndex","isElement","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","bindingsStartIndex","readUpdateOpCodes","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","NgModuleRef$1","componentFactoryResolver","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","pureFunction1Internal","ɵɵpureFunction2","pureFunction2Internal","ɵɵpureFunction3","pureFunction3Internal","ɵɵpureFunction4","pureFunction4Internal","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","pureFunctionVInternal","getPureFunctionReturnValue","returnValueIndex","lastReturnValue","bindingRoot","ɵɵpipe","pipeName","getPipeDef$1","pipeFactory","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","EventEmitter_","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","declarationNodeIdx","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","i_1","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","jitOptions","EMPTY_ARRAY$5","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","isNgModule","scopes","exported","importedType","importedScope","entry","declared","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","getJitOptions","preserveWhitespaces","defaultEncapsulation","directiveMetadata","typeSourceSpan","createParseSourceSpan","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","Pipe","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","DEFAULT_CURRENCY_CODE","TRANSLATIONS","TRANSLATIONS_FORMAT","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_d","_e","_f","attachView","_lastDefined","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","copyDomProperties","NodePrototype","descriptors","getOwnPropertyDescriptors","startsWith","isPrimitiveValue","collectPropertyBindings","bindingIndexes","metadataParts","lowercaseTNodeAttrs","eAttrs","lowercaseName","baseVal","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","_queryNativeNodeDescendants","rootNativeNode","_addQueryMatchR3","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","debugNode","getDebugNode$1","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","getDebugNodeR2__PRE_R3__","getDebugNodeR2","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","getDebugNode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵ_sanitizeHtml","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_s","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ngJitMode","setJitOptions","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNodeR2","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocaleCurrencyCode","getLocaleCurrencyCode","CurrencyCode","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","componentTag","ɵresetCompiledComponents","resetCompiledComponents","ɵresetJitOptions","resetJitOptions","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v10.0.0-next.7+45.sha-b2a3325\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    function __classPrivateFieldGet(receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    }\r\n\r\n    function __classPrivateFieldSet(receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return { toString: fn }.toString();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        return noSideEffects(function () {\n            var metaCtor = makeMetadataCtor(props);\n            function DecoratorFactory() {\n                var _a;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (this instanceof DecoratorFactory) {\n                    metaCtor.call.apply(metaCtor, __spread([this], args));\n                    return this;\n                }\n                var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n                return function TypeDecorator(cls) {\n                    if (typeFn)\n                        typeFn.apply(void 0, __spread([cls], args));\n                    // Use of Object.defineProperty is important since it creates non-enumerable property which\n                    // prevents the property is copied during subclassing.\n                    var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                        cls[ANNOTATIONS] :\n                        Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                    annotations.push(annotationInstance);\n                    if (additionalProcessing)\n                        additionalProcessing(cls);\n                    return cls;\n                };\n            }\n            if (parentClass) {\n                DecoratorFactory.prototype = Object.create(parentClass.prototype);\n            }\n            DecoratorFactory.prototype.ngMetadataName = name;\n            DecoratorFactory.annotationCls = DecoratorFactory;\n            return DecoratorFactory;\n        });\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        return noSideEffects(function () {\n            var metaCtor = makeMetadataCtor(props);\n            function ParamDecoratorFactory() {\n                var _a;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (this instanceof ParamDecoratorFactory) {\n                    metaCtor.apply(this, args);\n                    return this;\n                }\n                var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n                ParamDecorator.annotation = annotationInstance;\n                return ParamDecorator;\n                function ParamDecorator(cls, unusedKey, index) {\n                    // Use of Object.defineProperty is important since it creates non-enumerable property which\n                    // prevents the property is copied during subclassing.\n                    var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                        cls[PARAMETERS] :\n                        Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                    // there might be gaps if some in between parameters do not have annotations.\n                    // we pad with nulls.\n                    while (parameters.length <= index) {\n                        parameters.push(null);\n                    }\n                    (parameters[index] = parameters[index] || []).push(annotationInstance);\n                    return cls;\n                }\n            }\n            if (parentClass) {\n                ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n            }\n            ParamDecoratorFactory.prototype.ngMetadataName = name;\n            ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n            return ParamDecoratorFactory;\n        });\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        return noSideEffects(function () {\n            var metaCtor = makeMetadataCtor(props);\n            function PropDecoratorFactory() {\n                var _a;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (this instanceof PropDecoratorFactory) {\n                    metaCtor.apply(this, args);\n                    return this;\n                }\n                var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n                function PropDecorator(target, name) {\n                    var constructor = target.constructor;\n                    // Use of Object.defineProperty is important since it creates non-enumerable property which\n                    // prevents the property is copied during subclassing.\n                    var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                        constructor[PROP_METADATA] :\n                        Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                    meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                    meta[name].unshift(decoratorInstance);\n                    if (additionalProcessing)\n                        additionalProcessing.apply(void 0, __spread([target, name], args));\n                }\n                return PropDecorator;\n            }\n            if (parentClass) {\n                PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n            }\n            PropDecoratorFactory.prototype.ngMetadataName = name;\n            PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n            return PropDecoratorFactory;\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token,\n            providedIn: opts.providedIn || null,\n            factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory,\n            providers: options.providers || [],\n            imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        // See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.\n        var def = type &&\n            (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF] ||\n                (type[NG_PROV_DEF_FALLBACK] && type[NG_PROV_DEF_FALLBACK]()));\n        if (def) {\n            var typeName = getTypeName(type);\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + typeName + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + typeName + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /** Gets the name of a type, accounting for some cross-browser differences. */\n    function getTypeName(type) {\n        // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n        // it'll always return the name of the function itself, no matter how many other functions it\n        // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n        // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n        // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n        // the issue by converting the function to a string and parsing its name out that way via a regex.\n        if (type.hasOwnProperty('name')) {\n            return type.name;\n        }\n        var match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n        return match === null ? '' : match[1];\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n    // which will break inheriting the injectable definition from a grandparent through an\n    // undecorated parent class. We work around it by defining a fallback method which will be\n    // used to retrieve the definition. This should only be a problem in JIT mode, because in\n    // AOT TypeScript seems to have a workaround for static properties. When inheriting from an\n    // undecorated parent is no longer supported in v10, this can safely be removed.\n    var NG_PROV_DEF_FALLBACK = getClosureSafeProperty({ ɵprovFallback: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Concatenates two strings with separator, allocating new strings only when necessary.\n     *\n     * @param before before string.\n     * @param separator separator string.\n     * @param after after string.\n     * @returns concatenated string.\n     */\n    function concatStringsWithSpace(before, after) {\n        return (before == null || before === '') ?\n            (after === null ? '' : after) :\n            ((after == null || after === '') ? before : before + ' ' + after);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () {\n            return stringify(this());\n        };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () {\n            return \"InjectionToken \" + this._desc;\n        };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = {};\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactoryDep(index) {\n        var msg = ngDevMode ?\n            \"This constructor is not compatible with Angular Dependency Injection because its dependency at index \" + index + \" of the parameter list is invalid.\\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\\n\\nPlease check that 1) the type for the parameter at index \" + index + \" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\" :\n            'invalid';\n        throw new Error(msg);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (!(typeof actual === 'number')) {\n            throwError(msg, typeof actual, 'number', '===');\n        }\n    }\n    function assertNumberInRange(actual, minInclusive, maxInclusive) {\n        assertNumber(actual, 'Expected a number');\n        assertLessThanOrEqual(actual, maxInclusive, 'Expected number to be less than or equal to');\n        assertGreaterThanOrEqual(actual, minInclusive, 'Expected number to be greater than or equal to');\n    }\n    function assertString(actual, msg) {\n        if (!(typeof actual === 'string')) {\n            throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (!(actual == expected)) {\n            throwError(msg, actual, expected, '==');\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (!(actual != expected)) {\n            throwError(msg, actual, expected, '!=');\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (!(actual === expected)) {\n            throwError(msg, actual, expected, '===');\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (!(actual !== expected)) {\n            throwError(msg, actual, expected, '!==');\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (!(actual < expected)) {\n            throwError(msg, actual, expected, '<');\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (!(actual <= expected)) {\n            throwError(msg, actual, expected, '<=');\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (!(actual > expected)) {\n            throwError(msg, actual, expected, '>');\n        }\n    }\n    function assertGreaterThanOrEqual(actual, expected, msg) {\n        if (!(actual >= expected)) {\n            throwError(msg, actual, expected, '>=');\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg, actual, null, '==');\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg, actual, null, '!=');\n        }\n    }\n    function throwError(msg, actual, expected, comparison) {\n        throw new Error(\"ASSERTION ERROR: \" + msg +\n            (comparison == null ? '' : \" [Expected=> \" + expected + \" \" + comparison + \" \" + actual + \" <=Actual]\"));\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n    /**\n     * Remove item from array (Same as `Array.splice()` but faster.)\n     *\n     * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * https://jsperf.com/fast-array-splice (About 20x faster)\n     *\n     * @param array Array to splice\n     * @param index Index of element in array to remove.\n     * @param count Number of items to remove.\n     */\n    function arraySplice(array, index, count) {\n        var length = array.length - count;\n        while (index < length) {\n            array[index] = array[index + count];\n            index++;\n        }\n        while (count--) {\n            array.pop(); // shrink the array\n        }\n    }\n    /**\n     * Same as `Array.splice(index, 0, value)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value Value to add to array.\n     */\n    function arrayInsert(array, index, value) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        while (end > index) {\n            var previousEnd = end - 1;\n            array[end] = array[previousEnd];\n            end = previousEnd;\n        }\n        array[index] = value;\n    }\n    /**\n     * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value1 Value to add to array.\n     * @param value2 Value to add to array.\n     */\n    function arrayInsert2(array, index, value1, value2) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        if (end == index) {\n            // inserting at the end.\n            array.push(value1, value2);\n        }\n        else if (end === 1) {\n            // corner case when we have less items in array than we have items to insert.\n            array.push(value2, array[0]);\n            array[0] = value1;\n        }\n        else {\n            end--;\n            array.push(array[end - 1], array[end]);\n            while (end > index) {\n                var previousEnd = end - 2;\n                array[end] = array[previousEnd];\n                end--;\n            }\n            array[index] = value1;\n            array[index + 1] = value2;\n        }\n    }\n    /**\n     * Insert a `value` into an `array` so that the array remains sorted.\n     *\n     * NOTE:\n     * - Duplicates are not allowed, and are ignored.\n     * - This uses binary search algorithm for fast inserts.\n     *\n     * @param array A sorted array to insert into.\n     * @param value The value to insert.\n     * @returns index of the inserted value.\n     */\n    function arrayInsertSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index < 0) {\n            // if we did not find it insert it.\n            index = ~index;\n            arrayInsert(array, index, value);\n        }\n        return index;\n    }\n    /**\n     * Remove `value` from a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to remove from.\n     * @param value The value to remove.\n     * @returns index of the removed value.\n     *   - positive index if value found and removed.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     inserted)\n     */\n    function arrayRemoveSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index >= 0) {\n            arraySplice(array, index, 1);\n        }\n        return index;\n    }\n    /**\n     * Get an index of an `value` in a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     located)\n     */\n    function arrayIndexOfSorted(array, value) {\n        return _arrayIndexOfSorted(array, value, 0);\n    }\n    /**\n     * Set a `value` for a `key`.\n     *\n     * @param keyValueArray to modify.\n     * @param key The key to locate or create.\n     * @param value The value to set for a `key`.\n     * @returns index (always even) of where the value vas set.\n     */\n    function keyValueArraySet(keyValueArray, key, value) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it set it.\n            keyValueArray[index | 1] = value;\n        }\n        else {\n            index = ~index;\n            arrayInsert2(keyValueArray, index, key, value);\n        }\n        return index;\n    }\n    /**\n     * Retrieve a `value` for a `key` (on `undefined` if not found.)\n     *\n     * @param keyValueArray to search.\n     * @param key The key to locate.\n     * @return The `value` stored at the `key` location or `undefined if not found.\n     */\n    function keyValueArrayGet(keyValueArray, key) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it retrieve it.\n            return keyValueArray[index | 1];\n        }\n        return undefined;\n    }\n    /**\n     * Retrieve a `key` index value in the array or `-1` if not found.\n     *\n     * @param keyValueArray to search.\n     * @param key The key to locate.\n     * @returns index of where the key is (or should have been.)\n     *   - positive (even) index if key found.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been inserted.)\n     */\n    function keyValueArrayIndexOf(keyValueArray, key) {\n        return _arrayIndexOfSorted(keyValueArray, key, 1);\n    }\n    /**\n     * Delete a `key` (and `value`) from the `KeyValueArray`.\n     *\n     * @param keyValueArray to modify.\n     * @param key The key to locate or delete (if exist).\n     * @returns index of where the key was (or should have been.)\n     *   - positive (even) index if key found and deleted.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been.)\n     */\n    function keyValueArrayDelete(keyValueArray, key) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it remove it.\n            arraySplice(keyValueArray, index, 2);\n        }\n        return index;\n    }\n    /**\n     * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @param shift grouping shift.\n     *   - `0` means look at every location\n     *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n     *         they are values.)\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     * inserted)\n     */\n    function _arrayIndexOfSorted(array, value, shift) {\n        ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');\n        var start = 0;\n        var end = array.length >> shift;\n        while (end !== start) {\n            var middle = start + ((end - start) >> 1); // find the middle.\n            var current = array[middle << shift];\n            if (value === current) {\n                return (middle << shift);\n            }\n            else if (current > value) {\n                end = middle;\n            }\n            else {\n                start = middle + 1; // We already searched middle so make it non-inclusive by adding 1\n            }\n        }\n        return ~(end << shift);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        return noSideEffects(function () {\n            // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n            // See the `initNgDevMode` docstring for more information.\n            (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n            var type = componentDefinition.type;\n            var typePrototype = type.prototype;\n            var declaredInputs = {};\n            var def = {\n                type: type,\n                providersResolver: null,\n                decls: componentDefinition.decls,\n                vars: componentDefinition.vars,\n                factory: null,\n                template: componentDefinition.template || null,\n                consts: componentDefinition.consts || null,\n                ngContentSelectors: componentDefinition.ngContentSelectors,\n                hostBindings: componentDefinition.hostBindings || null,\n                hostVars: componentDefinition.hostVars || 0,\n                hostAttrs: componentDefinition.hostAttrs || null,\n                contentQueries: componentDefinition.contentQueries || null,\n                declaredInputs: declaredInputs,\n                inputs: null,\n                outputs: null,\n                exportAs: componentDefinition.exportAs || null,\n                onChanges: null,\n                onInit: typePrototype.ngOnInit || null,\n                doCheck: typePrototype.ngDoCheck || null,\n                afterContentInit: typePrototype.ngAfterContentInit || null,\n                afterContentChecked: typePrototype.ngAfterContentChecked || null,\n                afterViewInit: typePrototype.ngAfterViewInit || null,\n                afterViewChecked: typePrototype.ngAfterViewChecked || null,\n                onDestroy: typePrototype.ngOnDestroy || null,\n                onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n                directiveDefs: null,\n                pipeDefs: null,\n                selectors: componentDefinition.selectors || EMPTY_ARRAY,\n                viewQuery: componentDefinition.viewQuery || null,\n                features: componentDefinition.features || null,\n                data: componentDefinition.data || {},\n                // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in\n                // the next line. Also `None` should be 0 not 2.\n                encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n                id: 'c',\n                styles: componentDefinition.styles || EMPTY_ARRAY,\n                _: null,\n                setInput: null,\n                schemas: componentDefinition.schemas || null,\n                tView: null,\n            };\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            return def;\n        });\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () {\n                autoRegisterModuleById[def.id] = def.type;\n            });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var TRANSPLANTED_VIEWS_TO_REFRESH = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    var QUERIES = 19;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    /**\n     * Flag to signify that this `LContainer` may have transplanted views which need to be change\n     * detected. (see: `LView[DECLARATION_COMPONENT_VIEW])`.\n     *\n     * This flag, once set, is never unset for the `LContainer`. This means that when unset we can skip\n     * a lot of work in `refreshDynamicEmbeddedViews`. But when set we still need to verify\n     * that the `MOVED_VIEWS` are transplanted and on-push.\n     */\n    var HAS_TRANSPLANTED_VIEWS = 2;\n    // PARENT, NEXT, TRANSPLANTED_VIEWS_TO_REFRESH are indices 3, 4, and 5\n    // As we already have these constants in LView, we don't need to re-create them.\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    var MOVED_VIEWS = 9;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 10;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // [Assert functions do not constraint type when they are guarded by a truthy\n    // expression.](https://github.com/microsoft/TypeScript/issues/37295)\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') &&\n            assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n    function assertFirstUpdatePass(tView, errMessage) {\n        assertEqual(tView.firstUpdatePass, true, errMessage || 'Should only be called in first update pass.');\n    }\n    /**\n     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n     * an interface, so we can't do a direct instanceof check.\n     */\n    function assertDirectiveDef(obj) {\n        if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n            throwError(\"Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var MATH_ML_NAMESPACE = 'http://www.w3.org/1998/MathML/';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) {\n        return getDocument();\n    };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(tView, index) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, tView.data.length, 'wrong index for TNode');\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n    /**\n     * Updates the `TRANSPLANTED_VIEWS_TO_REFRESH` counter on the `LContainer` as well as the parents\n     * whose\n     *  1. counter goes from 0 to 1, indicating that there is a new child that has a view to refresh\n     *  or\n     *  2. counter goes from 1 to 0, indicating there are no more descendant views to refresh\n     */\n    function updateTransplantedViewCount(lContainer, amount) {\n        lContainer[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;\n        var viewOrContainer = lContainer;\n        var parent = lContainer[PARENT];\n        while (parent !== null &&\n            ((amount === 1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 1) ||\n                (amount === -1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 0))) {\n            parent[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;\n            viewOrContainer = parent;\n            parent = parent[PARENT];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current `LView`.\n     */\n    function getLView() {\n        return instructionState.lFrame.lView;\n    }\n    /**\n     * Return the current `TView`.\n     */\n    function getTView() {\n        return instructionState.lFrame.tView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        // TODO(misko): remove this from the LView since it is ngDevMode=true mode only.\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            index = lFrame.bindingRootIndex = lFrame.tView.bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     *\n     * @param bindingRootIndex Root index for `hostBindings`\n     * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive\n     *        whose `hostBindings` are being processed.\n     */\n    function setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex) {\n        var lFrame = instructionState.lFrame;\n        lFrame.bindingIndex = lFrame.bindingRootIndex = bindingRootIndex;\n        setCurrentDirectiveIndex(currentDirectiveIndex);\n    }\n    /**\n     * When host binding is executing this points to the directive index.\n     * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`\n     * `LView[getCurrentDirectiveIndex()]` is directive instance.\n     */\n    function getCurrentDirectiveIndex() {\n        return instructionState.lFrame.currentDirectiveIndex;\n    }\n    /**\n     * Sets an index of a directive whose `hostBindings` are being processed.\n     *\n     * @param currentDirectiveIndex `TData` index where current directive instance can be found.\n     */\n    function setCurrentDirectiveIndex(currentDirectiveIndex) {\n        instructionState.lFrame.currentDirectiveIndex = currentDirectiveIndex;\n    }\n    /**\n     * Retrieve the current `DirectiveDef` which is active when `hostBindings` instruction is being\n     * executed.\n     *\n     * @param tData Current `TData` where the `DirectiveDef` will be looked up at.\n     */\n    function getCurrentDirectiveDef(tData) {\n        var currentDirectiveIndex = instructionState.lFrame.currentDirectiveIndex;\n        return currentDirectiveIndex === -1 ? null : tData[currentDirectiveIndex];\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        if (ngDevMode) {\n            assertEqual(newLFrame.isParent, true, 'Expected clean LFrame');\n            assertEqual(newLFrame.lView, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.tView, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.selectedIndex, 0, 'Expected clean LFrame');\n            assertEqual(newLFrame.elementDepthCount, 0, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentDirectiveIndex, -1, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentNamespace, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.bindingRootIndex, -1, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentQueryIndex, 0, 'Expected clean LFrame');\n        }\n        var tView = newView[TVIEW];\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        newLFrame.tView = tView;\n        newLFrame.contextLView = newView;\n        newLFrame.bindingIndex = tView.bindingStartIndex;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            tView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentDirectiveIndex: -1,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    /**\n     * A lightweight version of leave which is used with DI.\n     *\n     * This function only resets `previousOrParentTNode` and `LView` as those are the only properties\n     * used with DI (`enterDI()`).\n     *\n     * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where\n     * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.\n     */\n    function leaveViewLight() {\n        var oldLFrame = instructionState.lFrame;\n        instructionState.lFrame = oldLFrame.parent;\n        oldLFrame.previousOrParentTNode = null;\n        oldLFrame.lView = null;\n        return oldLFrame;\n    }\n    /**\n     * This is a lightweight version of the `leaveView` which is needed by the DI system.\n     *\n     * NOTE: this function is an alias so that we can change the type of the function to have `void`\n     * return type.\n     */\n    var leaveDI = leaveViewLight;\n    /**\n     * Leave the current `LView`\n     *\n     * This pops the `LFrame` with the associated `LView` from the stack.\n     *\n     * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is\n     * because for performance reasons we don't release `LFrame` but rather keep it for next use.\n     */\n    function leaveView() {\n        var oldLFrame = leaveViewLight();\n        oldLFrame.isParent = true;\n        oldLFrame.tView = null;\n        oldLFrame.selectedIndex = 0;\n        oldLFrame.contextLView = null;\n        oldLFrame.elementDepthCount = 0;\n        oldLFrame.currentDirectiveIndex = -1;\n        oldLFrame.currentNamespace = null;\n        oldLFrame.bindingRootIndex = -1;\n        oldLFrame.bindingIndex = -1;\n        oldLFrame.currentQueryIndex = 0;\n    }\n    function nextContextImpl(level) {\n        var contextLView = instructionState.lFrame.contextLView =\n            walkUpViews(level, instructionState.lFrame.contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode &&\n                assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the currently selected element index.\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index;\n    }\n    /**\n     * Gets the `tNode` that represents currently selected element.\n     */\n    function getSelectedTNode() {\n        var lFrame = instructionState.lFrame;\n        return getTNode(lFrame.tView, lFrame.selectedIndex);\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = SVG_NAMESPACE;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = MATH_ML_NAMESPACE;\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = []))\n                    .push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 2047 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode &&\n            assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 11 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 2048 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n     * Factory for creating instances of injectors in the NodeInjector.\n     *\n     * This factory is complicated by the fact that it can resolve `multi` factories as well.\n     *\n     * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n     * - One without `multi` support (most common)\n     * - One with `multi` values, (rare).\n     *\n     * Since VMs can cache up to 4 inline hidden classes this is OK.\n     *\n     * - Single factory: Only `resolving` and `factory` is defined.\n     * - `providers` factory: `componentProviders` is a number and `index = -1`.\n     * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n     */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64 /* AT_SIGN */;\n    }\n    /**\n     * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.\n     *\n     * This merge function keeps the order of attrs same.\n     *\n     * @param dst Location of where the merged `TAttributes` should end up.\n     * @param src `TAttributes` which should be appended to `dst`\n     */\n    function mergeHostAttrs(dst, src) {\n        if (src === null || src.length === 0) {\n            // do nothing\n        }\n        else if (dst === null || dst.length === 0) {\n            // We have source, but dst is empty, just make a copy.\n            dst = src.slice();\n        }\n        else {\n            var srcMarker = -1 /* ImplicitAttributes */;\n            for (var i = 0; i < src.length; i++) {\n                var item = src[i];\n                if (typeof item === 'number') {\n                    srcMarker = item;\n                }\n                else {\n                    if (srcMarker === 0 /* NamespaceURI */) {\n                        // Case where we need to consume `key1`, `key2`, `value` items.\n                    }\n                    else if (srcMarker === -1 /* ImplicitAttributes */ ||\n                        srcMarker === 2 /* Styles */) {\n                        // Case where we have to consume `key1` and `value` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, src[++i]);\n                    }\n                    else {\n                        // Case where we have to consume `key1` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, null);\n                    }\n                }\n            }\n        }\n        return dst;\n    }\n    /**\n     * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.\n     *\n     * @param dst `TAttributes` to append to.\n     * @param marker Region where the `key`/`value` should be added.\n     * @param key1 Key to add to `TAttributes`\n     * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)\n     * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.\n     */\n    function mergeHostAttribute(dst, marker, key1, key2, value) {\n        var i = 0;\n        // Assume that new markers will be inserted at the end.\n        var markerInsertPosition = dst.length;\n        // scan until correct type.\n        if (marker === -1 /* ImplicitAttributes */) {\n            markerInsertPosition = -1;\n        }\n        else {\n            while (i < dst.length) {\n                var dstValue = dst[i++];\n                if (typeof dstValue === 'number') {\n                    if (dstValue === marker) {\n                        markerInsertPosition = -1;\n                        break;\n                    }\n                    else if (dstValue > marker) {\n                        // We need to save this as we want the markers to be inserted in specific order.\n                        markerInsertPosition = i - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        // search until you find place of insertion\n        while (i < dst.length) {\n            var item = dst[i];\n            if (typeof item === 'number') {\n                // since `i` started as the index after the marker, we did not find it if we are at the next\n                // marker\n                break;\n            }\n            else if (item === key1) {\n                // We already have same token\n                if (key2 === null) {\n                    if (value !== null) {\n                        dst[i + 1] = value;\n                    }\n                    return;\n                }\n                else if (key2 === dst[i + 1]) {\n                    dst[i + 2] = value;\n                    return;\n                }\n            }\n            // Increment counter.\n            i++;\n            if (key2 !== null)\n                i++;\n            if (value !== null)\n                i++;\n        }\n        // insert at location.\n        if (markerInsertPosition !== -1) {\n            dst.splice(markerInsertPosition, 0, marker);\n            i = markerInsertPosition + 1;\n        }\n        dst.splice(i++, 0, key1);\n        if (key2 !== null) {\n            dst.splice(i++, 0, key2);\n        }\n        if (value !== null) {\n            dst.splice(i++, 0, value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () { return (typeof requestAnimationFrame !== 'undefined' &&\n        requestAnimationFrame || // browser only\n        setTimeout // everything else\n    )\n        .bind(_global); };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return tNode.classes;\n        }\n        if (attrNameToInject === 'style') {\n            return tNode.styles;\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n     * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n     *\n     * This function checks to see if the value has already been instantiated and if so returns the\n     * cached `injectable`. Otherwise if it detects that the value is still a factory it\n     * instantiates the `injectable` and caches the value.\n     */\n    function getNodeInjectable(lView, tView, index, tNode) {\n        var value = lView[index];\n        var tData = tView.data;\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n                // This code path is hit for both directives and providers.\n                // For perf reasons, we want to avoid searching for hooks on providers.\n                // It does no harm to try (the hooks just won't exist), but the extra\n                // checks are unnecessary and this is a hot path. So we check to see\n                // if the index of the dependency is in the directive range for this\n                // tNode. If it's not, we know it's a provider and skip hook registration.\n                if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                    ngDevMode && assertDirectiveDef(tData[index]);\n                    registerPreOrderHooks(index, tData[index], tView);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        return noSideEffects(function () {\n            var proto = Object.getPrototypeOf(type.prototype).constructor;\n            var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n            if (factory !== null) {\n                return factory;\n            }\n            else {\n                // There is no factory defined. Either this was improper usage of inheritance\n                // (no Angular decorator on the superclass) or there is no constructor at all\n                // in the inheritance chain. Since the two cases cannot be distinguished, the\n                // latter has to be assumed.\n                return function (t) { return new t(); };\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () {\n            return \"HTML\" /* Html */;\n        };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () {\n            return \"Style\" /* Style */;\n        };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () {\n            return \"Script\" /* Script */;\n        };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () {\n            return \"URL\" /* Url */;\n        };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () {\n            return \"ResourceURL\" /* ResourceUrl */;\n        };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            var inertBodyElement = this.inertDocument.body;\n            if (inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(inertBodyElement);\n            }\n            inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (inertBodyElement.querySelector && !inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (inertBodyElement.querySelector && inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n            // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n            // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n            // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n            // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n            // down the line. This has been worked around by creating a new inert `body` and using it as\n            // the root node in which we insert the HTML.\n            var inertBody = this.inertDocument.createElement('body');\n            inertBody.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(inertBody);\n            }\n            return inertBody;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) {\n            this.buf.push(encodeEntities(chars));\n        };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) {\n            return '&#' + match.charCodeAt(0) + ';';\n        })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return renderStringify(unsafeStyle);\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' &&\n            (tag === 'embed' || tag === 'frame' || tag === 'iframe' || tag === 'media' ||\n                tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {\n        var field = propName ? \" for '\" + propName + \"'\" : '';\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value\" + field + \": '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook?\";\n        }\n        // TODO: include debug context, see `viewDebugError` function in\n        // `packages/core/src/view/errors.ts` for reference.\n        throw new Error(msg);\n    }\n    function constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {\n        var _a = __read(meta.split(INTERPOLATION_DELIMITER)), propName = _a[0], prefix = _a[1], chunks = _a.slice(2);\n        var oldValue = prefix, newValue = prefix;\n        for (var i = 0; i < chunks.length; i++) {\n            var slotIdx = rootIndex + i;\n            oldValue += \"\" + lView[slotIdx] + chunks[i];\n            newValue += \"\" + (slotIdx === expressionIndex ? changedValue : lView[slotIdx]) + chunks[i];\n        }\n        return { propName: propName, oldValue: oldValue, newValue: newValue };\n    }\n    /**\n     * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:\n     * - property name (for property bindings or interpolations)\n     * - old and new values, enriched using information from metadata\n     *\n     * More information on the metadata storage format can be found in `storePropertyBindingMetadata`\n     * function description.\n     */\n    function getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {\n        var tData = lView[TVIEW].data;\n        var metadata = tData[bindingIndex];\n        if (typeof metadata === 'string') {\n            // metadata for property interpolation\n            if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {\n                return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);\n            }\n            // metadata for property binding\n            return { propName: metadata, oldValue: oldValue, newValue: newValue };\n        }\n        // metadata is not available for this expression, check if this expression is a part of the\n        // property interpolation by going from the current binding index left and look for a string that\n        // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:\n        // [..., 'id�Prefix � and � suffix', null, null, null, ...]\n        if (metadata === null) {\n            var idx = bindingIndex - 1;\n            while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {\n                idx--;\n            }\n            var meta = tData[idx];\n            if (typeof meta === 'string') {\n                var matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g'));\n                // first interpolation delimiter separates property name from interpolation parts (in case of\n                // property interpolations), so we subtract one from total number of found delimiters\n                if (matches && (matches.length - 1) > bindingIndex - idx) {\n                    return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);\n                }\n            }\n        }\n        return { propName: undefined, oldValue: oldValue, newValue: newValue };\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.\n     *\n     * ```\n     * <div my-dir [class]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.\n     *\n     * ```\n     * <div my-dir [style]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns an index of `classToSearch` in `className` taking token boundaries into account.\n     *\n     * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)\n     *\n     * @param className A string containing classes (whitespace separated)\n     * @param classToSearch A class name to locate\n     * @param startingIndex Starting location of search\n     * @returns an index of the located class (or -1 if not found)\n     */\n    function classIndexOf(className, classToSearch, startingIndex) {\n        ngDevMode && assertNotEqual(classToSearch, '', 'can not look for \"\" string.');\n        var end = className.length;\n        while (true) {\n            var foundIndex = className.indexOf(classToSearch, startingIndex);\n            if (foundIndex === -1)\n                return foundIndex;\n            if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= 32 /* SPACE */) {\n                // Ensure that it has leading whitespace\n                var length_1 = classToSearch.length;\n                if (foundIndex + length_1 === end ||\n                    className.charCodeAt(foundIndex + length_1) <= 32 /* SPACE */) {\n                    // Ensure that it has trailing whitespace\n                    return foundIndex;\n                }\n            }\n            // False positive, keep searching from where we left off.\n            startingIndex = foundIndex + 1;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    /**\n     * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)\n     *\n     * @param attrs `TAttributes` to search through.\n     * @param cssClassToMatch class to match (lowercase)\n     * @param isProjectionMode Whether or not class matching should look into the attribute `class` in\n     *    addition to the `AttributeMarker.Classes`.\n     */\n    function isCssClassMatching(attrs, cssClassToMatch, isProjectionMode) {\n        // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.\n        // It is strange to me that sometimes the class information comes in form of `class` attribute\n        // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine\n        // if that is the right behavior.\n        ngDevMode &&\n            assertEqual(cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');\n        var i = 0;\n        while (i < attrs.length) {\n            var item = attrs[i++];\n            if (isProjectionMode && item === 'class') {\n                item = attrs[i];\n                if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {\n                    return true;\n                }\n            }\n            else if (item === 1 /* Classes */) {\n                // We found the classes section. Start searching for the class.\n                while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {\n                    // while we have strings\n                    if (item.toLowerCase() === cssClassToMatch)\n                        return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks whether the `tNode` represents an inline template (e.g. `*ngFor`).\n     *\n     * @param tNode current TNode\n     */\n    function isInlineTemplate(tNode) {\n        return tNode.type === 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.attrs !== null) {\n                    if (!isCssClassMatching(tNode.attrs, selectorAttrValue, isProjectionMode)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate(tNode), isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode &&\n                            assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        classIndexOf(compareAgainstClassName, selectorAttrValue, 0) !== -1 ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                var attr = attrs[i];\n                // Return in case we checked all template attrs and are switching to the next section in the\n                // attrs array (that starts with a number that represents an attribute marker).\n                if (typeof attr === 'number')\n                    return -1;\n                if (attr === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    function maybeWrapInNotSelector(isNegativeMode, chunk) {\n        return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;\n    }\n    function stringifyCSSSelector(selector) {\n        var result = selector[0];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        var currentChunk = '';\n        var isNegativeMode = false;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode & 2 /* ATTRIBUTE */) {\n                    var attrValue = selector[++i];\n                    currentChunk +=\n                        '[' + valueOrMarker + (attrValue.length > 0 ? '=\"' + attrValue + '\"' : '') + ']';\n                }\n                else if (mode & 8 /* CLASS */) {\n                    currentChunk += '.' + valueOrMarker;\n                }\n                else if (mode & 4 /* ELEMENT */) {\n                    currentChunk += ' ' + valueOrMarker;\n                }\n            }\n            else {\n                //\n                // Append current chunk to the final result in case we come across SelectorFlag, which\n                // indicates that the previous section of a selector is over. We need to accumulate content\n                // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.\n                // ```\n                //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']\n                // ```\n                // should be transformed to `.classA :not(.classB .classC)`.\n                //\n                // Note: for negative selector part, we accumulate content between flags until we find the\n                // next negative flag. This is needed to support a case where `:not()` rule contains more than\n                // one chunk, e.g. the following selector:\n                // ```\n                //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']\n                // ```\n                // should be stringified to `:not(p.foo) :not(.bar)`\n                //\n                if (currentChunk !== '' && !isPositive(valueOrMarker)) {\n                    result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n                    currentChunk = '';\n                }\n                mode = valueOrMarker;\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector.\n                isNegativeMode = isNegativeMode || !isPositive(mode);\n            }\n            i++;\n        }\n        if (currentChunk !== '') {\n            result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n        }\n        return result;\n    }\n    /**\n     * Generates string representation of CSS selector in parsed form.\n     *\n     * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing\n     * additional parsing at runtime (for example, for directive matching). However in some cases (for\n     * example, while bootstrapping a component), a string version of the selector is required to query\n     * for the host element on the page. This function takes the parsed form of a selector and returns\n     * its string representation.\n     *\n     * @param selectorList selector in parsed form\n     * @returns string representation of a given selector\n     */\n    function stringifyCSSSelectorList(selectorList) {\n        return selectorList.map(stringifyCSSSelector).join(',');\n    }\n    /**\n     * Extracts attributes and classes information from a given CSS selector.\n     *\n     * This function is used while creating a component dynamically. In this case, the host element\n     * (that is created dynamically) should contain attributes and classes specified in component's CSS\n     * selector.\n     *\n     * @param selector CSS selector in parsed form (in a form of array)\n     * @returns object with `attrs` and `classes` fields that contain extracted information\n     */\n    function extractAttrsAndClassesFromSelector(selector) {\n        var attrs = [];\n        var classes = [];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode === 2 /* ATTRIBUTE */) {\n                    if (valueOrMarker !== '') {\n                        attrs.push(valueOrMarker, selector[++i]);\n                    }\n                }\n                else if (mode === 8 /* CLASS */) {\n                    classes.push(valueOrMarker);\n                }\n            }\n            else {\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector. Since attributes and classes are\n                // extracted only for \"positive\" part of the selector, we can stop here.\n                if (!isPositive(mode))\n                    break;\n                mode = valueOrMarker;\n            }\n            i++;\n        }\n        return { attrs: attrs, classes: classes };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = (typeof ngDevMode === 'undefined' || ngDevMode) ? { __brand__: 'NO_CHANGE' } : {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Gets the first `LContainer` in the LView or `null` if none exists.\n     */\n    function getFirstLContainer(lView) {\n        return getNearestLContainer(lView[CHILD_HEAD]);\n    }\n    /**\n     * Gets the next `LContainer` that is a sibling of the given container.\n     */\n    function getNextLContainer(container) {\n        return getNearestLContainer(container[NEXT]);\n    }\n    function getNearestLContainer(viewOrContainer) {\n        while (viewOrContainer !== null && !isLContainer(viewOrContainer)) {\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n        return viewOrContainer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     text(0, 'Hello');\n     *     text(1, 'Goodbye')\n     *     element(2, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     advance(2); // Advance twice to the <div>.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param delta Number of elements to advance forwards by.\n     *\n     * @codeGenApi\n     */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getTView(), getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        // TODO(misko): Remove this function as it is no longer being used.\n        selectIndexInternal(getTView(), getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(tView, lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function toTStylingRange(prev, next) {\n        ngDevMode && assertNumberInRange(prev, 0, 32767 /* UNSIGNED_MASK */);\n        ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n        return (prev << 17 /* PREV_SHIFT */ | next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangePrev(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange >> 17 /* PREV_SHIFT */) & 32767 /* UNSIGNED_MASK */;\n    }\n    function getTStylingRangePrevDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 2 /* PREV_DUPLICATE */) ==\n            2 /* PREV_DUPLICATE */;\n    }\n    function setTStylingRangePrev(tStylingRange, previous) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        ngDevMode && assertNumberInRange(previous, 0, 32767 /* UNSIGNED_MASK */);\n        return ((tStylingRange & ~4294836224 /* PREV_MASK */) |\n            (previous << 17 /* PREV_SHIFT */));\n    }\n    function setTStylingRangePrevDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange | 2 /* PREV_DUPLICATE */);\n    }\n    function getTStylingRangeNext(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 131068 /* NEXT_MASK */) >> 2 /* NEXT_SHIFT */;\n    }\n    function setTStylingRangeNext(tStylingRange, next) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n        return ((tStylingRange & ~131068 /* NEXT_MASK */) | //\n            next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangeNextDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 1 /* NEXT_DUPLICATE */) ===\n            1 /* NEXT_DUPLICATE */;\n    }\n    function setTStylingRangeNextDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange | 1 /* NEXT_DUPLICATE */);\n    }\n    function getTStylingRangeTail(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        var next = getTStylingRangeNext(tStylingRange);\n        return next === 0 ? getTStylingRangePrev(tStylingRange) : next;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts, //\n        incompleteFirstPass //\n        ) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n            this.incompleteFirstPass = incompleteFirstPass;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNode = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        directiveStylingLast, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        mergedAttrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        residualStyles, //\n        classes, //\n        residualClasses, //\n        classBindings, //\n        styleBindings) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.directiveStylingLast = directiveStylingLast;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.mergedAttrs = mergedAttrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.residualStyles = residualStyles;\n            this.classes = classes;\n            this.residualClasses = residualClasses;\n            this.classBindings = classBindings;\n            this.styleBindings = styleBindings;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"styleBindings_\", {\n            get: function () {\n                return toDebugStyleBinding(this, false);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"classBindings_\", {\n            get: function () {\n                return toDebugStyleBinding(this, true);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TNodeDebug = TNode;\n    function toDebugStyleBinding(tNode, isClassBased) {\n        var tData = tNode.tView_.data;\n        var bindings = [];\n        var range = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        var prev = getTStylingRangePrev(range);\n        var next = getTStylingRangeNext(range);\n        var isTemplate = next !== 0;\n        var cursor = isTemplate ? next : prev;\n        while (cursor !== 0) {\n            var itemKey = tData[cursor];\n            var itemRange = tData[cursor + 1];\n            bindings.unshift({\n                key: itemKey,\n                index: cursor,\n                isTemplate: isTemplate,\n                prevDuplicate: getTStylingRangePrevDuplicate(itemRange),\n                nextDuplicate: getTStylingRangeNextDuplicate(itemRange),\n                nextIndex: getTStylingRangeNext(itemRange),\n                prevIndex: getTStylingRangePrev(itemRange),\n            });\n            if (cursor === prev)\n                isTemplate = false;\n            cursor = getTStylingRangePrev(itemRange);\n        }\n        bindings.push((isClassBased ? tNode.residualClasses : tNode.residualStyles) || null);\n        return bindings;\n    }\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because\n    // `LView` constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 11 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () {\n                return toDebug(this._raw_lView[PARENT]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () {\n                return toHtml(this._raw_lView[HOST], true);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () {\n                return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join('');\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () {\n                return this._raw_lView[CONTEXT];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () {\n                return this._raw_lView[TVIEW];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () {\n                return this._raw_lView[CLEANUP];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () {\n                return this._raw_lView[INJECTOR$1];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () {\n                return this._raw_lView[RENDERER_FACTORY];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () {\n                return this._raw_lView[RENDERER];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () {\n                return this._raw_lView[SANITIZER];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () {\n                return toDebug(this._raw_lView[CHILD_HEAD]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () {\n                return toDebug(this._raw_lView[NEXT]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () {\n                return toDebug(this._raw_lView[CHILD_TAIL]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () {\n                return toDebug(this._raw_lView[DECLARATION_VIEW]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () {\n                return this._raw_lView[QUERIES];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () {\n                return this._raw_lView[T_HOST];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        return {\n            html: toHtml(native),\n            native: native,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return this._raw_lContainer[HAS_TRANSPLANTED_VIEWS];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () {\n                return toDebug(this._raw_lContainer[PARENT]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () {\n                return this._raw_lContainer[MOVED_VIEWS];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () {\n                return this._raw_lContainer[HOST];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () {\n                return this._raw_lContainer[NATIVE];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () {\n                return toDebug(this._raw_lContainer[NEXT]);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () {\n                return getTNode(this._lView[TVIEW], this.nodeIndex);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView));\n                });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value,\n                                            attrName: attrName,\n                                            sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text',\n                                            nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /**\n     * Process the `TView.expandoInstructions`. (Execute the `hostBindings`.)\n     *\n     * @param tView `TView` containing the `expandoInstructions`\n     * @param lView `LView` associated with the `TView`\n     */\n    function setHostBindingsByExecutingExpandoInstructions(tView, lView) {\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` is not associated with the `TView`!');\n        try {\n            var expandoInstructions = tView.expandoInstructions;\n            if (expandoInstructions !== null) {\n                var bindingRootIndex = tView.expandoStartIndex;\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                // TODO(misko): PERF It is possible to get here with `TView.expandoInstructions` containing no\n                // functions to execute. This is wasteful as there is no work to be done, but we still need\n                // to iterate over the instructions.\n                // In example of this is in this test: `host_binding_spec.ts`\n                // `fit('should not cause problems if detectChanges is called when a property updates', ...`\n                // In the above test we get here with expando [0, 0, 1] which requires a lot of processing but\n                // there is no function to execute.\n                for (var i = 0; i < expandoInstructions.length; i++) {\n                    var instruction = expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce\n                            // `-0` which requires non standard math arithmetic and it can prevent VM optimizations.\n                            // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n                            // TODO(misko): PERF This should be refactored to use `~instruction` as that does not\n                            // suffer from `-0` and it is faster/more compact.\n                            currentElementIndex = 0 - instruction;\n                            setSelectedIndex(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex);\n                            var hostCtx = lView[currentDirectiveIndex];\n                            instruction(2 /* Update */, hostCtx);\n                        }\n                        // TODO(misko): PERF Relying on incrementing the `currentDirectiveIndex` here is\n                        // sub-optimal. The implications are that if we have a lot of directives but none of them\n                        // have host bindings we nevertheless need to iterate over the expando instructions to\n                        // update the counter. It would be much better if we could encode the\n                        // `currentDirectiveIndex` into the `expandoInstruction` array so that we only need to\n                        // iterate over those directives which actually have `hostBindings`.\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setSelectedIndex(-1);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode &&\n            assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n        lView[DECLARATION_COMPONENT_VIEW] =\n            tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param tView `TView` associated with `LView`\n     * @param view The `LView` containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(tView, lView, numSlotsToAlloc) {\n        ngDevMode &&\n            assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    lView.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(tView, lView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(tView, lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        catch (error) {\n            // If we didn't manage to get past the first template pass due to\n            // an error, mark the view as corrupted so we can try to recover.\n            if (tView.firstCreatePass) {\n                tView.incompleteFirstPass = true;\n            }\n            throw error;\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(tView, lView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var flags = lView[FLAGS];\n        if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n            return;\n        enterView(lView, lView[T_HOST]);\n        var checkNoChangesMode = getCheckNoChangesMode();\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(tView, lView, templateFn, 2 /* Update */, context);\n            }\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoCheck)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            // First mark transplanted views that are declared in this lView as needing a refresh at their\n            // insertion points. This is needed to avoid the situation where the template is defined in this\n            // `LView` but its declaration appears after the insertion component.\n            markTransplantedViewsForRefresh(lView);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindingsByExecutingExpandoInstructions(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n            if (tView.firstUpdatePass === true) {\n                // We need to make sure that we only flip the flag on successful `refreshView` only\n                // Don't do this in `finally` block.\n                // If we did this in `finally` block then an exception could block the execution of styling\n                // instructions which in turn would be unable to insert themselves into the styling linked\n                // list. The result of this would be that if the exception would not be throw on subsequent CD\n                // the styling would be unable to process it data and reflect to the DOM.\n                tView.firstUpdatePass = false;\n            }\n            // Do not reset the dirty state when running in check no changes mode. We don't want components\n            // to behave differently depending on whether check no changes is enabled or not. For example:\n            // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to\n            // refresh a `NgClass` binding should work. If we would reset the dirty state in the check\n            // no changes cycle, the component would be not be dirty for the next update pass. This would\n            // be different in production mode where the component dirty state is not reset.\n            if (!checkNoChangesMode) {\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            }\n            if (lView[FLAGS] & 1024 /* RefreshTransplantedView */) {\n                lView[FLAGS] &= ~1024 /* RefreshTransplantedView */;\n                updateTransplantedViewCount(lView[PARENT], -1);\n            }\n        }\n        finally {\n            leaveView();\n        }\n    }\n    function renderComponentOrTemplate(tView, lView, templateFn, context) {\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(lView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                renderView(tView, lView, context);\n            }\n            refreshView(tView, lView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(tView, lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setSelectedIndex(-1);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(tView, lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        var tView = def.tView;\n        // Create a TView if there isn't one, or recreate it if the first create pass didn't\n        // complete successfuly since we can't know for sure whether it's in a usable shape.\n        if (tView === null || tView.incompleteFirstPass) {\n            return def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts);\n        }\n        return tView;\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: DestroyHookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts, // consts: TConstants|null\n            false // incompleteFirstPass: boolean\n            ) :\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n                incompleteFirstPass: false\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(renderer, elementOrSelector, encapsulation) {\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(tView, lView, context, cleanupFn) {\n        var lCleanup = getLCleanup(lView);\n        lCleanup.push(context);\n        if (tView.firstCreatePass) {\n            getTViewCleanup(tView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(tView, lView, cleanupFn) {\n        getLCleanup(lView).push(cleanupFn);\n        if (tView.firstCreatePass) {\n            getTViewCleanup(tView).push(lView[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeDebug(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // directiveStylingLast: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // mergedAttrs\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: string|null\n        undefined, // residualStyles: string|null\n        null, // classes: string|null\n        undefined, // residualClasses: string|null\n        0, // classBindings: TStylingRange;\n        0) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                directiveStylingLast: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                mergedAttrs: null,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: null,\n                outputs: null,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                residualStyles: undefined,\n                classes: null,\n                residualClasses: undefined,\n                classBindings: 0,\n                styleBindings: 0,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            // Do not use unbound attributes as inputs to structural directives, since structural\n            // directive inputs can only be set using microsyntax (e.g. `<div *dir=\"exp\">`).\n            // TODO(FW-1930): microsyntax expressions may also contain unbound/static attributes, which\n            // should be set for inline templates.\n            var initialInputs = (tNodeAttrs !== null && !isInlineTemplate(tNode)) ?\n                generateInitialInputs(directiveInputs, tNodeAttrs) :\n                null;\n            inputsFromAttrs.push(initialInputs);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, nativeOnly) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByTNode(tNode, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(tView, lView, dataValue, propName, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, tNode.index);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(tView, lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    logUnknownPropertyError(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(tView, lView, tNode.tagName)) {\n                logUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+1]\n             */\n            for (var i = 0; i < dataValue.length; i += 2) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n            }\n        }\n    }\n    function validateProperty(tView, lView, element, propName, tNode) {\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (tView.schemas === null)\n            return true;\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        if (matchingSchemas(tView, lView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName)) {\n            return true;\n        }\n        // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n        // need to account for both here, while being careful for `typeof null` also returning 'object'.\n        return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n    }\n    function matchingSchemas(tView, lView, tagName) {\n        var schemas = tView.schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs an error that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function logUnknownPropertyError(propName, tNode) {\n        console.error(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        var hasDirectives = false;\n        if (getBindingsEnabled()) {\n            var directiveDefs = findDirectiveDefMatches(tView, lView, tNode);\n            var exportsMap = localRefs === null ? null : { '': -1 };\n            if (directiveDefs !== null) {\n                var totalDirectiveHostVars = 0;\n                hasDirectives = true;\n                initTNodeFlags(tNode, tView.data.length, directiveDefs.length);\n                // When the same token is provided by several directives on the same node, some rules apply in\n                // the viewEngine:\n                // - viewProviders have priority over providers\n                // - the last directive in NgModule.declarations has priority over the previous one\n                // So to match these rules, the order in which providers are added in the arrays is very\n                // important.\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    if (def.providersResolver)\n                        def.providersResolver(def);\n                }\n                generateExpandoInstructionBlock(tView, tNode, directiveDefs.length);\n                var preOrderHooksFound = false;\n                var preOrderCheckHooksFound = false;\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    // Merge the attrs in the order of matches. This assumes that the first directive is the\n                    // component itself, so that the component has the least priority.\n                    tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, def.hostAttrs);\n                    baseResolveDirective(tView, lView, def);\n                    saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                    if (def.contentQueries !== null)\n                        tNode.flags |= 8 /* hasContentQuery */;\n                    if (def.hostBindings !== null || def.hostAttrs !== null || def.hostVars !== 0)\n                        tNode.flags |= 128 /* hasHostBindings */;\n                    // Only push a node index into the preOrderHooks array if this is the first\n                    // pre-order hook found on this node.\n                    if (!preOrderHooksFound && (def.onChanges || def.onInit || def.doCheck)) {\n                        // We will push the actual hook function into this array later during dir instantiation.\n                        // We cannot do it now because we must ensure hooks are registered in the same\n                        // order that directives are created (i.e. injection order).\n                        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                        preOrderHooksFound = true;\n                    }\n                    if (!preOrderCheckHooksFound && (def.onChanges || def.doCheck)) {\n                        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = []))\n                            .push(tNode.index - HEADER_OFFSET);\n                        preOrderCheckHooksFound = true;\n                    }\n                    addHostBindingsToExpandoInstructions(tView, def);\n                    totalDirectiveHostVars += def.hostVars;\n                }\n                initializeInputAndOutputAliases(tView, tNode);\n                growHostVarsSpace(tView, lView, totalDirectiveHostVars);\n            }\n            if (exportsMap)\n                cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        }\n        // Merge the template attrs last so that they have the highest priority.\n        tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);\n        return hasDirectives;\n    }\n    /**\n     * Add `hostBindings` to the `TView.expandoInstructions`.\n     *\n     * @param tView `TView` to which the `hostBindings` should be added.\n     * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.\n     */\n    function addHostBindingsToExpandoInstructions(tView, def) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var expando = tView.expandoInstructions;\n        // TODO(misko): PERF we are adding `hostBindings` even if there is nothing to add! This is\n        // suboptimal for performance. `def.hostBindings` may be null,\n        // but we still need to push null to the array as a placeholder\n        // to ensure the directive counter is incremented (so host\n        // binding functions always line up with the corrective directive).\n        // This is suboptimal for performance. See `currentDirectiveIndex`\n        //  comment in `setHostBindingsByExecutingExpandoInstructions` for more\n        // details.  expando.push(def.hostBindings);\n        expando.push(def.hostBindings);\n        var hostVars = def.hostVars;\n        if (hostVars !== 0) {\n            expando.push(def.hostVars);\n        }\n    }\n    /**\n     * Grow the `LView`, blueprint and `TView.data` to accommodate the `hostBindings`.\n     *\n     * To support locality we don't know ahead of time how many `hostVars` of the containing directives\n     * we need to allocate. For this reason we allow growing these data structures as we discover more\n     * directives to accommodate them.\n     *\n     * @param tView `TView` which needs to be grown.\n     * @param lView `LView` which needs to be grown.\n     * @param count Size by which we need to grow the data structures.\n     */\n    function growHostVarsSpace(tView, lView, count) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');\n        for (var i = 0; i < count; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(lView, tView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var currentDirectiveIndex = getCurrentDirectiveIndex();\n        try {\n            setSelectedIndex(elementIndex);\n            for (var dirIndex = start; dirIndex < end; dirIndex++) {\n                var def = tView.data[dirIndex];\n                var directive = lView[dirIndex];\n                setCurrentDirectiveIndex(dirIndex);\n                if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {\n                    invokeHostBindingsInCreationMode(def, directive);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setSelectedIndex(-1);\n            setCurrentDirectiveIndex(currentDirectiveIndex);\n        }\n    }\n    /**\n     * Invoke the host bindings in creation mode.\n     *\n     * @param def `DirectiveDef` which may contain the `hostBindings` function.\n     * @param directive Instance of directive.\n     */\n    function invokeHostBindingsInCreationMode(def, directive) {\n        if (def.hostBindings !== null) {\n            def.hostBindings(1 /* Create */, directive);\n        }\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n        // requires non standard math arithmetic and it can prevent VM optimizations.\n        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n        var elementIndex = HEADER_OFFSET - tNode.index;\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = []))\n            .push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Matches the current node against all available selectors.\n     * If a component is matched (at most one), it is returned in first position in the array.\n     */\n    function findDirectiveDefMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n     */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : []))\n            .push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (isComponentDef(def))\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initTNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode &&\n            assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByTNode(tNode, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        false, // has transplanted views\n        currentView, // parent\n        null, // next\n        0, // transplanted views to refresh count\n        tNode, // t_host\n        native, // native,\n        null, // view refs\n        null);\n        ngDevMode &&\n            assertEqual(lContainer.length, CONTAINER_HEADER_OFFSET, 'Should allocate correct number of slots for LContainer header.');\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {\n            for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n                var embeddedLView = lContainer[i];\n                var embeddedTView = embeddedLView[TVIEW];\n                ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                if (viewAttachedToChangeDetector(embeddedLView)) {\n                    refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Mark transplanted views as needing to be refreshed at their insertion points.\n     *\n     * @param lView The `LView` that may have transplanted views.\n     */\n    function markTransplantedViewsForRefresh(lView) {\n        for (var lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {\n            if (!lContainer[HAS_TRANSPLANTED_VIEWS])\n                continue;\n            var movedViews = lContainer[MOVED_VIEWS];\n            ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n            for (var i = 0; i < movedViews.length; i++) {\n                var movedLView = movedViews[i];\n                var insertionLContainer = movedLView[PARENT];\n                ngDevMode && assertLContainer(insertionLContainer);\n                // We don't want to increment the counter if the moved LView was already marked for\n                // refresh.\n                if ((movedLView[FLAGS] & 1024 /* RefreshTransplantedView */) === 0) {\n                    updateTransplantedViewCount(insertionLContainer, 1);\n                }\n                // Note, it is possible that the `movedViews` is tracking views that are transplanted *and*\n                // those that aren't (declaration component === insertion component). In the latter case,\n                // it's fine to add the flag, as we will clear it immediately in\n                // `refreshDynamicEmbeddedViews` for the view currently being refreshed.\n                movedLView[FLAGS] |= 1024 /* RefreshTransplantedView */;\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView)) {\n            var tView = componentView[TVIEW];\n            if (componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n                refreshView(tView, componentView, tView.template, componentView[CONTEXT]);\n            }\n            else if (componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n                // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n                refreshContainsDirtyView(componentView);\n            }\n        }\n    }\n    /**\n     * Refreshes all transplanted views marked with `LViewFlags.RefreshTransplantedView` that are\n     * children or descendants of the given lView.\n     *\n     * @param lView The lView which contains descendant transplanted views that need to be refreshed.\n     */\n    function refreshContainsDirtyView(lView) {\n        for (var lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {\n            for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n                var embeddedLView = lContainer[i];\n                if (embeddedLView[FLAGS] & 1024 /* RefreshTransplantedView */) {\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n                else if (embeddedLView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n                    refreshContainsDirtyView(embeddedLView);\n                }\n            }\n        }\n        var tView = lView[TVIEW];\n        // Refresh child component views.\n        var components = tView.components;\n        if (components !== null) {\n            for (var i = 0; i < components.length; i++) {\n                var componentView = getComponentLViewByIndex(components[i], lView);\n                // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n                if (viewAttachedToChangeDetector(componentView) &&\n                    componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n                    refreshContainsDirtyView(componentView);\n                }\n            }\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        var componentTView = componentView[TVIEW];\n        syncViewWithBlueprint(componentTView, componentView);\n        renderView(componentTView, componentView, componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param tView The `TView` that contains the blueprint for syncing\n     * @param lView The view to sync\n     */\n    function syncViewWithBlueprint(tView, lView) {\n        for (var i = lView.length; i < tView.blueprint.length; i++) {\n            lView.push(tView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(tView, lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(tView, lView, context) {\n        var rendererFactory = lView[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            refreshView(tView, lView, tView.template, context);\n        }\n        catch (error) {\n            handleError(lView, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(tView, view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(tView, view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param tNode `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, tNode, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getLCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(tView) {\n        return tView.cleanup || (tView.cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(currentDef, tNode, lView) {\n        // TODO(FW-2043): the `currentDef` is null when host bindings are invoked while creating root\n        // component (see packages/core/src/render3/component.ts). This is not consistent with the process\n        // of creating inner components, when current directive index is available in the state. In order\n        // to avoid relying on current def being `null` (thus special-casing root component creation), the\n        // process of creating root component should be unified with the process of creating inner\n        // components.\n        if (currentDef === null || isComponentDef(currentDef)) {\n            lView = unwrapLView(lView[tNode.index]);\n        }\n        return lView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param tView The current TView\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     *        possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(tView, lView, inputs, publicName, value) {\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            if (def.setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(tView, lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(tView.node, lView);\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(tView, lView, renderer, action, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param tView The `TView' of the `LView` to be detached\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(tView, lView) {\n        applyView(tView, lView, lView[RENDERER], 2 /* Detach */, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView[TVIEW], rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                if (lViewOrLContainer === null)\n                    lViewOrLContainer = rootView;\n                isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param tView The `TView' of the `LView` to insert\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(tView, lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(tView);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n        if (declaredComponentLView !== insertedComponentLView) {\n            // At this point the declaration-component is not same as insertion-component; this means that\n            // this is a transplanted view. Mark the declared lView as having transplanted views so that\n            // those views can participate in CD.\n            declarationContainer[HAS_TRANSPLANTED_VIEWS] = true;\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode &&\n            assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declarationViewIndex = movedViews.indexOf(lView);\n        var insertionLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertionLContainer);\n        // If the view was marked for refresh but then detached before it was checked (where the flag\n        // would be cleared and the counter decremented), we need to decrement the view counter here\n        // instead.\n        if (lView[FLAGS] & 1024 /* RefreshTransplantedView */) {\n            updateTransplantedViewCount(insertionLContainer, -1);\n        }\n        movedViews.splice(declarationViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach[TVIEW], viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView[TVIEW], detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting clean up (e.g. removing listeners, calling onDestroys).\n     *\n     * @param tView The `TView' of the `LView` to be destroyed\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(tView, lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(tView, lView, renderer, 3 /* Destroy */, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param tView `TView` for the `LView` to clean up.\n     * @param lView The LView to clean up\n     */\n    function cleanUpView(tView, lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            lView[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            lView[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(tView, lView);\n            removeListeners(tView, lView);\n            var hostTNode = lView[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ &&\n                isProceduralRenderer(lView[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                lView[RENDERER].destroy();\n            }\n            var declarationContainer = lView[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(lView[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== lView[PARENT]) {\n                    detachMovedView(declarationContainer, lView);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = lView[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(tView);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(tView, lView) {\n        var tCleanup = tView.cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(tView, lView) {\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = lView[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    var toCall = destroyHooks[i + 1];\n                    if (Array.isArray(toCall)) {\n                        for (var j = 0; j < toCall.length; j += 2) {\n                            toCall[j + 1].call(context[toCall[j]]);\n                        }\n                    }\n                    else {\n                        toCall.call(context);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tView, tNode, currentView) {\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null &&\n            (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = tView.data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param tView The `TView' to be appended\n     * @param lView The current LView\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(tView, lView, childEl, childTNode) {\n        var renderParent = getRenderParent(tView, childTNode, lView);\n        if (renderParent != null) {\n            var renderer = lView[RENDERER];\n            var parentTNode = childTNode.parent || lView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, lView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    var rNodeOrLContainer = lView[tNode.index];\n                    if (isLContainer(rNodeOrLContainer)) {\n                        return getBeforeNodeForView(-1, rNodeOrLContainer);\n                    }\n                    else {\n                        return unwrapRNode(rNodeOrLContainer);\n                    }\n                }\n            }\n            else {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param tView The `TView' which needs to be inserted, detached, destroyed\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(tView, lView, renderer, action, renderParent, beforeNode) {\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed\n     * @param lView The `LView` which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(tView, lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tView, tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = lView[DECLARATION_COMPONENT_VIEW];\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(lView[TVIEW], lView, renderer, action, renderParent, anchor);\n        }\n    }\n    /**\n     * Writes class/style to element.\n     *\n     * @param renderer Renderer to use.\n     * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)\n     * @param rNode The Node to write to.\n     * @param prop Property to write to. This would be the class/style name.\n     * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add\n     *        otherwise).\n     */\n    function applyStyling(renderer, isClassBased, rNode, prop, value) {\n        var isProcedural = isProceduralRenderer(renderer);\n        if (isClassBased) {\n            // We actually want JS true/false here because any truthy value should add the class\n            if (!value) {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProcedural) {\n                    renderer.removeClass(rNode, prop);\n                }\n                else {\n                    rNode.classList.remove(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProcedural) {\n                    renderer.addClass(rNode, prop);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.classList, 'HTMLElement expected');\n                    rNode.classList.add(prop);\n                }\n            }\n        }\n        else {\n            // TODO(misko): Can't import RendererStyleFlags2.DashCase as it causes imports to be resolved in\n            // different order which causes failures. Using direct constant as workaround for now.\n            var flags = prop.indexOf('-') == -1 ? undefined : 2 /* RendererStyleFlags2.DashCase */;\n            if (value == null /** || value === undefined */) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProcedural) {\n                    renderer.removeStyle(rNode, prop, flags);\n                }\n                else {\n                    rNode.style.removeProperty(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProcedural) {\n                    renderer.setStyle(rNode, prop, value, flags);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.style, 'HTMLElement expected');\n                    rNode.style.setProperty(prop, value);\n                }\n            }\n        }\n    }\n    /**\n     * Write `cssText` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectStyle(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            renderer.setAttribute(element, 'style', newValue);\n        }\n        else {\n            element.style.cssText = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetStyle++;\n    }\n    /**\n     * Write `className` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectClass(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            if (newValue === '') {\n                // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.\n                renderer.removeAttribute(element, 'class');\n            }\n            else {\n                renderer.setAttribute(element, 'class', newValue);\n            }\n        }\n        else {\n            element.className = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetClassName++;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If `startTNode.parent` exists and has an injector, returns TNode for that injector.\n     * Otherwise, unwraps a parent injector location number to find the view offset from the current\n     * injector, then walks up the declaration view tree until the TNode of the parent injector is\n     * found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        // If there is an injector on the parent TNode, retrieve the TNode for that injector.\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var tNode = startTNode.parent;\n            // If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent\n            // injector.\n            while (tNode.parent != null && injectorIndex == tNode.parent.injectorIndex) {\n                tNode = tNode.parent;\n            }\n            return tNode;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                var lView = this._lView;\n                if (lView[HOST] == null) {\n                    var hostTView = lView[T_HOST];\n                    return collectNativeNodes(lView[TVIEW], lView, hostTView.child, []);\n                }\n                return [];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () {\n                return this._lView[CONTEXT];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView[TVIEW], this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) {\n            storeCleanupFn(this._lView[TVIEW], this._lView, callback);\n        };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () {\n            markViewDirty(this._cdRefInjectingView || this._lView);\n        };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () {\n            this._lView[FLAGS] &= ~128 /* Attached */;\n        };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () {\n            this._lView[FLAGS] |= 128 /* Attached */;\n        };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            detectChangesInternal(this._lView[TVIEW], this._lView, this.context);\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () {\n            checkNoChangesInternal(this._lView[TVIEW], this._lView, this.context);\n        };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView[TVIEW], this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () {\n            detectChangesInRootView(this._view);\n        };\n        RootViewRef.prototype.checkNoChanges = function () {\n            checkNoChangesInRootView(this._view);\n        };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () {\n                return null;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(tView, lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer[TVIEW], lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(tView, lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var slotIdx = tNode.projection;\n                ngDevMode &&\n                    assertDefined(componentHost.projection, 'Components with projection nodes (<ng-content>) must have projection slots defined.');\n                var nodesInSlot = componentHost.projection[slotIdx];\n                if (Array.isArray(nodesInSlot)) {\n                    result.push.apply(result, __spread(nodesInSlot));\n                }\n                else {\n                    var parentView = getLViewParent(componentView);\n                    ngDevMode &&\n                        assertDefined(parentView, 'Component views should always have a parent view (component\\'s host view)');\n                    collectNativeNodes(parentView[TVIEW], parentView, nodesInSlot, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef, _super);\n                function ElementRef() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef, _super);\n                function TemplateRef(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var embeddedLView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    embeddedLView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        embeddedLView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(embeddedTView, embeddedLView, context);\n                    var viewRef = new ViewRef(embeddedLView);\n                    viewRef._tViewNode = embeddedLView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef, _super);\n                function ViewContainerRef(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n                    get: function () {\n                        return new NodeInjector(this._hostTNode, this._hostView);\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n                    get: function () {\n                        return this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef.prototype.insert = function (viewRef, index) {\n                    var lView = viewRef._lView;\n                    var tView = lView[TVIEW];\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, detach it first so we clean up references appropriately.\n                        var prevIdx = this.indexOf(viewRef);\n                        // A view might be attached either to this or a different container. The `prevIdx` for\n                        // those cases will be:\n                        // equal to -1 for views attached to this ViewContainerRef\n                        // >= 0 for views attached to a different ViewContainerRef\n                        if (prevIdx !== -1) {\n                            this.detach(prevIdx);\n                        }\n                        else {\n                            var prevLContainer = lView[PARENT];\n                            ngDevMode &&\n                                assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                            // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                            // LView (nor anywhere else).\n                            var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                            prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                        }\n                    }\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(tView, lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(tView, lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    return this.insert(viewRef, newIndex);\n                };\n                ViewContainerRef.prototype.indexOf = function (viewRef) {\n                    var viewRefsArr = this._lContainer[VIEW_REFS];\n                    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n                };\n                ViewContainerRef.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, \"ViewRef index must be positive, got \" + index);\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode &&\n            assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            // The comment node in question is already part of the DOM structure so we don't need to append\n            // it again.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n                // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n                // this case we can't use TView / TNode data structures to insert container's marker node\n                // (both a parent of a comment node and the comment node itself are not part of any view). In\n                // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n                // node.\n                if (isRootView(hostView)) {\n                    var renderer = hostView[RENDERER];\n                    var hostNative = getNativeByTNode(hostTNode, hostView);\n                    var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                    nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n                }\n                else {\n                    appendChild(hostView[TVIEW], hostView, commentNode, hostTNode);\n                }\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () {\n            return true;\n        };\n        ReflectionCapabilities.prototype.factory = function (t) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return new (t.bind.apply(t, __spread([void 0], args)))();\n            };\n        };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) {\n            return {};\n        };\n        ReflectionCapabilities.prototype.getter = function (name) {\n            return new Function('o', 'return o.' + name + ';');\n        };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) {\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n            return enumIdentifier[name];\n        };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep) && dep.length > 0) {\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                var proto = Object.getPrototypeOf(param);\n                if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n            meta.token = undefined;\n            meta.resolved = R3ResolvedDependencyType.Invalid;\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n            // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n            // which will break inheriting the injectable definition from a grandparent through an\n            // undecorated parent class. We work around it by defining a method which should be used\n            // as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript\n            // seems to have a workaround for static properties. When inheriting from an undecorated\n            // parent is no longer supported in v10, this can safely be removed.\n            if (!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)) {\n                type[NG_PROV_DEF_FALLBACK] = function () { return type[NG_PROV_DEF]; };\n            }\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Injectable\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        var injector = createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name);\n        injector._resolveInjectorDefTypes();\n        return injector;\n    }\n    /**\n     * Creates a new injector without eagerly resolving its injector types. Can be used in places\n     * where resolving the injector types immediately can lead to an infinite loop. The injector types\n     * should be resolved at a later point by calling `_resolveInjectorDefTypes`.\n     */\n    function createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        return new R3Injector(defType, additionalProviders, parent || getNullInjector(), name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () {\n                return this._destroyed;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        /** @internal */\n        R3Injector.prototype._resolveInjectorDefTypes = function () {\n            var _this = this;\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Track the InjectorType and add a provider for it. It's important that this is done after the\n            // def's imports.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            var unwrappedProvider = resolveForwardRef(provider);\n            return getFactoryDef(unwrappedProvider) || injectableDefOrInjectorDefFactory(unwrappedProvider);\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return getFactoryDef(classRef_1) || injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface. Injectors are configured\n     * with [providers](guide/glossary#provider) that associate\n     * dependencies of various types with [injection tokens](guide/glossary#di-token).\n     *\n     * @see [\"DI Providers\"](guide/dependency-injection-providers).\n     * @see `StaticProvider`\n     *\n     * @usageNotes\n     *\n     *  The following example creates a service injector instance.\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     *\n     * ### Usage example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () {\n                return _globalKeyRegistry.numberOfKeys;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () {\n                return this._allKeys.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) {\n            this.reflectionCapabilities = caps;\n        };\n        Reflector.prototype.factory = function (type) {\n            return this.reflectionCapabilities.factory(type);\n        };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) {\n            return this.reflectionCapabilities.getter(name);\n        };\n        Reflector.prototype.setter = function (name) {\n            return this.reflectionCapabilities.setter(name);\n        };\n        Reflector.prototype.method = function (name) {\n            return this.reflectionCapabilities.method(name);\n        };\n        Reflector.prototype.importUri = function (type) {\n            return this.reflectionCapabilities.importUri(type);\n        };\n        Reflector.prototype.resourceUri = function (type) {\n            return this.reflectionCapabilities.resourceUri(type);\n        };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = {};\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () {\n            return this.objs.length;\n        };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () {\n            return this.displayName;\n        };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compute the static styling (class/style) from `TAttributes`.\n     *\n     * This function should be called during `firstCreatePass` only.\n     *\n     * @param tNode The `TNode` into which the styling information should be loaded.\n     * @param attrs `TAttributes` containing the styling information.\n     */\n    function computeStaticStyling(tNode, attrs) {\n        ngDevMode &&\n            assertFirstCreatePass(getTView(), 'Expecting to be called in first template pass only');\n        var styles = tNode.styles;\n        var classes = tNode.classes;\n        var mode = 0;\n        for (var i = 0; i < attrs.length; i++) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                mode = value;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = concatStringsWithSpace(classes, value);\n            }\n            else if (mode == 2 /* Styles */) {\n                var style = value;\n                var styleValue = attrs[++i];\n                styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');\n            }\n        }\n        styles !== null && (tNode.styles = styles);\n        classes !== null && (tNode.classes = classes);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isIterable(obj) {\n        return obj !== null && typeof obj === 'object' && obj[getSymbolIterator()] !== undefined;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     * @deprecated from v10 stop using. (No replacement, deemed unnecessary.)\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) {\n            return new WrappedValue(value);\n        };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) {\n            return WrappedValue.isWrapped(value) ? value.wrapped : value;\n        };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) {\n            return value instanceof WrappedValue;\n        };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /**\n     * Updates binding if changed, then returns whether it was updated.\n     *\n     * This function also checks the `CheckNoChangesMode` and throws if changes are made.\n     * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE\n     * behavior.\n     *\n     * @param lView current `LView`\n     * @param bindingIndex The binding in the `LView` to check\n     * @param value New value to check against `lView[bindingIndex]`\n     * @returns `true` if the bindings has changed. (Throws if binding has changed during\n     *          `CheckNoChangesMode`)\n     */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    var details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n                }\n                // There was a change, but the `devModeEqual` decided that the change is exempt from an error.\n                // For this reason we exit as if no change. The early exit is needed to prevent the changed\n                // value to be written into `LView` (If we would write the new value that we would not see it\n                // as change on next CD.)\n                return false;\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, 'attr.' + name, bindingIndex);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n            renderStringify(v5) + i5 + renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n            renderStringify(v5) + i5 + renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolated, sanitizer, namespace);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([getTView().data, tNode, 'attr.' + attrName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component.\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view[TVIEW], view, component);\n    }\n    /**\n     * Marks the component as dirty (needing change detection). Marking a component dirty will\n     * schedule a change detection on it at some point in the future.\n     *\n     * Marking an already dirty component as dirty won't do anything. Only one outstanding change\n     * detection can be scheduled per component tree.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n        resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        registerPostOrderHooks(tView, tNode);\n        var embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n        var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n        embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n        embeddedTView.node = embeddedTViewNode;\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.firstCreatePass ?\n            templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, false);\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        appendChild(tView, lView, comment, tNode);\n        attachPatchData(comment, lView);\n        addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(tView, lView, index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, false);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Given `<div style=\"...\" my-dir>` and `MyDir` with `@Input('style')` we need to write to\n     * directive input.\n     */\n    function setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased) {\n        var inputs = tNode.inputs;\n        var property = isClassBased ? 'class' : 'style';\n        // We support both 'class' and `className` hence the fallback.\n        setInputsForProperty(tView, lView, inputs[property], property, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        ngDevMode && logUnknownElementError(tView, lView, native, tNode, hasDirectives);\n        if (tNode.mergedAttrs !== null) {\n            computeStaticStyling(tNode, tNode.mergedAttrs);\n        }\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = HEADER_OFFSET + index;\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var renderer = lView[RENDERER];\n        var native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n        var tNode = tView.firstCreatePass ?\n            elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        var mergedAttrs = tNode.mergedAttrs;\n        if (mergedAttrs !== null) {\n            setUpAttributes(renderer, native, mergedAttrs);\n        }\n        var classes = tNode.classes;\n        if (classes !== null) {\n            writeDirectClass(renderer, native, classes);\n        }\n        var styles = tNode.styles;\n        if (styles !== null) {\n            writeDirectStyle(renderer, native, styles);\n        }\n        appendChild(tView, lView, native, tNode);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex !== null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        decreaseElementDepthCount();\n        var tView = getTView();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (tNode.classes !== null && hasClassInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.classes, true);\n        }\n        if (tNode.styles !== null && hasStyleInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.styles, false);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    function logUnknownElementError(tView, lView, element, tNode, hasDirectives) {\n        var schemas = tView.schemas;\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (schemas === null)\n            return;\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = \n            // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n            // because while most browsers return 'function', IE returns 'object'.\n            (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n                element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(tView, lView, tagName)) {\n                var message = \"'\" + tagName + \"' is not a known element:\\n\";\n                message += \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    message += \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    message +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                console.error(message);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        if (attrs !== null) {\n            computeStaticStyling(tNode, attrs);\n        }\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        resolveDirectives(tView, lView, tNode, localRefs);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        var tNode = tView.firstCreatePass ?\n            elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n        appendChild(tView, lView, native, tNode);\n        attachPatchData(native, lView);\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tView = getTView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(tView, lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component or directive.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = getTView();\n        var currentDef = getCurrentDirectiveDef(tView.data);\n        var renderer = loadComponentRenderer(currentDef, tNode, lView);\n        listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(tView, lView, eventName, tNodeIdx) {\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n        // native listener or a directive output on this element. As such we we know that we will have to\n        // register a listener and store its cleanup function on LView.\n        var lCleanup = getLCleanup(lView);\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(tView, lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                for (var i = 0; i < propsLength; i += 2) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 1];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tView = getTView();\n        var tProjectionNode = getOrCreateTNode(tView, lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(tView, lView, tProjectionNode);\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([tView.data, tNode, propName, getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ$1 = {};\n    var EMPTY_ARRAY$3 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ$1);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$3);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: The word `styling` is used interchangeably as style or class styling.\n     *\n     * This file contains code to link styling instructions together so that they can be replayed in\n     * priority order. The file exists because Ivy styling instruction execution order does not match\n     * that of the priority order. The purpose of this code is to create a linked list so that the\n     * instructions can be traversed in priority order when computing the styles.\n     *\n     * Assume we are dealing with the following code:\n     * ```\n     * @Component({\n     *   template: `\n     *     <my-cmp [style]=\" {color: '#001'} \"\n     *             [style.color]=\" #002 \"\n     *             dir-style-color-1\n     *             dir-style-color-2> `\n     * })\n     * class ExampleComponent {\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#001'});\n     *     ɵɵstyleProp('color', '#002');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-1]',\n     * })\n     * class Style1Directive {\n     *   @HostBinding('style') style = {color: '#005'};\n     *   @HostBinding('style.color') color = '#006';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#005'});\n     *     ɵɵstyleProp('color', '#006');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-2]',\n     * })\n     * class Style2Directive {\n     *   @HostBinding('style') style = {color: '#007'};\n     *   @HostBinding('style.color') color = '#008';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#007'});\n     *     ɵɵstyleProp('color', '#008');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `my-cmp',\n     * })\n     * class MyComponent {\n     *   @HostBinding('style') style = {color: '#003'};\n     *   @HostBinding('style.color') color = '#004';\n     *\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#003'});\n     *     ɵɵstyleProp('color', '#004');\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * The Order of instruction execution is:\n     *\n     * NOTE: the comment binding location is for illustrative purposes only.\n     *\n     * ```\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * ```\n     *\n     * The correct priority order of concatenation is:\n     *\n     * ```\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * ```\n     *\n     * What color should be rendered?\n     *\n     * Once the items are correctly sorted in the list, the answer is simply the last item in the\n     * concatenation list which is `#002`.\n     *\n     * To do so we keep a linked list of all of the bindings which pertain to this element.\n     * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows\n     * us to traverse them in the order of priority.\n     *\n     * |Idx|`TView.data`|`LView`          | Notes\n     * |---|------------|-----------------|--------------\n     * |...|            |                 |\n     * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`\n     * |11 |`30 | 12`   | ...             |\n     * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`\n     * |13 |`10 | 0`    | ...             |\n     * |...|            |                 |\n     * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`\n     * |21 |`0 | 22`    | ...             |\n     * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`\n     * |23 |`20 | 24`   | ...             |\n     * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`\n     * |25 |`22 | 26`   | ...             |\n     * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`\n     * |27 |`24 | 28`   | ...             |\n     * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`\n     * |29 |`26 | 30`   | ...             |\n     * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`\n     * |31 |`28 | 10`   | ...             |\n     *\n     * The above data structure allows us to re-concatenate the styling no matter which data binding\n     * changes.\n     *\n     * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next\n     * duplicate bit. The duplicate bit if true says there either is a binding with the same name or\n     * there is a map (which may contain the name). This information is useful in knowing if other\n     * styles with higher priority need to be searched for overwrites.\n     *\n     * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in\n     * `tnode_linked_list_spec.ts` for working example.\n     */\n    var __unused_const_as_closure_does_not_like_standalone_comment_blocks__;\n    /**\n     * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked\n     * list of styles and compute the duplicate flag.\n     *\n     * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.\n     *\n     * The function works by keeping track of `tStylingRange` which contains two pointers pointing to\n     * the head/tail of the template portion of the styles.\n     *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`\n     *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`\n     *\n     * @param tData The `TData` to insert into.\n     * @param tNode `TNode` associated with the styling element.\n     * @param tStylingKey See `TStylingKey`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of\n     *               template.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function insertTStylingBinding(tData, tNode, tStylingKeyWithStatic, index, isHostBinding, isClassBinding) {\n        ngDevMode && assertFirstUpdatePass(getTView());\n        var tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;\n        var tmplHead = getTStylingRangePrev(tBindings);\n        var tmplTail = getTStylingRangeNext(tBindings);\n        tData[index] = tStylingKeyWithStatic;\n        var isKeyDuplicateOfStatic = false;\n        var tStylingKey;\n        if (Array.isArray(tStylingKeyWithStatic)) {\n            // We are case when the `TStylingKey` contains static fields as well.\n            var staticKeyValueArray = tStylingKeyWithStatic;\n            tStylingKey = staticKeyValueArray[1]; // unwrap.\n            // We need to check if our key is present in the static so that we can mark it as duplicate.\n            if (tStylingKey === null ||\n                keyValueArrayIndexOf(staticKeyValueArray, tStylingKey) > 0) {\n                // tStylingKey is present in the statics, need to mark it as duplicate.\n                isKeyDuplicateOfStatic = true;\n            }\n        }\n        else {\n            tStylingKey = tStylingKeyWithStatic;\n        }\n        if (isHostBinding) {\n            // We are inserting host bindings\n            // If we don't have template bindings then `tail` is 0.\n            var hasTemplateBindings = tmplTail !== 0;\n            // This is important to know because that means that the `head` can't point to the first\n            // template bindings (there are none.) Instead the head points to the tail of the template.\n            if (hasTemplateBindings) {\n                // template head's \"prev\" will point to last host binding or to 0 if no host bindings yet\n                var previousNode = getTStylingRangePrev(tData[tmplHead + 1]);\n                tData[index + 1] = toTStylingRange(previousNode, tmplHead);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (previousNode !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[previousNode + 1] =\n                        setTStylingRangeNext(tData[previousNode + 1], index);\n                }\n                // The \"previous\" of the template binding head should point to this host binding\n                tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1], index);\n            }\n            else {\n                tData[index + 1] = toTStylingRange(tmplHead, 0);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (tmplHead !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1], index);\n                }\n                // if we don't have template, the head points to template-tail, and needs to be advanced.\n                tmplHead = index;\n            }\n        }\n        else {\n            // We are inserting in template section.\n            // We need to set this binding's \"previous\" to the current template tail\n            tData[index + 1] = toTStylingRange(tmplTail, 0);\n            ngDevMode &&\n                assertEqual(tmplHead !== 0 && tmplTail === 0, false, 'Adding template bindings after hostBindings is not allowed.');\n            if (tmplHead === 0) {\n                tmplHead = index;\n            }\n            else {\n                // We need to update the previous value \"next\" to point to this binding\n                tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1], index);\n            }\n            tmplTail = index;\n        }\n        // Now we need to update / compute the duplicates.\n        // Starting with our location search towards head (least priority)\n        if (isKeyDuplicateOfStatic) {\n            tData[index + 1] = setTStylingRangePrevDuplicate(tData[index + 1]);\n        }\n        markDuplicates(tData, tStylingKey, index, true, isClassBinding);\n        markDuplicates(tData, tStylingKey, index, false, isClassBinding);\n        markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding);\n        tBindings = toTStylingRange(tmplHead, tmplTail);\n        if (isClassBinding) {\n            tNode.classBindings = tBindings;\n        }\n        else {\n            tNode.styleBindings = tBindings;\n        }\n    }\n    /**\n     * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.\n     *\n     * @param tNode `TNode` where the residual is stored.\n     * @param tStylingKey `TStylingKey` to store.\n     * @param tData `TData` associated with the current `LView`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding) {\n        var residual = isClassBinding ? tNode.residualClasses : tNode.residualStyles;\n        if (residual != null /* or undefined */ && typeof tStylingKey == 'string' &&\n            keyValueArrayIndexOf(residual, tStylingKey) >= 0) {\n            // We have duplicate in the residual so mark ourselves as duplicate.\n            tData[index + 1] = setTStylingRangeNextDuplicate(tData[index + 1]);\n        }\n    }\n    /**\n     * Marks `TStyleValue`s as duplicates if another style binding in the list has the same\n     * `TStyleValue`.\n     *\n     * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once\n     * with it set to `false` to search both the previous as well as next items in the list.\n     *\n     * No duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.px] <<- index\n     *   [style.height.px]\n     * ```\n     *\n     * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no\n     * duplicates because `width` is not found in any other part of the linked list.\n     *\n     * Duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.em]\n     *   [style.width.px] <<- index\n     * ```\n     * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`\n     * because `width` is found in the chain.\n     *\n     * Map case 1\n     * ```\n     *   [style.width.px]\n     *   [style.color]\n     *   [style]  <<- index\n     * ```\n     * In the above case adding `[style]` will produce a duplicate with any other bindings because\n     * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.\n     *\n     * Map case 2\n     * ```\n     *   [style]\n     *   [style.width.px]\n     *   [style.color]  <<- index\n     * ```\n     * In the above case adding `[style.color]` will produce a duplicate because there is already a\n     * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or\n     * `width`.\n     *\n     * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.\n     * NOTE: We use `style` as example, but same logic is applied to `class`es as well.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in\n     *        the linked list.\n     * @param index Starting location in the linked list to search from\n     * @param isPrevDir Direction.\n     *        - `true` for previous (lower priority);\n     *        - `false` for next (higher priority).\n     */\n    function markDuplicates(tData, tStylingKey, index, isPrevDir, isClassBinding) {\n        var tStylingAtIndex = tData[index + 1];\n        var isMap = tStylingKey === null;\n        var cursor = isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);\n        var foundDuplicate = false;\n        // We keep iterating as long as we have a cursor\n        // AND either:\n        // - we found what we are looking for, OR\n        // - we are a map in which case we have to continue searching even after we find what we were\n        //   looking for since we are a wild card and everything needs to be flipped to duplicate.\n        while (cursor !== 0 && (foundDuplicate === false || isMap)) {\n            ngDevMode && assertDataInRange(tData, cursor);\n            var tStylingValueAtCursor = tData[cursor];\n            var tStyleRangeAtCursor = tData[cursor + 1];\n            if (isStylingMatch(tStylingValueAtCursor, tStylingKey)) {\n                foundDuplicate = true;\n                tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) :\n                    setTStylingRangePrevDuplicate(tStyleRangeAtCursor);\n            }\n            cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) :\n                getTStylingRangeNext(tStyleRangeAtCursor);\n        }\n        if (foundDuplicate) {\n            // if we found a duplicate, than mark ourselves.\n            tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) :\n                setTStylingRangeNextDuplicate(tStylingAtIndex);\n        }\n    }\n    /**\n     * Determines if two `TStylingKey`s are a match.\n     *\n     * When computing weather a binding contains a duplicate, we need to compare if the instruction\n     * `TStylingKey` has a match.\n     *\n     * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:\n     * - `color`\n     *    - `color`    // Match another color\n     *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction\n     *    - `['', 'color', 'other', true]` // wrapped `color` so match\n     *    - `['', null, 'other', true]`       // wrapped `null` so match\n     *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`\n     * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction\n     *\n     * @param tStylingKeyCursor\n     * @param tStylingKey\n     */\n    function isStylingMatch(tStylingKeyCursor, tStylingKey) {\n        ngDevMode &&\n            assertNotEqual(Array.isArray(tStylingKey), true, 'Expected that \\'tStylingKey\\' has been unwrapped');\n        if (tStylingKeyCursor === null || // If the cursor is `null` it means that we have map at that\n            // location so we must assume that we have a match.\n            tStylingKey == null || // If `tStylingKey` is `null` then it is a map therefor assume that it\n            // contains a match.\n            (Array.isArray(tStylingKeyCursor) ? tStylingKeyCursor[1] : tStylingKeyCursor) ===\n                tStylingKey // If the keys match explicitly than we are a match.\n        ) {\n            return true;\n        }\n        else if (Array.isArray(tStylingKeyCursor) && typeof tStylingKey === 'string') {\n            // if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has\n            // statics and we need to check those as well.\n            return keyValueArrayIndexOf(tStylingKeyCursor, tStylingKey) >=\n                0; // see if we are matching the key\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Global state of the parser. (This makes parser non-reentrant, but that is not an issue)\n    var parserState = {\n        textEnd: 0,\n        key: 0,\n        keyEnd: 0,\n        value: 0,\n        valueEnd: 0,\n    };\n    /**\n     * Retrieves the last parsed `key` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedKey(text) {\n        return text.substring(parserState.key, parserState.keyEnd);\n    }\n    /**\n     * Retrieves the last parsed `value` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedValue(text) {\n        return text.substring(parserState.value, parserState.valueEnd);\n    }\n    /**\n     * Initializes `className` string for parsing and parses the first token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     * @param text `className` to parse\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassName(text) {\n        resetParserState(text);\n        return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses next `className` token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     *\n     * @param text `className` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassNameNext(text, index) {\n        var end = parserState.textEnd;\n        if (end === index) {\n            return -1;\n        }\n        index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);\n        return consumeWhitespace(text, index, end);\n    }\n    /**\n     * Initializes `cssText` string for parsing and parses the first key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     * ```\n     * @param text `cssText` to parse\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyle(text) {\n        resetParserState(text);\n        return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses the next `cssText` key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     *\n     * @param text `cssText` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyleNext(text, startIndex) {\n        var end = parserState.textEnd;\n        var index = parserState.key = consumeWhitespace(text, startIndex, end);\n        if (end === index) {\n            // we reached an end so just quit\n            return -1;\n        }\n        index = parserState.keyEnd = consumeStyleKey(text, index, end);\n        index = consumeSeparator(text, index, end, 58 /* COLON */);\n        index = parserState.value = consumeWhitespace(text, index, end);\n        index = parserState.valueEnd = consumeStyleValue(text, index, end);\n        return consumeSeparator(text, index, end, 59 /* SEMI_COLON */);\n    }\n    /**\n     * Reset the global state of the styling parser.\n     * @param text The styling text to parse.\n     */\n    function resetParserState(text) {\n        parserState.key = 0;\n        parserState.keyEnd = 0;\n        parserState.value = 0;\n        parserState.valueEnd = 0;\n        parserState.textEnd = text.length;\n    }\n    /**\n     * Returns index of next non-whitespace character.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at\n     *          that location.)\n     */\n    function consumeWhitespace(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) <= 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Returns index of last char in class token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last char in class token.\n     */\n    function consumeClassToken(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) > 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all of the characters belonging to style key and token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style key character.\n     */\n    function consumeStyleKey(text, startIndex, endIndex) {\n        var ch;\n        while (startIndex < endIndex &&\n            ((ch = text.charCodeAt(startIndex)) === 45 /* DASH */ || ch === 95 /* UNDERSCORE */ ||\n                ((ch & -33 /* UPPER_CASE */) >= 65 /* A */ && (ch & -33 /* UPPER_CASE */) <= 90 /* Z */))) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all whitespace and the separator `:` after the style key.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after separator and surrounding whitespace.\n     */\n    function consumeSeparator(text, startIndex, endIndex, separator) {\n        startIndex = consumeWhitespace(text, startIndex, endIndex);\n        if (startIndex < endIndex) {\n            if (ngDevMode && text.charCodeAt(startIndex) !== separator) {\n                malformedStyleError(text, String.fromCharCode(separator), startIndex);\n            }\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes style value honoring `url()` and `\"\"` text.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style value character.\n     */\n    function consumeStyleValue(text, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var ch2 = -1; // 2nd previous character\n        var ch3 = -1; // 3rd previous character\n        var i = startIndex;\n        var lastChIndex = i;\n        while (i < endIndex) {\n            var ch = text.charCodeAt(i++);\n            if (ch === 59 /* SEMI_COLON */) {\n                return lastChIndex;\n            }\n            else if (ch === 34 /* DOUBLE_QUOTE */ || ch === 39 /* SINGLE_QUOTE */) {\n                lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);\n            }\n            else if (startIndex ===\n                i - 4 && // We have seen only 4 characters so far \"URL(\" (Ignore \"foo_URL()\")\n                ch3 === 85 /* U */ &&\n                ch2 === 82 /* R */ && ch1 === 76 /* L */ && ch === 40 /* OPEN_PAREN */) {\n                lastChIndex = i = consumeQuotedText(text, 41 /* CLOSE_PAREN */, i, endIndex);\n            }\n            else if (ch > 32 /* SPACE */) {\n                // if we have a non-whitespace character then capture its location\n                lastChIndex = i;\n            }\n            ch3 = ch2;\n            ch2 = ch1;\n            ch1 = ch & -33 /* UPPER_CASE */;\n        }\n        return lastChIndex;\n    }\n    /**\n     * Consumes all of the quoted characters.\n     *\n     * @param text Text to scan\n     * @param quoteCharCode CharCode of either `\"` or `'` quote or `)` for `url(...)`.\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after quoted characters.\n     */\n    function consumeQuotedText(text, quoteCharCode, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var index = startIndex;\n        while (index < endIndex) {\n            var ch = text.charCodeAt(index++);\n            if (ch == quoteCharCode && ch1 !== 92 /* BACK_SLASH */) {\n                return index;\n            }\n            if (ch == 92 /* BACK_SLASH */ && ch1 === 92 /* BACK_SLASH */) {\n                // two back slashes cancel each other out. For example `\"\\\\\"` should properly end the\n                // quotation. (It should not assume that the last `\"` is escaped.)\n                ch1 = 0;\n            }\n            else {\n                ch1 = ch;\n            }\n        }\n        throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) :\n            new Error();\n    }\n    function malformedStyleError(text, expecting, index) {\n        ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');\n        throw throwError(\"Malformed style at location \" + index + \" in string '\" + text.substring(0, index) + '[>>' +\n            text.substring(index, index + 1) + '<<]' + text.substr(index + 1) +\n            (\"'. Expecting '\" + expecting + \"'.\"));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        checkStylingProperty(prop, value, suffix, false);\n        return ɵɵstyleProp;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        checkStylingProperty(className, value, null, true);\n        return ɵɵclassProp;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        checkStylingMap(styleKeyValueArraySet, styleStringParser, styles, false);\n    }\n    /**\n     * Parse text as style and add values to KeyValueArray.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only referenced from `ɵɵstyleMap`.\n     *\n     * @param keyValueArray KeyValueArray to add parsed values to.\n     * @param text text to parse.\n     */\n    function styleStringParser(keyValueArray, text) {\n        for (var i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {\n            styleKeyValueArraySet(keyValueArray, getLastParsedKey(text), getLastParsedValue(text));\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        checkStylingMap(keyValueArraySet, classStringParser, classes, true);\n    }\n    /**\n     * Parse text as class and add values to KeyValueArray.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only referenced from `ɵɵclassMap`.\n     *\n     * @param keyValueArray KeyValueArray to add parsed values to.\n     * @param text text to parse.\n     */\n    function classStringParser(keyValueArray, text) {\n        for (var i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n            keyValueArraySet(keyValueArray, getLastParsedKey(text), true);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.\n     *\n     * @param prop property name.\n     * @param value binding value.\n     * @param suffix suffix for the property (e.g. `em` or `px`)\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingProperty(prop, value, suffix, isClassBased) {\n        var lView = getLView();\n        var tView = getTView();\n        // Styling instructions use 2 slots per binding.\n        // 1. one for the value / TStylingKey\n        // 2. one for the intermittent-value / TStylingRange\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingFirstUpdatePass(tView, prop, bindingIndex, isClassBased);\n        }\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            updateStyling(tView, tNode, lView, lView[RENDERER], prop, lView[bindingIndex + 1] = normalizeSuffix(value, suffix), isClassBased, bindingIndex);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.\n     *\n     * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n     *        function so that `style` can be processed. This is done for tree shaking purposes.\n     * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`\n     *        have different parsers.)\n     * @param value bound value from application\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingMap(keyValueArraySet, stringParser, value, isClassBased) {\n        var tView = getTView();\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingFirstUpdatePass(tView, null, bindingIndex, isClassBased);\n        }\n        var lView = getLView();\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {\n                if (ngDevMode) {\n                    // verify that if we are shadowing then `TData` is appropriately marked so that we skip\n                    // processing this binding in styling resolution.\n                    var tStylingKey = tView.data[bindingIndex];\n                    assertEqual(Array.isArray(tStylingKey) ? tStylingKey[1] : tStylingKey, false, 'Styling linked list shadow input should be marked as \\'false\\'');\n                }\n                // VE does not concatenate the static portion like we are doing here.\n                // Instead VE just ignores the static completely if dynamic binding is present.\n                // Because of locality we have already set the static portion because we don't know if there\n                // is a dynamic portion until later. If we would ignore the static portion it would look like\n                // the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong\n                // thing as it would think that the static portion was removed. For this reason we\n                // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.\n                var staticPrefix = isClassBased ? tNode.classes : tNode.styles;\n                ngDevMode && isClassBased === false && staticPrefix !== null &&\n                    assertEqual(staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \\';\\'');\n                if (staticPrefix !== null) {\n                    // We want to make sure that falsy values of `value` become empty strings.\n                    value = concatStringsWithSpace(staticPrefix, value ? value : '');\n                }\n                // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.\n                // This takes over the `[style]` binding. (Same for `[class]`)\n                setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased);\n            }\n            else {\n                updateStylingMap(tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1], lView[bindingIndex + 1] = toStylingKeyValueArray(keyValueArraySet, stringParser, value), isClassBased, bindingIndex);\n            }\n        }\n    }\n    /**\n     * Determines when the binding is in `hostBindings` section\n     *\n     * @param tView Current `TView`\n     * @param bindingIndex index of binding which we would like if it is in `hostBindings`\n     */\n    function isInHostBindings(tView, bindingIndex) {\n        // All host bindings are placed after the expando section.\n        return bindingIndex >= tView.expandoStartIndex;\n    }\n    /**\n     * Collects the necessary information to insert the binding into a linked list of style bindings\n     * using `insertTStylingBinding`.\n     *\n     * @param tView `TView` where the binding linked list will be stored.\n     * @param tStylingKey Property/key of the binding.\n     * @param bindingIndex Index of binding associated with the `prop`\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function stylingFirstUpdatePass(tView, tStylingKey, bindingIndex, isClassBased) {\n        ngDevMode && assertFirstUpdatePass(tView);\n        var tData = tView.data;\n        if (tData[bindingIndex + 1] === null) {\n            // The above check is necessary because we don't clear first update pass until first successful\n            // (no exception) template execution. This prevents the styling instruction from double adding\n            // itself to the list.\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tData[getSelectedIndex() + HEADER_OFFSET];\n            var isHostBindings = isInHostBindings(tView, bindingIndex);\n            if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {\n                // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.\n                // If there is a directive which uses `@Input('style')` or `@Input('class')` than\n                // we need to neutralize this binding since that directive is shadowing it.\n                // We turn this into a noop by setting the key to `false`\n                tStylingKey = false;\n            }\n            tStylingKey = wrapInStaticStylingKey(tData, tNode, tStylingKey, isClassBased);\n            insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);\n        }\n    }\n    /**\n     * Adds static styling information to the binding if applicable.\n     *\n     * The linked list of styles not only stores the list and keys, but also stores static styling\n     * information on some of the keys. This function determines if the key should contain the styling\n     * information and computes it.\n     *\n     * See `TStylingStatic` for more details.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function wrapInStaticStylingKey(tData, tNode, stylingKey, isClassBased) {\n        var hostDirectiveDef = getCurrentDirectiveDef(tData);\n        var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n        if (hostDirectiveDef === null) {\n            // We are in template node.\n            // If template node already had styling instruction then it has already collected the static\n            // styling and there is no need to collect them again. We know that we are the first styling\n            // instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).\n            var isFirstStylingInstructionInTemplate = (isClassBased ? tNode.classBindings : tNode.styleBindings) === 0;\n            if (isFirstStylingInstructionInTemplate) {\n                // It would be nice to be able to get the statics from `mergeAttrs`, however, at this point\n                // they are already merged and it would not be possible to figure which property belongs where\n                // in the priority.\n                stylingKey = collectStylingFromDirectives(null, tData, tNode, stylingKey, isClassBased);\n                stylingKey = collectStylingFromTAttrs(stylingKey, tNode.attrs, isClassBased);\n                // We know that if we have styling binding in template we can't have residual.\n                residual = null;\n            }\n        }\n        else {\n            // We are in host binding node and there was no binding instruction in template node.\n            // This means that we need to compute the residual.\n            var directiveStylingLast = tNode.directiveStylingLast;\n            var isFirstStylingInstructionInHostBinding = directiveStylingLast === -1 || tData[directiveStylingLast] !== hostDirectiveDef;\n            if (isFirstStylingInstructionInHostBinding) {\n                stylingKey =\n                    collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased);\n                if (residual === null) {\n                    // - If `null` than either:\n                    //    - Template styling instruction already ran and it has consumed the static\n                    //      styling into its `TStylingKey` and so there is no need to update residual. Instead\n                    //      we need to update the `TStylingKey` associated with the first template node\n                    //      instruction. OR\n                    //    - Some other styling instruction ran and determined that there are no residuals\n                    var templateStylingKey = getTemplateHeadTStylingKey(tData, tNode, isClassBased);\n                    if (templateStylingKey !== undefined && Array.isArray(templateStylingKey)) {\n                        // Only recompute if `templateStylingKey` had static values. (If no static value found\n                        // then there is nothing to do since this operation can only produce less static keys, not\n                        // more.)\n                        templateStylingKey = collectStylingFromDirectives(null, tData, tNode, templateStylingKey[1] /* unwrap previous statics */, isClassBased);\n                        templateStylingKey =\n                            collectStylingFromTAttrs(templateStylingKey, tNode.attrs, isClassBased);\n                        setTemplateHeadTStylingKey(tData, tNode, isClassBased, templateStylingKey);\n                    }\n                }\n                else {\n                    // We only need to recompute residual if it is not `null`.\n                    // - If existing residual (implies there was no template styling). This means that some of\n                    //   the statics may have moved from the residual to the `stylingKey` and so we have to\n                    //   recompute.\n                    // - If `undefined` this is the first time we are running.\n                    residual = collectResidual(tData, tNode, isClassBased);\n                }\n            }\n        }\n        if (residual !== undefined) {\n            isClassBased ? (tNode.residualClasses = residual) : (tNode.residualStyles = residual);\n        }\n        return stylingKey;\n    }\n    /**\n     * Retrieve the `TStylingKey` for the template styling instruction.\n     *\n     * This is needed since `hostBinding` styling instructions are inserted after the template\n     * instruction. While the template instruction needs to update the residual in `TNode` the\n     * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because\n     * the template instruction is downstream from the `hostBindings` instructions.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @return `TStylingKey` if found or `undefined` if not found.\n     */\n    function getTemplateHeadTStylingKey(tData, tNode, isClassBased) {\n        var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        if (getTStylingRangeNext(bindings) === 0) {\n            // There does not seem to be a styling instruction in the `template`.\n            return undefined;\n        }\n        return tData[getTStylingRangePrev(bindings)];\n    }\n    /**\n     * Update the `TStylingKey` of the first template instruction in `TNode`.\n     *\n     * Logically `hostBindings` styling instructions are of lower priority than that of the template.\n     * However, they execute after the template styling instructions. This means that they get inserted\n     * in front of the template styling instructions.\n     *\n     * If we have a template styling instruction and a new `hostBindings` styling instruction is\n     * executed it means that it may need to steal static fields from the template instruction. This\n     * method allows us to update the first template instruction `TStylingKey` with a new value.\n     *\n     * Assume:\n     * ```\n     * <div my-dir style=\"color: red\" [style.color]=\"tmplExp\"></div>\n     *\n     * @Directive({\n     *   host: {\n     *     'style': 'width: 100px',\n     *     '[style.color]': 'dirExp',\n     *   }\n     * })\n     * class MyDir {}\n     * ```\n     *\n     * when `[style.color]=\"tmplExp\"` executes it creates this data structure.\n     * ```\n     *  ['', 'color', 'color', 'red', 'width', '100px'],\n     * ```\n     *\n     * The reason for this is that the template instruction does not know if there are styling\n     * instructions and must assume that there are none and must collect all of the static styling.\n     * (both\n     * `color' and 'width`)\n     *\n     * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.\n     * ```\n     *  ['', 'color', 'width', '100px'],  // newly inserted\n     *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong\n     * ```\n     *\n     * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to\n     * update it like so:\n     * ```\n     *  ['', 'color', 'width', '100px'],\n     *  ['', 'color', 'color', 'red'],    // UPDATE\n     * ```\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param tStylingKey New `TStylingKey` which is replacing the old one.\n     */\n    function setTemplateHeadTStylingKey(tData, tNode, isClassBased, tStylingKey) {\n        var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        ngDevMode &&\n            assertNotEqual(getTStylingRangeNext(bindings), 0, 'Expecting to have at least one template styling binding.');\n        tData[getTStylingRangePrev(bindings)] = tStylingKey;\n    }\n    /**\n     * Collect all static values after the current `TNode.directiveStylingLast` index.\n     *\n     * Collect the remaining styling information which has not yet been collected by an existing\n     * styling instruction.\n     *\n     * @param tData `TData` where the `DirectiveDefs` are stored.\n     * @param tNode `TNode` which contains the directive range.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectResidual(tData, tNode, isClassBased) {\n        var residual = undefined;\n        var directiveEnd = tNode.directiveEnd;\n        ngDevMode &&\n            assertNotEqual(tNode.directiveStylingLast, -1, 'By the time this function gets called at least one hostBindings-node styling instruction must have executed.');\n        // We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are\n        // collecting things after the last `hostBindings` directive which had a styling instruction.)\n        for (var i = 1 + tNode.directiveStylingLast; i < directiveEnd; i++) {\n            var attrs = tData[i].hostAttrs;\n            residual = collectStylingFromTAttrs(residual, attrs, isClassBased);\n        }\n        return collectStylingFromTAttrs(residual, tNode.attrs, isClassBased);\n    }\n    /**\n     * Collect the static styling information with lower priority than `hostDirectiveDef`.\n     *\n     * (This is opposite of residual styling.)\n     *\n     * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static\n     *        styling. (Or `null` if template styling)\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param stylingKey Existing `TStylingKey` to update or wrap.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased) {\n        // We need to loop because there can be directives which have `hostAttrs` but don't have\n        // `hostBindings` so this loop catches up to the current directive..\n        var currentDirective = null;\n        var directiveEnd = tNode.directiveEnd;\n        var directiveStylingLast = tNode.directiveStylingLast;\n        if (directiveStylingLast === -1) {\n            directiveStylingLast = tNode.directiveStart;\n        }\n        else {\n            directiveStylingLast++;\n        }\n        while (directiveStylingLast < directiveEnd) {\n            currentDirective = tData[directiveStylingLast];\n            ngDevMode && assertDefined(currentDirective, 'expected to be defined');\n            stylingKey = collectStylingFromTAttrs(stylingKey, currentDirective.hostAttrs, isClassBased);\n            if (currentDirective === hostDirectiveDef)\n                break;\n            directiveStylingLast++;\n        }\n        if (hostDirectiveDef !== null) {\n            // we only advance the styling cursor if we are collecting data from host bindings.\n            // Template executes before host bindings and so if we would update the index,\n            // host bindings would not get their statics.\n            tNode.directiveStylingLast = directiveStylingLast;\n        }\n        return stylingKey;\n    }\n    /**\n     * Convert `TAttrs` into `TStylingStatic`.\n     *\n     * @param stylingKey existing `TStylingKey` to update or wrap.\n     * @param attrs `TAttributes` to process.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectStylingFromTAttrs(stylingKey, attrs, isClassBased) {\n        var desiredMarker = isClassBased ? 1 /* Classes */ : 2 /* Styles */;\n        var currentMarker = -1 /* ImplicitAttributes */;\n        if (attrs !== null) {\n            for (var i = 0; i < attrs.length; i++) {\n                var item = attrs[i];\n                if (typeof item === 'number') {\n                    currentMarker = item;\n                }\n                else {\n                    if (currentMarker === desiredMarker) {\n                        if (!Array.isArray(stylingKey)) {\n                            stylingKey = stylingKey === undefined ? [] : ['', stylingKey];\n                        }\n                        keyValueArraySet(stylingKey, item, isClassBased ? true : attrs[++i]);\n                    }\n                }\n            }\n        }\n        return stylingKey === undefined ? null : stylingKey;\n    }\n    /**\n     * Convert user input to `KeyValueArray`.\n     *\n     * This function takes user input which could be `string`, Object literal, or iterable and converts\n     * it into a consistent representation. The output of this is `KeyValueArray` (which is an array\n     * where\n     * even indexes contain keys and odd indexes contain values for those keys).\n     *\n     * The advantage of converting to `KeyValueArray` is that we can perform diff in an input\n     * independent\n     * way.\n     * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be\n     * applied)\n     *\n     * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the\n     * difference in linear fashion without the need to allocate any additional data.\n     *\n     * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine\n     * which values need to be deleted, over the new `Map` to determine additions, and we would have to\n     * keep additional `Map` to keep track of duplicates or items which have not yet been visited.\n     *\n     * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n     *        function so that `style` can be processed. This is done\n     *        for tree shaking purposes.\n     * @param stringParser The parser is passed in so that it will be tree shakable. See\n     *        `styleStringParser` and `classStringParser`\n     * @param value The value to parse/convert to `KeyValueArray`\n     */\n    function toStylingKeyValueArray(keyValueArraySet, stringParser, value) {\n        if (value == null /*|| value === undefined */ || value === '')\n            return EMPTY_ARRAY$3;\n        var styleKeyValueArray = [];\n        var unwrappedValue = unwrapSafeValue(value);\n        if (Array.isArray(unwrappedValue)) {\n            for (var i = 0; i < unwrappedValue.length; i++) {\n                keyValueArraySet(styleKeyValueArray, unwrappedValue[i], true);\n            }\n        }\n        else if (typeof unwrappedValue === 'object') {\n            for (var key in unwrappedValue) {\n                if (unwrappedValue.hasOwnProperty(key)) {\n                    keyValueArraySet(styleKeyValueArray, key, unwrappedValue[key]);\n                }\n            }\n        }\n        else if (typeof unwrappedValue === 'string') {\n            stringParser(styleKeyValueArray, unwrappedValue);\n        }\n        else {\n            ngDevMode &&\n                throwError('Unsupported styling type ' + typeof unwrappedValue + ': ' + unwrappedValue);\n        }\n        return styleKeyValueArray;\n    }\n    /**\n     * Set a `value` for a `key`.\n     *\n     * See: `keyValueArraySet` for details\n     *\n     * @param keyValueArray KeyValueArray to add to.\n     * @param key Style key to add.\n     * @param value The value to set.\n     */\n    function styleKeyValueArraySet(keyValueArray, key, value) {\n        keyValueArraySet(keyValueArray, key, unwrapSafeValue(value));\n    }\n    /**\n     * Update map based styling.\n     *\n     * Map based styling could be anything which contains more than one binding. For example `string`,\n     * or object literal. Dealing with all of these types would complicate the logic so\n     * instead this function expects that the complex input is first converted into normalized\n     * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it\n     * very cheap to compute deltas between the previous and current value.\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param oldKeyValueArray Previous value represented as `KeyValueArray`\n     * @param newKeyValueArray Current value represented as `KeyValueArray`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStylingMap(tView, tNode, lView, renderer, oldKeyValueArray, newKeyValueArray, isClassBased, bindingIndex) {\n        if (oldKeyValueArray === NO_CHANGE) {\n            // On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.\n            oldKeyValueArray = EMPTY_ARRAY$3;\n        }\n        var oldIndex = 0;\n        var newIndex = 0;\n        var oldKey = 0 < oldKeyValueArray.length ? oldKeyValueArray[0] : null;\n        var newKey = 0 < newKeyValueArray.length ? newKeyValueArray[0] : null;\n        while (oldKey !== null || newKey !== null) {\n            ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');\n            ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');\n            var oldValue = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex + 1] : undefined;\n            var newValue = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex + 1] : undefined;\n            var setKey = null;\n            var setValue = undefined;\n            if (oldKey === newKey) {\n                // UPDATE: Keys are equal => new value is overwriting old value.\n                oldIndex += 2;\n                newIndex += 2;\n                if (oldValue !== newValue) {\n                    setKey = newKey;\n                    setValue = newValue;\n                }\n            }\n            else if (newKey === null || oldKey !== null && oldKey < newKey) {\n                // DELETE: oldKey key is missing or we did not find the oldKey in the newValue\n                // (because the keyValueArray is sorted and `newKey` is found later alphabetically).\n                // `\"background\" < \"color\"` so we need to delete `\"background\"` because it is not found in the\n                // new array.\n                oldIndex += 2;\n                setKey = oldKey;\n            }\n            else {\n                // CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.\n                // `\"color\" > \"background\"` so we need to add `color` because it is in new array but not in\n                // old array.\n                ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');\n                newIndex += 2;\n                setKey = newKey;\n                setValue = newValue;\n            }\n            if (setKey !== null) {\n                updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);\n            }\n            oldKey = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex] : null;\n            newKey = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex] : null;\n        }\n    }\n    /**\n     * Update a simple (property name) styling.\n     *\n     * This function takes `prop` and updates the DOM to that value. The function takes the binding\n     * value as well as binding priority into consideration to determine which value should be written\n     * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks\n     * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param prop Either style property name or a class name.\n     * @param value Either style value for `prop` or `true`/`false` if `prop` is class.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStyling(tView, tNode, lView, renderer, prop, value, isClassBased, bindingIndex) {\n        if (tNode.type !== 3 /* Element */) {\n            // It is possible to have styling on non-elements (such as ng-container).\n            // This is rare, but it does happen. In such a case, just ignore the binding.\n            return;\n        }\n        var tData = tView.data;\n        var tRange = tData[bindingIndex + 1];\n        var higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ?\n            findStylingValue(tData, tNode, lView, prop, getTStylingRangeNext(tRange), isClassBased) :\n            undefined;\n        if (!isStylingValuePresent(higherPriorityValue)) {\n            // We don't have a next duplicate, or we did not find a duplicate value.\n            if (!isStylingValuePresent(value)) {\n                // We should delete current value or restore to lower priority value.\n                if (getTStylingRangePrevDuplicate(tRange)) {\n                    // We have a possible prev duplicate, let's retrieve it.\n                    value = findStylingValue(tData, null, lView, prop, bindingIndex, isClassBased);\n                }\n            }\n            var rNode = getNativeByIndex(getSelectedIndex(), lView);\n            applyStyling(renderer, isClassBased, rNode, prop, value);\n        }\n    }\n    /**\n     * Search for styling value with higher priority which is overwriting current value, or a\n     * value of lower priority to which we should fall back if the value is `undefined`.\n     *\n     * When value is being applied at a location, related values need to be consulted.\n     * - If there is a higher priority binding, we should be using that one instead.\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp1`\n     *   requires that we check `exp2` to see if it is set to value other than `undefined`.\n     * - If there is a lower priority binding and we are changing to `undefined`\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp2` to\n     *   `undefined` requires that we check `exp1` (and static values) and use that as new value.\n     *\n     * NOTE: The styling stores two values.\n     * 1. The raw value which came from the application is stored at `index + 0` location. (This value\n     *    is used for dirty checking).\n     * 2. The normalized value is stored at `index + 1`.\n     *\n     * @param tData `TData` used for traversing the priority.\n     * @param tNode `TNode` to use for resolving static styling. Also controls search direction.\n     *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n     *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n     *   - `null` search prev and go all the way to end. Return last value where\n     *     `isStylingValuePresent(value)` is true.\n     * @param lView `LView` used for retrieving the actual values.\n     * @param prop Property which we are interested in.\n     * @param index Starting index in the linked list of styling bindings where the search should start.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function findStylingValue(tData, tNode, lView, prop, index, isClassBased) {\n        // `TNode` to use for resolving static styling. Also controls search direction.\n        //   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n        //      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n        //   - `null` search prev and go all the way to end. Return last value where\n        //     `isStylingValuePresent(value)` is true.\n        var isPrevDirection = tNode === null;\n        var value = undefined;\n        while (index > 0) {\n            var rawKey = tData[index];\n            var containsStatics = Array.isArray(rawKey);\n            // Unwrap the key if we contain static values.\n            var key = containsStatics ? rawKey[1] : rawKey;\n            var isStylingMap = key === null;\n            var valueAtLViewIndex = lView[index + 1];\n            if (valueAtLViewIndex === NO_CHANGE) {\n                // In firstUpdatePass the styling instructions create a linked list of styling.\n                // On subsequent passes it is possible for a styling instruction to try to read a binding\n                // which\n                // has not yet executed. In that case we will find `NO_CHANGE` and we should assume that\n                // we have `undefined` (or empty array in case of styling-map instruction) instead. This\n                // allows the resolution to apply the value (which may later be overwritten when the\n                // binding actually executes.)\n                valueAtLViewIndex = isStylingMap ? EMPTY_ARRAY$3 : undefined;\n            }\n            var currentValue = isStylingMap ? keyValueArrayGet(valueAtLViewIndex, prop) :\n                key === prop ? valueAtLViewIndex : undefined;\n            if (containsStatics && !isStylingValuePresent(currentValue)) {\n                currentValue = keyValueArrayGet(rawKey, prop);\n            }\n            if (isStylingValuePresent(currentValue)) {\n                value = currentValue;\n                if (isPrevDirection) {\n                    return value;\n                }\n            }\n            var tRange = tData[index + 1];\n            index = isPrevDirection ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);\n        }\n        if (tNode !== null) {\n            // in case where we are going in next direction AND we did not find anything, we need to\n            // consult residual styling\n            var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n            if (residual != null /** OR residual !=== undefined */) {\n                value = keyValueArrayGet(residual, prop);\n            }\n        }\n        return value;\n    }\n    /**\n     * Determines if the binding value should be used (or if the value is 'undefined' and hence priority\n     * resolution should be used.)\n     *\n     * @param value Binding style value.\n     */\n    function isStylingValuePresent(value) {\n        // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't\n        // have an opinion as to what this binding should be and you should consult other bindings by\n        // priority to determine the valid value.\n        // This is extracted into a single function so that we have a single place to control this.\n        return value !== undefined;\n    }\n    /**\n     * Normalizes and/or adds a suffix to the value.\n     *\n     * If value is `null`/`undefined` no suffix is added\n     * @param value\n     * @param suffix\n     */\n    function normalizeSuffix(value, suffix) {\n        if (value == null /** || value === undefined */) {\n            // do nothing\n        }\n        else if (typeof suffix === 'string') {\n            value = value + suffix;\n        }\n        else if (typeof value === 'object') {\n            value = stringify(unwrapSafeValue(value));\n        }\n        return value;\n    }\n    /**\n     * Tests if the `TNode` has input shadow.\n     *\n     * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or\n     * `@Input('class')` as input.\n     *\n     * @param tNode `TNode` which we would like to see if it has shadow.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function hasStylingInputShadow(tNode, isClassBased) {\n        return (tNode.flags & (isClassBased ? 16 /* hasClassInput */ : 32 /* hasStyleInput */)) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var tNode = tView.firstCreatePass ?\n            getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n            tView.data[adjustedIndex];\n        var textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n        appendChild(tView, lView, textNative, tNode);\n        // Text nodes are self closing.\n        setPreviousOrParentTNode(tNode, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     * Update an interpolated class on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate3(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate4(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate5(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};\n     *             key5: {{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate6(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *             key6: {{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate7(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    '; key6: ', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *             key6: {{v6}}; key7: {{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate8(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    '; key6: ', v6, '; key7: ', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     * Update an interpolated style on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  class=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolateV(\n     *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        ɵɵstyleMap(interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 9 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component or directive.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            var currentDef = getCurrentDirectiveDef(tView.data);\n            var renderer = loadComponentRenderer(currentDef, tNode, lView);\n            elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the component instance associated with a given DOM element.\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```html\n     * <my-app>\n     *   <div>\n     *     <child-comp></child-comp>\n     *   </div>\n     * </my-app>\n     * ```\n     * Calling `getComponent` on `<child-comp>` will return the instance of `ChildComponent`\n     * associated with this DOM element.\n     *\n     * Calling the function on `<my-app>` will return the `MyApp` instance.\n     *\n     *\n     * @param element DOM element from which the component should be retrieved.\n     * @returns Component instance associated with the element or `null` if there\n     *    is no component associated with it.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getComponent(element) {\n        assertDomElement(element);\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * If inside an embedded view (e.g. `*ngIf` or `*ngFor`), retrieves the context of the embedded\n     * view that the element is part of. Otherwise retrieves the instance of the component whose view\n     * owns the element (in this case, the result is the same as calling `getOwningComponent`).\n     *\n     * @param element Element for which to get the surrounding component instance.\n     * @returns Instance of the component that is around the element or null if the element isn't\n     *    inside any component.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getContext(element) {\n        assertDomElement(element);\n        var context = loadLContext(element, false);\n        return context === null ? null : context.lView[CONTEXT];\n    }\n    /**\n     * Retrieves the component instance whose view contains the DOM element.\n     *\n     * For example, if `<child-comp>` is used in the template of `<app-comp>`\n     * (i.e. a `ViewChild` of `<app-comp>`), calling `getOwningComponent` on `<child-comp>`\n     * would return `<app-comp>`.\n     *\n     * @param elementOrDir DOM element, component or directive instance\n     *    for which to retrieve the root components.\n     * @returns Component instance whose view owns the DOM element or null if the element is not\n     *    part of a component view.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getOwningComponent(elementOrDir) {\n        var context = loadLContext(elementOrDir, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieves all root components associated with a DOM element, directive or component instance.\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param elementOrDir DOM element, component or directive instance\n     *    for which to retrieve the root components.\n     * @returns Root components associated with the target object.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getRootComponents(elementOrDir) {\n        return __spread(getRootContext(elementOrDir).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with an element, component or directive instance.\n     *\n     * @param elementOrDir DOM element, component or directive instance for which to\n     *    retrieve the injector.\n     * @returns Injector associated with the element, component or directive instance.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getInjector(elementOrDir) {\n        var context = loadLContext(elementOrDir, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directive instances associated with a given DOM element. Does not include\n     * component instances.\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```\n     * <my-app>\n     *   <button my-button></button>\n     *   <my-comp></my-comp>\n     * </my-app>\n     * ```\n     * Calling `getDirectives` on `<button>` will return an array with an instance of the `MyButton`\n     * directive that is associated with the DOM element.\n     *\n     * Calling `getDirectives` on `<my-comp>` will return an empty array.\n     *\n     * @param element DOM element for which to get the directives.\n     * @returns Array of directives associated with the element.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getDirectives(element) {\n        var context = loadLContext(element);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        // The `directives` in this case are a named array called `LComponentView`. Clone the\n        // result so we don't expose an internal data structure in the user's console.\n        return context.directives === null ? [] : __spread(context.directives);\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target DOM element, component or directive instance for which to retrieve\n     *    the local references.\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieves the host element of a component or directive instance.\n     * The host element is the DOM element that matched the selector of the directive.\n     *\n     * @param componentOrDirective Component or directive instance for which the host\n     *     element should be retrieved.\n     * @returns Host element of the target.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getHostElement(componentOrDirective) {\n        return getLContext(componentOrDirective).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Element');\n        return loadLContext(node);\n    }\n    /**\n     * Retrieves a list of event listeners associated with a DOM element. The list does include host\n     * listeners, but it does not include event listeners defined outside of the Angular context\n     * (e.g. through `addEventListener`).\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```\n     * <my-app>\n     *   <div (click)=\"doSomething()\"></div>\n     * </my-app>\n     *\n     * ```\n     * Calling `getListeners` on `<div>` will return an object that looks as follows:\n     * ```\n     * {\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * }\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @returns Array of event listeners on the DOM element.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getListeners(element) {\n        assertDomElement(element);\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var type = (typeof useCaptureOrIndx === 'boolean' || useCaptureOrIndx >= 0) ? 'dom' : 'output';\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ? useCaptureOrIndx : false;\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture, type: type });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(lView[TVIEW], nodeIndex - HEADER_OFFSET);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target DOM element or component instance for which to retrieve the LView.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n    /** Asserts that a value is a DOM Element. */\n    function assertDomElement(value) {\n        if (typeof Element !== 'undefined' && !(value instanceof Element)) {\n            throw new Error('Expecting instance of DOM Element');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks a component for check (in case of OnPush components) and synchronously\n     * performs change detection on the application this component belongs to.\n     *\n     * @param component Component to {@link ChangeDetectorRef#markForCheck mark for check}.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function applyChanges(component) {\n        markDirty(component);\n        getRootComponents(component).forEach(function (rootComponent) { return detectChanges(rootComponent); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --config=ivy\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getOwningComponent', getOwningComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('applyChanges', applyChanges);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRenderer = rendererFactory.createRenderer(null, null);\n        var hostRNode = locateHostElement(hostRenderer, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootTView, rootView, null);\n            // update mode pass\n            refreshView(rootTView, rootView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param hostRenderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, hostRenderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var mergedAttrs = tNode.mergedAttrs = def.hostAttrs;\n        if (mergedAttrs !== null) {\n            computeStaticStyling(tNode, mergedAttrs);\n            if (rNode !== null) {\n                setUpAttributes(hostRenderer, rNode, mergedAttrs);\n                if (tNode.classes !== null) {\n                    writeDirectClass(hostRenderer, rNode, tNode.classes);\n                }\n                if (tNode.styles !== null) {\n                    writeDirectStyle(hostRenderer, rNode, tNode.styles);\n                }\n            }\n        }\n        var viewRenderer = rendererFactory.createRenderer(rNode, def);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, viewRenderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initTNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootLView, rootContext, hostFeatures) {\n        var tView = rootLView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootLView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootLView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass &&\n            (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setSelectedIndex(elementIndex);\n            var rootTView = rootLView[TVIEW];\n            addHostBindingsToExpandoInstructions(rootTView, componentDef);\n            growHostVarsSpace(rootTView, rootLView, componentDef.hostVars);\n            invokeHostBindingsInCreationMode(componentDef, component);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var shouldInheritFields = true;\n        var inheritanceChain = [definition];\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                if (shouldInheritFields) {\n                    inheritanceChain.push(superDef);\n                    // Some fields in the definition may be empty, if there were no values to put in them that\n                    // would've justified object creation. Unwrap them if necessary.\n                    var writeableDef = definition;\n                    writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                    writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                    writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                    // Merge hostBindings\n                    var superHostBindings = superDef.hostBindings;\n                    superHostBindings && inheritHostBindings(definition, superHostBindings);\n                    // Merge queries\n                    var superViewQuery = superDef.viewQuery;\n                    var superContentQueries = superDef.contentQueries;\n                    superViewQuery && inheritViewQuery(definition, superViewQuery);\n                    superContentQueries && inheritContentQueries(definition, superContentQueries);\n                    // Merge inputs and outputs\n                    fillProperties(definition.inputs, superDef.inputs);\n                    fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                    fillProperties(definition.outputs, superDef.outputs);\n                    // Merge animations metadata.\n                    // If `superDef` is a Component, the `data` field is present (defaults to an empty object).\n                    if (isComponentDef(superDef) && superDef.data.animation) {\n                        // If super def is a Component, the `definition` is also a Component, since Directives can\n                        // not inherit Components (we throw an error above and cannot reach this code).\n                        var defData = definition.data;\n                        defData.animation = (defData.animation || []).concat(superDef.data.animation);\n                    }\n                    // Inherit hooks\n                    // Assume super class inheritance feature has already run.\n                    writeableDef.afterContentChecked =\n                        writeableDef.afterContentChecked || superDef.afterContentChecked;\n                    writeableDef.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                    writeableDef.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                    writeableDef.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                    writeableDef.doCheck = definition.doCheck || superDef.doCheck;\n                    writeableDef.onDestroy = definition.onDestroy || superDef.onDestroy;\n                    writeableDef.onInit = definition.onInit || superDef.onInit;\n                }\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                        // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n                        // def already has all the necessary information inherited from its super class(es), so we\n                        // can stop merging fields from super classes. However we need to iterate through the\n                        // prototype chain to look for classes that might contain other \"features\" (like\n                        // NgOnChanges), which we should invoke for the original `definition`. We set the\n                        // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n                        // logic and only invoking functions from the \"features\" list.\n                        if (feature === ɵɵInheritDefinitionFeature) {\n                            shouldInheritFields = false;\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n        mergeHostAttrsAcrossInheritance(inheritanceChain);\n    }\n    /**\n     * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.\n     *\n     * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing\n     * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child\n     * type.\n     */\n    function mergeHostAttrsAcrossInheritance(inheritanceChain) {\n        var hostVars = 0;\n        var hostAttrs = null;\n        // We process the inheritance order from the base to the leaves here.\n        for (var i = inheritanceChain.length - 1; i >= 0; i--) {\n            var def = inheritanceChain[i];\n            // For each `hostVars`, we need to add the superclass amount.\n            def.hostVars = (hostVars += def.hostVars);\n            // for each `hostAttrs` we need to merge it with superclass.\n            def.hostAttrs =\n                mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        if (prevHostBindings) {\n            definition.hostBindings = function (rf, ctx) {\n                superHostBindings(rf, ctx);\n                prevHostBindings(rf, ctx);\n            };\n        }\n        else {\n            definition.hostBindings = superHostBindings;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () {\n            return this.firstChange;\n        };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    /** @nocollapse */\n    // tslint:disable-next-line:no-toplevel-property-access\n    ɵɵNgOnChangesFeature.ngInherit = true;\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var tView = getTView();\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var tView = getTView();\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex === -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    registerDestroyHooksIfSupported(tView, provider, tInjectables.length);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    registerDestroyHooksIfSupported(tView, provider, tInjectables.length, 0);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    var indexInFactory = multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex :\n                        existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                    registerDestroyHooksIfSupported(tView, provider, existingProvidersFactoryIndex > -1 ? existingProvidersFactoryIndex :\n                        existingViewProvidersFactoryIndex, indexInFactory);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.\n     * @param tView `TView` in which to register the hook.\n     * @param provider Provider whose hook should be registered.\n     * @param contextIndex Index under which to find the context for the hook when it's being invoked.\n     * @param indexInFactory Only required for `multi` providers. Index of the provider in the multi\n     * provider factory.\n     */\n    function registerDestroyHooksIfSupported(tView, provider, contextIndex, indexInFactory) {\n        var providerIsTypeProvider = isTypeProvider(provider);\n        if (providerIsTypeProvider || isClassProvider(provider)) {\n            var prototype = (provider.useClass || provider).prototype;\n            var ngOnDestroy = prototype.ngOnDestroy;\n            if (ngOnDestroy) {\n                var hooks = tView.destroyHooks || (tView.destroyHooks = []);\n                if (!providerIsTypeProvider && provider.multi) {\n                    ngDevMode &&\n                        assertDefined(indexInFactory, 'indexInFactory when registering multi factory destroy hook');\n                    var existingCallbacksIndex = hooks.indexOf(contextIndex);\n                    if (existingCallbacksIndex === -1) {\n                        hooks.push(contextIndex, [indexInFactory, ngOnDestroy]);\n                    }\n                    else {\n                        hooks[existingCallbacksIndex + 1].push(indexInFactory, ngOnDestroy);\n                    }\n                }\n                else {\n                    hooks.push(contextIndex, ngOnDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     * @returns Index at which the factory was inserted.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n        return multiFactory.multi.push(factory) - 1;\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\n        // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\n        // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('10.0.0-next.7+45.sha-b2a3325');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) {\n            return isListLikeIterable$1(obj);\n        };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () {\n                return this.map.size === 0;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () {\n            this.map.clear();\n        };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) {\n            return obj instanceof Map || isJsObject$1(obj);\n        };\n        DefaultKeyValueDifferFactory.prototype.create = function () {\n            return new DefaultKeyValueDiffer();\n        };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation === exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = {};\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs,\n            flags: flags,\n            token: token,\n            value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [],\n                    index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null &&\n            (providedIn === 'any' || providedIn === ngModule._def.scope ||\n                moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) : elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = {};\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () {\n                return new Injector_(this._view, this._elDef);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () {\n                return this._component.constructor;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () {\n            this._viewRef.destroy();\n        };\n        ComponentRef_.prototype.onDestroy = function (callback) {\n            this._viewRef.onDestroy(callback);\n        };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () {\n                return new ElementRef(this._data.renderElement);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () {\n                return new Injector_(this._view, this._elDef);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () {\n                return this._embeddedViews.length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () {\n                return rootRenderNodes(this._view);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () {\n                return this._view.context;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view.state & 128 /* Destroyed */) !== 0;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () {\n            markParentViewsForCheck(this._view);\n        };\n        ViewRef_.prototype.detach = function () {\n            this._view.state &= ~4 /* Attached */;\n        };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () {\n            Services.checkNoChangesView(this._view);\n        };\n        ViewRef_.prototype.reattach = function () {\n            this._view.state |= 4 /* Attached */;\n        };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () {\n                return this.get(this._moduleType);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) {\n            this._destroyListeners.push(callback);\n        };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop,\n                    nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: matchedQueries,\n            matchedQueryIds: matchedQueryIds,\n            references: references,\n            ngContentIndex: -1,\n            childCount: childCount,\n            bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    function getNamespace$1(elementName) {\n        var name = elementName.toLowerCase();\n        return name === 'svg' ? SVG_NAMESPACE : (name === 'math' ? MATH_ML_NAMESPACE : null);\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = stringifyCSSSelectorList(componentDef.selectors);\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRenderer = rendererFactory.createRenderer(null, this.componentDef);\n            // Determine a tag name used for creating host elements when this component is created\n            // dynamically. Default to 'div' if this component did not specify any tag name in its selector.\n            var elementName = this.componentDef.selectors[0][0] || 'div';\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) :\n                elementCreate(elementName, rendererFactory.createRenderer(null, this.componentDef), getNamespace$1(elementName));\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer);\n                if (hostRNode) {\n                    if (rootSelectorOrNode) {\n                        setUpAttributes(hostRenderer, hostRNode, ['ng-version', VERSION.full]);\n                    }\n                    else {\n                        // If host element is created as a part of this function call (i.e. `rootSelectorOrNode`\n                        // is not defined), also apply attributes and classes extracted from component selector.\n                        // Extract attributes and classes from the first selector only to match VE behavior.\n                        var _a = extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]), attrs = _a.attrs, classes = _a.classes;\n                        if (attrs) {\n                            setUpAttributes(hostRenderer, hostRNode, attrs);\n                        }\n                        if (classes && classes.length > 0) {\n                            writeDirectClass(hostRenderer, hostRNode, classes.join(' '));\n                        }\n                    }\n                }\n                tElementNode = getTNode(rootTView, 0);\n                if (projectableNodes !== undefined) {\n                    var projection = tElementNode.projection = [];\n                    for (var i = 0; i < this.ngContentSelectors.length; i++) {\n                        var nodesforSlot = projectableNodes[i];\n                        // Projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                        // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                        // complex checks down the line.\n                        // We also normalize the length of the passed in projectable nodes (to match the number of\n                        // <ng-container> slots defined by a component).\n                        projection.push(nodesforSlot != null ? Array.from(nodesforSlot) : null);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootTView, rootLView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () {\n                return new NodeInjector(this._tNode, this._rootLView);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en',\n        [['a', 'p'], ['AM', 'PM'], u],\n        [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u,\n        [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n        0,\n        [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n        ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n        'USD',\n        '$',\n        'US Dollar',\n        {},\n        'ltr',\n        plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the default currency code for the given locale.\n     *\n     * The default is defined as the first currency which is still in use.\n     *\n     * @param locale The code of the locale whose currency code we want.\n     * @returns The code of the default currency for the given locale.\n     *\n     */\n    function getLocaleCurrencyCode(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.CurrencyCode] || null;\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyCode\"] = 15] = \"CurrencyCode\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 16] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 17] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 18] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"Directionality\"] = 19] = \"Directionality\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 20] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 21] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var pluralMapping = ['zero', 'one', 'two', 'few', 'many'];\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(parseInt(value, 10));\n        var result = pluralMapping[plural];\n        return (result !== undefined) ? result : 'other';\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    /**\n     * USD currency code that the application uses by default for CurrencyPipe when no\n     * DEFAULT_CURRENCY_CODE is provided.\n     */\n    var USD_CURRENCY_CODE = 'USD';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (isRootTemplateMessage(subTemplateIndex)) {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(getLView(), tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    function allocNodeIndex(startIndex) {\n        return startIndex + i18nVarsCount++;\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one. We should also\n        // keep track whether an element was a parent node or not, so that the logic that consumes\n        // the generated `I18nMutateOpCode`s can leverage this information to properly set TNode state\n        // (whether it's a parent or sibling).\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            var previousTNodeIndex = previousOrParentTNode.index - HEADER_OFFSET;\n            // If current TNode is a sibling node, encode it using a negative index. This information is\n            // required when the `Select` action is processed (see the `readCreateOpCodes` function).\n            if (!getIsParent()) {\n                previousTNodeIndex = ~previousTNodeIndex;\n            }\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousTNodeIndex << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        if (message === '' && isRootTemplateMessage(subTemplateIndex)) {\n            // If top level translation is an empty string, do not invoke additional processing\n            // and just create op codes for empty text node instead.\n            createOpCodes.push(message, allocNodeIndex(startIndex), parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n        }\n        else {\n            var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n            var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n            for (var i = 0; i < msgParts.length; i++) {\n                var value = msgParts[i];\n                if (i & 1) {\n                    // Odd indexes are placeholders (elements and sub-templates)\n                    if (value.charAt(0) === '/') {\n                        // It is a closing tag\n                        if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                            var phIndex = parseInt(value.substr(2), 10);\n                            parentIndex = parentIndexStack[--parentIndexPointer];\n                            createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                        }\n                    }\n                    else {\n                        var phIndex = parseInt(value.substr(1), 10);\n                        var isElement = value.charAt(0) === \"#\" /* ELEMENT */;\n                        // The value represents a placeholder that we move to the designated index.\n                        // Note: positive indicies indicate that a TNode with a given index should also be marked\n                        // as parent while executing `Select` instruction.\n                        createOpCodes.push((isElement ? phIndex : ~phIndex) << 3 /* SHIFT_REF */ |\n                            0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (isElement) {\n                            parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                        }\n                    }\n                }\n                else {\n                    // Even indexes are text (including bindings & ICU expressions)\n                    var parts = extractParts(value);\n                    for (var j = 0; j < parts.length; j++) {\n                        if (j & 1) {\n                            // Odd indexes are ICU expressions\n                            var icuExpression = parts[j];\n                            // Verify that ICU expression has the right shape. Translations might contain invalid\n                            // constructions (while original messages were correct), so ICU parsing at runtime may\n                            // not succeed (thus `icuExpression` remains a string).\n                            if (typeof icuExpression !== 'object') {\n                                throw new Error(\"Unable to parse ICU expression in \\\"\" + templateTranslation + \"\\\" message.\");\n                            }\n                            // Create the comment node that will anchor the ICU expression\n                            var icuNodeIndex = allocNodeIndex(startIndex);\n                            createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            // Update codes for the ICU expression\n                            var mask = getBindingMask(icuExpression);\n                            icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                            // Since this is recursive, the last TIcu that was pushed is the one we want\n                            var tIcuIndex = icuExpressions.length - 1;\n                            updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                            3, // skip 3 opCodes if not changed\n                            -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                            2, // skip 2 opCodes if not changed\n                            icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                        }\n                        else if (parts[j] !== '') {\n                            var text = parts[j];\n                            // Even indexes are text (including bindings)\n                            var hasBinding = text.match(BINDING_REGEXP);\n                            // Create text nodes\n                            var textNodeIndex = allocNodeIndex(startIndex);\n                            createOpCodes.push(\n                            // If there is a binding, the value will be set during update\n                            hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            if (hasBinding) {\n                                addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(tView, lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tView, tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(tView, lView, tNode);\n            return tNode;\n        }\n        appendChild(tView, lView, getNativeByTNode(tNode, lView), tNode);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(tView, lView, slotValue[NATIVE], tNode);\n        }\n        return tNode;\n    }\n    function isRootTemplateMessage(subTemplateIndex) {\n        return subTemplateIndex === undefined;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView, lView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView, lView) {\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tView, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(tView, lView, index, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(tView, index);\n            if (tNode &&\n                (tNode.type === 0 /* Container */ || tNode.type === 3 /* Element */ ||\n                    tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(tView, lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, tView, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(tView, lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(tView, destinationNodeIndex);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode =\n                            appendI18nNode(tView, currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        // Negative indicies indicate that a given TNode is a sibling node, not a parent node\n                        // (see `i18nStartFirstPass` for additional information).\n                        var isParent = opCode >= 0;\n                        var nodeIndex = (isParent ? opCode : ~opCode) >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(tView, nodeIndex);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, isParent);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(tView, elementIndex);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(getTNode(tView, elementNodeIndex), lView, attrName, attrValue, null, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode &&\n                            assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(tView, lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode &&\n                            assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(tView, lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, tView, lView, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(lView[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(tView, getTNode(tView, nodeIndex), lView, propName, value, lView[RENDERER], sanitizeFn, false);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(lView, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(tView, nodeIndex);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(tView, lView, nodeIndex_1, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(tView, nestedIcuNodeIndex);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    if (caseIndex > -1) {\n                                        // Add the nodes for the new case\n                                        readCreateOpCodes(-1, tIcu.create[caseIndex], tView, lView);\n                                        caseCreated = true;\n                                    }\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(tView, nodeIndex);\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, tView, lView, caseCreated);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(tView, lView, index, markAsDetached) {\n        var removedPhTNode = getTNode(tView, index);\n        var removedPhRNode = getNativeByIndex(index, lView);\n        if (removedPhRNode) {\n            nativeRemoveNode(lView[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(lView, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(lView[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(tView, previousElementIndex);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(tNode, lView, attrName, value, null, null);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(tView, lView, dataValue, attrName, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            var lView = getLView();\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, tView, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the\n            // parent constructor and checking whether it's the same as the subclass metadata below.\n            // We can't use `hasOwnProperty` here because it doesn't work correctly in IE10 for\n            // static fields that are defined by TS. See\n            // https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which\n                // use tsickle-style annotations and reflect over them in the same way, this could\n                // cause issues, but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have\n                // different decorator types. Decorators on individual fields are not merged, as it's\n                // also incredibly unlikely that a field will be decorated both with an Angular\n                // decorator and a non-Angular decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor ||\n                        parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            // When bootstrapping a module we have a dependency graph that looks like this:\n            // ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the\n            // module being resolved tries to inject the ComponentFactoryResolver, it'll create a\n            // circular dependency which will result in a runtime error, because the injector doesn't\n            // exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves\n            // and providing it, rather than letting the injector resolve it.\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1(_this);\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode &&\n                assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            ngLocaleIdDef && setLocaleId(ngLocaleIdDef);\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            _this._r3Injector = createInjectorWithoutInjectorInstances(ngModuleType, _parent, [\n                { provide: NgModuleRef, useValue: _this }, {\n                    provide: ComponentFactoryResolver,\n                    useValue: _this.componentFactoryResolver\n                }\n            ], stringify(ngModuleType));\n            // We need to resolve the injector types separately from the injector creation, because\n            // the module might be trying to use this ref in its contructor for DI which will cause a\n            // circular error that will eventually error out, because the injector isn't created yet.\n            _this._r3Injector._resolveInjectorDefTypes();\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        return pureFunction2Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        return pureFunction3Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        return pureFunction4Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);\n    }\n    /**\n     * Results of a pure function invocation are stored in LView in a dedicated slot that is initialized\n     * to NO_CHANGE. In rare situations a pure pipe might throw an exception on the very first\n     * invocation and not produce any valid results. In this case LView would keep holding the NO_CHANGE\n     * value. The NO_CHANGE is not something that we can use in expressions / bindings thus we convert\n     * it to `undefined`.\n     */\n    function getPureFunctionReturnValue(lView, returnValueIndex) {\n        ngDevMode && assertDataInRange(lView, returnValueIndex);\n        var lastReturnValue = lView[returnValueIndex];\n        return lastReturnValue === NO_CHANGE ? undefined : lastReturnValue;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1Internal(lView, bindingRoot, slotOffset, pureFn, exp, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     */\n    function pureFunction4Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 4);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionVInternal(lView, bindingRoot, slotOffset, pureFn, exps, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getPureFunctionReturnValue(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var previousInjectImplementation = setInjectImplementation(ɵɵdirectiveInject);\n        // DI for pipes is supposed to behave like directives when placed on a component\n        // host node, which means that we have to disable access to `viewProviders`.\n        var previousIncludeViewProviders = setIncludeViewProviders(false);\n        var pipeInstance = pipeFactory();\n        setIncludeViewProviders(previousIncludeViewProviders);\n        setInjectImplementation(previousInjectImplementation);\n        store(tView, getLView(), index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction1Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction2Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction3Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction4Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunctionVInternal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventEmitter_ = /** @class */ (function (_super) {\n        __extends(EventEmitter_, _super);\n        function EventEmitter_(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter_.prototype.emit = function (value) {\n            _super.prototype.next.call(this, value);\n        };\n        EventEmitter_.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) {\n                    generatorOrNext.next(value);\n                };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) {\n                        setTimeout(function () { return generatorOrNext.error(err); });\n                    } : function (err) {\n                        generatorOrNext.error(err);\n                    };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () {\n                        setTimeout(function () { return generatorOrNext.complete(); });\n                    } : function () {\n                        generatorOrNext.complete();\n                    };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext(value); });\n                } : function (value) {\n                    generatorOrNext(value);\n                };\n                if (error) {\n                    errorFn = this.__isAsync ? function (err) {\n                        setTimeout(function () { return error(err); });\n                    } : function (err) {\n                        error(err);\n                    };\n                }\n                if (complete) {\n                    completeFn = this.__isAsync ? function () {\n                        setTimeout(function () { return complete(); });\n                    } : function () {\n                        complete();\n                    };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter_;\n    }(rxjs.Subject));\n    /**\n     * @publicApi\n     */\n    var EventEmitter = EventEmitter_;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) {\n            return this._results.map(fn);\n        };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) {\n            this._results.forEach(fn);\n        };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () {\n            return this._results.slice();\n        };\n        QueryList.prototype.toString = function () {\n            return this._results.toString();\n        };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () {\n            this.changes.emit(this);\n        };\n        /** internal */\n        QueryList.prototype.setDirty = function () {\n            this.dirty = true;\n        };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () {\n            return new LQuery_(this.queryList);\n        };\n        LQuery_.prototype.setDirty = function () {\n            this.queryList.setDirty();\n        };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) {\n            this.dirtyQueriesWithMatches(tView);\n        };\n        LQueries_.prototype.detachView = function (tView) {\n            this.dirtyQueriesWithMatches(tView);\n        };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode &&\n                assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode &&\n                assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () {\n                return this.queries.length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) {\n            this.queries.push(tquery);\n        };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) {\n            this.elementStart(tView, tNode);\n        };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                var declarationNodeIdx = this._declarationNodeIndex;\n                var parent_1 = tNode.parent;\n                // Determine if a given TNode is a \"direct\" child of a node on which a content query was\n                // declared (only direct children of query's host node can match with the descendants: false\n                // option). There are 3 main use-case / conditions to consider here:\n                // - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query\n                // host node;\n                // - <needs-target><ng-template [ngIf]=\"true\"><i #target></i></ng-template></needs-target>:\n                // here <i #target> parent node is null;\n                // - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need\n                // to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse\n                // up past the query's host node!).\n                while (parent_1 !== null && parent_1.type === 4 /* ElementContainer */ &&\n                    parent_1.index !== declarationNodeIdx) {\n                    parent_1 = parent_1.parent;\n                }\n                return declarationNodeIdx === (parent_1 !== null ? parent_1.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(tView, lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = tView.data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(tView, lView, queryIndex, result) {\n        var tQuery = tView.queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(tView, lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    result.push(lViewResults[i / 2]);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            var embeddedLView = embeddedLViews[i_2];\n                            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var tView = getTView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(tView, queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ?\n                    collectQueryResults(tView, lView, queryIndex, []) :\n                    materializeViewResults(tView, lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getTView(), getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getTView(), getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(tView, lView, predicate, descend, read, isStatic) {\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(tView, lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getTView(), getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getTView(), getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(tView, lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(tView, lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(tView, lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(tView, lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleMapInterpolate1': ɵɵstyleMapInterpolate1,\n        'ɵɵstyleMapInterpolate2': ɵɵstyleMapInterpolate2,\n        'ɵɵstyleMapInterpolate3': ɵɵstyleMapInterpolate3,\n        'ɵɵstyleMapInterpolate4': ɵɵstyleMapInterpolate4,\n        'ɵɵstyleMapInterpolate5': ɵɵstyleMapInterpolate5,\n        'ɵɵstyleMapInterpolate6': ɵɵstyleMapInterpolate6,\n        'ɵɵstyleMapInterpolate7': ɵɵstyleMapInterpolate7,\n        'ɵɵstyleMapInterpolate8': ɵɵstyleMapInterpolate8,\n        'ɵɵstyleMapInterpolateV': ɵɵstyleMapInterpolateV,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    var jitOptions = null;\n    function setJitOptions(options) {\n        if (jitOptions !== null) {\n            if (options.defaultEncapsulation !== jitOptions.defaultEncapsulation) {\n                ngDevMode &&\n                    console.error('Provided value for `defaultEncapsulation` can not be changed once it has been set.');\n                return;\n            }\n            if (options.preserveWhitespaces !== jitOptions.preserveWhitespaces) {\n                ngDevMode &&\n                    console.error('Provided value for `preserveWhitespaces` can not be changed once it has been set.');\n                return;\n            }\n        }\n        jitOptions = options;\n    }\n    function getJitOptions() {\n        return jitOptions;\n    }\n    function resetJitOptions() {\n        jitOptions = null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$5 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                    // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                    // should verify that there are no unknown elements in a template. In AOT mode, that check\n                    // happens at compile time and `schemas` information is not present on Component and Module\n                    // defs after compilation (so the check doesn't happen the second time at runtime).\n                    if (!ngModuleDef.schemas) {\n                        ngModuleDef.schemas = [];\n                    }\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode &&\n                        verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$5,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. This function can\n     * be called on modules with components that have not fully compiled yet, but the result should not\n     * be used until they have.\n     *\n     * @param moduleType module that transitive scope should be calculated for.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // This const was called `jitOptions` previously but had to be renamed to `options` because\n                    // of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.\n                    // This bug was investigated in https://github.com/angular/angular-cli/issues/17264.\n                    // We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.\n                    var options = getJitOptions();\n                    var preserveWhitespaces = metadata.preserveWhitespaces;\n                    if (preserveWhitespaces === undefined) {\n                        if (options !== null && options.preserveWhitespaces !== undefined) {\n                            preserveWhitespaces = options.preserveWhitespaces;\n                        }\n                        else {\n                            preserveWhitespaces = false;\n                        }\n                    }\n                    var encapsulation = metadata.encapsulation;\n                    if (encapsulation === undefined) {\n                        if (options !== null && options.defaultEncapsulation !== undefined) {\n                            encapsulation = options.defaultEncapsulation;\n                        }\n                        else {\n                            encapsulation = exports.ViewEncapsulation.Emulated;\n                        }\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: preserveWhitespaces, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: encapsulation, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var reflect = getReflect();\n        var propMetadata = reflect.ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type.prototype).constructor;\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        var reflect = getReflect();\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return reflect.hasLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = reflect.propMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     *\n     * ```\n     *\n     * The following example registers another DOM event handler that listens for key-press events.\n     * ``` ts\n     * import { HostListener, Component } from \"@angular/core\";\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n     * increment the counter.\n     *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n     * })\n     * class AppComponent {\n     *   counter = 0;\n     *   @HostListener('window:keydown', ['$event'])\n     *   handleKeyDown(event: KeyboardEvent) {\n     *     this.counter++;\n     *   }\n     *   resetCounter() {\n     *     this.counter = 0;\n     *   }\n     * }\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injection token that allows you to provide one or more initialization functions.\n     * These function are injected at application startup and executed during\n     * app initialization. If any of these functions returns a Promise, initialization\n     * does not complete until the Promise is resolved.\n     *\n     * You can, for example, create a factory function that loads language data\n     * or an external configuration, and provide that function to the `APP_INITIALIZER` token.\n     * That way, the function is executed during the application bootstrap process,\n     * and the needed data is available on startup.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises)\n                .then(function () {\n                complete();\n            })\n                .catch(function (e) {\n                _this.reject(e);\n            });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Provide this token to set the default currency code your application uses for\n     * CurrencyPipe when there is no currency code passed into it. This is only used by\n     * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * <div class=\"alert is-helpful\">\n     *\n     * **Deprecation notice:**\n     *\n     * The default currency code is currently always `USD` but this is deprecated from v9.\n     *\n     * **In v10 the default currency code will be taken from the current locale.**\n     *\n     * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n     * your application `NgModule`:\n     *\n     * ```ts\n     * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n     * ```\n     *\n     * </div>\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var DEFAULT_CURRENCY_CODE = new InjectionToken('DefaultCurrencyCode');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) {\n            return undefined;\n        };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () {\n                fn && fn.apply(null, null);\n            });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () {\n            return Zone.current.get('isAngularZone') === true;\n        };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () {\n            delayChangeDetectionForEvents(zone);\n        };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) {\n            return fn();\n        };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () {\n            return this._pendingCount;\n        };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) {\n            this._applications.delete(token);\n        };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () {\n            this._applications.clear();\n        };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) {\n            return this._applications.get(elem) || null;\n        };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () {\n            return Array.from(this._applications.values());\n        };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () {\n            return Array.from(this._applications.keys());\n        };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        if (typeof ngJitMode === 'undefined' || ngJitMode) {\n            // Configure the compiler to use the provided options. This call may fail when multiple modules\n            // are bootstrapped with incompatible options, as a component can only be compiled according to\n            // a single set of options.\n            setJitOptions({\n                defaultEncapsulation: _lastDefined(compilerOptions.map(function (options) { return options.defaultEncapsulation; })),\n                preserveWhitespaces: _lastDefined(compilerOptions.map(function (options) { return options.preserveWhitespaces; })),\n            });\n        }\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({\n                    next: function (error) {\n                        exceptionHandler.handleError(error);\n                    }\n                }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        if (ivyEnabled) {\n                            // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy\n                            var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                            setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                        }\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance\n                    .constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) {\n            this._destroyListeners.push(callback);\n        };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () {\n                return this._injector;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () {\n                return this._destroyed;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            /** @internal */\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({\n                next: function () {\n                    _this._zone.run(function () {\n                        _this.tick();\n                    });\n                }\n            });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () {\n                            observer.next(false);\n                        });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () {\n                _this._unloadComponent(compRef);\n            });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in development mode. Call enableProdMode() to enable production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () {\n                return this._views.length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ApplicationRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _lastDefined(args) {\n        for (var i = args.length - 1; i >= 0; i--) {\n            if (args[i] !== undefined) {\n                return args[i];\n            }\n        }\n        return undefined;\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () {\n                return this._debugContext.injector;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                return this._debugContext.component;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () {\n                return this._debugContext.context;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () {\n                return this._debugContext.references;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                return this._debugContext.providerTokens;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this.childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () {\n                return getInjector(this.nativeNode);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getOwningComponent(nativeElement));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext(this.nativeNode);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(function (listener) { return listener.type === 'dom'; });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () {\n                return getLocalRefs(this.nativeNode);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                return getInjectionTokens(this.nativeNode);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = {};\n                // Collect properties from the DOM.\n                copyDomProperties(this.nativeElement, properties);\n                // Collect properties from the bindings. This is needed for animation renderer which has\n                // synthetic properties which don't get reflected into the DOM.\n                collectPropertyBindings(properties, tNode, lView, tData);\n                return properties;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    var lowercaseName = attr.name.toLowerCase();\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n                        // Save the lowercase name to align the behavior between browsers.\n                        // IE preserves the case, while all other browser convert it to lower case.\n                        attributes[lowercaseName] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var result = {};\n                var element = this.nativeElement;\n                // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.\n                var className = element.className;\n                var classes = className && typeof className !== 'string' ? className.baseVal.split(' ') :\n                    className.split(' ');\n                classes.forEach(function (value) { return result[value] = true; });\n                return result;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback.call(node, eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    // In order to ensure that we can detect the special __ngUnwrap__ token described above, we\n                    // use `toString` on the listener and see if it contains the token. We use this approach to\n                    // ensure that it still worked with compiled code since it cannot remove or rename string\n                    // literals. We also considered using a special function name (i.e. if(listener.name ===\n                    // special)) but that was more cumbersome and we were also concerned the compiled code could\n                    // strip the name, turning the condition in to (\"\" === \"\") and always returning true.\n                    if (listener.toString().indexOf('__ngUnwrap__') !== -1) {\n                        var unwrappedListener = listener('__ngUnwrap__');\n                        return invokedListeners.indexOf(unwrappedListener) === -1 &&\n                            unwrappedListener.call(node, eventObj);\n                    }\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function copyDomProperties(element, properties) {\n        if (element) {\n            // Skip own properties (as those are patched)\n            var obj = Object.getPrototypeOf(element);\n            var NodePrototype = Node.prototype;\n            while (obj !== null && obj !== NodePrototype) {\n                var descriptors = Object.getOwnPropertyDescriptors(obj);\n                for (var key in descriptors) {\n                    if (!key.startsWith('__') && !key.startsWith('on')) {\n                        // don't include properties starting with `__` and `on`.\n                        // `__` are patched values which should not be included.\n                        // `on` are listeners which also should not be included.\n                        var value = element[key];\n                        if (isPrimitiveValue(value)) {\n                            properties[key] = value;\n                        }\n                    }\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n        }\n    }\n    function isPrimitiveValue(value) {\n        return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n            value === null;\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode, false);\n        if (context !== null) {\n            var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n            _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n        }\n        else {\n            // If the context is null, then `parentElement` was either created with Renderer2 or native DOM\n            // APIs.\n            _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);\n        }\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = lView[DECLARATION_COMPONENT_VIEW];\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(properties, tNode, lView, tData) {\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getDebugNodeR2__PRE_R3__(nativeNode) {\n        return getDebugNode__PRE_R3__(nativeNode);\n    }\n    function getDebugNodeR2__POST_R3__(_nativeNode) {\n        return null;\n    }\n    var getDebugNodeR2 = getDebugNodeR2__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n            typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    var ɵ0$g = USD_CURRENCY_CODE;\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n        { provide: DEFAULT_CURRENCY_CODE, useValue: ɵ0$g },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) {\n            queue.push(fn);\n        };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: matchedQueries,\n            matchedQueryIds: matchedQueryIds,\n            references: references,\n            ngContentIndex: ngContentIndex,\n            childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null,\n                template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] =\n                { type: 0 /* ElementOutput */, target: target, eventName: eventName, propName: null };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: matchedQueries,\n            matchedQueryIds: matchedQueryIds,\n            references: references,\n            ngContentIndex: ngContentIndex,\n            childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0,\n            bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries,\n            flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP,\n            handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount,\n            lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null,\n            parentNodeDef: parentNodeDef,\n            context: null,\n            component: null,\n            nodes: nodes,\n            state: 13 /* CatInit */,\n            root: root,\n            renderer: renderer,\n            oldValues: new Array(def.bindingCount),\n            disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector,\n            projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode,\n            sanitizer: sanitizer,\n            rendererFactory: rendererFactory,\n            renderer: renderer,\n            errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () {\n                return createInjector$1(this.elView, this.elDef);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () {\n                return this.elOrCompView.component;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () {\n                return this.elOrCompView.context;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) {\n            return this.debugContextFactory(nativeElement);\n        };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () {\n            this.delegate.destroy();\n        };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) {\n            return this.delegate.parentNode(node);\n        };\n        DebugRenderer2.prototype.nextSibling = function (node) {\n            return this.delegate.nextSibling(node);\n        };\n        DebugRenderer2.prototype.setValue = function (node, value) {\n            return this.delegate.setValue(node, value);\n        };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope,\n            providers: providers,\n            modules: modules,\n            providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n                'For server-side rendering applications add the import to your `main.server.ts` file.)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DEFAULT_CURRENCY_CODE = DEFAULT_CURRENCY_CODE;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_ba = getLView;\n    exports.ɵangular_packages_core_core_bb = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bc = getBindingRoot;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bf = pureFunction1Internal;\n    exports.ɵangular_packages_core_core_bg = pureFunction2Internal;\n    exports.ɵangular_packages_core_core_bh = pureFunction3Internal;\n    exports.ɵangular_packages_core_core_bi = pureFunction4Internal;\n    exports.ɵangular_packages_core_core_bj = pureFunctionVInternal;\n    exports.ɵangular_packages_core_core_bk = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bl = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bm = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_bp = noSideEffects;\n    exports.ɵangular_packages_core_core_bq = getRootContext;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_m = getDebugNodeR2__PRE_R3__;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_t = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_u = USD_CURRENCY_CODE;\n    exports.ɵangular_packages_core_core_v = _def;\n    exports.ɵangular_packages_core_core_w = DebugContext;\n    exports.ɵangular_packages_core_core_x = SCHEDULER;\n    exports.ɵangular_packages_core_core_y = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_z = instructionState;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNodeR2 = getDebugNodeR2;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocaleCurrencyCode = getLocaleCurrencyCode;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresetJitOptions = resetJitOptions;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵinvalidFactoryDep = ɵɵinvalidFactoryDep;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleMapInterpolate1 = ɵɵstyleMapInterpolate1;\n    exports.ɵɵstyleMapInterpolate2 = ɵɵstyleMapInterpolate2;\n    exports.ɵɵstyleMapInterpolate3 = ɵɵstyleMapInterpolate3;\n    exports.ɵɵstyleMapInterpolate4 = ɵɵstyleMapInterpolate4;\n    exports.ɵɵstyleMapInterpolate5 = ɵɵstyleMapInterpolate5;\n    exports.ɵɵstyleMapInterpolate6 = ɵɵstyleMapInterpolate6;\n    exports.ɵɵstyleMapInterpolate7 = ɵɵstyleMapInterpolate7;\n    exports.ɵɵstyleMapInterpolate8 = ɵɵstyleMapInterpolate8;\n    exports.ɵɵstyleMapInterpolateV = ɵɵstyleMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}