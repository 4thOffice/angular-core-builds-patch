{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isLContainer","getRootView","lViewData","readPatchedLViewData","readPatchedData","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tagName","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","hostTNode","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","viewData","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","getOrCreatePlayerContext","stylingContext","allocPlayerContext","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createNodeAtIndex","createTNode","createViewNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","tParent","injectorIndex","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","R3_ELEMENT_REF_FACTORY","injectElementRef","R3_TEMPLATE_REF_FACTORY","injectTemplateRef","R3_CHANGE_DETECTOR_REF_FACTORY","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","R3_VIEW_CONTAINER_REF_FACTORY","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","clear","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","move","newIndex","shift","R3_RENDERER2_FACTORY","injectRenderer2","getOrCreateRenderer2","ElementRef","nativeElement","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","compilePipe","compilePipeFromMetadata","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","ChangeDetectorRef","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","loadContext","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","CorePlayerHandler","_players","player","play","queuePlayer","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_ELEMENT_REF_FACTORY__POST_NGCC__","R3_TEMPLATE_REF_FACTORY__POST_NGCC__","R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","R3_RENDERER2_FACTORY__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__","ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__","ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","ÉµR3_RENDERER2_FACTORY__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-rc.1+62.sha-b29e709\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var renderParent = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData)\n                storageIndex = HOST;\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for player access');\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return stylingContext[0 /* PlayerContext */] || allocPlayerContext(stylingContext);\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        styles = styles || null;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classes === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = styles === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            context[6 /* PreviousMultiClassValue */] = classes;\n            if (typeof classes == 'string') {\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            }\n        }\n        classes = (classes || EMPTY_OBJ);\n        if (!ignoreAllStyleUpdates) {\n            context[7 /* PreviousMultiStyleValue */] = styles;\n        }\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                context.push(flag, prop, value);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            tNode = tView.data[adjustedIndex] = createTNode(type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(2 /* View */, index, null, null, null);\n        }\n        isParent = true;\n        return previousOrParentTNode = view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(previousOrParentTNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index, viewData), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index, viewData), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, viewData), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index, viewData), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, viewData);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, native);\n        if (directiveDef.template) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, native) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = viewData[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, viewData);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                rootView.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, hostRNode);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n    var R3_RENDERER2_FACTORY = injectRenderer2;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return R3_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.1+62.sha-b29e709');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreatePlayerContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreatePlayerContext(ref);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n    var R3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ÉµpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ÉµcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ÉµcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ÉµcompilePipe = R3_COMPILE_PIPE;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}