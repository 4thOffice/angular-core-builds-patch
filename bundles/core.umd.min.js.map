{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ViewEncapsulation","Set","componentNeedsResolution","old","response","ngDevModeResetPerfCounters","firstTemplatePass","tNode","tView","rendererCreateTextNode","rendererSetText","rendererCreateElement","rendererAddEventListener","rendererSetAttribute","rendererRemoveAttribute","rendererSetProperty","rendererSetClassName","rendererAddClass","rendererRemoveClass","rendererSetStyle","rendererRemoveStyle","rendererDestroy","rendererDestroyNode","rendererMoveNode","rendererRemoveNode","rendererCreateComment","stylingMap","stylingMapCacheMiss","stylingProp","stylingPropCacheMiss","stylingApply","stylingApplyCacheMiss","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","VIEWS","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","getSelectedIndex","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","trim","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","bindingIndex","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","throwMultipleComponentError","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","isMultiValueCacheHit","ignoreAllStyleUpdates","readCachedMapValue","classesPlayerBuilder","ClassAndStylePlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","playerBuildersAreDirty","classesPlayerBuilderIndex","hasPlayerBuilderChanged","setPlayerBuilder","stylesPlayerBuilderIndex","multiStylesStartIndex","getMultiStylesStartIndex","multiClassesStartIndex","getMultiClassesStartIndex","multiClassesEndIndex","totalNewEntries","patchStylingMapIntoContext","setContextPlayersDirty","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","updateClassProp","offset","input","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","addNode","comment","createComment","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵelementStyling","classBindingNames","styleBindingNames","initElementStyling","ɵɵelementHostStyling","directiveStylingIndex","getActiveDirectiveStylingIndex","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ɵɵelementStyleProp","styleIndex","valueToAdd","resolveStylePropValue","ɵɵelementHostStyleProp","hostElementIndex","ɵɵelementClassProp","classIndex","booleanOrNull","ɵɵelementHostClassProp","ɵɵelementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","ɵɵelementHostStylingMap","ɵɵelementStylingApply","elementStylingApplyInternal","ɵɵelementHostStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","ɵɵelementStart","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","currentQueries","clone","ɵɵelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","ɵɵelement","ɵɵelementAttribute","strValue","ɵɵelementHostAttrs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","ɵɵprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵbind","ɵɵelementProperty","ɵɵcomponentHostSyntheticProperty","ɵɵinterpolationV","ɵɵinterpolation1","v0","ɵɵinterpolation2","i0","v1","ɵɵinterpolation3","i1","v2","ɵɵinterpolation4","i2","v3","ɵɵinterpolation5","i3","v4","ɵɵinterpolation6","i4","v5","ɵɵinterpolation7","i5","v6","ɵɵinterpolation8","i6","v7","ɵɵselect","ɵɵtext","textNative","ɵɵtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","goog","getMsg","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","shift","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","ɵɵi18nExp","expression","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","flatten","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","angularCoreEnv","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","typeArgumentCount","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS$1","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.11+90.sha-0aa0f11.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵinject instead.\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n            stylingMap: 0,\n            stylingMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof _global['ngDevMode'] === 'undefined' || _global['ngDevMode']) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        var ngModuleDef = getNgModuleDef(type, true);\n        ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$1;\n        ngModuleDef.imports = scope.imports || EMPTY_ARRAY$1;\n        ngModuleDef.exports = scope.exports || EMPTY_ARRAY$1;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    var VIEWS = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        ngDevMode &&\n            assertGreaterThan(_selectedIndex, -1, 'select() should be called prior to retrieving the selected index');\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStylingMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return ɵɵsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        var index = findNextInsertionIndex(buffer, priority);\n        buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && ngDevMode.stylingMap++;\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && ngDevMode.stylingMapCacheMiss++;\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        setActiveHostElement(currentElementIndex);\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        // Each directive gets a uniqueId value that is the same for both\n                        // create and update calls when the hostBindings function is called. The\n                        // directive uniqueId is not set anywhere--it is just incremented between\n                        // each hostBindings call and is useful for helping instruction code\n                        // uniquely determine which directive is currently active when executed.\n                        incrementActiveDirectiveId();\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n        setActiveHostElement(null);\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                ɵɵnamespaceHTML();\n                // Reset the selected index so we can assert that `select` was called later\n                setSelectedIndex(-1);\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    ɵɵnamespaceHTML();\n                    // Reset the selected index so we can assert that `select` was called later\n                    setSelectedIndex(-1);\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        setActiveHostElement(elementIndex);\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                // Each directive gets a uniqueId value that is the same for both\n                // create and update calls when the hostBindings function is called. The\n                // directive uniqueId is not set anywhere--it is just incremented between\n                // each hostBindings call and is useful for helping instruction code\n                // uniquely determine which directive is currently active when executed.\n                incrementActiveDirectiveId();\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n        setActiveHostElement(null);\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n            [],\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container = current;\n                for (var i = 0; i < container[VIEWS].length; i++) {\n                    var dynamicViewData = container[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            ɵɵnamespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            // Reset the selected index so we can assert that `select` was called later\n            setSelectedIndex(-1);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    if (nodeOrContainer[VIEWS].length) {\n                        currentView = nodeOrContainer[VIEWS][0];\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - elementStyling\n     * - elementStylingMap\n     * - elementStyleProp\n     * - elementClassProp\n     * - elementStylingApply\n     *\n     * Host bindings level styling instructions:\n     * - elementHostStyling\n     * - elementHostStylingMap\n     * - elementHostStyleProp\n     * - elementHostClassProp\n     * - elementHostStylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        // calling the function below ensures that the template's binding values\n        // are applied as the first set of bindings into the context. If any other\n        // styling bindings are set on the same element (by directives and/or\n        // components) then they will be applied at the end of the `elementEnd`\n        // instruction (because directives are created first before styling is\n        // executed for a new element).\n        initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n    }\n    /**\n     * Allocates style and class binding properties on the host element during creation mode\n     * within the host bindings function of a directive or component.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class host bindings on the host element of a directive or\n     * component. Note that this is only used for binding values (see `elementHostAttrs`\n     * to learn how to assign static styling values to the host element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementHostClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementHostStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the provided `directive` and\n     *        will not be used if the same property is assigned in another directive or\n     *        on the element directly.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        // despite the binding being applied in a queue (below), the allocation\n        // of the directive into the context happens right away. The reason for\n        // this is to retain the ordering of the directives (which is important\n        // for the prioritization of bindings).\n        allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n        var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n        fns.push(function () {\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n            registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n        });\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStylingMap` or any static styles that are\n     * present from when the element was created with `elementStyling`).\n     *\n     * Note that the styling element is updated as part of `elementStylingApply`.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStyling`.\n     * @param value New value to write (falsy to remove). Note that if a directive also\n     *        attempts to write to the same binding value (via `elementHostStyleProp`)\n     *        then it will only be able to do so if the binding value assigned via\n     *        `elementStyleProp` is falsy (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStyleProp(index, styleIndex, value, suffix, forceOverride) {\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a host style binding value on the host element within a component/directive.\n     *\n     * If the style value is falsy then it will be removed from the host element\n     * (or assigned a different value depending if there are any styles placed\n     * on the same element with `elementHostStylingMap` or any static styles that\n     * are present from when the element was patched with `elementHostStyling`).\n     *\n     * Note that the styling applied to the host element once\n     * `elementHostStylingApply` is called.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementHostStyling`.\n     * @param value New value to write (falsy to remove). The value may or may not\n     *        be applied to the element depending on the template/component/directive\n     *        prioritization (see `interfaces/styling.ts`)\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStyleProp(styleIndex, value, suffix, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementStyling` within the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStyling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementClassProp(index, classIndex, value, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a class host binding for a directive's/component's host element within\n     * the host bindings function.\n     *\n     * This instruction is meant to handle the `@HostBinding('class.foo')` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementHostStyling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementHostStlying` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the stylings priority structure.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostClassProp(classIndex, value, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literals on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles/classes are applied to the element they will then be updated with\n     * respect to any styles/classes set with `elementStyleProp` or `elementClassProp`. If any\n     * styles or classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `elementStylingApply` is called.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStylingMap(index, classes, styles) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n            classes = NO_CHANGE;\n        }\n        if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            var initialStyles = getInitialClassNameValue(stylingContext);\n            var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n            setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n            styles = NO_CHANGE;\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    /**\n     * Update style and/or class host bindings using object literals on an element within the host\n     * bindings function for a directive/component.\n     *\n     * This instruction is meant to apply styling via the `@HostBinding('style')` and\n     * `@HostBinding('class')` bindings for a component's or directive's host element.\n     * When styles/classes are applied to the host element they will then be updated\n     * with respect to any styles/classes set with `elementHostStyleProp` or\n     * `elementHostClassProp`. If any styles or classes are set to falsy then they\n     * will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until\n     * `elementHostStylingApply` is called.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStylingMap(classes, styles) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var args = [stylingContext, classes, styles, directiveStylingIndex];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStylingMap, args);\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `elementStylingMap`, `elementStyleProp`\n     * or `elementClassProp` instructions have been run and will only apply styling to\n     * the element if any styling bindings have been updated.\n     *\n     * @param index Index of the element's with which styling is associated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStylingApply(index) {\n        elementStylingApplyInternal(DEFAULT_TEMPLATE_DIRECTIVE_INDEX, index);\n    }\n    /**\n     * Apply all style and class host binding values to the element.\n     *\n     * This instruction is meant to be run after `elementHostStylingMap`,\n     * `elementHostStyleProp` or `elementHostClassProp` instructions have\n     * been run and will only apply styling to the host element if any\n     * styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStylingApply() {\n        elementStylingApplyInternal(getActiveDirectiveStylingIndex(), getSelectedIndex());\n    }\n    function elementStylingApplyInternal(directiveStylingIndex, index) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (tCleanup[i] === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                i += 2;\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                //\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                var existingListener = eventTargetResolver ? null : findExistingListener(lView, eventName, tNode.index);\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            return listenerFn(e);\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e);\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n      *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function ɵɵbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ɵɵelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        setSelectedIndex(index);\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        // because inheritance is unknown during compile time, the runtime code\n                        // needs to be informed of the super-class depth so that instruction code\n                        // can distinguish one host bindings function from another. The reason why\n                        // relying on the directive uniqueId exclusively is not enough is because the\n                        // uniqueId value and the directive instance stay the same between hostBindings\n                        // calls throughout the directive inheritance chain. This means that without\n                        // a super-class depth value, there is no way to know whether a parent or\n                        // sub-class host bindings function is currently being executed.\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            // The reason why we increment first and then decrement is so that parent\n                            // hostBindings calls have a higher id value compared to sub-class hostBindings\n                            // calls (this way the leaf directive is always at a super-class depth of 0).\n                            adjustActiveDirectiveSuperClassDepthPosition(1);\n                            try {\n                                superHostBindings_1(rf, ctx, elementIndex);\n                            }\n                            finally {\n                                adjustActiveDirectiveSuperClassDepthPosition(-1);\n                            }\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.11+90.sha-0aa0f11.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (typeof _global['ngI18nClosureMode'] === 'undefined') {\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ɵɵelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ɵɵelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ɵɵtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ɵɵelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @publicApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ɵɵviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return ɵɵload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ɵɵcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵelementAttribute': ɵɵelementAttribute,\n        'ɵɵbind': ɵɵbind,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵinterpolation1': ɵɵinterpolation1,\n        'ɵɵinterpolation2': ɵɵinterpolation2,\n        'ɵɵinterpolation3': ɵɵinterpolation3,\n        'ɵɵinterpolation4': ɵɵinterpolation4,\n        'ɵɵinterpolation5': ɵɵinterpolation5,\n        'ɵɵinterpolation6': ɵɵinterpolation6,\n        'ɵɵinterpolation7': ɵɵinterpolation7,\n        'ɵɵinterpolation8': ɵɵinterpolation8,\n        'ɵɵinterpolationV': ɵɵinterpolationV,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵelementProperty': ɵɵelementProperty,\n        'ɵɵcomponentHostSyntheticProperty': ɵɵcomponentHostSyntheticProperty,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵelementStyling': ɵɵelementStyling,\n        'ɵɵelementStylingMap': ɵɵelementStylingMap,\n        'ɵɵelementStyleProp': ɵɵelementStyleProp,\n        'ɵɵelementStylingApply': ɵɵelementStylingApply,\n        'ɵɵelementClassProp': ɵɵelementClassProp,\n        'ɵɵelementHostStyling': ɵɵelementHostStyling,\n        'ɵɵelementHostStylingMap': ɵɵelementHostStylingMap,\n        'ɵɵelementHostStyleProp': ɵɵelementHostStyleProp,\n        'ɵɵelementHostStylingApply': ɵɵelementHostStylingApply,\n        'ɵɵelementHostClassProp': ɵɵelementHostClassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$1(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$1(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = 0; i < lContainer[VIEWS].length; i++) {\n            var childView = lContainer[VIEWS][i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_bn = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bp = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵbind = ɵɵbind;\n    exports.ɵɵinterpolation1 = ɵɵinterpolation1;\n    exports.ɵɵinterpolation2 = ɵɵinterpolation2;\n    exports.ɵɵinterpolation3 = ɵɵinterpolation3;\n    exports.ɵɵinterpolation4 = ɵɵinterpolation4;\n    exports.ɵɵinterpolation5 = ɵɵinterpolation5;\n    exports.ɵɵinterpolation6 = ɵɵinterpolation6;\n    exports.ɵɵinterpolation7 = ɵɵinterpolation7;\n    exports.ɵɵinterpolation8 = ɵɵinterpolation8;\n    exports.ɵɵinterpolationV = ɵɵinterpolationV;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementProperty = ɵɵelementProperty;\n    exports.ɵɵcomponentHostSyntheticProperty = ɵɵcomponentHostSyntheticProperty;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementAttribute = ɵɵelementAttribute;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementStyling = ɵɵelementStyling;\n    exports.ɵɵelementStylingMap = ɵɵelementStylingMap;\n    exports.ɵɵelementStyleProp = ɵɵelementStyleProp;\n    exports.ɵɵelementStylingApply = ɵɵelementStylingApply;\n    exports.ɵɵelementClassProp = ɵɵelementClassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementHostStyling = ɵɵelementHostStyling;\n    exports.ɵɵelementHostStylingMap = ɵɵelementHostStylingMap;\n    exports.ɵɵelementHostStyleProp = ɵɵelementHostStyleProp;\n    exports.ɵɵelementHostClassProp = ɵɵelementHostClassProp;\n    exports.ɵɵelementHostStylingApply = ɵɵelementHostStylingApply;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}