{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","template","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","isLView","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isLContainer","isRootView","readPatchedData","readPatchedLView","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","arr","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","splice","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","viewOrContainer","executeOnDestroys","removeListeners","tCleanup","cleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","allowValueChange","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","flag","prepareInitialFlag","insertNewMultiProperty","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","style","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","dirs","getDirectiveRegistryValuesIndexOf","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","_CLEAN_PROMISE","Promise","refreshDescendantViews","creationMode","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","rendererFactory","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialClasses","renderInitialStyles","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","textNative","textBinding","element_2","textContent","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","queries","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","destroyed","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","shift","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedNodes","readCreateOpCodes","lastCreatedNode","findLastNode","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,mBACvF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,UAAW,OAAQ,kBAAmBJ,GAClFA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,OAAUR,EAAOQ,GAAGC,SAAYT,EAAOU,KAAMV,EAAOU,KAAKC,WAHnH,CAIEC,KAAM,SAAUV,EAASQ,EAAMC,GAAa,aAkB1C,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAGhC,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2H3B,EAAvH4B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOzB,OAAO4B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASjB,EAAIwB,EAAWP,MAAIY,GAAKD,EAAI,EAAI5B,EAAE6B,GAAKD,EAAI,EAAI5B,EAAEyB,EAAQC,EAAKG,GAAK7B,EAAEyB,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK3B,OAAO+B,eAAeR,EAAQC,EAAKG,GAAIA,EAGhE,SAASK,EAAQC,EAAYC,GACzB,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAG3D,SAASE,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAGpH,SAASE,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAW5B,EAAI,EAChE,OAAI0B,EAAUA,EAAEtB,KAAKqB,IAEjBI,KAAM,WAEF,OADIJ,GAAKzB,GAAKyB,EAAEtB,SAAQsB,OAAI,IACnBK,MAAOL,GAAKA,EAAEzB,KAAM+B,MAAON,KAKhD,SAASO,EAAOP,EAAGxB,GACf,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BjC,EAAI0B,EAAEtB,KAAKqB,GAAOS,KACtB,IACI,WAAc,IAANjC,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE6B,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQxB,IAAMA,EAAEmB,OAASL,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAElD,QAAU,GAAIiC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASlC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkC,EAAKA,EAAGI,OAAON,EAAO9B,UAAUF,KACpC,OAAOkC;;;;;;;OAUX,IAAIK,EAAc,kBACdC,EAAa,iBACbC,EAAgB,qBAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,IAAIC,EAAWC,EAAiBL,GAChC,SAASM,IAEL,IADA,IAIIC,EAJAC,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAGzB,GAAIxE,gBAAgBqE,EAEhB,OADAF,EAAS5C,KAAKC,MAAM2C,EAAUX,GAAUxD,MAAOuE,IACxCvE,KAEX,IAAIyE,EAAqB,KAAMH,EAAKD,GAAkBK,KAAKlD,MAAM8C,EAAId,QAAU,GAASe,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAO1C,WAAM,EAAQgC,GAAUoB,GAAML,KAGvBK,EAAInE,eAAeiD,GACjCkB,EAAIlB,GACJtD,OAAO+B,eAAeyC,EAAKlB,GAAeT,WAAaS,IAC/CJ,KAAKmB,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiBxD,UAAYT,OAAOU,OAAOkD,EAAYnD,YAE3DwD,EAAiBxD,UAAUgE,eAAiBf,EAC5CO,EAAiBS,cAAgBT,EAC1BA,EAEX,SAASD,EAAiBL,GACtB,OAAO,SAASgB,IAEZ,IADA,IAAIR,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,GAAIT,EAAO,CACP,IAAIiB,EAASjB,EAAMvC,WAAM,EAAQgC,EAASe,IAC1C,IAAK,IAAIU,KAAYD,EACjBhF,KAAKiF,GAAYD,EAAOC,KAKxC,SAASC,EAAmBpB,EAAMC,EAAOC,GACrC,IAAIG,EAAWC,EAAiBL,GAChC,SAASoB,IAEL,IADA,IAIIb,EAJAC,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAGzB,GAAIxE,gBAAgBmF,EAEhB,OADAhB,EAAS3C,MAAMxB,KAAMuE,GACdvE,KAEX,IAAIyE,EAAqB,KAAMH,EAAKa,GAAuBT,KAAKlD,MAAM8C,EAAId,QAAU,GAASe,KAE7F,OADAa,EAAeC,WAAaZ,EACrBW,EACP,SAASA,EAAeR,EAAKU,EAAWC,GAQpC,IALA,IAAIC,EAAaZ,EAAInE,eAAekD,GAChCiB,EAAIjB,GACJvD,OAAO+B,eAAeyC,EAAKjB,GAAcV,WAAaU,GAGnD6B,EAAWlE,QAAUiE,GACxBC,EAAWlC,KAAK,MAGpB,OADCkC,EAAWD,GAASC,EAAWD,QAAcjC,KAAKmB,GAC5CG,GAQf,OALIZ,IACAmB,EAAsBtE,UAAYT,OAAOU,OAAOkD,EAAYnD,YAEhEsE,EAAsBtE,UAAUgE,eAAiBf,EACjDqB,EAAsBL,cAAgBK,EAC/BA,EAEX,SAASM,EAAkB3B,EAAMC,EAAOC,EAAaC,GACjD,IAAIE,EAAWC,EAAiBL,GAChC,SAAS2B,IAEL,IADA,IAIIpB,EAJAC,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAGzB,GAAIxE,gBAAgB0F,EAEhB,OADAvB,EAAS3C,MAAMxB,KAAMuE,GACdvE,KAEX,IAAI2F,EAAoB,KAAMrB,EAAKoB,GAAsBhB,KAAKlD,MAAM8C,EAAId,QAAU,GAASe,KAa3F,OAZA,SAASqB,EAAcjE,EAAQmC,GAC3B,IAAIlD,EAAce,EAAOf,YAGrBiF,EAAOjF,EAAYH,eAAemD,GAClChD,EAAYgD,GACZxD,OAAO+B,eAAevB,EAAagD,GAAiBX,WAAaW,GACrEiC,EAAK/B,GAAQ+B,EAAKpF,eAAeqD,IAAS+B,EAAK/B,OAC/C+B,EAAK/B,GAAMgC,QAAQH,GACf1B,GACAA,EAAqBzC,WAAM,EAAQgC,GAAU7B,EAAQmC,GAAOS,KASxE,OALIP,IACA0B,EAAqB7E,UAAYT,OAAOU,OAAOkD,EAAYnD,YAE/D6E,EAAqB7E,UAAUgE,eAAiBf,EAChD4B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OAgBX,IA4CWK,EA5CPC,EAASd,EAAmB,SAAU,SAAUe,GAAS,OAAUA,MAAOA,KAO1EC,EAAWhB,EAAmB,YAO9BiB,EAAOjB,EAAmB,QAO1BkB,EAAWlB,EAAmB,YAO9BmB,EAAOnB,EAAmB,QAO1BoB,EAAYpB,EAAmB,YAAa,SAAUqB,GAAiB,OAAUA,cAAeA;;;;;;;;AAiCpG,SAASC,EAAuBC,GAC5B,IAAK,IAAI7E,KAAO6E,EACZ,GAAIA,EAAyB7E,KAAS4E,EAClC,OAAO5E,EAGf,MAAM8E,MAAM,qDAQhB,SAASC,EAAehF,EAAQiF,GAC5B,IAAK,IAAIhF,KAAOgF,EACRA,EAAOnG,eAAemB,KAASD,EAAOlB,eAAemB,KACrDD,EAAOC,GAAOgF,EAAOhF;;;;;;;OA4BjC,SAASiF,EAAiBC,GACtB,OACIC,WAAYD,EAAKC,YAAc,KAAM1H,QAASyH,EAAKzH,QAAS4D,WAAO+D,GAuB3E,SAASC,EAAeC,GACpB,OACI7H,QAAS6H,EAAQ7H,QAAS8H,UAAWD,EAAQC,cAAiBC,QAASF,EAAQE,aAQvF,SAASC,EAAiBC,GACtB,OAAOA,GAAQA,EAAK7G,eAAe8G,GAAqBD,EAAKC,GAAqB,KAOtF,SAASC,EAAeF,GACpB,OAAOA,GAAQA,EAAK7G,eAAegH,GAAmBH,EAAKG,GAAmB;;;;;;;;AAjHvE1B,EAeRzG,EAAQyG,cAAgBzG,EAAQyG,iBAZnBA,EAAqB,QAAI,GAAK,UAK1CA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAsB,SAAI,GAAK,WAE3CA,EAAYA,EAAsB,SAAI,GAAK,WAqG/C,IAAIwB,EAAoBf,GAAyBkB,gBAAiBlB,IAC9DiB,EAAkBjB,GAAyBmB,cAAenB;;;;;;;;AAS9D,SAASoB,EAAU3B,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiB1F,MACjB,MAAO,IAAM0F,EAAM4B,IAAID,GAAWE,KAAK,MAAQ,IAEnD,GAAa,MAAT7B,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAM8B,eACN,MAAO,GAAK9B,EAAM8B,eAEtB,GAAI9B,EAAMnC,KACN,MAAO,GAAKmC,EAAMnC,KAEtB,IAAIkE,EAAM/B,EAAMgC,WAChB,GAAW,MAAPD,EACA,MAAO,GAAKA,EAEhB,IAAIE,EAAeF,EAAIG,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBF,EAAMA,EAAII,UAAU,EAAGF;;;;;;;OAUxD,IAAIG,EAAkB7B,GAAyB6B,gBAAiB7B,IAahE,SAAS8B,EAAWC,GAGhB,OAFAA,EAAaF,gBAAkBC,EAC/BC,EAAaN,SAAW,WAAc,OAAOL,EAAU5H,SAChDuI,EAeX,SAASC,EAAkBlB,GACvB,IAAImB,EAAKnB,EACT,MAAkB,mBAAPmB,GAAqBA,EAAGhI,eAAe4H,IAC9CI,EAAGJ,kBAAoBC,EAChBG,IAGAnB;;;;;;;OAsBf,IASIoB,EATAC,EAXJ,SAASC,IACL,IAAIC,EAAqC,oBAAfC,YAA8BA,WACpDC,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAATtJ,MAAqD,oBAAtBuJ,mBAC/CvJ,gBAAgBuJ,mBAAqBvJ,KACrCwJ,EAA6B,oBAAX/J,QAA0BA,OAIhD,OAAOyJ,GAAgBM,GAAYJ,GAAYE,EAErCL;;;;;;;;;;;;;;;AAsBd,SAASQ,IACL,IAAIC,EAAWV,EAAQ/I,GACvB,IAAKyJ,IAAaA,EAASC,gBACvB,MAAM,IAAI5C,MAAM,+VAKpB,OAAO2C,EAASC;;;;;;;QApBpB,SAAWZ,GACPA,EAAyBA,EAAgC,MAAI,GAAK,QAClEA,EAAyBA,EAAoC,UAAI,GAAK,YAF1E,CAGGA,IAA6BA,OAiChC,IAeIa,EAfAC,OAAmBxC,EACvB,SAASyC,EAAmBC,GACxB,IAAIC,EAASH,EAEb,OADAA,EAAmBE,EACZC,EAeX,SAASC,EAAwBC,GAC7B,IAAIC,EAAWP,EAEf,OADAA,EAAwBM,EACjBC,EAEX,SAASC,EAAmB9D,EAAO+D,GAE/B,QADc,IAAVA,IAAoBA,EAAQ1K,EAAQyG,YAAYkE,cAC3BjD,IAArBwC,EACA,MAAM,IAAI9C,MAAM,qDAEf,OAAyB,OAArB8C,EACEU,EAAmBjE,OAAOe,EAAWgD,GAGrCR,EAAiBW,IAAIlE,EAAO+D,EAAQ1K,EAAQyG,YAAYG,SAAW,UAAOc,EAAWgD,GAGpG,SAASI,EAAOnE,EAAO+D,GAEnB,YADc,IAAVA,IAAoBA,EAAQ1K,EAAQyG,YAAYkE,UAC5CV,GAAyBQ,GAAoB9D,EAAO+D,GAShE,SAASE,EAAmBjE,EAAOoE,EAAeL,GAC9C,IAAIM,EAAgBjD,EAAiBpB,GACrC,GAAIqE,GAA6C,QAA5BA,EAAcvD,WAC/B,YAA+BC,IAAxBsD,EAAcrH,MAAsBqH,EAAcrH,MAAQqH,EAAcjL,UAC3EiL,EAAcrH,MAEtB,GAAI+G,EAAQ1K,EAAQyG,YAAYG,SAC5B,OAAO,KACX,QAAsBc,IAAlBqD,EACA,OAAOA,EACX,MAAM,IAAI3D,MAAM,wBAA0BkB,EAAU3B,GAAS,KAEjE,SAASsE,EAAWC,GAEhB,IADA,IAAIjG,KACKpD,EAAI,EAAGA,EAAIqJ,EAAMlJ,OAAQH,IAAK,CACnC,IAAIsJ,EAAMD,EAAMrJ,GAChB,GAAIZ,MAAMmK,QAAQD,GAAM,CACpB,GAAmB,IAAfA,EAAInJ,OACJ,MAAM,IAAIoF,MAAM,wCAIpB,IAFA,IAAIY,OAAON,EACPgD,EAAQ1K,EAAQyG,YAAYkE,QACvBU,EAAI,EAAGA,EAAIF,EAAInJ,OAAQqJ,IAAK,CACjC,IAAI9E,EAAO4E,EAAIE,GACX9E,aAAgBK,GAAoC,aAAxBL,EAAKhB,eACjCmF,GAAS1K,EAAQyG,YAAYG,SAExBL,aAAgBO,GAAoC,aAAxBP,EAAKhB,eACtCmF,GAAS1K,EAAQyG,YAAYK,SAExBP,aAAgBM,GAAgC,SAAxBN,EAAKhB,eAClCmF,GAAS1K,EAAQyG,YAAYI,KAG7BmB,EADKzB,aAAgBG,EACdH,EAAKI,MAGLJ,EAGftB,EAAKjB,KAAK8G,EAAO9C,EAAM0C,SAGvBzF,EAAKjB,KAAK8G,EAAOK,IAGzB,OAAOlG;;;;;;;OAeX,IAAIqG,GACA/D,iBAAoBA,EACpBI,eAAkBA,EAClBmD,OAAUA,EACVS,gBAEJ,SAASC,EAAaxD,GAClB,IAAIyD,EAAUzD,EACV0D,EAAM3D,EAAiB0D,IAAYvD,EAAeuD,GACtD,OAAKC,QAAuBhE,IAAhBgE,EAAI3L,QAGT2L,EAAI3L,QAFA;;;;;;;SAsBX4L,EAAOC,SACX,SAASC,EAAOC,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIC,GAAgB,6DAChBC,GAAkB,4CAClBC,GAA4B,mEAC5BC,GAAwC,WACxC,SAASA,EAAuBC,GAC5BzL,KAAK0L,SAAWD,GAAW9C,EAAiB,QA4MhD,OA1MA6C,EAAuB3K,UAAU8K,oBAAsB,WAAc,OAAO,GAC5EH,EAAuB3K,UAAUxB,QAAU,SAAU4B,GAAK,OAAO,WAE7D,IADA,IAAIsD,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,OAAO,IAAKvD,EAAEyD,KAAKlD,MAAMP,EAAGuC,QAAU,GAASe,OAGnDiH,EAAuB3K,UAAU+K,wBAA0B,SAAUC,EAAYC,GAC7E,IAAIC,EAEAA,OADsB,IAAfF,EACE,IAAItL,MAAMuL,EAAiBxK,QAG3B,IAAIf,MAAMsL,EAAWvK,QAElC,IAAK,IAAIH,EAAI,EAAGA,EAAI4K,EAAOzK,OAAQH,IAK3B4K,EAAO5K,QADe,IAAf0K,KAGFA,EAAW1K,IAAMf,QACTyL,EAAW1K,OAKxB2K,GAA2C,MAAvBA,EAAiB3K,KACrC4K,EAAO5K,GAAK4K,EAAO5K,GAAGsC,OAAOqI,EAAiB3K,KAGtD,OAAO4K,GAEXP,EAAuB3K,UAAUmL,eAAiB,SAAU1E,EAAM2E,GAC9D,IAAIC,EAAU5E,EAAKW,WAQnB,GAAIoD,GAAcc,KAAKD,IAClBZ,GAAgBa,KAAKD,KAAaX,GAA0BY,KAAKD,GAClE,OAAO,KAGX,GAAI5E,EAAK9B,YAAc8B,EAAK9B,aAAeyG,EAAWzG,WAClD,OAAO8B,EAAK9B,WAGhB,IAAI4G,EAAoB9E,EAAK+E,eAC7B,GAAID,GAAqBA,IAAsBH,EAAWI,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAexE,IAAI,SAAU0E,GAAa,OAAOA,GAAaA,EAAUjF,OACvFkF,EAAqBH,EAAexE,IAAI,SAAU0E,GAClD,OAAOA,GAAaE,GAAoCF,EAAU7K,cAEtE,OAAO1B,KAAK4L,wBAAwBU,EAAcE,GAGtD,IAAIV,EAAmBxE,EAAK7G,eAAekD,IAAe2D,EAAK3D,GAC3DkI,EAAa7L,KAAK0L,UAAY1L,KAAK0L,SAASgB,gBAC5C1M,KAAK0L,SAASgB,eAAe,oBAAqBpF,GACtD,OAAIuE,GAAcC,EACP9L,KAAK4L,wBAAwBC,EAAYC,GAM7C,IAAIvL,MAAM+G,EAAKhG,QAAQqL,UAAK3F,IAEvCwE,EAAuB3K,UAAU2E,WAAa,SAAU8B,GAGpD,IAAK6D,EAAO7D,GACR,SAEJ,IAAI2E,EAAaW,GAActF,GAC3B9B,EAAaxF,KAAKgM,eAAe1E,EAAM2E,GAI3C,OAHKzG,GAAcyG,IAAe7L,SAC9BoF,EAAaxF,KAAKwF,WAAWyG,IAE1BzG,OAEXgG,EAAuB3K,UAAUgM,gBAAkB,SAAUC,EAAYb,GAErE,GAAIa,EAAWC,aAAeD,EAAWC,cAAgBd,EAAWc,YAAa,CAC7E,IAAIA,EAAcD,EAAWC,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAID,EAAWpL,YAAcoL,EAAWpL,aAAeuK,EAAWvK,WACvD+K,GAAoCK,EAAWpL,YAGtDoL,EAAWrM,eAAeiD,GACnBoJ,EAAWpJ,GAEf,MAEX8H,EAAuB3K,UAAUkM,YAAc,SAAUD,GACrD,IAAK3B,EAAO2B,GACR,SAEJ,IAAIb,EAAaW,GAAcE,GAC3BE,EAAiBhN,KAAK6M,gBAAgBC,EAAYb,OAEtD,OADwBA,IAAe7L,OAASJ,KAAK+M,YAAYd,OACxCxI,OAAOuJ,IAEpCxB,EAAuB3K,UAAUoM,iBAAmB,SAAUH,EAAYb,GAEtE,GAAIa,EAAWI,cACXJ,EAAWI,eAAiBjB,EAAWiB,aAAc,CACrD,IAAIA,EAAeJ,EAAWI,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIJ,EAAWK,gBACXL,EAAWK,iBAAmBlB,EAAWkB,eAAgB,CACzD,IAAIC,EAAmBN,EAAWK,eAC9BE,KAIJ,OAHAjN,OAAOkN,KAAKF,GAAkBG,QAAQ,SAAUC,GAC5CH,EAAeG,GAAQf,GAAoCW,EAAiBI,MAEzEH,EAGX,OAAIP,EAAWrM,eAAemD,GACnBkJ,EAAWlJ,GAEf,MAEX4H,EAAuB3K,UAAUqM,aAAe,SAAUJ,GACtD,IAAK3B,EAAO2B,GACR,SAEJ,IAAIb,EAAaW,GAAcE,GAC3BI,KACJ,GAAIjB,IAAe7L,OAAQ,CACvB,IAAIqN,EAAuBzN,KAAKkN,aAAajB,GAC7C7L,OAAOkN,KAAKG,GAAsBF,QAAQ,SAAUtI,GAChDiI,EAAajI,GAAYwI,EAAqBxI,KAGtD,IAAIyI,EAAkB1N,KAAKiN,iBAAiBH,EAAYb,GAWxD,OAVIyB,GACAtN,OAAOkN,KAAKI,GAAiBH,QAAQ,SAAUtI,GAC3C,IAAIvD,KACAwL,EAAazM,eAAewE,IAC5BvD,EAAW4B,KAAK9B,MAAME,EAAY8B,EAAS0J,EAAajI,KAE5DvD,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASkK,EAAgBzI,KAC3DiI,EAAajI,GAAYvD,IAG1BwL,GAEX1B,EAAuB3K,UAAU6M,gBAAkB,SAAUZ,GACzD,OAAK3B,EAAO2B,IAGL9M,KAAKiN,iBAAiBH,EAAY1M,aAE7CoL,EAAuB3K,UAAU8M,iBAAmB,SAAUrG,EAAMsG,GAChE,OAAOtG,aAAgB2D,GAAQ2C,KAActG,EAAKzG,WAEtD2K,EAAuB3K,UAAUgN,OAAS,SAAUvG,GAAQ,UAC5DkE,EAAuB3K,UAAUiN,OAAS,SAAUhK,GAAQ,OAAO,IAAIoH,SAAS,IAAK,YAAcpH,EAAO,MAC1G0H,EAAuB3K,UAAUkN,OAAS,SAAUjK,GAChD,OAAO,IAAIoH,SAAS,IAAK,IAAK,YAAcpH,EAAO,UAEvD0H,EAAuB3K,UAAUmN,OAAS,SAAUlK,GAEhD,OAAO,IAAIoH,SAAS,IAAK,OADN,UAAYpH,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5H0H,EAAuB3K,UAAUoN,UAAY,SAAU3G,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAOM,EAAUN,IAE5BkE,EAAuB3K,UAAUqN,YAAc,SAAU5G,GAAQ,MAAO,KAAOM,EAAUN,IACzFkE,EAAuB3K,UAAUsN,kBAAoB,SAAUrK,EAAMsK,EAAWC,EAASC,GACrF,OAAOA,GAEX9C,EAAuB3K,UAAU0N,YAAc,SAAUC,EAAgB1K,GAAQ,OAAO0K,EAAe1K,IAChG0H,EA9MgC,GAgN3C,SAASiB,GAAoCgC,GACzC,OAAKA,EAGEA,EAAqB5G,IAAI,SAAU6G,GACtC,IACI5J,EADgB4J,EAAoBpH,KACNxC,cAElC,OAAO,IAAKA,EAAcJ,KAAKlD,MAAMsD,EAAetB,QAAU,GADzCkL,EAAoBnK,KAAOmK,EAAoBnK,gBAI5E,SAASqI,GAAc7H,GACnB,IAAI4J,EAAc5J,EAAKlE,UAAYT,OAAOwO,eAAe7J,EAAKlE,WAAa,KAI3E,OAHiB8N,EAAcA,EAAY/N,YAAc,OAGpCR;;;;;;;OAUzB,IAAIsL,GAAW,KACf,SAASmD,KACL,OAAQnD,GAAWA,IAAY,IAAIF,GAEvC,SAASsD,GAAoBxH,GACzB,OAAOyH,GAAoBF,KAAarJ,WAAW8B,IAEvD,SAASyH,GAAoBC,GACzB,IAAIC,EAAW7F,IACf,OAAO4F,EAAKnH,IAAI,SAAUqH,GAAO,OAErC,SAASC,EAAkBF,EAAUC,GACjC,IAAIrJ,GACAI,MAAO,KACPmJ,MAAM,EACNC,UAAU,EACVC,SAAUL,EAASvG,yBAAyB6G,MAC5C5P,MAAM,EACN6P,UAAU,GAEd,SAASC,EAAwBxJ,GAC7BJ,EAAKyJ,SAAWL,EAASvG,yBAAyB6G,MAClD1J,EAAKI,MAAQA,EAEjB,GAAI1F,MAAMmK,QAAQwE,GAAM,CACpB,GAAmB,IAAfA,EAAI5N,OACJ,MAAM,IAAIoF,MAAM,yCAEpB,IAAK,IAAIiE,EAAI,EAAGA,EAAIuE,EAAI5N,OAAQqJ,IAAK,CACjC,IAAI+E,EAAQR,EAAIvE,GAChB,QAAc3D,IAAV0I,EAIC,GAAIA,aAAiBxJ,GAA+C,aAAnCwJ,EAAMpP,UAAUuE,eAClDgB,EAAKwJ,UAAW,OAEf,GAAIK,aAAiBtJ,GAA+C,aAAnCsJ,EAAMpP,UAAUuE,eAClDgB,EAAK2J,UAAW,OAEf,GAAIE,aAAiBvJ,GAA2C,SAAnCuJ,EAAMpP,UAAUuE,eAC9CgB,EAAKlG,MAAO,OAEX,GAAI+P,aAAiBrJ,GAA2C,SAAnCqJ,EAAMpP,UAAUuE,eAC9CgB,EAAKuJ,MAAO,OAEX,GAAIM,aAAiB1J,EACtBH,EAAKI,MAAQyJ,EAAMzJ,WAElB,GAAIyJ,aAAiBpJ,EAAW,CACjC,QAA4BU,IAAxB0I,EAAMnJ,cACN,MAAM,IAAIG,MAAM,mCAEpBb,EAAKI,MAAQyJ,EAAMnJ,cACnBV,EAAKyJ,SAAWL,EAASvG,yBAAyBpC,eAGlDmJ,EAAwBC,SAKhCD,EAAwBP,GAE5B,OAAOrJ;;;;;;;OAvDiCsJ,CAAkBF,EAAUC,KA6HxE,IACIS,GAAYnJ,GAAyBoJ,QAASC,OAAQC,SADjDtJ,IAET,SAASuJ,GAAmBlK,GACxB,YAAyBmB,IAAlBnB,EAAKmK,SAEhB,SAASC,GAAmBpK,GACxB,OAAO8J,MAAa9J,EAExB,SAASqK,GAAqBrK,GAC1B,YAA2BmB,IAApBnB,EAAKsK,WAEhB,SAASC,GAAsBvK,GAC3B,YAA4BmB,IAArBnB,EAAKwK;;;;;;;OAUhB,IACIC,GAAc9J,GAAyBoJ,QAASC,OAAQC,SADjDtJ,IAEP+J,MACJ,SAASC,GAAmClJ,EAAMmJ,GAC9C,IAAKA,EAAU,CACX,IACIC,GADAC,EAAyB,IAAInF,IACGhG,WAAW8B,GAE/C,OAAO,WAAc,OAAO,IAAKA,EAAK5C,KAAKlD,MAAM8F,EAAM9D,QAAU,GAAS+G,EAAWmG,OAEzF,GAAIJ,MAAeG,EAAU,CACzB,IAAIG,EAAkBH,EACtB,OAAO,WAAc,OAAOG,EAAgBd,UAE3C,GAAIW,EAASJ,YAAa,CAC3B,IAAIQ,EAAqBJ,EACzB,OAAO,WAAc,OAAOrG,EAAOyG,EAAmBR,cAErD,GAAII,EAASN,WAAY,CAC1B,IAAIW,EAAoBL,EACxB,OAAO,WAAc,OAAOK,EAAkBX,WAAW3O,MAAMsP,EAAmBtN,EAAS+G,EAAWuG,EAAkB9B,MAAQuB,OAE/H,GAAIE,EAAST,SAAU,CACxB,IAAIe,EAAkBN,EAClBO,EAASP,EAASzB,KACtB,IAAKgC,EAAQ,CACT,IAAIL,EAAyB,IAAInF,GACjCwF,EAASL,EAAuBnL,WAAW8B,GAE/C,OAAO,WACH,IAAIhD,EACJ,OAAO,KAAMA,EAAKyM,EAAgBf,UAAUtL,KAAKlD,MAAM8C,EAAId,QAAU,GAAS+G,EAAWyG,OAI7F,IAAIC,EAASR,EAASzB,KAKtB,OAJKiC,IACGN,EAAyB,IAAInF,GACjCyF,EAASN,EAAuBnL,WAAW8B,IAExC,WAAc,OAAO,IAAKA,EAAK5C,KAAKlD,MAAM8F,EAAM9D,QAAU,GAAS+G,EAAW0G;;;;;;;OAiB7F,IAAIC,GAAarN,EAAc,kBAAcmD,OAAWA,OAAWA,EAAW,SAAUM,EAAMzB,GAAQ,OAAOsL,GAA0B7J,EAAMzB,KAczIsL,GAVJ,SAASC,GAAyBC,EAAgBnK,GAC1CA,QAAkCF,IAAvBE,EAAQH,aAA6BM,EAAiBgK,KACjEA,EAAe3J,gBAAkBb,GAC7BE,WAAYG,EAAQH,WACpB1H,QAASmR,GAAmCa,EAAgBnK,OAuDpEoK,GAAgC,WAChC,SAASA,EAAeC,EAAOrK,GAC3BlH,KAAKuR,MAAQA,EAEbvR,KAAK6E,eAAiB,iBACtB7E,KAAK0H,qBAAkBV,EACD,iBAAXE,EAIPlH,KAAKwR,kBAAoBtK,OAERF,IAAZE,IACLlH,KAAK0H,gBAAkBb,GACnBE,WAAYG,EAAQH,YAAc,OAClC1H,QAAS6H,EAAQ7H,WAK7B,OADAiS,EAAezQ,UAAUoH,SAAW,WAAc,MAAO,kBAAoBjI,KAAKuR,OAC3ED,EApBwB,GA8B/BG,GAAS,WACTC,GAAsB,IAAItR,OAC1BuR,GAAqBD,GASrBE,GAAW,IAAIN,GAAe,YAAa,GAE3CO,GAA8B,WAC9B,SAASA,KAeT,OAbAA,EAAahR,UAAUsJ,IAAM,SAAUlE,EAAOoE,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgBqH,IAC5CrH,IAAkBqH,GAAqB,CAKvC,IAAInO,EAAQ,IAAImD,MAAM,sCAAwCkB,EAAU3B,GAAS,KAEjF,MADA1C,EAAMO,KAAO,oBACPP,EAEV,OAAO8G,GAEJwH,EAhBsB,GAkC7BC,GAA0B,WAC1B,SAASA,KA8BT,OApBAA,EAAShR,OAAS,SAAUoG,EAAS6K,GACjC,OAAIxR,MAAMmK,QAAQxD,GACP,IAAI8K,GAAe9K,EAAS6K,GAG5B,IAAIC,GAAe9K,EAAQC,UAAWD,EAAQ6K,OAAQ7K,EAAQpD,MAAQ,OAGrFgO,EAASH,mBAAqBD,GAC9BI,EAASG,KAAO,IAAIJ,GAEpBC,EAASpK,gBAAkBb,GACvBE,WAAY,MACZ1H,QAAS,WAAc,OAAO+K,EAAOwH,OAMzCE,EAASN,mBAAqB,EACvBM,EA/BkB,GAiCzBI,GAAQ,SAAUjP,GAClB,OAAOA,GAEPkP,MACAC,GAAWF,GACXG,GAAoB,WACpB,OAAO9R,MAAMM,UAAUyR,MAAM/Q,KAAKF,YAElCkR,GAAc/L,GAAyBoJ,QAASC,OAAQC,SAAUtJ,IAClEgM,GAAgB,cAChBC,GAAqB,kBACrBC,GAAgBZ,GAASG,KACzBU,GAAW,OACXC,GAAc,IACdZ,GAAgC,WAChC,SAASA,EAAe7K,EAAW4K,EAAQnL,QACxB,IAAXmL,IAAqBA,EAASW,SACnB,IAAX9L,IAAqBA,EAAS,MAClC5G,KAAK+R,OAASA,EACd/R,KAAK4G,OAASA,EACd,IAAIiM,EAAU7S,KAAK8S,SAAW,IAAIC,IAClCF,EAAQG,IAAIlB,IAAY7L,MAAO6L,GAAUrJ,GAAIyJ,GAAOlD,KAAMmD,GAAOlP,MAAOjD,KAAMiT,QAAQ,IACtFJ,EAAQG,IAAIpB,IAAY3L,MAAO2L,GAAUnJ,GAAIyJ,GAAOlD,KAAMmD,GAAOlP,MAAOjD,KAAMiT,QAAQ,IAkD9F,SAASC,EAA4BL,EAASpC,GAC1C,GAAIA,EAEA,IADAA,EAAWjI,EAAkBiI,cACLlQ,MAEpB,IAAK,IAAIY,EAAI,EAAGA,EAAIsP,EAASnP,OAAQH,IACjC+R,EAA4BL,EAASpC,EAAStP,QAGjD,CAAA,GAAwB,mBAAbsP,EAGZ,MAAM0C,GAAY,+BAAgC1C,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAASb,QAiC1D,MAAMuD,GAAY,sBAAuB1C,GA/BzC,IAAIxK,EAAQuC,EAAkBiI,EAASb,SACnCwD,EA/ChB,SAASC,EAAgB5C,GACrB,IAAIzB,EA8IR,SAASsE,EAAY7C,GACjB,IAAIzB,EAAOmD,GACPoB,EAAe9C,EAASzB,KAC5B,GAAIuE,GAAgBA,EAAajS,OAAQ,CACrC0N,KACA,IAAK,IAAI7N,EAAI,EAAGA,EAAIoS,EAAajS,OAAQH,IAAK,CAC1C,IAAI+F,EAAU,EAEd,IADIjB,EAAQuC,EAAkB+K,EAAapS,eACtBZ,MACjB,IAAK,IAAIoK,EAAI,EAAGoC,EAAc9G,EAAO0E,EAAIoC,EAAYzL,OAAQqJ,IAAK,CAC9D,IAAItF,EAAa0H,EAAYpC,GACzBtF,aAAsBa,GAAYb,GAAca,EAChDgB,GAAoB,EAEf7B,aAAsBe,GAAYf,GAAce,EACrDc,IAAoB,EAEf7B,aAAsBc,GAAQd,GAAcc,EACjDe,IAAoB,EAGpBjB,EADKZ,aAAsBW,EACnBX,EAAWY,MAGXuC,EAAkBnD,GAItC2J,EAAK1L,MAAO2C,MAAOA,EAAOiB,QAASA,UAGtC,GAAIuJ,EAASJ,YAAa,CAC3B,IAAIpK,EACJ+I,IAAU/I,MADNA,EAAQuC,EAAkBiI,EAASJ,aACfnJ,QAAS,SAEhC,KAAKqM,GAAkBhB,MAAe9B,GAEvC,MAAM0C,GAAY,kBAAqB1C,GAE3C,OAAOzB,EArLIsE,CAAY7C,GACnBhI,EAAKyJ,GACLjP,EAAQkP,GACRc,GAAS,EACTrD,EAAUpH,EAAkBiI,EAASb,SACzC,GAAI2C,MAAe9B,EAEfxN,EAAQwN,EAASX,cAEhB,GAAIW,EAASN,WACd1H,EAAKgI,EAASN,gBAEb,GAAIM,EAASJ,kBACb,GAAII,EAAST,SACdiD,GAAS,EACTxK,EAAKD,EAAkBiI,EAAST,cAE/B,CAAA,GAAsB,mBAAXJ,EAKZ,MAAMuD,GAAY,sGAAuG1C,GAJzHwC,GAAS,EACTxK,EAAKmH,EAKT,OAASZ,KAAMA,EAAMvG,GAAIA,EAAIwK,OAAQA,EAAQhQ,MAAOA,GAsBrBoQ,CAAgB5C,GACvC,IAAuB,IAAnBA,EAAS+C,MAAgB,CAEzB,IAAIC,EAAgBZ,EAAQ1I,IAAIlE,GAChC,GAAIwN,GACA,GAAIA,EAAchL,KAAO4J,GACrB,MAAMqB,GAAsBzN,QAKhC4M,EAAQG,IAAI/M,EAAOwN,GACfxN,MAAOwK,EAASb,QAChBZ,QACAiE,QAAQ,EACRxK,GAAI4J,GACJpP,MAAOkP,KAKfsB,EAAczE,KAAK1L,MAAO2C,MAD1BA,EAAQwK,EACgCvJ,QAAS,IAErD,IAAIyM,EAASd,EAAQ1I,IAAIlE,GACzB,GAAI0N,GAAUA,EAAOlL,IAAM4J,GACvB,MAAMqB,GAAsBzN,GAEhC4M,EAAQG,IAAI/M,EAAOmN,IA7FvBF,CAA4BL,EAAS1L,GAiBzC,OAfA6K,EAAenR,UAAUsJ,IAAM,SAAUlE,EAAOoE,EAAeL,QAC7C,IAAVA,IAAoBA,EAAQ1K,EAAQyG,YAAYkE,SACpD,IAAI0J,EAAS3T,KAAK8S,SAAS3I,IAAIlE,GAC/B,IACI,OA8FZ,SAAS2N,EAAgB3N,EAAO0N,EAAQd,EAASd,EAAQ1H,EAAeL,GACpE,IACI,OAgBR,SAAS6J,EAAa5N,EAAO0N,EAAQd,EAASd,EAAQ1H,EAAeL,GACjE,IAAI1F,EACArB,EACJ,IAAI0Q,GAAY3J,EAAQ1K,EAAQyG,YAAYK,SAoCjC4D,EAAQ1K,EAAQyG,YAAYI,OACnClD,EAAQ8O,EAAO5H,IAAIlE,EAAOoE,EAAe/K,EAAQyG,YAAYkE,cArCV,CAInD,IADAhH,EAAQ0Q,EAAO1Q,QACFmP,GACT,MAAM1L,MAAMkM,GAAc,uBAEzB,GAAI3P,IAAUkP,GAAO,CACtBwB,EAAO1Q,MAAQmP,GACf,IACIa,EAASU,EAAOV,OAChBxK,EAAKkL,EAAOlL,GACZqL,EAAaH,EAAO3E,KACpBA,EAAOmD,GACX,GAAI2B,EAAWxS,OAAQ,CACnB0N,KACA,IAAK,IAAI7N,EAAI,EAAGA,EAAI2S,EAAWxS,OAAQH,IAAK,CACxC,IAAI4S,EAAYD,EAAW3S,GACvB+F,EAAU6M,EAAU7M,QACpB8M,EAAwB,EAAV9M,EAA8B2L,EAAQ1I,IAAI4J,EAAU9N,YAASe,EAC/EgI,EAAK1L,KAAKsQ,EAEVG,EAAU9N,MAGV+N,EAEAnB,EAGCmB,GAA2B,EAAV9M,EAAiD6K,EAAhBW,GAAkC,EAAVxL,EAA6B,KAAO4K,GAASH,mBAAoBrS,EAAQyG,YAAYkE,WAGxK0J,EAAO1Q,MAAQA,EAAQgQ,EAAS,KAAM3O,EAAKmE,GAAI/D,KAAKlD,MAAM8C,EAAId,QAAU,GAASwL,KAAYvG,EAAGjH,WAxBtFwF,EAwBiGgI,IAMnH,OAAO/L,EA1DI4Q,CAAa5N,EAAO0N,EAAQd,EAASd,EAAQ1H,EAAeL,GAEvE,MAAO5G,GAWH,MATMA,aAAasD,QACftD,EAAI,IAAIsD,MAAMtD,KAEPA,EAAEqP,IAAsBrP,EAAEqP,SAChC3M,QAAQG,GACT0N,GAAUA,EAAO1Q,OAASmP,KAE1BuB,EAAO1Q,MAAQkP,IAEb/O,GA7GKwQ,CAAgB3N,EAAO0N,EAAQ3T,KAAK8S,SAAU9S,KAAK+R,OAAQ1H,EAAeL,GAErF,MAAO5G,GACH,OAAO6Q,GAAmB7Q,EAAG6C,EAAO,sBAAuBjG,KAAK4G,UAGxEoL,EAAenR,UAAUoH,SAAW,WAChC,IAAIiM,KAEJ,OAF2BlU,KAAK8S,SACxBvF,QAAQ,SAAUnC,EAAGnF,GAAS,OAAOiO,EAAO5Q,KAAKsE,EAAU3B,MAC5D,kBAAoBiO,EAAOpM,KAAK,MAAQ,KAE5CkK,EA1BwB,GAuDnC,SAAS0B,GAAsBzN,GAC3B,OAAOkN,GAAY,mDAAoDlN,GA4J3E,SAASgO,GAAmB7Q,EAAG6C,EAAOkO,EAAmBvN,GACrD,IAAIwN,EAAYhR,EAAEqP,IAOlB,MANIxM,EAAMwL,KACN2C,EAAUtO,QAAQG,EAAMwL,KAE5BrO,EAAEiR,QAAUC,GAAY,KAAOlR,EAAEiR,QAASD,EAAWD,EAAmBvN,GACxExD,EAAEoP,IAAiB4B,EACnBhR,EAAEqP,IAAsB,KAClBrP,EAEV,SAASkR,GAAYC,EAAMC,EAAKL,EAAmBvN,QAChC,IAAXA,IAAqBA,EAAS,MAClC2N,EAAOA,GAA2B,OAAnBA,EAAKE,OAAO,IAAeF,EAAKE,OAAO,IAAM7B,GAAc2B,EAAKG,OAAO,GAAKH,EAC3F,IAAII,EAAU/M,EAAU4M,GACxB,GAAIA,aAAejU,MACfoU,EAAUH,EAAI3M,IAAID,GAAWE,KAAK,aAEjC,GAAmB,iBAAR0M,EAAkB,CAC9B,IAAII,KACJ,IAAK,IAAIhT,KAAO4S,EACZ,GAAIA,EAAI/T,eAAemB,GAAM,CACzB,IAAIqB,EAAQuR,EAAI5S,GAChBgT,EAAMtR,KAAK1B,EAAM,KAAwB,iBAAVqB,EAAqB4R,KAAKjN,UAAU3E,GAAS2E,EAAU3E,KAG9F0R,EAAU,IAAMC,EAAM9M,KAAK,MAAQ,IAEvC,OAAYqM,GAAqBvN,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAM+N,EAAU,MAAQJ,EAAKO,QAAQnC,GAAU,QAExH,SAASQ,GAAYoB,EAAMC,GACvB,OAAO,IAAI9N,MAAM4N,GAAYC,EAAMC,EAAK;;;;;;;OAU5C,IAAIO,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe,gBA0BnB,SAASC,GAAuB5H,GAC5B,OAAIA,EAAKhM,OAAS,EAGP;;;;;;;;AAff,SAAS6T,EAAqB7H,GAE1B,IADA,IAAItF,KACK7G,EAAI,EAAGA,EAAImM,EAAKhM,SAAUH,EAAG,CAClC,GAAI6G,EAAIG,QAAQmF,EAAKnM,KAAO,EAExB,OADA6G,EAAI1E,KAAKgK,EAAKnM,IACP6G,EAEXA,EAAI1E,KAAKgK,EAAKnM,IAElB,OAAO6G,EAIYmN,CAAqB7H,EAAKgF,QAAQ8C,WACxBvN,IAAI,SAAUwN,GAAK,OAAOzN,EAAUyN,EAAEpP,SACvC6B,KAAK,QAAU,IAEpC,GAEX,SAASwN,GAAe5L,EAAU9H,EAAK2T,EAA2BC,GAC9D,IAAIlI,GAAQ1L,GACR6T,EAASF,EAA0BjI,GACnC/J,EAASiS,EApCjB,SAASE,EAAarB,EAASmB,GAC3B,IAAIG,EAAMtB,EAAU,gBAAkBmB,aAAyB9O,MAAQ8O,EAAcnB,QAAUmB,GAC3FjS,EAAQmD,MAAMiP,GAElB,OADApS,EAAMyR,IAAwBQ,EACvBjS,EAgCsBmS,CAAaD,EAAQD,GAAiB9O,MAAM+O,GAMzE,OALAlS,EAAMqS,OAASA,GACfrS,EAAM+J,KAAOA,EACb/J,EAAMsS,WAAanM,GACnBnG,EAAMgS,0BAA4BA,EAClChS,EAAMyR,IAAwBQ,EACvBjS,EAEX,SAASqS,GAAOlM,EAAU9H,GACtB5B,KAAK6V,UAAUvS,KAAKoG,GACpB1J,KAAKsN,KAAKhK,KAAK1B,GAEf5B,KAAKqU,QAAUrU,KAAKuV,0BAA0BvV,KAAKsN,MA0HvD,SAASwI,GAAkBhJ,EAAYiJ,GAEnC,IADA,IAAIC,KACK7U,EAAI,EAAG8U,EAAKF,EAAOzU,OAAQH,EAAI8U,EAAI9U,IAAK,CAC7C,IAAI+U,EAAYH,EAAO5U,GAKnB6U,EAAU1S,KAJT4S,GAAiC,GAApBA,EAAU5U,OAIT4U,EAAUrO,IAAID,GAAWE,KAAK,KAH9B,KAMvB,OAAOpB,MAAM,sCAAyCkB,EAAUkF,GAAc,KAC1EkJ,EAAUlO,KAAK,MAAQ,2GAEvBF,EAAUkF,GAAc;;;;;;;;AA+DhC,IAAIqJ,GAA+B,WAI/B,SAASA,EAAclQ,EAAOmQ,GAG1B,GAFApW,KAAKiG,MAAQA,EACbjG,KAAKoW,GAAKA,GACLnQ,EACD,MAAM,IAAIS,MAAM,0BAEpB1G,KAAKqW,YAAczO,EAAU5H,KAAKiG,OAgBtC,OAXAkQ,EAAchM,IAAM,SAAUlE,GAC1B,OAAOqQ,GAAmBnM,IAAI3B,EAAkBvC,KAEpD7F,OAAO+B,eAAegU,EAAe,gBAIjChM,IAAK,WAAc,OAAOmM,GAAmBC,cAC7CC,YAAY,EACZC,cAAc,IAEXN,EA1BuB,GAiD9BG,GAAqB,IArBQ,WAC7B,SAASI,IACL1W,KAAK2W,SAAW,IAAI5D,IAiBxB,OAfA2D,EAAY7V,UAAUsJ,IAAM,SAAUlE,GAClC,GAAIA,aAAiBkQ,GACjB,OAAOlQ,EACX,GAAIjG,KAAK2W,SAASC,IAAI3Q,GAClB,OAAOjG,KAAK2W,SAASxM,IAAIlE,GAE7B,IAAI4Q,EAAS,IAAIV,GAAclQ,EAAOkQ,GAAcI,cAEpD,OADAvW,KAAK2W,SAAS3D,IAAI/M,EAAO4Q,GAClBA,GAEXzW,OAAO+B,eAAeuU,EAAY7V,UAAW,gBACzCsJ,IAAK,WAAc,OAAOnK,KAAK2W,SAASG,MACxCN,YAAY,EACZC,cAAc,IAEXC,EAnBqB,IA6E5BK,GAAY,IA3Ce,WAC3B,SAASC,EAAUrG,GACf3Q,KAAK2Q,uBAAyBA,EA2BlC,OAzBAqG,EAAUnW,UAAUoW,mBAAqB,SAAUC,GAAQlX,KAAK2Q,uBAAyBuG,GACzFF,EAAUnW,UAAUxB,QAAU,SAAUiI,GAAQ,OAAOtH,KAAK2Q,uBAAuBtR,QAAQiI,IAC3F0P,EAAUnW,UAAU2E,WAAa,SAAUsH,GACvC,OAAO9M,KAAK2Q,uBAAuBnL,WAAWsH,IAElDkK,EAAUnW,UAAUkM,YAAc,SAAUD,GACxC,OAAO9M,KAAK2Q,uBAAuB5D,YAAYD,IAEnDkK,EAAUnW,UAAUqM,aAAe,SAAUJ,GACzC,OAAO9M,KAAK2Q,uBAAuBzD,aAAaJ,IAEpDkK,EAAUnW,UAAU8M,iBAAmB,SAAUrG,EAAMsG,GACnD,OAAO5N,KAAK2Q,uBAAuBhD,iBAAiBrG,EAAMsG,IAE9DoJ,EAAUnW,UAAUiN,OAAS,SAAUhK,GAAQ,OAAO9D,KAAK2Q,uBAAuB7C,OAAOhK,IACzFkT,EAAUnW,UAAUkN,OAAS,SAAUjK,GAAQ,OAAO9D,KAAK2Q,uBAAuB5C,OAAOjK,IACzFkT,EAAUnW,UAAUmN,OAAS,SAAUlK,GAAQ,OAAO9D,KAAK2Q,uBAAuB3C,OAAOlK,IACzFkT,EAAUnW,UAAUoN,UAAY,SAAU3G,GAAQ,OAAOtH,KAAK2Q,uBAAuB1C,UAAU3G,IAC/F0P,EAAUnW,UAAUqN,YAAc,SAAU5G,GAAQ,OAAOtH,KAAK2Q,uBAAuBzC,YAAY5G,IACnG0P,EAAUnW,UAAUsN,kBAAoB,SAAUrK,EAAMsK,EAAWC,EAASC,GACxE,OAAOtO,KAAK2Q,uBAAuBxC,kBAAkBrK,EAAMsK,EAAWC,EAASC,IAEnF0I,EAAUnW,UAAU0N,YAAc,SAAU4I,EAAYrT,GACpD,OAAO9D,KAAK2Q,uBAAuBpC,YAAY4I,EAAYrT,IAExDkT,EA7BmB,GA2Cd,CAAc,IAAIxL,IAa9B4L,GAAsC,WACtC,SAASA,EAAqBxV,EAAKyN,EAAUgI,GACzCrX,KAAK4B,IAAMA,EACX5B,KAAKqP,SAAWA,EAChBrP,KAAKqX,WAAaA,EAKtB,OAHAD,EAAqBE,QAAU,SAAU1V,GACrC,OAAO,IAAIwV,EAAqBxV,GAAK,EAAO,OAEzCwV,EAT8B,GAWrCG,MACAC,GACA,SAASA,GAA4B5V,EAAK6V,EAAmBhE,GACzDzT,KAAK4B,IAAMA,EACX5B,KAAKyX,kBAAoBA,EACzBzX,KAAKyT,cAAgBA,EACrBzT,KAAK0X,gBAAkB1X,KAAKyX,kBAAkB,IAQlDE,GACA,SAASA,GAITtY,EAIAuY,GACI5X,KAAKX,QAAUA,EACfW,KAAK4X,aAAeA,GAmC5B,SAASC,GAA0BpH,GAC/B,OAAO,IAAI+G,GAA4BrB,GAAchM,IAAIsG,EAASb,UA7BtE,SAASkI,EAAyBrH,GAC9B,IAAIsH,EACAC,EACJ,GAAIvH,EAAST,SAAU,CACnB,IAAIA,EAAWxH,EAAkBiI,EAAST,UAC1C+H,EAAYhB,GAAU1X,QAAQ2Q,GAC9BgI,EAAeC,GAAiBjI,QAE3BS,EAASJ,aACd0H,EAAY,SAAUG,GAAiB,OAAOA,GAC9CF,GAAgBZ,GAAqBE,QAAQnB,GAAchM,IAAIsG,EAASJ,gBAEnEI,EAASN,YACd4H,EAAYtH,EAASN,WACrB6H,EA6ER,SAASG,EAAsBrL,EAAY8K,GACvC,GAAKA,EAGA,CACD,IAAIQ,EAAWR,EAAa/P,IAAI,SAAU5G,GAAK,OAAQA,KACvD,OAAO2W,EAAa/P,IAAI,SAAU5G,GAAK,OAAOoX,GAAcvL,EAAY7L,EAAGmX,KAJ3E,OAAOH,GAAiBnL,GA/ETqL,CAAsB1H,EAASN,WAAYM,EAASzB,QAGnE+I,EAAY,WAAc,OAAOtH,EAASX,UAC1CkI,EAAeT,IAEnB,OAAO,IAAII,GAA0BI,EAAWC,GAS6BF,CAAyBrH,IAAYA,EAAS+C,QAAS,GAKxI,SAAS8E,GAA2BnR,GAChC,IAEIoR,EAOR,SAASC,EAAiCrR,EAAWsR,GACjD,IAAK,IAAItX,EAAI,EAAGA,EAAIgG,EAAU7F,OAAQH,IAAK,CACvC,IAAIsP,EAAWtJ,EAAUhG,GACrBuX,EAAWD,EAAuBtO,IAAIsG,EAAS7O,IAAIwU,IACvD,GAAIsC,EAAU,CACV,GAAIjI,EAASgD,gBAAkBiF,EAASjF,cACpC,MA/OL/M,MAAM,0DA+OmDgS,EA/OqB,IA+OXjI,GAElE,GAAIA,EAASgD,cACT,IAAK,IAAI9I,EAAI,EAAGA,EAAI8F,EAASgH,kBAAkBnW,OAAQqJ,IACnD+N,EAASjB,kBAAkBnU,KAAKmN,EAASgH,kBAAkB9M,SAI/D8N,EAAuBzF,IAAIvC,EAAS7O,IAAIwU,GAAI3F,OAG/C,CACD,IAAI2C,EAEAA,EADA3C,EAASgD,cACU,IAAI+D,GAA4B/G,EAAS7O,IAAK6O,EAASgH,kBAAkBnF,QAAS7B,EAASgD,eAG3FhD,EAEvBgI,EAAuBzF,IAAIvC,EAAS7O,IAAIwU,GAAIhD,IAGpD,OAAOqF,EAnCmBD,CAqC9B,SAASG,EAAoBxR,EAAWa,GAepC,OAdAb,EAAUoG,QAAQ,SAAUpN,GACxB,GAAIA,aAAa8K,EACbjD,EAAI1E,MAAOsM,QAASzP,EAAG6P,SAAU7P,SAEhC,GAAIA,GAAiB,iBAALA,QAA+B6G,IAAd7G,EAAEyP,QACpC5H,EAAI1E,KAAKnD,OAER,CAAA,KAAIA,aAAaI,OAIlB,MArWZ,SAASqY,EAAqBnI,GAC1B,OAAO/J,MAAM,4EAA8E+J,GAoW7EmI,CAAqBzY,GAH3BwY,EAAoBxY,EAAG6H,MAMxBA,EAtDU2Q,CAAoBxR,MACXU,IAAIgQ,IACuC,IAAI9E,KACzE,OAAOxS,MAAMsY,KAAKN,EAAoBvT,UA8D1C,SAASiT,GAAiBnL,GACtB,IAAIiJ,EAASgB,GAAUvR,WAAWsH,GAClC,IAAKiJ,EACD,SACJ,GAAIA,EAAO+C,KAAK,SAAUtY,GAAK,OAAY,MAALA,IAClC,MAAMsV,GAAkBhJ,EAAYiJ,GAExC,OAAOA,EAAOlO,IAAI,SAAUrH,GAAK,OAAO6X,GAAcvL,EAAYtM,EAAGuV,KAEzE,SAASsC,GAAcvL,EAAYpK,EAAUqT,GACzC,IAAI9P,EAAQ,KACRoJ,GAAW,EACf,IAAK9O,MAAMmK,QAAQhI,GACf,OACWqW,GADPrW,aAAoBsD,EACKtD,EAASuD,MAGTvD,EAHgB2M,EAAU,MAO3D,IADA,IAAIgI,EAAa,KACRlW,EAAI,EAAGA,EAAIuB,EAASpB,SAAUH,EAAG,CACtC,IAAI6X,EAAgBtW,EAASvB,GACzB6X,aAAyB/N,EACzBhF,EAAQ+S,EAEHA,aAAyBhT,EAC9BC,EAAQ+S,EAAc/S,MAEjB+S,aAAyB9S,EAC9BmJ,GAAW,EAEN2J,aAAyB7S,GAAQ6S,aAAyB5S,EAC/DiR,EAAa2B,EAERA,aAAyB1H,KAC9BrL,EAAQ+S,GAIhB,GAAa,OADb/S,EAAQuC,EAAkBvC,IAEtB,OAAO8S,GAAkB9S,EAAOoJ,EAAUgI,GAG1C,MAAMvB,GAAkBhJ,EAAYiJ,GAG5C,SAASgD,GAAkB9S,EAAOoJ,EAAUgI,GACxC,OAAO,IAAID,GAAqBjB,GAAchM,IAAIlE,GAAQoJ,EAAUgI;;;;;;;OAWxE,IAyaW4B,GAaAC,GApEPC,GAlXAC,GAAY,IAAIhZ,OAsChBiZ,GAAoC,WACpC,SAASA,KA2FT,OAxDAA,EAAmBC,QAAU,SAAUnS,GACnC,OAAOmR,GAA2BnR,IAyBtCkS,EAAmBE,iBAAmB,SAAUpS,EAAW4K,GACvD,IAAIyH,EAA8BH,EAAmBC,QAAQnS,GAC7D,OAAOkS,EAAmBI,sBAAsBD,EAA6BzH,IAyBjFsH,EAAmBI,sBAAwB,SAAUtS,EAAW4K,GAC5D,OAAO,IAAI2H,GAAoBvS,EAAW4K,IAEvCsH,EA5F4B,GA8FnCK,GAAqC,WAIrC,SAASA,EAAoBC,EAAYC,GAErC5Z,KAAK6Z,qBAAuB,EAC5B7Z,KAAK2Z,WAAaA,EAClB3Z,KAAK+R,OAAS6H,GAAW,KACzB,IAAIE,EAAMH,EAAWrY,OACrBtB,KAAK+Z,OAAS,IAAIxZ,MAAMuZ,GACxB9Z,KAAKga,KAAO,IAAIzZ,MAAMuZ,GACtB,IAAK,IAAI3Y,EAAI,EAAGA,EAAI2Y,EAAK3Y,IACrBnB,KAAK+Z,OAAO5Y,GAAKwY,EAAWxY,GAAGS,IAAIwU,GACnCpW,KAAKga,KAAK7Y,GAAKiY,GAgJvB,OA7IAM,EAAoB7Y,UAAUsJ,IAAM,SAAUlE,EAAOoE,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgBsH,IACzC3R,KAAKia,UAAU9D,GAAchM,IAAIlE,GAAQ,KAAMoE,IAE1DqP,EAAoB7Y,UAAUqZ,sBAAwB,SAAU/S,GAC5D,IAAIqS,EAA8BH,GAAmBC,QAAQnS,GAC7D,OAAOnH,KAAKma,wBAAwBX,IAExCE,EAAoB7Y,UAAUsZ,wBAA0B,SAAUhT,GAC9D,IAAIiT,EAAM,IAAIV,EAAoBvS,GAElC,OADAiT,EAAIrI,OAAS/R,KACNoa,GAEXV,EAAoB7Y,UAAUwZ,sBAAwB,SAAU5J,GAC5D,OAAOzQ,KAAKsa,oBAAoBjB,GAAmBC,SAAS7I,IAAW,KAE3EiJ,EAAoB7Y,UAAUyZ,oBAAsB,SAAU7J,GAC1D,OAAOzQ,KAAKua,qBAAqB9J,IAErCiJ,EAAoB7Y,UAAU2Z,mBAAqB,SAAUjV,GACzD,GAAIA,EAAQ,GAAKA,GAASvF,KAAK2Z,WAAWrY,OACtC,MAxhBZ,SAASmZ,EAAiBlV,GACtB,OAAOmB,MAAM,SAAWnB,EAAQ,sBAuhBlBkV,CAAiBlV,GAE3B,OAAOvF,KAAK2Z,WAAWpU,IAG3BmU,EAAoB7Y,UAAU6Z,KAAO,SAAUjK,GAC3C,GAAIzQ,KAAK6Z,uBAAyB7Z,KAAK2a,yBACnC,MAhpBZ,SAASC,EAAsBlR,EAAU9H,GACrC,OAAO0T,GAAe5L,EAAU9H,EAAK,SAAU0L,GAC3C,MAAO,wCAA0C4H,GAAuB5H,KA8oB9DsN,CAAsB5a,KAAMyQ,EAAS7O,KAE/C,OAAO5B,KAAKua,qBAAqB9J,IAErCiJ,EAAoB7Y,UAAU8Z,uBAAyB,WAAc,OAAO3a,KAAKga,KAAK1Y,QACtFoY,EAAoB7Y,UAAU0Z,qBAAuB,SAAU9J,GAC3D,GAAIA,EAASgD,cAAe,CAExB,IADA,IAAIzL,EAAM,IAAIzH,MAAMkQ,EAASgH,kBAAkBnW,QACtCH,EAAI,EAAGA,EAAIsP,EAASgH,kBAAkBnW,SAAUH,EACrD6G,EAAI7G,GAAKnB,KAAK6a,aAAapK,EAAUA,EAASgH,kBAAkBtW,IAEpE,OAAO6G,EAGP,OAAOhI,KAAK6a,aAAapK,EAAUA,EAASgH,kBAAkB,KAGtEiC,EAAoB7Y,UAAUga,aAAe,SAAUpK,EAAUqK,GAC7D,IAEI9L,EAWAwF,EAbAuG,EAAQ/a,KACRX,EAAUyb,EAA6Bzb,QAE3C,IACI2P,EACI8L,EAA6BlD,aAAa/P,IAAI,SAAUqH,GAAO,OAAO6L,EAAMC,2BAA2B9L,KAE/G,MAAO9L,GAIH,MAHIA,EAAEwS,QACFxS,EAAEwS,OAAO5V,KAAMyQ,EAAS7O,KAEtBwB,EAGV,IACIoR,EAAMnV,EAAQmC,WAAM,EAAQgC,EAASwL,IAEzC,MAAO5L,GACH,MAppBZ,SAAS6X,EAAmBvR,EAAUwR,EAAmBC,EAAevZ,GACpE,OAAO0T,GAAe5L,EAAU9H,EAAK,SAAU0L,GAC3C,IAAI8N,EAAQxT,EAAU0F,EAAK,GAAGrH,OAC9B,OAAOiV,EAAkB7G,QAAU,mCAAqC+G,EAAQ,IAAMlG,GAAuB5H,GAAQ,KACtH4N,GAgpBWD,CAAmBjb,KAAMoD,EAAGA,EAASqN,EAAS7O,KAExD,OAAO4S,GAEXkF,EAAoB7Y,UAAUma,2BAA6B,SAAU9L,GACjE,OAAOlP,KAAKia,UAAU/K,EAAItN,IAAKsN,EAAImI,WAAYnI,EAAIG,SAAW,KAAOsC,KAEzE+H,EAAoB7Y,UAAUoZ,UAAY,SAAUrY,EAAKyV,EAAYhN,GACjE,OAAIzI,IAAQ8X,EAAoB2B,aACrBrb,KAEPqX,aAAsBlR,EACfnG,KAAKsb,cAAc1Z,EAAKyI,GAGxBrK,KAAKub,iBAAiB3Z,EAAKyI,EAAegN,IAGzDqC,EAAoB7Y,UAAU2a,eAAiB,SAAUC,GACrD,IAAK,IAAIta,EAAI,EAAGA,EAAInB,KAAK+Z,OAAOzY,OAAQH,IACpC,GAAInB,KAAK+Z,OAAO5Y,KAAOsa,EAInB,OAHIzb,KAAKga,KAAK7Y,KAAOiY,KACjBpZ,KAAKga,KAAK7Y,GAAKnB,KAAK0a,KAAK1a,KAAK2Z,WAAWxY,KAEtCnB,KAAKga,KAAK7Y,GAGzB,OAAOiY,IAGXM,EAAoB7Y,UAAU6a,aAAe,SAAU9Z,EAAKyI,GACxD,GAAIA,IAAkBsH,GAClB,OAAOtH,EAGP,MA9uBZ,SAASsR,EAAgBjS,EAAU9H,GAC/B,OAAO0T,GAAe5L,EAAU9H,EAAK,SAAU0L,GAE3C,MAAO,mBADK1F,EAAU0F,EAAK,GAAGrH,OACM,IAAMiP,GAAuB5H,KA2uBvDqO,CAAgB3b,KAAM4B,IAIpC8X,EAAoB7Y,UAAUya,cAAgB,SAAU1Z,EAAKyI,GACzD,IAAImK,EAAMxU,KAAKwb,eAAe5Z,EAAIwU,IAClC,OAAQ5B,IAAQ4E,GAAa5E,EAAMxU,KAAK0b,aAAa9Z,EAAKyI,IAG9DqP,EAAoB7Y,UAAU0a,iBAAmB,SAAU3Z,EAAKyI,EAAegN,GAC3E,IAAI+C,EAOJ,IALIA,EADA/C,aAAsBjR,EAChBpG,KAAK+R,OAGL/R,KAEHoa,aAAeV,GAAqB,CACvC,IAAIkC,EAAOxB,EACP5F,EAAMoH,EAAKJ,eAAe5Z,EAAIwU,IAClC,GAAI5B,IAAQ4E,GACR,OAAO5E,EACX4F,EAAMwB,EAAK7J,OAEf,OAAY,OAARqI,EACOA,EAAIjQ,IAAIvI,EAAIqE,MAAOoE,GAGnBrK,KAAK0b,aAAa9Z,EAAKyI,IAGtCjK,OAAO+B,eAAeuX,EAAoB7Y,UAAW,eACjDsJ,IAAK,WAGD,MAAO,kCASnB,SAAS0R,EAAcnS,EAAUjB,GAE7B,IADA,IAAIT,EAAM,IAAIzH,MAAMmJ,EAASiQ,WAAWrY,QAC/BH,EAAI,EAAGA,EAAIuI,EAASiQ,WAAWrY,SAAUH,EAC9C6G,EAAI7G,GAAKsH,EAAGiB,EAAS8Q,mBAAmBrZ,IAE5C,OAAO6G;;;;;;;;;;;;;;;;;;;;;OAhBiB6T,CAAc7b,KAAM,SAAUG,GAAK,MAAO,KAAOA,EAAEyB,IAAIyU,YAAc,OAChFvO,KAAK,MAC6C,MAE3D0O,YAAY,EACZC,cAAc,IAElBiD,EAAoB7Y,UAAUoH,SAAW,WAAc,OAAOjI,KAAKqW,aACnEqD,EAAoB2B,aAAelF,GAAchM,IAAI2H,IAC9C4H,EA9J6B,GAmOpCoC,GAA+B,IAAIxK,GAAe,6BAuBlDyK,GAAkBtW,EAAkB,kBAAmB,SAAUuW,EAAUC,GAE3E,YADa,IAATA,IAAmBA,MACflb,GAAWib,SAAUA,EAAUZ,OAAO,EAAOc,aAAa,EAAOC,aAAa,GAASF,IAd/F9C,GACA,SAASA,QAuBTiD,GAAe3W,EAAkB,eAAgB,SAAUuW,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACflb,GAAWib,SAAUA,EAAUZ,OAAO,EAAMc,aAAa,EAAOC,aAAa,GAAQF,IAC9F9C,IAOCkD,GAAe5W,EAAkB,eAAgB,SAAUuW,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACflb,GAAWib,SAAUA,EAAUZ,OAAO,EAAOc,aAAa,EAAMC,aAAa,GAAQF,IAC9F9C,IAOCmD,GAAY7W,EAAkB,YAAa,SAAUuW,EAAUC,GAC/D,OAAQlb,GAAWib,SAAUA,EAAUZ,OAAO,EAAMc,aAAa,EAAMC,aAAa,GAAQF,IAC7F9C;;;;;;;;AASQF,GAYR3Z,EAAQ2Z,0BAA4B3Z,EAAQ2Z,6BANnBA,GAAgC,OAAI,GAAK,SAKjEA,GAAwBA,GAAiC,QAAI,GAAK,WAE3DC,GA+BR5Z,EAAQid,wBAA0Bjd,EAAQid,2BA1BpBrD,GAAgC,UAAI,GAAK,YAK9DA,GAAqBA,GAA8B,QAAI,GAAK,UAK5DA,GAAqBA,GAAkC,YAAI,GAAK,cAKhEA,GAAqBA,GAA+B,SAAI,GAAK,WAM7DA,GAAqBA,GAA8B,QAAI,GAAK,UAI5DA,GAAqBA,GAAgC,UAAI,GAAK;;;;;;;;AAqBlE,IAiHWsD,GAjHPC,GAAmBjW,GAAyBkW,eAAgBlW,IAC5DmW,GAAmBnW,GAAyBoW,eAAgBpW,IAC5DqW,GAAcrW,GAAyBsW,UAAWtW,IAClDuW,GAAgBvW,GAAyBwW,YAAaxW,IACtDyW,GAAczW,GAAyB0W,UAAW1W,IAOlD2W,GAAgB3W,GAAyBgL,kBAAmBhL,IA8E5D4W,GAAmC,IAAIC,IAM3C,SAASC,GAAyBC,GAC9B,SAAWA,EAAUC,cAAgBD,EAAUE,UAC3CF,EAAUG,WAAaH,EAAUG,UAAUpc,QAEnD,SAASqc,KACLP,GAAiCQ,QAErC,SAASC,GAAeC,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASvJ;;;;;;;;;;;;;;;AAUlDiI,GA+BRld,EAAQkd,oBAAsBld,EAAQkd,uBAtBnBA,GAA4B,SAAI,GAAK,WASvDA,GAAkBA,GAA0B,OAAI,GAAK,SAIrDA,GAAkBA,GAAwB,KAAI,GAAK,OAQnDA,GAAkBA,GAA6B,UAAI,GAAK;;;;;;;;AA0E5D,IAAIuB,MACAC,MA2BJ,SAASC,GAAgBhb,GACrB,MAAoB,mBAATA,EACAA,EAAMa,MAAQb,EACL,iBAATA,EACAA,EACE,MAATA,EACO,GACS,iBAATA,GAA0C,mBAAdA,EAAMqE,KAClCrE,EAAMqE,KAAKxD,MAAQb,EAAMqE,KAC7B,GAAKrE,EAEhB,IAAIib,IAAqD,oBAA1BC,uBAAyCA,uBACpEC,YACF1Z,KAAKiE,GACP,SAAS0V,GAAcC,GACnB,OAASxa,KAAM,SAAUnC,OAAQ2c,EAAQC,cAAcC,aAE3D,SAASC,GAAgBH,GACrB,OAASxa,KAAM,WAAYnC,OAAQ2c,EAAQC,eAE/C,SAASG,GAAYJ,GACjB,OAASxa,KAAM,OAAQnC,OAAQ2c,EAAQC,cAAcI,MAgBzD,IAAIC,GAA0B,IAK9B,SAASC,GAAqBC,GAC1B,OAAOA,EAAI3W,QAAQyW,KAA4B;;;;;;;;;;;;;;;AA4EnD,IAAIG,GAAmB,EAgBvB,SAASC,GAAgBC,GACrB,IAAI3X,EAAO2X,EAAoB3X,KAC3B4X,EAAgB5X,EAAKzG,UACrBse,KACAnU,GACA1D,KAAMA,EACN8X,kBAAmB,KACnBC,OAAQJ,EAAoBI,OAC5BC,KAAML,EAAoBK,KAC1BjgB,QAAS4f,EAAoB5f,QAC7Boe,SAAUwB,EAAoBxB,UAAY,KAC1C8B,mBAAoBN,EAAoBM,mBACxCC,aAAcP,EAAoBO,cAAgB,KAClDC,eAAgBR,EAAoBQ,gBAAkB,KACtDN,eAAgBA,EAChBO,OAAQ,KACRC,QAAS,KACTC,SAAUX,EAAoBW,UAAY,KAC1CC,UAAW,KACXC,OAAQZ,EAAca,UAAY,KAClCC,QAASd,EAAce,WAAa,KACpCC,iBAAkBhB,EAAciB,oBAAsB,KACtDC,oBAAqBlB,EAAcmB,uBAAyB,KAC5DC,cAAepB,EAAcqB,iBAAmB,KAChDC,iBAAkBtB,EAAcuB,oBAAsB,KACtDC,UAAWxB,EAAcyB,aAAe,KACxCC,OAAQ3B,EAAoB4B,kBAAoBvhB,EAAQ2Z,wBAAwB6H,OAChFC,cAAe,KACfC,SAAU,KACVC,UAAWhC,EAAoBgC,UAC/BC,UAAWjC,EAAoBiC,WAAa,KAC5CC,SAAUlC,EAAoBkC,UAAY,KAC1ClF,KAAMgD,EAAoBhD,SAG1BmF,cAAenC,EAAoBmC,eAAiB9hB,EAAQkd,kBAAkB6E,SAC9EjL,GAAI,IACJkL,OAAQrC,EAAoBqC,QAAUtD,GACtCuD,EAAG,KACHC,SAAU,KACVC,QAASxC,EAAoBwC,SAAW,MAkB5C,OAhBAzW,EAAIuW;;;;;;;;AArER,SAASG,EAAcjZ,GACnB,MAAO,IAAOR,SAAUQ,GAoEhBiZ,CAAc,WAClB,IAAIC,EAAiB1C,EAAoB2C,WACrCC,EAAU5C,EAAoBkC,SAC9BW,EAAY7C,EAAoB8C,MACpC/W,EAAIoL,IAAM2I,KACV/T,EAAI0U,OAASsC,GAAa/C,EAAoBS,OAAQP,GAClDnU,EAAI2U,QAAUqC,GAAa/C,EAAoBU,SAC/CkC,GAAWA,EAAQtU,QAAQ,SAAU9E,GAAM,OAAOA,EAAGuC,KACzDA,EAAI+V,cAAgBY,EAChB,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3E9Z,IAAIoa,KACT,KACJjX,EAAIgW,SAAWc,EACX,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAWja,IAAIqa,KACrF,OAEDlX,EAEX,SAASmX,GAAkB7a,EAAMsa,EAAYG,GACzC,IAAI/W,EAAM1D,EAAKoV,eACf1R,EAAI+V,cAAgB,WAAc,OAAOa,EAAW/Z,IAAIoa,KACxDjX,EAAIgW,SAAW,WAAc,OAAOe,EAAMla,IAAIqa,KAElD,SAASD,GAAoB3a,GAKzB,OAJU8a,GAAgB9a,IAAS+a,GAAgB/a,GAMvD,SAAS4a,GAAe5a,GAKpB,OAJUgb,GAAWhb,GAMzB,SAASib,GAAevX,GAUpB,OARI1D,KAAM0D,EAAI1D,KACVkb,UAAWxX,EAAIwX,WAAaxE,GAC5ByE,aAAczX,EAAIyX,cAAgBzE,GAClC5W,QAAS4D,EAAI5D,SAAW4W,GACxB1e,QAAS0L,EAAI1L,SAAW0e,GACxB0E,wBAAyB,KACzBjB,QAASzW,EAAIyW,SAAW,MA2DhC,SAASO,GAAaxN,EAAKmO,GACvB,GAAW,MAAPnO,EACA,OAAOuJ,GACX,IAAI6E,KACJ,IAAK,IAAIC,KAAerO,EACpB,GAAIA,EAAI/T,eAAeoiB,GAAc,CACjC,IAAIC,EAAatO,EAAIqO,GACjBE,EAAeD,EACfviB,MAAMmK,QAAQoY,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUG,GAAcC,GAIrC,OAAOH,EAcX,SAASI,GAAWC,GAChB,IAAI9D,KACJ,OACIO,OAAQsC,GAAaiB,EAAevD,OAAQP,GAC5CA,eAAgBA,EAChBQ,QAASqC,GAAaiB,EAAetD,UAiB7C,IAAIuD,GAAkBlE,GAetB,SAASmE,GAAWC,GAChB,OACItf,KAAMsf,EAAQtf,KACdzE,QAAS+jB,EAAQ/jB,QACjBgkB,MAAuB,IAAjBD,EAAQC,KACd3C,UAAW0C,EAAQ9b,KAAKzG,UAAU8f,aAAe,MAQzD,SAASyB,GAAgB9a,GACrB,OAAOA,EAAKmV,KAAqB,KAErC,SAAS4F,GAAgB/a,GACrB,OAAOA,EAAKqV,KAAqB,KAErC,SAAS2F,GAAWhb,GAChB,OAAOA,EAAKuV,KAAgB,KAEhC,SAASyG,GAAehc,EAAMic,GAC1B,IAAIvG,EAAc1V,EAAKyV,KAAkB,KACzC,IAAKC,IAAiC,IAAlBuG,EAChB,MAAM,IAAI7c,MAAM,QAAUkB,EAAUN,GAAQ,0CAEhD,OAAO0V;;;;;;;OAaX,IAAIwG,GAAQ,EACRC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAO,EACPC,GAAS,EACTC,GAAgB,EAChBC,GAAU,EACVC,GAAU,EACVC,GAAa,GACbC,GAAmB,GACnBC,GAAW,GACXC,GAAY,GACZC,GAAa,GACbC,GAAa,GACbC,GAAkB,GAClBC,GAAmB,GAEnBC,GAAgB,GAchBC,GAAe,EACfC,GAAQ,EAGRC,GAAS,EAQTC,GAAoB,EAYpBC,GAAwB;;;;;;;;AAoB5B,SAASC,GAAiB/hB,GACtB,KAAO1C,MAAMmK,QAAQzH,IACjBA,EAAQA,EAAM4gB,IAElB,OAAO5gB,EAMX,SAASgiB,GAAiB1f,EAAO2f,GAC7B,OAAOF,GAAiBE,EAAM3f,EAAQmf,KAE1C,SAASS,GAAiBC,EAAOC,GAC7B,OAAOL,GAAiBK,EAASD,EAAM7f,QAE3C,SAAS+f,GAAS/f,EAAOggB,GAGrB,OAAOA,EAAK/B,IAAOvH,KAAK1W,EAAQmf,IAMpC,SAASc,GAAQviB,GACb,OAAO1C,MAAMmK,QAAQzH,IAAUA,EAAM3B,QAAUojB,GAGnD,SAASe,GAAaF,EAAMhgB,GAExB,OAAOggB,EAAKhgB,EAAQmf,IAExB,SAASgB,GAAwBC,EAAWN,GAExC,IAAIO,EAAYP,EAASM,GAEzB,OADYH,GAAQI,GAAaA,EAAYA,EAAU/B,IAM3D,SAASgC,GAAYT,GACjB,OAA+C,IAAzB,EAAdA,EAAMpb,OAElB,SAAS8b,GAAe9a,GACpB,OAAwB,OAAjBA,EAAIyS,SAEf,SAASsI,GAAa9iB,GAElB,OAAO1C,MAAMmK,QAAQzH,IAAUA,EAAM3B,SAAWwjB,GAEpD,SAASkB,GAAWrkB,GAChB,OAA8C,IAAtB,IAAhBA,EAAO8hB,KAMnB,SAASwC,GAAgBtkB,GAErB,OAAOA,EAAOojB,IAElB,SAASmB,GAAiBvkB,GACtB,IAAIsB,EAAQgjB,GAAgBtkB,GAC5B,OAAIsB,EACO1C,MAAMmK,QAAQzH,GAASA,EAAQA,EAAMiiB,MAEzC;;;;;;;;;;;;;;;AAkDX,IAsUIiB,GApOAC,GAlGAC,GAAQ,EACRC,GAAkB,EAClBC,GAA6B,EAC7BC,IAAsB,EAoHtBC,IArBAL,GACA,SAASA,GAIT/mB,EAIAqnB,EAAgBC,GACZ3mB,KAAKX,QAAUA,EAKfW,KAAK4mB,WAAY,EACjB5mB,KAAK6mB,oBAAsBH,EAC3B1mB,KAAK8mB,WAAaH,IAIiB9lB;;;;;;;;AA6D3C,SAASkmB,GAAsBC,EAAgBC,EAAcC,GAGzD,IAAIrH,EAAYoH,EAAapH,UAAWC,EAASmH,EAAanH,OAAQE,EAAUiH,EAAajH,QACzFH,KACCqH,EAAMC,YAAcD,EAAMC,eAAiB7jB,KAAK0jB,EAAgBnH,IAChEqH,EAAME,aAAeF,EAAME,gBAAkB9jB,KAAK0jB,EAAgBnH,IAEnEC,IACCoH,EAAMC,YAAcD,EAAMC,eAAiB7jB,MAAM0jB,EAAgBlH,GAElEE,KACCkH,EAAMC,YAAcD,EAAMC,eAAiB7jB,KAAK0jB,EAAgBhH,IAChEkH,EAAME,aAAeF,EAAME,gBAAkB9jB,KAAK0jB,EAAgBhH,IAsB3E,SAASqH,GAAuBH,EAAO9B,GACnC,GAAI8B,EAAMI,kBAIN,IAAK,IAAInmB,EAAIikB,EAAMmC,eAAgBC,EAAMpC,EAAMqC,aAActmB,EAAIqmB,EAAKrmB,IAAK,CACvE,IAAI8lB,EAAeC,EAAMjL,KAAK9a,GAC1B8lB,EAAa/G,mBACZgH,EAAMQ,eAAiBR,EAAMQ,kBAAoBpkB,MAAMnC,EAAG8lB,EAAa/G,kBAExE+G,EAAa7G,uBACZ8G,EAAMQ,eAAiBR,EAAMQ,kBAAoBpkB,KAAKnC,EAAG8lB,EAAa7G,sBACtE8G,EAAMS,oBAAsBT,EAAMS,uBAAyBrkB,KAAKnC,EAAG8lB,EAAa7G,sBAEjF6G,EAAa3G,gBACZ4G,EAAMU,YAAcV,EAAMU,eAAiBtkB,MAAMnC,EAAG8lB,EAAa3G,eAElE2G,EAAazG,oBACZ0G,EAAMU,YAAcV,EAAMU,eAAiBtkB,KAAKnC,EAAG8lB,EAAazG,mBAChE0G,EAAMW,iBAAmBX,EAAMW,oBAAsBvkB,KAAKnC,EAAG8lB,EAAazG,mBAEjD,MAA1ByG,EAAavG,YACZwG,EAAMY,eAAiBZ,EAAMY,kBAAoBxkB,KAAKnC,EAAG8lB,EAAavG,YAkBvF,SAASqH,GAAiBC,EAAad,EAAOe,GACrCA,GACDC,GAAaF,EAAad,EAAMC,UAAWD,EAAME,WAAYa,EAAoB,GAYzF,SAASC,GAAaF,EAAaG,EAAgBf,EAAYa,EAAoBG,GAC/E,IAAIH,EAAJ,CAEA,IAAII,GAAoC,EAArBL,EAAYvE,OAAyC2E,EACpED,EACAf,EACAiB,GAiBR,SAASC,EAAUN,EAAaO,EAAKH,GAEjC,IADA,IAAII,EAAiB,EACZrnB,EAAI,EAAGA,EAAIonB,EAAIjnB,OAAQH,GAAK,EAAG,CACpC,IAAIsnB,EAAaF,EAAIpnB,GAAK,EAEtBunB,EAAYV,EADKS,GAAcF,EAAIpnB,GAAKonB,EAAIpnB,IAE5CwnB,EAAOJ,EAAIpnB,EAAI,GACfsnB,EAE4BT,EAAYvE,KAAU,KADlD+E,IAI0B,EAArBR,EAAYvE,OAAyC2E,IACtDJ,EAAYvE,KAAU,KACtBkF,EAAKpnB,KAAKmnB,IAIdC,EAAKpnB,KAAKmnB;;;;;;;OAlCdJ,CAAUN,EAAaK,EAAaD,IAGd,EAArBJ,EAAYvE,OAAyC2E,GACxC,IAAdA,IACAJ,EAAYvE,KAAU,KACtBuE,EAAYvE,KAAU,IAuD9B,IA0BImF,GA6DAC,GAkBAC,GAmBA5D,GA5HA6D,GAAsB,KAK1B,SAASC,GAAuBhe,GAC5B+d,GAAsB/d,EA0C1B,SAASie,KACLL,IAAkB,EAmBtB,SAASM,KACLN,IAAkB,EAEtB,SAASO,KACL,OAAOjE,GAWX,SAASkE,GAAYC,GACjBC,GAAeD,EAInB,SAASE,KAEL,OAAOV,GAEX,SAASW,GAAyBpE,GAC9ByD,GAAwBzD,EAE5B,SAASqE,GAAoBrE,EAAOG,GAEhCsD,GAAwBzD,EACxBF,GAAQK,EAQZ,SAASmE,KAEL,OAAOZ,GAEX,SAASa,GAAY1mB,GACjB6lB,GAAW7lB,EAGf,SAAS2mB,GAAerE,GAEpB,YADa,IAATA,IAAmBA,EAAOL,IACkB,IAA1B,EAAdK,EAAK9B,KAejB,IAAI6F,GAAe,KAUfrB,IAAqB,EACzB,SAAS4B,KAEL,OAAO5B,GAEX,SAAS6B,GAAsBC,GAC3B9B,GAAqB8B,EAOzB,IAAIC,IAAoB,EAExB,SAASC,KACL,OAAOD,GAEX,SAASE,GAAejnB,GACpB+mB,GAAmB/mB,EAMvB,IAAIknB,GAAoB,EACxB,SAASC,KAEL,OAAOD,GAEX,SAASE,GAAqBpnB,GAC1BknB,GAAoBlnB,EAcxB,SAASqnB,GAAUC,EAASC,GAExB,IAAIC,EAAUvF,GAQd,OAPIqF,IAEAP,GADYO,EAAQ/G,IACKkH,mBAE7B7B,GAAwB2B,EACxB1B,IAAW,EACX5D,GAAQoE,GAAeiB,EAChBE,EAEX,SAASE,GAAgBC,GAGrB,YAFc,IAAVA,IAAoBA,EAAQ,IAChCtB,GAGJ,SAASuB,EAAYC,EAAc9C,GAC/B,KAAO8C,EAAe,GAElB9C,EAAcA,EAAYvD,IAC1BqG,IAEJ,OAAO9C,EATQ6C,CAAYD,EAAOtB,KACdrF,IAyBxB,SAAS8G,GAAUR,GACf,IAAIrD,EAAQhC,GAAM1B,IAClB,GAAIoG,GAAe1E,IACfA,GAAMzB,MAAU,OAGhB,IACIyE,GAAahD,GAAOgC,EAAMU,UAAWV,EAAMW,eAAgBI,GAAoB,GAEnF,QAEI/C,GAAMzB,MAAU,GAChByB,GAAMnB,IAAiBmD,EAAMwD,kBAGrCJ,GAAUC,EAAS;;;;;;;OAWvB,SAASS,GAAkBC,GACvB,OAAOA,IAAmBzE,GAE9B,SAAS0E,GAAuBD,GAC5B,OAAwB,MAAjBA,EAEX,SAASE,GAA4BF,GACjC,OAAOA,GAAkB,GAW7B,SAASG,GAAsBC,EAAUC,GAOrC,IANA,IAAIC,EAAaJ,GAA4BE,GACzCG,EAAaF,EAKVC,EAAa,GAChBC,EAAaA,EAAW/G,IACxB8G,IAEJ,OAAOC;;;;;;;OAeX,SAASC,GAAevG,GAEpB,IAAInT,EAASmT,EAAMxB,IACnB,OAAOqC,GAAahU,GAAUA,EAAO2R,IAAU3R,EAuBnD,SAAS2Z,GAAkBxG,GAEvB,IADA,IAAIyG,EAAYzG,EAAMpB,IACf6H,GAAgC,IAAnBA,EAAUrkB,MAG1BqkB,GADAzG,EAAQA,EAAMT,KACIX,IAGtB,OAAOoB,EASX,SAAS0G,GAAeC,GAIpB,OApCJ,SAASC,EAAYC,GAGjB,IADA,IAAI7G,EAAQM,GAAQuG,GAAoBA,EAAmB7F,GAAiB6F,GACrE7G,KAA0B,IAAfA,EAAMzB,MACpByB,EAAQuG,GAAevG,GAG3B,OAAOA,EA0BQ4G,CAAYD,GAGX5H;;;;;;;OA8CpB,IAAI+H,IAAuB,EAC3B,SAASC,GAAwB7gB,GAC7B,IAAI8gB,EAAWF,GAEf,OADAA,GAAuB5gB,EAChB8gB,EAOX,IACIC,GAAaC,IAEbC,GAAkB,EA8CtB,SAASC,GAA+BlH,EAAOC,GAC3C,IAAIkH,EAAwBC,GAAiBpH,EAAOC,GACpD,IAA+B,IAA3BkH,EACA,OAAOA,EAEX,IAAIrF,EAAQ7B,EAAS7B,IACjB0D,EAAMI,oBACNlC,EAAMqH,cAAgBpH,EAAS/jB,OAC/BorB,GAAYxF,EAAMjL,KAAMmJ,GACxBsH,GAAYrH,EAAU,MACtBqH,GAAYxF,EAAMyF,UAAW,OAGjC,IAAIC,EAAYC,GAA0BzH,EAAOC,GAC7CyH,EAAc5B,GAAuB0B,GACrCG,EAAc3B,GAAsBwB,EAAWvH,GAC/CoH,EAAgBrH,EAAMqH,cAG1B,GAAIzB,GAAkB4B,GAIlB,IAHA,IAAII,EAAaD,EAAYvJ,IAAOvH,KAG3B9a,EAAI,EAAGA,EAAI,EAAGA,IACnBkkB,EAASoH,EAAgBtrB,GAAK4rB,EAAYD,EAAc3rB,GAAK6rB,EAAWF,EAAc3rB,GAI9F,OADAkkB,EAASoH,EAAgBnG,IAAmBsG,EACrCH,EAEX,SAASC,GAAYnE,EAAK0E,GACtB1E,EAAIjlB,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG2pB,GAErC,SAAST,GAAiBpH,EAAOC,GAC7B,OAA6B,IAAzBD,EAAMqH,eAGLrH,EAAMrT,QAAUqT,EAAMrT,OAAO0a,gBAAkBrH,EAAMqH,eAGH,MAAnDpH,EAASD,EAAMqH,cAAgBnG,KACvB,EAGDlB,EAAMqH,cASrB,SAASI,GAA0BzH,EAAOG,GACtC,GAAIH,EAAMrT,SAA0C,IAAhCqT,EAAMrT,OAAO0a,cAC7B,OAAOrH,EAAMrT,OAAO0a,cAOxB,IAFA,IAAIjC,EAAYjF,EAAKzB,IACjByH,EAAa,EACVf,IAA0C,IAA7BA,EAAUiC,eAE1BjC,GADAjF,EAAOA,EAAKd,KACOc,EAAKzB,IAAU,KAClCyH,IAEJ,OAAOf,EACHA,EAAUiC,cAAiBlB,GAAc,IACxC,EAST,SAAS2B,GAAmBT,EAAelH,EAAMtf,IAnHjD,SAASknB,EAASV,EAAevF,EAAO5f,GAEpC,IAAI8O,EAAqB,iBAAT9O,EAAoBA,EAAK6V,IAAiB7V,EAAK8lB,WAAW,IAAM,EAGtE,MAANhX,IACAA,EAAK9O,EAAK6V,IAAiBkP,MAI/B,IAAIgB,EAAWjX,EAAK+V,GAIhBmB,EAAO,GAAKD,EAIZE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EACLI,EAAQvG,EAAMjL,KAHE,IAAXoR,EAKLE,EAAMC,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EACxEE,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EAG5EC,EAAMC,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EACxEE,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,IAAkBa,EAyF5EH,CAASV,EAAelH,EAAK/B,IAAQvd,GAiCzC,SAASynB,GAAoBtI,EAAOuI,GAGhC,IAAIC,EAAQxI,EAAMwI,MAClB,GAAIA,EACA,IAAK,IAAIzsB,EAAI,EAAGA,EAAIysB,EAAMtsB,OAAQH,GAAQ,EAAG,CACzC,IAAI0sB,EAAWD,EAAMzsB,GACrB,GAAiB,IAAb0sB,EACA,MACJ,GAAIA,GAAYF,EACZ,OAAOC,EAAMzsB,EAAI,GAI7B,OAAO,KAmBX,SAAS2sB,GAAsB1I,EAAOF,EAAOjf,EAAO+D,EAAOK,GAEvD,QADc,IAAVL,IAAoBA,EAAQ1K,EAAQyG,YAAYkE,SAChDmb,EAAO,CACP,IAAI2I,EAkOZ,SAASC,EAAsB/nB,GAE3B,GAAqB,iBAAVA,EACP,OAAOA,EAAMmnB,WAAW,IAAM,EAElC,IAAIa,EAAUhoB,EAAMkX,IAEpB,MAA2B,iBAAZ8Q,GAAwBA,EAAU,EAAKA,EAAU9B,GAAa8B,EAzOzDD,CAAsB/nB,GAGtC,GAAyB,mBAAd8nB,EAA0B,CACjC,IAAIG,EAA4B3E,KAC5B4E,EAAYhF,KAChBM,GAAoBrE,EAAOF,GAC3B,IACI,IAAIjiB,EAAQ8qB,IACZ,GAAa,MAAT9qB,GAAmB+G,EAAQ1K,EAAQyG,YAAYG,SAI/C,OAAOjD,EAHP,MAAM,IAAIyD,MAAM,mBAAqBuX,GAAgBhY,GAAS,KAMtE,QACIwjB,GAAoByE,EAA2BC,SAGlD,GAAwB,iBAAbJ,EAAuB,CACnC,IAAmB,IAAfA,EAEA,OAAO,IAAIK,GAAahJ,EAAOF,GAMnC,IAAImJ,EAAgB,KAChB5B,EAAgBD,GAAiBpH,EAAOF,GACxC+F,EAAiBzE,GACjB8H,EAAmBtkB,EAAQ1K,EAAQyG,YAAYM,KAAOqlB,GAAkBxG,GAAOpB,IAAU,KAkB7F,MAduB,IAAnB2I,GAAwBziB,EAAQ1K,EAAQyG,YAAYK,YACpD6kB,GAAoC,IAAnBwB,EAAuBI,GAA0BzH,EAAOF,GACrEA,EAAMuH,EAAgBnG,IACrBiI,GAAmBvkB,GAAO,IAI3BqkB,EAAgBnJ,EAAM1B,IACtBiJ,EAAgBvB,GAAuBD,GACvC/F,EAAQkG,GAAsBH,EAAgB/F,IAL9CuH,GAAiB,IAUC,IAAnBA,GAAsB,CACzBxB,EAAiB/F,EAAMuH,EAAgBnG,IAEvC,IAAIY,EAAQhC,EAAM1B,IAClB,GAAIgL,GAAcT,EAAWtB,EAAevF,EAAMjL,MAAO,CAIrD,IAAIwS,EAAWC,GAAuBjC,EAAevH,EAAOjf,EAAOooB,EAAerkB,EAAOskB,GACzF,GAAIG,IAAaE,GACb,OAAOF,EAGXF,GAAmBvkB,EAAOkb,EAAM1B,IAAOvH,KAAKwQ,EAAgBpG,MAAWiI,IACvEE,GAAcT,EAAWtB,EAAevH,IAGxCmJ,EAAgBnH,EAChBuF,EAAgBvB,GAAuBD,GACvC/F,EAAQkG,GAAsBH,EAAgB/F,IAM9CuH,GAAiB,IASjC,GAJIziB,EAAQ1K,EAAQyG,YAAYG,eAA8Bc,IAAlBqD,IAExCA,EAAgB,MAEoD,IAAnEL,GAAS1K,EAAQyG,YAAYI,KAAO7G,EAAQyG,YAAYM,OAAc,CACvE,IAAIuoB,EAAiB1J,EAAMhB,IAIvB2K,EAA+BjlB,OAAwB5C,GAC3D,IACI,OAAI4nB,EACOA,EAAezkB,IAAIlE,EAAOoE,EAAeL,EAAQ1K,EAAQyG,YAAYG,UAGrEgE,EAAmBjE,EAAOoE,EAAeL,EAAQ1K,EAAQyG,YAAYG,UAGpF,QACI0D,EAAwBilB,IAGhC,GAAI7kB,EAAQ1K,EAAQyG,YAAYG,SAC5B,OAAOmE,EAGP,MAAM,IAAI3D,MAAM,4BAA8BuX,GAAgBhY,GAAS,KAG/E,IAAI0oB,MACJ,SAASD,GAAuBjC,EAAevH,EAAOjf,EAAOooB,EAAerkB,EAAOskB,GAC/E,IAAIQ,EAAe5J,EAAM1B,IACrB4B,EAAQ0J,EAAa7S,KAAKwQ,EAAgBpG,IAsB1C0I,EAAgBC,GAA0B5J,EAAOF,EAAOjf,EAnBd,MAAjBooB,EAQxBxI,GAAYT,IAAU4G,GAOtBqC,GAAiBS,GAAgC,IAAf1J,EAAM9d,KAGpB0C,EAAQ1K,EAAQyG,YAAYM,MAASioB,IAAqBlJ,GAEnF,OAAsB,OAAlB2J,EACOE,GAAkBH,EAAa7S,KAAMiJ,EAAO6J,EAAe3J,GAG3DuJ,GAaf,SAASK,GAA0B5J,EAAOF,EAAOjf,EAAOipB,EAAwBC,GAW5E,IAVA,IACIC,EAAsBhK,EAAMiK,gBAC5BC,EAFQpK,EAAM1B,IAEOvH,KACrBsT,EAAyC,MAAtBH,EACnBI,EAAkBpK,EAAMmC,eAExBkI,EAAwBL,GAAuB,GAG/CM,EAAWP,EAAoBI,EAAmBE,EAJnCrK,EAAMqC,aAKhBtmB,EAHW+tB,EAAyBK,EAAmBA,EAAmBE,EAGvDtuB,EAAIuuB,EAAUvuB,IAAK,CAC3C,IAAIwuB,EAAqBL,EAAanuB,GACtC,GAAIA,EAAIquB,GAAmBvpB,IAAU0pB,GACjCxuB,GAAKquB,GAAmBG,EAAmBroB,OAASrB,EACpD,OAAO9E,EAGf,GAAIguB,EAAmB,CACnB,IAAIS,EAASN,EAAaE,GAC1B,GAAII,GAAU9J,GAAe8J,IAAWA,EAAOtoB,OAASrB,EACpD,OAAOupB,EAGf,OAAO,KASX,SAASP,GAAkBxB,EAAOoC,EAAOtqB,EAAO6f,GAC5C,IAAIniB,EAAQ4sB,EAAMtqB,GAClB,GAz+BJ,SAASuqB,EAAUtb,GAEf,OAAe,OAARA,GAA8B,iBAAPA,GAAmBpU,OAAOwO,eAAe4F,IAAQiS;;;;;;;OAu+B3EqJ,CAAU7sB,GAAQ,CAClB,IAAI5D,EAAU4D,EACd,GAAI5D,EAAQunB,UACR,MAAM,IAAIlgB,MAAM,oBAAsBuX,GAAgBwP,EAAMloB,KAEhE,IAAIwqB,EAA+B9D,GAAwB5sB,EAAQwnB,qBACnExnB,EAAQunB,WAAY,EACpB,IAAIiI,OAA+B,EAC/BxvB,EAAQynB,aACR+H,EAA+BjlB,EAAwBvK,EAAQynB,aAEnE,IAAIoH,EAA4B3E,KAC5B4E,EAAYhF,KAChBM,GAAoBrE,EAAOyK,GAC3B,IACI5sB,EAAQ4sB,EAAMtqB,GAASlG,EAAQA,QAAQ,KAAMouB,EAAOoC,EAAOzK,GAE/D,QACQ/lB,EAAQynB,YACRld,EAAwBilB,GAC5B5C,GAAwB8D,GACxB1wB,EAAQunB,WAAY,EACpB6C,GAAoByE,EAA2BC,IAGvD,OAAOlrB,EAuBX,SAASurB,GAAcT,EAAWtB,EAAeuD,GAI7C,IAEIzC,EAAiB,GAAZQ,EACLP,EAAiB,GAAZO,EAeT,UAjBqB,IAAZA,EAQGR,EAAMC,EAAKwC,EAAavD,EAAgB,GAAKuD,EAAavD,EAAgB,GAC7Ee,EAAKwC,EAAavD,EAAgB,GAAKuD,EAAavD,EAAgB,GAGjEc,EAAMC,EAAKwC,EAAavD,EAAgB,GAAKuD,EAAavD,EAAgB,GAC7Ee,EAAKwC,EAAavD,EAAgB,GAAKuD,EAAavD,IAdlD,GAAKsB,GAqBpB,SAASQ,GAAmBvkB,EAAOimB,GAC/B,QAASjmB,EAAQ1K,EAAQyG,YAAYI,MAAW6D,EAAQ1K,EAAQyG,YAAYM,MAAQ4pB,GAExF,IAAI7B,GAA8B,WAC9B,SAASA,EAAa8B,EAAQC,GAC1BnwB,KAAKkwB,OAASA,EACdlwB,KAAKmwB,OAASA,EAKlB,OAHA/B,EAAavtB,UAAUsJ,IAAM,SAAUlE,EAAOoE,GAC1C,OAAOyjB,GAAsB9tB,KAAKkwB,OAAQlwB,KAAKmwB,OAAQlqB,OAAOe,EAAWqD,IAEtE+jB,EARsB,GAUjC,SAASgC,GAAe9oB,GACpB,IAAIyD,EAAUzD,EACV0D,EAAMoX,GAAgBrX,IAAYsX,GAAgBtX,IAClDuX,GAAWvX,IAAY1D,EAAiB0D,IAAYvD,EAAeuD,GACvE,OAAKC,QAAuBhE,IAAhBgE,EAAI3L,QAGT2L,EAAI3L,QAFA,KAIf,SAASgxB,GAAoB/oB,GACzB,IACIjI,EAAU+wB,GADFhwB,OAAOwO,eAAetH,EAAKzG,WAAWD,aAElD,OAAgB,OAAZvB,EACOA,EAOA,SAAU4B,GAAK,OAAO,IAAIA;;;;;;;OAWzC,SAASqvB,GAAgB/sB,GACrB,OAAOA,EAAMwR,IAEjB,SAASwb,GAAiBhtB,GACtB,OAAOA,EAAMyR,IAKjB,SAASwb,GAAmBC,GAExB,IADA,IAAIzrB,KACKR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAE/BisB,EAAQltB,MAAM/B,MAAMivB,EAASjtB,EAASwB;;;;;;;OAmC1C,IAAI0rB,GAA8B,WAC9B,SAASA,IAIL1wB,KAAK2wB,SAAWF,QAgCpB,OA9BAC,EAAa7vB,UAAU+vB,YAAc,SAAUrtB,GAC3C,IAAIiS,EAAgBxV,KAAK6wB,mBAAmBttB,GACxCoR,EAAU3U,KAAK8wB,aAAavtB,GAG5BwtB,EAvDZ,SAASC,EAAeztB,GACpB,OAAOA,EAAM0R,KAAiBub,GAsDRQ,CAAeztB,GACjCwtB,EAAY/wB,KAAK2wB,SAAU,QAASptB,GAChCiS,GACAub,EAAY/wB,KAAK2wB,SAAU,iBAAkBnb,GAE7Cb,GACAoc,EAAY/wB,KAAK2wB,SAAU,gBAAiBhc,IAIpD+b,EAAa7vB,UAAUiwB,aAAe,SAAUvtB,GAC5C,OAAIA,EACO+sB,GAAgB/sB,GAAS+sB,GAAgB/sB,GAC5CvD,KAAK8wB,aAAaP,GAAiBhtB,IAEpC,MAGXmtB,EAAa7vB,UAAUgwB,mBAAqB,SAAUttB,GAElD,IADA,IAAIH,EAAImtB,GAAiBhtB,GAClBH,GAAKmtB,GAAiBntB,IACzBA,EAAImtB,GAAiBntB,GAEzB,OAAOA,GAEJstB,EArCsB,GA0E7BO,GAAQ;;;;;;;OACZ,SAASC,GAAwBjuB,EAAOqE,GACpC,OAAQrE,aAAiB4M,QAAU5M,EAAMguB,MAAW3pB,EA8DxD,SAAS6pB,GAA8BC,EAAerH,GAClD,IAAIsH,EAAU,IAAIxhB,OAAOuhB,GAEzB,OADAC,EAAQJ,IAASlH,EACVsH;;;;;;;OAgBX,IAAIC,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD;;;;;;;;AAkCX,IAAIG,GAAiC,WACjC,SAASA,EAAgBC,GAIrB,GAHA1xB,KAAK0xB,WAAaA,EAClB1xB,KAAK2xB,cAAgB3xB,KAAK0xB,WAAWE,eAAeC,mBAAmB,sBACvE7xB,KAAK8xB,iBAAmB9xB,KAAK2xB,cAAchT,KACd,MAAzB3e,KAAK8xB,iBAA0B,CAG/B,IAAIC,EAAY/xB,KAAK2xB,cAAcK,cAAc,QACjDhyB,KAAK2xB,cAAcM,YAAYF,GAC/B/xB,KAAK8xB,iBAAmB9xB,KAAK2xB,cAAcK,cAAc,QACzDD,EAAUE,YAAYjyB,KAAK8xB,kBAE/B9xB,KAAK8xB,iBAAiBI,UAAY,wDAC9BlyB,KAAK8xB,iBAAiBK,eAAkBnyB,KAAK8xB,iBAAiBK,cAAc,QAMhFnyB,KAAK8xB,iBAAiBI,UAClB,mEAOIlyB,KAAKoyB,oBANTpyB,KAAK8xB,iBAAiBK,eAAiBnyB,KAAK8xB,iBAAiBK,cAAc,YAkHvF,SAASE,IACL,IACI,QAASrpB,OAAOspB,UAEpB,MAAOhuB,GACH,OAAO;;;;;;;OAlHC+tB,GAC2BryB,KAAKuyB,8BAKbvyB,KAAKwyB,mCAhB5BxyB,KAAKoyB,oBAAsBpyB,KAAKyyB,wBA8GxC,OAvFAhB,EAAgB5wB,UAAU4xB,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAOpuB,GACH,OAAO,KAEX,IAAIsuB,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,UAAKhsB,GACT,IAAI2X,EAAOiU,EAAI9U,SAASa,KAExB,OADAA,EAAKsU,YAAYtU,EAAKuU,YACfvU,GAOX8S,EAAgB5wB,UAAU0xB,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAI/T,GAAO,IAAI3V,OACVspB,WACAa,gBAAgBT,EAAM,aACtB/T,KAEL,OADAA,EAAKsU,YAAYtU,EAAKuU,YACfvU,EAEX,MAAOra,GACH,OAAO,OASfmtB,EAAgB5wB,UAAU2xB,kCAAoC,SAAUE,GAEpE,IAAIU,EAAapzB,KAAK2xB,cAAcK,cAAc,YAClD,MAAI,YAAaoB,GACbA,EAAWlB,UAAYQ,EAChBU,IAEXpzB,KAAK8xB,iBAAiBI,UAAYQ,EAG9B1yB,KAAK0xB,WAAW2B,cAChBrzB,KAAKszB,mBAAmBtzB,KAAK8xB,kBAE1B9xB,KAAK8xB,mBAUhBL,EAAgB5wB,UAAUyyB,mBAAqB,SAAUC,GAGrD,IAFA,IAAIC,EAAUD,EAAGE,WAERtyB,EAAIqyB,EAAQlyB,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACI0sB,EADS2F,EAAQE,KAAKvyB,GACJ2C,KACL,cAAb+pB,GAAyD,IAA7BA,EAAS1lB,QAAQ,SAC7CorB,EAAGI,gBAAgB9F,GAI3B,IADA,IAAI+F,EAAYL,EAAGL,WACZU,GACCA,EAAUC,WAAaC,KAAKC,cAC5B/zB,KAAKszB,mBAAmBM,GAC5BA,EAAYA,EAAUI,aAGvBvC,EA/HyB,GAkLhCwC,GAAmB,8DAEnBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAMvkB,OAAOukB,IACLC,MAAMJ,KAAqBG,EAAIC,MAAMH,IAClCE,GACP5C,MACAf,QAAQ6D,KAAK,wCAA0CF,EAAM,sCAE1D,UAAYA,GAEvB,SAASG,GAAeC,GAEpB,OADAA,EAAS3kB,OAAO2kB,IACFC,MAAM,KAAK5sB,IAAI,SAAU2sB,GAAU,OAAOL,GAAaK,EAAOE,UAAY5sB,KAAK;;;;;;;OAUjG,SAAS6sB,GAAOC,GACZ,IAAIC,EAAKvwB,EACL0D,KACJ,IACI,IAAK,IAAI8sB,EAAKnyB,EAASiyB,EAAKH,MAAM,MAAOM,EAAKD,EAAG9xB,QAAS+xB,EAAG7xB,KAAM6xB,EAAKD,EAAG9xB,OAEvEgF,EADQ+sB,EAAG9xB,QACF,EAGjB,MAAO+xB,GAASH,GAAQtxB,MAAOyxB,GAC/B,QACI,IACQD,IAAOA,EAAG7xB,OAASoB,EAAKwwB,EAAGG,SAAS3wB,EAAG/C,KAAKuzB,GAEpD,QAAU,GAAID,EAAK,MAAMA,EAAItxB,OAEjC,OAAOyE,EAEX,SAASktB,KAEL,IADA,IAIIC,EAAK7wB,EAJL8wB,KACK5wB,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpC4wB,EAAK5wB,GAAMnD,UAAUmD,GAGzB,IAAIwD,KACJ,IACI,IAAK,IAAIqtB,EAAS1yB,EAASyyB,GAAOE,EAAWD,EAAOryB,QAASsyB,EAASpyB,KAAMoyB,EAAWD,EAAOryB,OAAQ,CAClG,IAAI9B,EAAIo0B,EAASryB,MACjB,IAAK,IAAImI,KAAKlK,EACNA,EAAET,eAAe2K,KACjBpD,EAAIoD,IAAK,IAIzB,MAAOmqB,GAASJ,GAAQ5xB,MAAOgyB,GAC/B,QACI,IACQD,IAAaA,EAASpyB,OAASoB,EAAK+wB,EAAOJ,SAAS3wB,EAAG/C,KAAK8zB,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAI5xB,OAEjC,OAAOyE,EAOX,IA0JIwtB,GA0DOC,GApNPC,GAAgBf,GAAO,0BAGvBgB,GAAkChB,GAAO,kDACzCiB,GAAmCjB,GAAO,SAC1CkB,GAA4BX,GAAMU,GAAkCD,IAEpEG,GAAiBZ,GAAMS,GAAiChB,GAAO,oMAI/DoB,GAAkBb,GAAMU,GAAkCjB,GAAO,+LAGjEqB,GAAiBd,GAAMQ,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYtB,GAAO,gEAEnBuB,GAAevB,GAAO,UACtBwB,GAAaxB,GAAO,idAWpByB,GAAclB,GAAMe,GAAWC,GAAcC,IAK7CE,GAA0C,WAC1C,SAASA,IAGLr2B,KAAKs2B,oBAAqB,EAC1Bt2B,KAAKu2B,OA2FT,OAzFAF,EAAyBx1B,UAAU21B,iBAAmB,SAAUjD,GAM5D,IAFA,IAAIkD,EAAUlD,EAAGL,WACbwD,GAAe,EACZD,GAWH,GAVIA,EAAQ5C,WAAaC,KAAKC,aAC1B2C,EAAe12B,KAAK22B,aAAaF,GAE5BA,EAAQ5C,WAAaC,KAAK8C,UAC/B52B,KAAK62B,MAAMJ,EAAQK,WAInB92B,KAAKs2B,oBAAqB,EAE1BI,GAAgBD,EAAQvD,WACxBuD,EAAUA,EAAQvD,gBAGtB,KAAOuD,GAAS,CAERA,EAAQ5C,WAAaC,KAAKC,cAC1B/zB,KAAK+2B,WAAWN,GAEpB,IAAIzzB,EAAOhD,KAAKg3B,sBAAsBP,EAASA,EAAQzC,aACvD,GAAIhxB,EAAM,CACNyzB,EAAUzzB,EACV,MAEJyzB,EAAUz2B,KAAKg3B,sBAAsBP,EAASA,EAAQQ,YAG9D,OAAOj3B,KAAKu2B,IAAIzuB,KAAK,KAUzBuuB,EAAyBx1B,UAAU81B,aAAe,SAAUrY,GACxD,IAAI4Y,EAAU5Y,EAAQ6Y,SAASC,cAC/B,IAAKpB,GAAev1B,eAAey2B,GAE/B,OADAl3B,KAAKs2B,oBAAqB,GACnB,EAEXt2B,KAAKu2B,IAAIjzB,KAAK,KACdtD,KAAKu2B,IAAIjzB,KAAK4zB,GAEd,IADA,IAAI1D,EAAUlV,EAAQmV,WACbtyB,EAAI,EAAGA,EAAIqyB,EAAQlyB,OAAQH,IAAK,CACrC,IAAIk2B,EAAS7D,EAAQE,KAAKvyB,GACtB0sB,EAAWwJ,EAAOvzB,KAClBwzB,EAAQzJ,EAASuJ,cACrB,GAAKhB,GAAY31B,eAAe62B,GAAhC,CAIA,IAAIr0B,EAAQo0B,EAAOp0B,MAEfgzB,GAAUqB,KACVr0B,EAAQkxB,GAAalxB,IACrBizB,GAAaoB,KACbr0B,EAAQsxB,GAAetxB,IAC3BjD,KAAKu2B,IAAIjzB,KAAK,IAAKuqB,EAAU,KAAM0J,GAAet0B,GAAQ,UATtDjD,KAAKs2B,oBAAqB,EAYlC,OADAt2B,KAAKu2B,IAAIjzB,KAAK,MACP,GAEX+yB,EAAyBx1B,UAAUk2B,WAAa,SAAUN,GACtD,IAAIS,EAAUT,EAAQU,SAASC,cAC3BpB,GAAev1B,eAAey2B,KAAaxB,GAAcj1B,eAAey2B,KACxEl3B,KAAKu2B,IAAIjzB,KAAK,MACdtD,KAAKu2B,IAAIjzB,KAAK4zB,GACdl3B,KAAKu2B,IAAIjzB,KAAK,OAGtB+yB,EAAyBx1B,UAAUg2B,MAAQ,SAAUA,GAAS72B,KAAKu2B,IAAIjzB,KAAKi0B,GAAeV,KAC3FR,EAAyBx1B,UAAUm2B,sBAAwB,SAAUQ,EAAMC,GACvE,GAAIA,IACCD,EAAKE,wBAAwBD,GAC1B3D,KAAK6D,kCAAoC7D,KAAK6D,+BAClD,MAAM,IAAIjxB,MAAM,6DAA+D8wB,EAAKI,WAExF,OAAOH,GAEJpB,EAhGkC,GAmGzCwB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASP,GAAet0B,GACpB,OAAOA,EAAM6R,QAAQ,KAAM,SACtBA,QAAQ+iB,GAAuB,SAAUxD,GAG1C,MAAO,MAAyB,MAFvBA,EAAMjH,WAAW,GAEJ,QADZiH,EAAMjH,WAAW,GACqB,OAAU,OAAW,MAEpEtY,QAAQgjB,GAAyB,SAAUzD,GAAS,MAAO,KAAOA,EAAMjH,WAAW,GAAK,MACxFtY,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAASijB,GAAcrG,EAAYsG,GAC/B,IAAIlG,EAAmB,KACvB,IACI0D,GAAkBA,IAAmB,IAAI/D,GAAgBC,GAEzD,IAAIuG,EAAaD,EAAkBnoB,OAAOmoB,GAAmB,GAC7DlG,EAAmB0D,GAAgBpD,oBAAoB6F,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAIxxB,MAAM,yDAEpBwxB,IACAD,EAAaE,EACbA,EAAarG,EAAiBI,UAC9BJ,EAAmB0D,GAAgBpD,oBAAoB6F,SAClDA,IAAeE,GACxB,IAAIC,EAAY,IAAI/B,GAChBgC,EAAWD,EAAU5B,iBAAiB8B,GAAmBxG,IAAqBA,GAIlF,OAHIN,MAAe4G,EAAU9B,oBACzB7F,QAAQ6D,KAAK,mFAEV+D,EAEX,QAEI,GAAIvG,EAEA,IADA,IAAIyG,EAAWD,GAAmBxG,IAAqBA,EAChDyG,EAASrF,YACZqF,EAAStF,YAAYsF,EAASrF,aAK9C,SAASoF,GAAmB/E,GACxB,MAAO,YAAaA,GAIxB,SAASiF,EAAkBjF,GACvB,OAAOA,EAAGM,WAAaC,KAAKC,cAAgC,aAAhBR,EAAG4D;;;;;;;OALaqB,CAAkBjF,GAC1EA,EAAGkF,QACH;;;;;;;;AAaGhD,GAORn2B,EAAQm2B,kBAAoBn2B,EAAQm2B,qBANnBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK,eAO3D,IAAIiD,GACA,SAASA,OAgCTC,GAAmB,IAAIC,OAAO,8LAEZ,KAmBlBC,GAAS;;;;;;;OA2Bb,SAASC,GAAe71B,GAEpB,KADAA,EAAQ4M,OAAO5M,GAAOyxB,QAElB,MAAO,GAGX,IAAIqE,EAAW91B,EAAMoxB,MAAMwE,IAC3B,OAAKE,GAAY5E,GAAa4E,EAAS,MAAQA,EAAS,IACpD91B,EAAMoxB,MAAMsE,KA1BpB,SAASK,EAAkB/1B,GAGvB,IAFA,IAAIg2B,GAAgB,EAChBC,GAAgB,EACX/3B,EAAI,EAAGA,EAAI8B,EAAM3B,OAAQH,IAAK,CACnC,IAAIW,EAAImB,EAAMwR,OAAOtT,GACX,MAANW,GAAco3B,EACdD,GAAiBA,EAEN,MAANn3B,GAAam3B,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkB/1B,GAC5CA,GAEPuuB,MACAf,QAAQ6D,KAAK,0CAA4CrxB,EAAQ,uCAE9D;;;;;;;OAuBX,SAASk2B,GAAalB,GAClB,IAAIG,EAAYgB,KAChB,OAAIhB,EACOA,EAAUiB,SAAS/5B,EAAQm2B,gBAAgB6D,KAAMrB,IAAe,GAEvE/G,GAAwB+G,EAAY,QAC7BA,EAAWhwB,WAEf8vB,GAAcwB,SAAUtb,GAAgBga,IAenD,SAASuB,GAAcC,GACnB,IAAIrB,EAAYgB,KAChB,OAAIhB,EACOA,EAAUiB,SAAS/5B,EAAQm2B,gBAAgBiE,MAAOD,IAAgB,GAEzEvI,GAAwBuI,EAAa,SAC9BA,EAAYxxB,WAEhB6wB,GAAe7a,GAAgBwb,IAgB1C,SAASE,GAAYC,GACjB,IAAIxB,EAAYgB,KAChB,OAAIhB,EACOA,EAAUiB,SAAS/5B,EAAQm2B,gBAAgBoE,IAAKD,IAAc,GAErE1I,GAAwB0I,EAAW,OAC5BA,EAAU3xB,WAEdksB,GAAalW,GAAgB2b,IAWxC,SAASE,GAAoBC,GACzB,IAAI3B,EAAYgB,KAChB,GAAIhB,EACA,OAAOA,EAAUiB,SAAS/5B,EAAQm2B,gBAAgBuE,aAAcD,IAAsB,GAE1F,GAAI7I,GAAwB6I,EAAmB,eAC3C,OAAOA,EAAkB9xB,WAE7B,MAAM,IAAIvB,MAAM,iFAYpB,SAASuzB,GAAeC,GACpB,IAAI9B,EAAYgB,KAChB,GAAIhB,EACA,OAAOA,EAAUiB,SAAS/5B,EAAQm2B,gBAAgB0E,OAAQD,IAAiB,GAE/E,GAAIhJ,GAAwBgJ,EAAc,UACtC,OAAOA,EAAajyB,WAExB,MAAM,IAAIvB,MAAM,yCASpB,SAAS0zB,GAAgBC,EAAK7sB,GAC1B,MAAc,QAATA,IAA2B,UAAR6sB,GAA2B,UAARA,GAA2B,WAARA,GAClD,UAARA,GAA2B,WAARA,IACT,SAAT7sB,IAA4B,SAAR6sB,GAA0B,SAARA,GAChCP,GAEJH,GAeX,SAASW,GAAyBV,EAAWS,EAAK7sB,GAC9C,OAAO4sB,GAAgBC,EAAK7sB,EAArB4sB,CAA2BR,GAMtC,IAAIW,GAAwB,SAAU/sB,EAAMvK,GACxC,YAAc+D,IAAV/D,EACgB,qBAATuK,GAAwC,eAATA,GAAkC,iBAATA,GAClD,WAATA,GAA8B,eAATA,GAAkC,qBAATA,EAE/CgsB,GAAcv2B,IAkBzB,SAASm2B,KACL,IAAIlU,EAAQiE,KACZ,OAAOjE,GAASA,EAAMb;;;;;;;OAa1B,SAASmW,GAAUhmB,GAGf,QAASA,GAA2B,mBAAbA,EAAIimB,KAK/B,SAASC,GAAalmB,GAGlB,QAASA,GAAgC,mBAAlBA,EAAImmB;;;;;;;OAe/B,IAAIC,GAAoB,WAUxB,SAASC,GAA2B53B,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAMgF,WAAWqK,MAAM,EAAG,IAAMrP,EAE3D,MAAOG,GACH,MAAO;;;;;;;OAWf,IAAI03B,GAAkB,KACtB,SAASC,KACL,IAAKD,GAAiB,CAClB,IAAIE,EAAWryB,EAAgB,OAC/B,GAAIqyB,GAAYA,EAASj4B,SACrB+3B,GAAkBE,EAASj4B,cAK3B,IADA,IAAIuK,EAAOlN,OAAO66B,oBAAoBloB,IAAIlS,WACjCM,EAAI,EAAGA,EAAImM,EAAKhM,SAAUH,EAAG,CAClC,IAAIS,EAAM0L,EAAKnM,GACH,YAARS,GAA6B,SAARA,GACrBmR,IAAIlS,UAAUe,KAASmR,IAAIlS,UAAmB,UAC9Ci6B,GAAkBl5B,IAKlC,OAAOk5B;;;;;;;;;;;;;;OAmBX,SAASI,GAAeC,EAAGh7B,GACvB,OAAOg7B,IAAMh7B,GAAkB,iBAANg7B,GAA+B,iBAANh7B,GAAkBi7B,MAAMD,IAAMC,MAAMj7B;;;;;;;OAU1F,SAASk7B,GAAeF,EAAGh7B,GACvB,IAAIm7B,EAAsBC,GAAqBJ,GAC3CK,EAAsBD,GAAqBp7B,GAC/C,OAAIm7B,GAAuBE,EAwD/B,SAASC,EAAoBN,EAAGh7B,EAAGu7B,GAG/B,IAFA,IAAIC,EAAYR,EAAEJ,QACda,EAAYz7B,EAAE46B,UACL,CACT,IAAIc,EAAQF,EAAU34B,OAClB84B,EAAQF,EAAU54B,OACtB,GAAI64B,EAAM34B,MAAQ44B,EAAM54B,KACpB,OAAO,EACX,GAAI24B,EAAM34B,MAAQ44B,EAAM54B,KACpB,OAAO,EACX,IAAKw4B,EAAWG,EAAM54B,MAAO64B,EAAM74B,OAC/B,OAAO,GAlEJw4B,CAAoBN,EAAGh7B,EAAGk7B,MAK5BC,IAFWH,GAAmB,iBAANA,GAA+B,mBAANA,GAEZK,IAD1Br7B,GAAmB,iBAANA,GAA+B,mBAANA,IAK3C+6B,GAAeC,EAAGh7B,GAwBrC,IAAI47B,GAA8B,WAC9B,SAASA,EAAa94B,GAClBjD,KAAKg8B,QAAU/4B,EAWnB,OARA84B,EAAaE,KAAO,SAAUh5B,GAAS,OAAO,IAAI84B,EAAa94B,IAK/D84B,EAAaG,OAAS,SAAUj5B,GAAS,OAAO84B,EAAaI,UAAUl5B,GAASA,EAAM+4B,QAAU/4B,GAEhG84B,EAAaI,UAAY,SAAUl5B,GAAS,OAAOA,aAAiB84B,GAC7DA,EAbsB,GAejC,SAASR,GAAqB/mB,GAC1B,QAAK4nB,GAAa5nB,KAEXjU,MAAMmK,QAAQ8J,MACdA,aAAezB,MACdgoB,OAAuBvmB,GA8BnC,SAAS4nB,GAAax5B,GAClB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA,GAK5D,SAASy5B,GAA4BjX,GACjC,MAAM,IAAI1e,MAAM,+CAAiD0e,EAAM8R;;;;;;;;AAsB3E,IAAIoF;;;;;;;OAWJ,SAASC,GAAcrX,EAAOsX,EAAcv5B,GACxC,OAAOiiB,EAAMsX,GAAgBv5B,EAGjC,SAASw5B,GAAWvX,EAAOsX,GAIvB,OAAOtX,EAAMsX,GAGjB,SAASE,GAAexX,EAAOsX,EAAcv5B,GAKzC;;;;;;;;AAlhGJ,SAAS05B,EAAYxB,EAAGh7B,GAGpB,QAASg7B,GAAMA,GAAKh7B,GAAMA,IAAMg7B,IAAMh7B,EA+gGlCw8B,CADWzX,EAAMsX,GACKv5B,KAStBiiB,EAAMsX,GAAgBv5B,GACf,GAKf,SAAS25B,GAAgB1X,EAAOsX,EAAcK,EAAMC,GAChD,IAAIC,EAAYL,GAAexX,EAAOsX,EAAcK,GACpD,OAAOH,GAAexX,EAAOsX,EAAe,EAAGM,IAASC,EAG5D,SAASC,GAAgB9X,EAAOsX,EAAcK,EAAMC,EAAMG,GACtD,IAAIF,EAAYH,GAAgB1X,EAAOsX,EAAcK,EAAMC,GAC3D,OAAOJ,GAAexX,EAAOsX,EAAe,EAAGS,IAASF,EAG5D,SAASG,GAAgBhY,EAAOsX,EAAcK,EAAMC,EAAMG,EAAME,GAC5D,IAAIJ,EAAYH,GAAgB1X,EAAOsX,EAAcK,EAAMC,GAC3D,OAAOF,GAAgB1X,EAAOsX,EAAe,EAAGS,EAAME,IAASJ;;;;;;;OA6BnE,SAASK,GAAYz7B,GACjB,IAAI07B,EAAUpX,GAAgBtkB,GAC9B,GAAI07B,GAGA,GAAI98B,MAAMmK,QAAQ2yB,GAAU,CACxB,IAAInY,EAAQmY,EACR1X,OAAY,EACZpI,OAAYvW,EACZ4a,OAAa5a,EACjB,GA0HZ,SAASs2B,EAAoB7O,GACzB,OAAOA,GAAYA,EAAS7tB,aAAe6tB,EAAS7tB,YAAY8b,eA3HpD4gB,CAAoB37B,GAAS,CAE7B,IAAkB,IADlBgkB,EAAY4X,GAAiBrY,EAAOvjB,IAEhC,MAAM,IAAI+E,MAAM,2DAEpB6W,EAAY5b,OAEX,GAsHjB,SAAS67B,EAAoB/O,GACzB,OAAOA,GAAYA,EAAS7tB,aAAe6tB,EAAS7tB,YAAYgc,eAvH/C4gB,CAAoB77B,GAAS,CAElC,IAAkB,IADlBgkB,EAsLhB,SAAS8X,EAAiBvY,EAAOwY,GAO7B,IADA,IAAItY,EAAQF,EAAM1B,IAAO0P,WAClB9N,GAAO,CAGV,IAFA,IACIuY,EAAoBvY,EAAMqC,aACrBtmB,EAFiBikB,EAAMmC,eAEEpmB,EAAIw8B,EAAmBx8B,IACrD,GAAI+jB,EAAM/jB,KAAOu8B,EACb,OAAOtY,EAAM7f,MAGrB6f,EAAQwY,GAAoBxY,GAEhC,OAAQ,EAvMgBqY,CAAiBvY,EAAOvjB,IAEhC,MAAM,IAAI+E,MAAM,2DAEpBkb,EAAaic,GAAyBlY,EAAWT,GAAO,QAIxD,IAAkB,IADlBS,EAAYmY,GAAqB5Y,EAAOvjB,IAEpC,OAAO,KAOf,IACIo8B,EAAc9X,GADd+X,EAAShZ,GAAiBE,EAAMS,KAEhChR,EAAWopB,IAAgBx9B,MAAMmK,QAAQqzB,GACzCA,EACAE,GAAe/Y,EAAOS,EAAWqY,GAOrC,GALIzgB,QAAmCvW,IAAtB2N,EAAQ4I,YACrB5I,EAAQ4I,UAAYA,EACpB2gB,GAAgBvpB,EAAQ4I,UAAW5I,IAGnCiN,QAAqC5a,IAAvB2N,EAAQiN,WAA0B,CAChDjN,EAAQiN,WAAaA,EACrB,IAAK,IAAIzgB,EAAI,EAAGA,EAAIygB,EAAWtgB,OAAQH,IACnC+8B,GAAgBtc,EAAWzgB,GAAIwT,GAGvCupB,GAAgBvpB,EAAQqpB,OAAQrpB,GAChC0oB,EAAU1oB,QASd,IALA,IAAIwpB,EAAWx8B,EAIX42B,EAAW4F,EACR5F,EAAWA,EAAStB,YAAY,CACnC,IAAImH,EAAgBnY,GAAgBsS,GACpC,GAAI6F,EAAe,CAUf,GATIlZ,OAAQ,IAERA,EADA3kB,MAAMmK,QAAQ0zB,GACNA,EAGAA,EAAclZ,OAKtB,OAAO,KAEX,IAAI3f,EAAQu4B,GAAqB5Y,EAAOiZ,GACxC,GAAI54B,GAAS,EAAG,CACZ,IAAIy4B,EAEJE,GAFIF,EAAShZ,GAAiBE,EAAM3f,IAChCoP,EAAUspB,GAAe/Y,EAAO3f,EAAOy4B,IAE3CX,EAAU1oB,EACV,QAKhB,OAAO0oB,GAAW,KAKtB,SAASY,GAAe/Y,EAAOS,EAAWqY,GACtC,OACI9Y,MAAOA,EACPS,UAAWA,EACXqY,OAAQA,EACRzgB,eAAWvW,EACX4a,gBAAY5a,EACZq3B,eAAWr3B,GASnB,SAASs3B,GAA2BC,GAChC,IACIhZ,EADAL,EAAQe,GAAgBsY,GAE5B,GAAIh+B,MAAMmK,QAAQwa,GAAQ,CACtB,IAAIS,EAAY4X,GAAiBrY,EAAOqZ,IAEpC5pB,EAAUspB,GAAe/Y,EAAOS,GADpCJ,EAAOG,GAAwBC,EAAWT,IACUrB,MAC5CtG,UAAYghB,EACpBL,GAAgBK,EAAmB5pB,GACnCupB,GAAgBvpB,EAAQqpB,OAAQrpB,OAE/B,CACD,IAAIA,EACJ4Q,EAAOG,IADH/Q,EAAUuQ,GACyBS,UAAWhR,EAAQuQ,OAE9D,OAAOK,EAMX,SAAS2Y,GAAgBv8B,EAAQsa,GAC7Bta,EAAOojB,IAAyB9I,EAWpC,SAAS6hB,GAAqB5Y,EAAOvjB,GAEjC,IADA,IAAIyjB,EAAQF,EAAM1B,IAAO0P,WAClB9N,GAAO,CAEV,GADaD,GAAiBC,EAAOF,KACtBvjB,EACX,OAAOyjB,EAAM7f,MAEjB6f,EAAQwY,GAAoBxY,GAEhC,OAAQ,EAKZ,SAASwY,GAAoBxY,GACzB,GAAIA,EAAMoZ,MACN,OAAOpZ,EAAMoZ,MAEZ,GAAIpZ,EAAMpiB,KACX,OAAOoiB,EAAMpiB,KAMb,KAAOoiB,EAAMrT,SAAWqT,EAAMrT,OAAO/O,MACjCoiB,EAAQA,EAAMrT,OAElB,OAAOqT,EAAMrT,QAAUqT,EAAMrT,OAAO/O,KAM5C,SAASu6B,GAAiBrY,EAAOqZ,GAC7B,IAAIE,EAAmBvZ,EAAM1B,IAAOkb,WACpC,GAAID,EACA,IAAK,IAAIt9B,EAAI,EAAGA,EAAIs9B,EAAiBn9B,OAAQH,IAAK,CAC9C,IAAIw9B,EAAwBF,EAAiBt9B,GAE7C,GADoBukB,GAAwBiZ,EAAuBzZ,GACjDjB,MAAasa,EAC3B,OAAOI,OAOf,GAFwBjZ,GAAwBhB,GAAeQ,GACzBjB,MAChBsa,EAGlB,OAAO7Z,GAGf,OAAQ,EAgCZ,SAASmZ,GAAyBlY,EAAWT,EAAO0Z,GAChD,IAAIxZ,EAAQF,EAAM1B,IAAOvH,KAAK0J,GAC1BkZ,EAAsBzZ,EAAMmC,eAChC,OAA2B,GAAvBsX,EACO7gB,KAEN4gB,GAAmC,EAAdxZ,EAAMpb,OAC5B60B,IACG3Z,EAAM5S,MAAMusB,EAHKzZ,EAAMqC;;;;;;;;AAmClC,IAUIqX,GAVAC,GAA0B;;;;;;;OAgB9B,SAASC,GAAqBC,GAC1B,QAAUA,EAAe,QAN7B,SAAWH,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,QAK3B,IAAII,IACAC,eAAgB,SAAUC,EAAaC,GAAgB,OAAO9F;;;;;;;;;;;;;;OAkBlE,SAAS+F,GAAcla,EAAOma,GAE1B,IAAIC,EAAYD,EAAa7b,IAC7B,OAAqB,IAAjB0B,EAAM7f,MAGCwgB,GAAayZ,GAAaA,EAAY,KAKtCA,EAOf,SAASC,GAAyBC,EAAWna,GACzC,IAAIia,EAAYF,GAAcI,EAAWna,GACzC,OAAOia,EAAYG,GAAiBpa,EAAKnB,IAAWob,EAAU3a,KAAW,KAS7E,IAAI+a,MAaJ,SAASC,GAAcC,EAAYC,EAAQd,EAAUe,EAAcC,GAM/D,IALA,IAAIpL,EAAKvwB,EACLqnB,EAAYmU,EAAWtc,IAAOgU,KAC9B0I,GAAuB,EACvBlY,EAAc8X,EACd1a,EAAQuG,EAAU6S,MACfpZ,GAAO,CACV,IAAI+a,EAAY,KAChB,GAAmB,IAAf/a,EAAM9d,KAA0B,CAChC84B,GAAkBL,EAAQd,EAAUe,EAAc7a,GAAiBC,EAAO4C,GAAc5C,EAAO6a,GAC/F,IAAII,EAAkBrY,EAAY5C,EAAM7f,OACpCwgB,GAAasa,IAEbD,GAAkBL,EAAQd,EAAUe,EAAcK,EAAgBxb,IAASO,EAAO6a,QAGrF,GAAmB,IAAf7a,EAAM9d,KAA4B,CACvC,IAAIg5B,EAAatY,EAAY5C,EAAM7f,OACnC66B,GAAkBL,EAAQd,EAAUe,EAAcM,EAAWzb,IAASO,EAAO6a,GACzEK,EAAW1b,IAAOtjB,SAElB6+B,GADAnY,EAAcsY,EAAW1b,IAAO,IACRpB,IAAOgU,KAG/ByI,EAAaK,EAAWzb,UAG3B,GAAmB,IAAfO,EAAM9d,KAA6B,CACxC,IAAIi5B,EAAgB7U,GAAkB1D,GAElCwY,EADgBD,EAAczc,IACT2c,WAAWrb,EAAMqb,YAC1C,GAAIlgC,MAAMmK,QAAQ81B,GACd,IACI,IAAK,IAAIE,EAAS/9B,EAAS69B,GAAOG,EAAWD,EAAO19B,QAAS29B,EAASz9B,KAAMy9B,EAAWD,EAAO19B,OAE1Fo9B,GAAkBL,EAAQd,EAAUe,EADnBW,EAAS19B,MACoCmiB,EAAO6a,GAG7E,MAAOjL,GAASH,GAAQtxB,MAAOyxB,GAC/B,QACI,IACQ2L,IAAaA,EAASz9B,OAASoB,EAAKo8B,EAAOzL,SAAS3wB,EAAG/C,KAAKm/B,GAEpE,QAAU,GAAI7L,EAAK,MAAMA,EAAItxB,YAOjCq8B,KAAsBM,GAAuB9a,EAC7Cwa,KAAsBM,GAAuBlY,EACzCwY,IAEAL,GADAnY,EAAcuY,EAAc7c,KACJF,IAAOvH,KAAKukB,EAAKj7B,aAMjD46B,EAAY/a,EAAMoZ,MAEtB,GAAkB,OAAd2B,EAcA,IAZmB,OAAf/a,EAAMpiB,MAAgC,EAAdoiB,EAAMpb,QAC9Bge,EAAc4X,GAAoBM,KAClC9a,EAAQwa,GAAoBM,MAEhCC,EAAY/a,EAAMpiB,MAQVm9B,GAAW,CAGf,GAAc,QADd/a,EAAQA,EAAMrT,QAAUiW,EAAYlE,MACdsB,IAAUuG,EAC5B,OAAO,KAMX,GAJmB,IAAfvG,EAAM9d,OAEN24B,GADAjY,EAAcyD,GAAezD,IACJ5C,EAAM7f,OAAOsf,KAEvB,IAAfO,EAAM9d,KAAuB,CAQ7B,MAAQ0gB,EAAYrE,KAASqE,EAAYtE,OACnC0B,EAAMrT,SAAUqT,EAAMrT,OAAO/O,OAAO,CACtC,GAAIoiB,IAAUuG,EACV,OAAO,KAEXvG,GADA4C,EAAcA,EAAYtE,KACNI,IAIpBqc,EAFAnY,EAAYrE,KACZqE,EAAcA,EAAYrE,KACFG,IAGZsB,EAAMpiB,UAItBm9B,EAAY/a,EAAMpiB,KAI9BoiB,EAAQ+a,GAOhB,SAASC,GAAkBL,EAAQd,EAAUltB,EAAQylB,EAAMpS,EAAO6a,GAC/C,IAAXF,EACAa,GAAmB3B,EAAUltB,EAAQylB,EAAMyI,GAAc,MAEzC,IAAXF,EACLc,GAAiB5B,EAAUzH,EAAM3R,GAAYT,IAE7B,IAAX2a,GAELd,EAAS6B,YAAYtJ,GAG7B,SAASuJ,GAAe99B,EAAOg8B,GAC3B,OAAOD,GAAqBC,GAAYA,EAAS+B,WAAW/iB,GAAgBhb,IACxEg8B,EAAS8B,eAAe9iB,GAAgBhb,IAEhD,SAASg+B,GAA2BnB,EAAYoB,EAAYjB,GACxD,IAAID,EAAeP,GAAyBK,EAAWtc,IAAOgU,KAAMsI,GAEhEE,GAEAH,GAAcC,EAAYoB,EAAa,EAAiB,EADzCpB,EAAW1b,IACwD4b,EAAcC,GA4DxG,SAASkB,GAAWjc,EAAOob,EAAY/6B,GAGnC,IAAI67B,EAAQd,EAAW1b,IAEnBrf,EAAQ,IAER67B,EAAM77B,EAAQ,GAAGoe,IAAQuB,GAEzB3f,EAAQ67B,EAAM9/B,QACd4jB,EAAMvB,IAAQyd,EAAM77B,GACpB67B,EAAMC,OAAO97B,EAAO,EAAG2f,KAGvBkc,EAAM99B,KAAK4hB,GACXA,EAAMvB,IAAQ,MAElBuB,EAAMxB,IAAU4c,EAEZpb,EAAMtB,KACNsB,EAAMtB,IAASud,WAAW57B,GAG9B2f,EAAMzB,KAAU,IAYpB,SAAS6d,GAAWhB,EAAYiB,GAC5B,IAAIH,EAAQd,EAAW1b,IACnB4c,EAAeJ,EAAMG,GAYzB,OAXIA,EAAc,IACdH,EAAMG,EAAc,GAAG5d,IAAQ6d,EAAa7d,KAEhDyd,EAAMC,OAAOE,EAAa,GAC1BN,GAA2BO,GAAc,GACrCA,EAAa5d,KACb4d,EAAa5d,IAAS6d,aAE1BD,EAAa9d,IAAU,KAEvB8d,EAAa/d,MAAU,IAChB+d,EAQX,SAASC,GAAWnB,EAAYiB,GAC5B,IAAIhc,EAAO+a,EAAW1b,IAAO2c,GAC7BD,GAAWhB,EAAYiB,GACvBG,GAAanc,GAQjB,SAASmc,GAAanc,GAClB,KAAoB,IAAdA,EAAK9B,KAA+B,CACtC,IAAIwb,EAAW1Z,EAAKnB,IAChB4a,GAAqBC,IAAaA,EAAS6B,aAC3CjB,GAActa,EAAM,EAAiB0Z,EAAU,MApH3D,SAAS0C,EAAgBC,GAErB,IAAIC,EAAoBD,EAAStd,IACjC,IAAKud,EACD,OAAOC,GAAYF,GAEvB,KAAOC,GAAmB,CACtB,IAAI7+B,EAAO,KACX,GAAIwiB,GAAQqc,GAER7+B,EAAO6+B,EAAkBvd,QAExB,CAGD,IAAI8c,EAAQS,EAAkBjd,IAC1Bwc,EAAM9/B,OAAS,IACf0B,EAAOo+B,EAAM,IAErB,IAAKp+B,EAAM,CAGP,KAAO6+B,IAAsBA,EAAkBle,KAASke,IAAsBD,GAC1EE,GAAYD,GACZA,EAAoBE,GAAeF,EAAmBD,GAE1DE,GAAYD,GAAqBD,GACjC5+B,EAAO6+B,GAAqBA,EAAkBle,IAElDke,EAAoB7+B,GAyFpB2+B,CAAgBpc,IAexB,SAASwc,GAAeF,EAAmBD,GACvC,IAAIxc,EACJ,OAAII,GAAQqc,KAAuBzc,EAAQyc,EAAkB/d,MAC1C,IAAfsB,EAAM9d,KAGCg4B,GAAcla,EAAOyc,GAIrBA,EAAkBne,MAAYke,EAAW,KAAOC,EAAkBne,IAUjF,SAASoe,GAAYE,GACjB,GAAIA,EAAgB1gC,QAAUojB,GAAe,CACzC,IAAIa,EAAOyc,EAMXzc,EAAK9B,KAAU,IAwDvB,SAASwe,EAAkB1c,GACvB,IACIuC,EADAZ,EAAQ3B,EAAK/B,IAEjB,GAAa,MAAT0D,GAAwD,OAAtCY,EAAeZ,EAAMY,cACvC,IAAK,IAAI3mB,EAAI,EAAGA,EAAI2mB,EAAaxmB,OAAQH,GAAK,EAAG,CAC7C,IAAIwT,EAAU4Q,EAAKuC,EAAa3mB,IAE1BwT,aAAmByR,IACrB0B,EAAa3mB,EAAI,GAAGI,KAAKoT,IA/DjCstB,CAAkB1c,GAW1B,SAAS2c,EAAgBhd,GACrB,IAAIid,EAAWjd,EAAM1B,IAAO4e,QAC5B,GAAgB,MAAZD,EAAkB,CAElB,IADA,IAAIE,EAAWnd,EAAMlB,IACZ7iB,EAAI,EAAGA,EAAIghC,EAAS7gC,OAAS,EAAGH,GAAK,EAC1C,GAA2B,iBAAhBghC,EAAShhC,GAAiB,CAEjC,IAAImhC,EAAoBH,EAAShhC,EAAI,GACjCQ,EAAsC,mBAAtB2gC,EAChBA,EAAkBpd,GAClBF,GAAiBE,EAAMod,IAEvBC,EAAqBJ,EAAShhC,EAAI,GACJ,kBAAvBohC,EAEP5gC,EAAO6gC,oBAAoBL,EAAShhC,GAJzBkhC,EAASF,EAAShhC,EAAI,IAIiBohC,GAG9CA,GAAsB,EAEtBF,EAASE,KAITF,GAAUE,GAAoBE,cAGtCthC,GAAK,MAEuB,iBAAhBghC,EAAShhC,IAGrBuhC,EADgBL,EAASF,EAAShhC,OAMlCghC,EAAShhC,GAAGI,KADE8gC,EAASF,EAAShhC,EAAI,KAI5C+jB,EAAMlB,IAAW,MAlDjBke,CAAgB3c,GAChB,IAAIiF,EAAYjF,EAAKzB,IAEjB0G,GAAgC,IAAnBA,EAAUljB,MAA4B03B,GAAqBzZ,EAAKnB,MAE7EmB,EAAKnB,IAAUue,WA0I3B,SAAS/B,GAAmB3B,EAAUltB,EAAQysB,EAAOyB,GAC7CjB,GAAqBC,GACrBA,EAAS2D,aAAa7wB,EAAQysB,EAAOyB,GAGrCluB,EAAO6wB,aAAapE,EAAOyB,GAAY,GAW/C,SAAS4C,GAA2B5D,EAAUltB,EAAQysB,EAAOyB,GACrDA,EACAW,GAAmB3B,EAAUltB,EAAQysB,EAAOyB,GAVpD,SAAS6C,EAAkB7D,EAAUltB,EAAQysB,GACrCQ,GAAqBC,GACrBA,EAAShN,YAAYlgB,EAAQysB,GAG7BzsB,EAAOkgB,YAAYuM,GAQnBsE,CAAkB7D,EAAUltB,EAAQysB,GAe5C,SAASmB,GAAiBV,EAAUzH,GAChC,OAAQwH,GAAqBC,GAAYA,EAAShI,WAAWO,GAAQA,EAAKP,WAqC9E,SAAShF,GAAY8Q,EAASC,EAAYhb,GACtC,IAAImN,EAAK7wB,EACL07B,EA5IR,SAASiD,EAAgB7d,EAAO4C,GAE5B,GAAIhC,GAAWgC,GACX,OAAO2X,GAAiB3X,EAAY5D,IAAWe,GAAiBC,EAAO4C,IAI3E,IAAIjW,EAoKR,SAASmxB,EAAgC9d,GACrC,KAAuB,MAAhBA,EAAMrT,SAAyC,IAAtBqT,EAAMrT,OAAOzK,MACnB,IAAtB8d,EAAMrT,OAAOzK,OACb8d,EAAQA,EAAMrT,OAElB,OAAOqT,EAzKM8d,CAAgC9d,GAAOrT,OAGpD,GAAc,MAAVA,EAAgB,CAChB,IAAIyY,EAAYxC,EAAYlE,IAC5B,OAAuB,IAAnB0G,EAAUljB,KAQHm4B,GAAyBjV,EAAWxC,GAgCvD,SAASmb,EAAcnb,GAEnB,IAAIwC,EAAYxC,EAAYlE,IAC5B,OAAO0G,GAAgC,IAAnBA,EAAUljB,KAC1B6d,GAAiBqF,EAAWiB,GAAezD,IAC3C,KAhCWmb,CAAcnb,GAKzB,GAAmB,EAAfjW,EAAO/H,MAA6B,CACpC,IAAIyjB,EAAQzF,EAAYxE,IAAOvH,KAE3BmF,EAAgBqM,EADNA,EAAM1b,EAAOxM,OACOgiB,gBAAgBnG,cAOlD,GAAIA,IAAkB9hB,EAAQkd,kBAAkB4mB,WAC5ChiB,IAAkB9hB,EAAQkd,kBAAkB6mB,OAC5C,OAAO,KAGf,OAAOle,GAAiBpT,EAAQiW,GA+FjBib,CAAgBD,EAAYhb,GAC/C,GAAoB,MAAhBgY,EAAsB,CACtB,IAAIf,EAAWjX,EAAY5D,IAEvBkf,EA7BZ,SAASC,EAAoBC,EAAate,GACtC,GAAyB,IAArBse,EAAYl8B,KAAuB,CACnC,IAAIg5B,EAAahB,GAAckE,EAAate,GACxCkc,EAAQd,EAAW1b,IAEvB,OAAO6e,GADKrC,EAAMj5B,QAAQ+c,GACSkc,EAAOd,EAAWzb,KAEpD,OAAyB,IAArB2e,EAAYl8B,MACI,IAArBk8B,EAAYl8B,KACL6d,GAAiBqe,EAAate,GAElC,KAkBcqe,CADCP,EAAWjxB,QAAUiW,EAAYlE,IACDkE,GAClD,GAAIznB,MAAMmK,QAAQq4B,GACd,IACI,IAAK,IAAIW,EAAY/gC,EAASogC,GAAUY,EAAcD,EAAU1gC,QAAS2gC,EAAYzgC,KAAMygC,EAAcD,EAAU1gC,OAE/G6/B,GAA2B5D,EAAUe,EADpB2D,EAAY1gC,MACkCqgC,GAGvE,MAAO/N,GAASJ,GAAQ5xB,MAAOgyB,GAC/B,QACI,IACQoO,IAAgBA,EAAYzgC,OAASoB,EAAKo/B,EAAUzO,SAAS3wB,EAAG/C,KAAKmiC,GAE7E,QAAU,GAAIvO,EAAK,MAAMA,EAAI5xB,YAIjCs/B,GAA2B5D,EAAUe,EAAc+C,EAASO,IAiBxE,SAASG,GAAqBl+B,EAAO67B,EAAOwC,GACxC,GAAIr+B,EAAQ,EAAI67B,EAAM9/B,OAAQ,CAC1B,IAAIikB,EAAO6b,EAAM77B,EAAQ,GACrBs+B,EAAYte,EAAKzB,IACrB,OAAO+f,EAAUrF,MAAQrZ,GAAiB0e,EAAUrF,MAAOjZ,GAAQqe,EAGnE,OAAOA,EAYf,SAAS/C,GAAiB5B,EAAU6E,EAAOC,GACvC,IAAIC,EAAerE,GAAiBV,EAAU6E,GAC1CE,GA9GR,SAASC,EAAkBhF,EAAUltB,EAAQysB,EAAOuF,GAC5C/E,GAAqBC,GACrBA,EAAShM,YAAYlhB,EAAQysB,EAAOuF,GAGpChyB,EAAOkhB,YAAYuL,GA0GnByF,CAAkBhF,EAAU+E,EAAcF,EAAOC,GAYzD,SAASG,GAAoBC,EAAgBC,EAAiBpc,EAAaqc,GACvE,IAAIrG,EAAS7Y,GAAiBgf,EAAgBE,GAC9CpS,GAAY+L,EAAQoG,EAAiBpc,GAIrCkW,GAAgBF,EAAQqG,GACxB,IAAIhE,EAAkBgE,EAAeF,EAAe5+B,OACpD,GAA4B,IAAxB4+B,EAAe78B,KAOf,IADA,IAAI85B,EAAQf,EAAgBzb,IACnBzjB,EAAI,EAAGA,EAAIigC,EAAM9/B,OAAQH,IAC9B8/B,GAA2BG,EAAMjgC,IAAI,EAAMk/B,EAAgBxb,SAG9D,CACD,GAA4B,IAAxBsf,EAAe78B,KAEf,IADA,IAAIg9B,EAAwBH,EAAe3F,MACpC8F,GACHJ,GAAoBI,EAAuBF,EAAiBpc,EAAaqc,GACzEC,EAAwBA,EAAsBthC,KAGlD+iB,GAAasa,IACbpO,GAAYoO,EAAgBxb,IAASuf,EAAiBpc,IAwBlE,IAAIuc,GACA,SAASA,GAAmB97B,EAAIxF,GAC5BjD,KAAKyI,GAAKA,EACVzI,KAAKiD,MAAQA,GAKjBuhC,GAAmC,WACnC,SAASA,IACLxkC,KAAKykC,YAYT,OAVAD,EAAkB3jC,UAAU6jC,aAAe,WACvC,IAAK,IAAIvjC,EAAI,EAAGA,EAAInB,KAAKykC,SAASnjC,OAAQH,IAAK,CAC3C,IAAIwjC,EAAS3kC,KAAKykC,SAAStjC,GACtBwjC,EAAO5yB,QAA2B,IAAjB4yB,EAAOC,OACzBD,EAAOE,OAGf7kC,KAAKykC,SAASnjC,OAAS,GAE3BkjC,EAAkB3jC,UAAUikC,YAAc,SAAUH,GAAU3kC,KAAKykC,SAASnhC,KAAKqhC,IAC1EH,EAd2B,GAwBlCO,GAAwB,IAC5B,SAASC,GAA0B1mB,EAAS8Z,EAAW6M,EAAeC,GAClE,IAAIvwB,GACA,KAEAswB,IAAkB,KAAM,MACxBC,IAAmB,KAAM,OACxB,EAAG,GACJ5mB,GAAW,MACV,IACA,GACD,MAGJ,OADA6mB,GAA6BxwB,EAAS,MAC/BA,EAEX,SAASwwB,GAA6BxwB,EAASywB,GAE3CzwB,EAAQ,GAAmCrR,KAAK8hC,GAAe,GAAG,EAAO,MAmC7E,SAASC,GAAkB9/B,EAAO+/B,GAI9B,IAHA,IAAIC,EAAehgC,EACfqgB,EAAY0f,EAASC,GACrBC,EAAUF,EACP/kC,MAAMmK,QAAQkb,IACjB4f,EAAU5f,EACVA,EAAYA,EAAU/B,IAE1B,GAcJ,SAAS4hB,EAAiBxiC,GAEtB,SAAI1C,MAAMmK,QAAQzH,IAAUA,EAAM3B,QAAU,IACY,iBAAtC2B,EAAM,IACgE,OAAhFA,EAAM,GAAoC,GAlB9CwiC,CAAiBD,GACjB,OAAOA,EAIP,IAAIE,EAAkBpgB,GAAS/f,EAAQmf,GAAe4gB,GAAUI,gBAIhE,OAHIF,IAAYF,IACZC,EAAe1hB,IAEZ2hB,EAAQD,GAAgBG,EA5CvC,SAASC,EAAoBrnB,EAASsnB,GAKlC,IAHA,IAAIjxB,EAAUixB,EAAqBtzB,QAG1BnR,EAAI,EAAGA,EAAI,EAAmCA,IAAK,CACxD,IAAI8B,EAAQ2iC,EAAqBzkC,GAC7BZ,MAAMmK,QAAQzH,KACd0R,EAAQxT,GAAK8B,EAAMqP,SAM3B,OAHAqC,EAAQ,GAA2B2J,EAEnC3J,EAAQ,IAA+B,GAChCA,EA+BCgxB,CAAoB/f,EAAW8f,GAC/BV,GAA0Bpf,GAWtC,SAASigB,GAAgB/hC,GACrB,OAAOA,EAAK,KAAOihC,GAEvB,SAASe,GAAc1gB,GACnB,OAAiD,IAA3B,EAAdA,EAAMpb,OAElB,SAAS+7B,GAAc3gB,GACnB,OAAkD,IAA5B,GAAdA,EAAMpb,OAmBlB,SAASg8B,GAAkBC,EAAeC,EAAa5nB,EAASqmB,EAAQwB,EAAoBC,GAQxF,OAPAA,EAAMA,GAAO9nB,EACT6nB,EACAF,EAAcE,GAAsBxB,EAGpCsB,EAAc3iC,KAAKqhC,KAEnBA,IACAA,EAAO0B,iBAAiB,IAAqB,WACzC,IAAI9gC,EAAQ0gC,EAAc99B,QAAQw8B,GAM9Bp/B,IACIA,EANoB0gC,EAAc,GAOlCA,EAAc1gC,GAAS,KAGvB0gC,EAAc5E,OAAO97B,EAAO,IAGpCo/B,EAAOhC,aAESuD,EAAYI,gBAAkBJ,EAAYI,cAAgB,IAAI9B,KACpEM,YAAYH,EAAQyB,IAC3B,GA8Bf,SAASG,GAAiBC,GACtB,OAAOA,EAAe,GAE1B,SAASC,GAAmBxqB,GACxB,OAAOA,EAAK,IACP,EAA2C,KAAM,KAAM,KAAM,MAgCtE,SAASyqB,GAAwB9Y,GAS7B,IARA,IAAIjZ,EAAUqwB,KACVE,EAAiBvwB,EAAQ,IACxB,KAAM,MACPswB,EAAgBtwB,EAAQ,IACvB,KAAM,MAGPoV,GAAQ,EACH5oB,EAAI,EAAGA,EAAIysB,EAAMtsB,OAAQH,IAAK,CACnC,IAAIwlC,EAAO/Y,EAAMzsB,GACjB,GAAmB,iBAARwlC,EACP5c,EAAO4c,OAEN,GAAa,IAAT5c,EACLkb,EAAc3hC,KAAKqjC,EAAM/Y,IAAQzsB,SAEhC,GAAa,IAAT4oB,EACLmb,EAAe5hC,KAAKqjC,GAAM,QAEzB,GAAa,IAAT5c,EACL,MAGR,OAAOpV,EA+CX,SAASiyB,GAAyBC,EAAgBr5B,EAAMvK,GAEpD,IAAK,IAAI9B,EAAI,EAA+BA,EAAI0lC,EAAevlC,QAAS,CAEpE,GADUulC,EAAe1lC,KACbqM,EAAM,CACd,IAAIs5B,EAAgBD,EAAe1lC,EAAI,GAMvC,YAHqB,MAAjB2lC,GAA0C,GAAjBA,IACzBD,EAAe1lC,EAAI,GAAuB8B,IAIlD9B,GAAQ,EAGZ0lC,EAAevjC,KAAKkK,EAAMvK,GAsB9B,SAAS8jC,GAA2BzoB,EAAS2gB,EAAU+H,EAAsBC,GACzE,IAAK,IAAI9lC,EAAI,EAA+BA,EAAI6lC,EAAqB1lC,OAAQH,GAAK,EAAc,CAC5F,IAAI8B,EAAQ+jC,EAAqB7lC,EAAI,GACjC8B,IACIgkC,EACAC,GAAS5oB,EAAS0oB,EAAqB7lC,EAAI,IAAqB,EAAM89B,EAAU,MAGhFkI,GAAS7oB,EAAS0oB,EAAqB7lC,EAAI,GAAqB8B,EAAOg8B,EAAU,QA6QjG,SAASmI,GAAwBzyB,EAAS0yB,EAAaC,EAAO9f,GAC1D,IAAK,IAAI7c,EAAI28B,EAAO38B,EAAI6c,EAAK7c,GAAK,EAC9B,GAAI48B,GAAQ5yB,EAAShK,KAAO08B,EACxB,OAAO18B,EAEf,OAAQ,EA8IZ,SAAS68B,GAA2B7yB,EAASqS,EAAgBygB,EAAoBC,EAAUC,EAAQ5jC,EAAOiB,EAAQ4iC,EAAYC,GAkC1H,IAjCA,IAAIC,GAAQ,EACRC,EAAa,EACI,EAAjB/gB,EAGAghB,EAAerzB,EAAQkzB,EAAoB,EAA6B,GAGxEI,EAA4BD,EAAaD,EAAa,GAEtDG,EAA2BF,EAAaD,EAAa,GAWrDI,EAVoF,IAAvDH,EAAaD,EAAa,MAFjCC,EAAaD,EAAa,KAYiCH,GACjFQ,EAAoB,EACpBC,EAAyB,EAIzBC,GAA2B,IAAXtjC,EAIhBujC,EAAWb,EACXc,EAA2BzkC,EAAMzC,OAC9BinC,EAAWN,GAA2B,CACzC,IAAIQ,EAAclB,GAAQ5yB,EAAS4zB,GACnC,GAAIC,EACA,IAAK,IAAIrnC,EAAI,EAAGA,EAAI4C,EAAMzC,OAAQH,IAG9B,IADIunC,GADAC,EAAU5kC,EAAM5C,IACY0mC,EAAoBc,EAAUC,GAAUD,GAAY,OAC9DF,IAAgBC,EAAgB,CAClD,IAAIG,EAAeC,GAASn0B,EAAS4zB,GACjCQ,EAAwBC,GAA2Br0B,EAAS4zB,GAC5DtlC,IAAQqlC,GAAuBtjC,EAAO0jC,GACtCO,EAAcC,GAAYv0B,EAAS4zB,GACnCY,GAAgBF,EAAaJ,EAAc5lC,IAC3CmmC,GAAiBP,EAAc5lC,EAAO8lC,EAAuB/hB,KAC7DqiB,GAAS10B,EAAS4zB,EAAUtlC,GAC5BqmC,GAAsB30B,EAAS4zB,EAAUd,EAAoBzgB,GACzDuiB,GAAuB50B,EAASs0B,EAAahmC,KAC7CumC,GAAS70B,EAAS4zB,GAAU,GAC5BT,GAAQ,IAGhB/jC,EAAM5C,GAAK,KACXqnC,IACA,MAIZD,GAAY,EAIhB,GAAIC,EAA0B,CAC1B,IAAIpQ,EAAYyP,EAAoB,KAAO4B,GAAkB90B,EAASqS,GACtE0iB,EAAgB,IAASvoC,EAAI,EAAGA,EAAI4C,EAAMzC,OAAQH,IAAK,CACnD,IAAIwnC,EACJ,GADIA,EAAU5kC,EAAM5C,GACpB,CAKI8B,IAAQqlC,GAAuBtjC,EAAO2jC,GAG1C,IAHA,IACID,EAAiBb,EAAoBc,EAAUC,GAAUD,GACzDgB,EAAwBpB,GAAYN,EAC/Bt9B,EAAI49B,EAAU59B,EAAIg9B,EAAQh9B,GAAK,EAEpC,GADqB48B,GAAQ5yB,EAAShK,KACf+9B,EAAgB,CACnC,IAAIkB,EAA2BZ,GAA2Br0B,EAAShK,GAC/Dk/B,EAA+BC,GAAsBn1B,EAAShK,GAC9Do/B,EAAkBjB,GAASn0B,EAAShK,GACpCq/B,EAAiBd,GAAYv0B,EAAShK,GACtCy+B,GAAiBW,EAAiB9mC,EAAO2mC,EAA0B5iB,KAI/D2iB,IACAM,GAAwBt1B,EAAS4zB,EAAU59B,GAC3Cy9B,KAEAe,GAAgBa,EAAgBD,EAAiB9mC,MACnC,OAAVA,QAA4B+D,IAAV/D,GAAuBA,IAAU8mC,KACnD5B,GAAyB,GAE7BkB,GAAS10B,EAAS4zB,EAAUtlC,IAOJ,OAApB8mC,GACAR,GAAuB50B,EAASq1B,EAAgB/mC,MAChDumC,GAAS70B,EAAS4zB,GAAU,GAC5BT,GAAQ,IAGZ8B,IAA6B5iB,GAC7BygB,IAAuBoC,GACvBP,GAAsB30B,EAAS4zB,EAAUd,EAAoBzgB,IAGrEuhB,GAAY,EACZ,SAASmB,EAIjB,GAAa,MAATzmC,EAAe,CACfklC,GAAyB,EACzBC,IACA,IAAI8B,EACA,EADOC,GAAmBx1B,EAAS+zB,EAAgBb,EAAmBzP,GAK1EgS,GAAuBz1B,EAHFg1B,EACjBpB,EACCN,EAAqD,EAAzBI,EACeR,EAAmBa,EAAgBwB,EAAMjnC,EAAO+jB,EAAgBygB,GAChHY,IACAV,GAAU,EACVY,GAAY,EACZT,GAAQ,KAOpB,KAAOS,EAAWZ,GAAQ,CACtBQ,GAAyB,EACzB,IAAIkC,EAAWvB,GAASn0B,EAAS4zB,GAC7B+B,EAAUpB,GAAYv0B,EAAS4zB,GAChBS,GAA2Br0B,EAAS4zB,GACvC,MAAZ8B,IACAlC,GAAyB,GAEzBgB,GAAgBmB,EAASD,EAAU,QACnChB,GAAS10B,EAAS4zB,EAAU,MAExBgB,GAAuB50B,EAAS21B,EAASD,KACzCb,GAAS70B,EAAS4zB,GAAU,GAC5BT,GAAQ,GAEZwB,GAAsB30B,EAAS4zB,EAAUd,EAAoBzgB,IAEjEuhB,GAAY,EAchB,OAivBJ,SAASgC,EAAqB51B,EAASqS,EAAgB6gB,EAAmBD,EAAY4C,EAAeC,EAAaC,EAAaC,GAC3H,IAAI3lC,EAAS2P,EAAQkzB,EAAoB,EAA6B,GAClEtiC,EAAQ,EACS,EAAjByhB,EAGJ,GAAI2jB,EAEA,IADA,IAAIC,EAAoBJ,EAA8B,EAAdE,EAC/BvpC,EAAIoE,EAAQ,EAAcpE,EAAI6D,EAAO1D,OAAQH,GAAK,EACvD6D,EAAO7D,EAAI,GAA+BypC,EAC1C5lC,EAAO7D,EAAI,GAA2B,EAG9C6D,EAAOO,EAAQ,GAA2B,EAC1CP,EAAOO,EAAQ,GAA+BilC,EAC9CxlC,EAAOO,EAAQ,GAAuBqiC,EACtC5iC,EAAOO,EAAQ,GAA4BmlC,EAI3C,IAAIG,EAAsBH,EAC1B,IAASvpC,EAAI,EAA6BA,EAAIoE,EAAOpE,GAAK,EACtD0pC,GAAuB7lC,EAAO7D,EAAI,GAMtC,IAAK0mC,EACD,CAAA,IAAIiD,EAAan2B,EAAQ,GAGrBo2B,EAAsBN,EAFCK,EAAW,GAGtC,IAAS3pC,EAAI,EAA6BA,EAAI2pC,EAAWxpC,OAAQH,GAAK,EAClE2pC,EAAW3pC,EAAI,IAAgC4pC,EAGvD/lC,EAAO,GAAgC6lC,EA3xBvCN,CAAqB51B,EAASqS,EAAgB6gB,EAAmBD,EAAYK,EAA2BN,EAAQS,EADhHD,EAAyBA,GAA0BD,IAA6BE,GAE5EN,IACAkD,GAAgBr2B,GAAS,GACzBs2B,GAAkBt2B,EAASqS,GAAgB,IAExCqhB,EA2CX,SAAS6C,GAAyBv2B,EAASw2B,EAAQC,EAAOC,EAAcjG,EAAckG,GAClF,IAAItkB,EAAiBukB,GAA8B52B,EAASywB,GAAgB,MACxEoG,EAkiBR,SAASC,EAAwB92B,EAASqS,EAAgBmkB,EAAQE,GAC9D,IAAIK,EAAgC/2B,EAAQ,GAAqD,EAAjBqS,EAC5E,GACA2kB,EAAUh3B,EAAQ,GAOtB,OAAOg3B,EANcD,EACjB,GACCL,EACGM,EAAQD,EAAgC,GACxC,GACJP,GA3iBcM,CAAwB92B,EAASqS,EAAgBmkB,EAAQE,GACvEO,EAAY9C,GAASn0B,EAAS62B,GAC9BK,EAAW3C,GAAYv0B,EAAS62B,GAChCM,EAAgB9C,GAA2Br0B,EAAS62B,GACpDvoC,EAASmoC,aAAiB7G,GAAsB6G,EAAMnoC,MAAQmoC,EAClE,GAAIjC,GAAgB0C,EAAUD,EAAW3oC,KACpCqoC,GAAiBlC,GAAiBwC,EAAW3oC,EAAO6oC,EAAe9kB,IAAkB,CACtF,IAEI+kB,EAAgBX,aAAiB7G,GACjC,IAAIyH,GAA2BZ,EAFrBz2B,EAAQ,GAD8B,IAAnB,EAAXk3B,GAG8C,EAAgB,GAChF,KACAI,EAAWF,EAAgBX,EAAMnoC,MAAQmoC,EACzCc,EAAkBpC,GAAsBn1B,EAAS62B,GACjDW,GAAyB,EACzB1E,EAAqBsE,EAAgBG,EAAkB,EAC3D,GAAIE,GAAwBz3B,EAASo3B,EAAeG,GAAkB,CAClE,IAAIG,EAAWC,GAAiB33B,EAASo3B,EAAeG,GACxDzE,EAAqBsE,EAAgBM,EAAW,EAChDF,GAAyB,EAK7B,IAHIA,GAA0BL,IAAkB9kB,IAC5CsiB,GAAsB30B,EAAS62B,EAAa/D,EAAoBzgB,GAEhE8kB,IAAkB9kB,EAAgB,CAClC,IAAIxZ,EAAO+5B,GAAQ5yB,EAAS62B,GACxBpT,EAAYqR,GAAkB90B,EAASqS,IAwNvD,SAASulB,EAAgB53B,EAASpP,EAAOinC,GACjCA,EACA73B,EAAQpP,IAAU,EAGlBoP,EAAQpP,KAAU,EA5NdgnC,CAAgB53B,EAAS62B,KAAcpT,IAAaA,EAAU5qB,KAGlE67B,GAAS10B,EAAS62B,EAAaS,GAC/B,IAAIQ,EAAgBC,GAAsBb,GAEtCc,EAAgB7D,GAASn0B,EAAS83B,GACtC,IAAKE,GAAiBxD,GAAgB0C,EAAUc,EAAeV,GAAU,CACrE,IAAIW,GAAa,EACbC,GAAc,GAEbC,GAAYb,IAA4Ba,GAAYH,KACrDC,GAAa,EACbC,GAAc,GAElBrD,GAAS70B,EAAS83B,EAAeG,GACjCpD,GAAS70B,EAAS62B,EAAaqB,GAC/B5B,GAAkBt2B,EAASqS,GAAgB,GAC3CgkB,GAAgBr2B,GAAS,GAEzBw3B,GACAY,GAAuBp4B,GAAS,IAoI5C,SAASwyB,GAASnJ,EAAQxwB,EAAMvK,EAAOg8B,EAAU7G,EAAW4U,EAAOjB,GAC/D9oC,EAAQm1B,GAAan1B,EAAQm1B,EAAU5qB,EAAMvK,GAASA,EAClD+pC,GAASjB,GACLiB,GACAA,EAAM3D,SAAS77B,EAAMvK,GAErB8oC,GACAA,EAAc1C,SAAS77B,EAAMvK,IAG5BA,GACLA,EAAQA,EAAMgF,WAGd+2B,GAAqBC,GACjBA,EAASkI,SAASnJ,EAAQxwB,EAAMvK,EAAO67B,GAAoBmO,UAC3DjP,EAAOkP,MAAMC,YAAY3/B,EAAMvK,IAInC+7B,GAAqBC,GACjBA,EAASmO,YAAYpP,EAAQxwB,EAAMsxB,GAAoBmO,UACvDjP,EAAOkP,MAAMG,eAAe7/B,GAiBxC,SAAS05B,GAASlJ,EAAQsP,EAAWC,EAAKtO,EAAU+N,EAAOjB,GACnDiB,GAASjB,GACLiB,GACAA,EAAM3D,SAASiE,EAAWC,GAE1BxB,GACAA,EAAc1C,SAASiE,EAAWC,IAInB,KAAdD,IACDC,EAEAvO,GAAqBC,GAAYA,EAASuO,SAASxP,EAAQsP,GACvDtP,EAAkB,UAAEuP,IAAID,GAI5BtO,GAAqBC,GAAYA,EAASwO,YAAYzP,EAAQsP,GAC1DtP,EAAkB,UAAE0P,OAAOJ,IAY3C,SAAS9D,GAAS70B,EAASpP,EAAOooC,GAC9B,IAAIC,EAAgBroC,GAAS,EAAqCA,EAAQ,EAAuBA,EAC7FooC,EACAh5B,EAAQi5B,IAAkB,EAG1Bj5B,EAAQi5B,KAAkB,EAGlC,SAASC,GAAQl5B,EAASpP,GAEtB,OAAmD,IAAlB,EAAzBoP,EADYpP,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASuoC,GAAkBn5B,EAASpP,GAEhC,OAAmD,IAAlB,EAAzBoP,EADYpP,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASwoC,GAAcp5B,EAASpP,GAE5B,OAAsD,IAArB,EAAzBoP,EADYpP,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASyoC,GAASC,EAAYC,EAAaC,GACvC,OAAqB,GAAbF,EAAkCC,GAAe,EACpDC,GAAgB,GAEzB,SAASC,GAAgBz5B,EAASu1B,GAC9B,IAAI3kC,EAAQ8oC,GAAgBnE,GAI5B,OAH+B,EAAPA,EACgBv1B,EAAQ,GAC5CA,EAAQ,IACSpP,GAEzB,SAAS8oC,GAAgBnE,GACrB,OAAQA,GAAQ,EAAwB,MAE5C,SAASwC,GAAsBxC,GAC3B,IAAI3kC,EAAS2kC,GAAQ,GAAkD,MACvE,OAAO3kC,GAAS,EAAoCA,GAAS,EAEjE,SAAS+oC,GAA0B35B,GAE/B,OADiBA,EAAQ,GACP,GAGtB,SAAS45B,GAAyB55B,GAE9B,OADkBA,EAAQ,GACP,GAGvB,SAAS65B,GAAQ75B,EAASpP,EAAOiI,GAC7BmH,EAAQpP,EAAQ,GAA0BiI,EAE9C,SAAS67B,GAAS10B,EAASpP,EAAOtC,GAC9B0R,EAAQpP,EAAQ,GAAuBtC,EAE3C,SAASmpC,GAAwBz3B,EAAS85B,EAASlpC,GAC/C,IAAI0gC,EAAgBtxB,EAAQ,GAC5B,GAAI85B,GACA,IAAKxI,GAA2B,IAAV1gC,EAClB,OAAO,OAGV,IAAK0gC,EACN,OAAO,EAEX,OAAOA,EAAc1gC,KAAWkpC,EAEpC,SAASnC,GAAiB33B,EAAS85B,EAASC,GACxC,IAAIzI,EAAgBtxB,EAAQ,IAA0B8xB,GAAmB9xB,GAUzE,OATI+5B,EAAiB,EACjBzI,EAAcyI,GAAkBD,GAIhCxI,EAAc5E,OADdqN,EAAiBzI,EAAc,GACM,EAAGwI,EAAS,MACjDxI,EAAc,IACV,GAEDyI,EAKX,SAASpF,GAAsB30B,EAASpP,EAAOkiC,EAAoBzgB,GAC/D,IAAI/jB,EAJR,SAAS0rC,EAAuB3nB,EAAgB4nB,GAC5C,OAAQA,GAAe,GAAyB5nB,EAGpC2nB,CAAuB3nB,EAAgBygB,GACnD9yB,EAAQpP,EAAQ,GAAoCtC,EAExD,SAAS6mC,GAAsBn1B,EAASpP,GAIpC,OAHWoP,EAAQpP,EAAQ,IACO,GAC9B,MAGR,SAASspC,GAAiBl6B,EAASpP,GAC/B,IAAIkiC,EAAqBqC,GAAsBn1B,EAASpP,GACxD,GAAIkiC,EAAoB,CACpB,IAAIxB,EAAgBtxB,EAAQ,GAC5B,GAAIsxB,EACA,OAAOA,EAAcwB,GAG7B,OAAO,KAEX,SAASqH,GAAQn6B,EAASpP,EAAO2kC,GAE7Bv1B,EAD8B,IAAVpP,EAAuCA,EAASA,EAAQ,GACnD2kC,EAE7B,SAAShB,GAAYv0B,EAASpP,GAE1B,OAAOoP,EADuB,IAAVpP,EAAuCA,EAASA,EAAQ,GAGhF,SAASujC,GAASn0B,EAASpP,GACvB,OAAOoP,EAAQpP,EAAQ,GAE3B,SAASgiC,GAAQ5yB,EAASpP,GACtB,OAAOoP,EAAQpP,EAAQ,GAK3B,SAASylC,GAAgBr2B,EAASg5B,GAC9BnE,GAAS70B,EAAS,EAA4Bg5B,GAElD,SAASZ,GAAuBp4B,EAASg5B,GACjCA,EACAh5B,EAAQ,IAA+B,EAGvCA,EAAQ,KAA+B,EAG/C,SAASs1B,GAAwBt1B,EAASo6B,EAAQC,GAC9C,GAAID,IAAWC,EAAf,CAEA,IAAIC,EAAWnG,GAASn0B,EAASo6B,GAC7BG,EAAU3H,GAAQ5yB,EAASo6B,GAC3BI,EAAUjG,GAAYv0B,EAASo6B,GAC/BK,EAAwBtF,GAAsBn1B,EAASo6B,GACvDM,EAAoBrG,GAA2Br0B,EAASo6B,GACxDO,EAAQH,EACRI,EAAQrG,GAAYv0B,EAASq6B,GAC7BQ,EAAe9C,GAAsB4C,GACrCE,GAAgB,GAGhBV,GAAQn6B,EAAS66B,EAAcxB,GAF3ByB,EAAQvG,GAAYv0B,EAAS66B,GAClBnB,GAAgBoB,GAC0BT,IAE7D,IAEQS,EAFJC,EAAehD,GAAsB6C,GACrCG,GAAgB,GAGhBZ,GAAQn6B,EAAS+6B,EAAc1B,GAF3ByB,EAAQvG,GAAYv0B,EAAS+6B,GAClBrB,GAAgBoB,GAC0BV,IAE7D1F,GAAS10B,EAASo6B,EAAQjG,GAASn0B,EAASq6B,IAC5CR,GAAQ75B,EAASo6B,EAAQxH,GAAQ5yB,EAASq6B,IAC1CF,GAAQn6B,EAASo6B,EAAQ7F,GAAYv0B,EAASq6B,IAG9C1F,GAAsB30B,EAASo6B,EAFZjF,GAAsBn1B,EAASq6B,GAC5BhG,GAA2Br0B,EAASq6B,IAE1D3F,GAAS10B,EAASq6B,EAAQC,GAC1BT,GAAQ75B,EAASq6B,EAAQE,GACzBJ,GAAQn6B,EAASq6B,EAAQG,GACzB7F,GAAsB30B,EAASq6B,EAAQI,EAAuBC,IAiBlE,SAASjF,GAAuBz1B,EAASpP,EAAOoqC,EAAY7rC,EAAMomC,EAAMjnC,EAAO+jB,EAAgB4nB,GAC3F,IAAIgB,EAAUrqC,EAAQoP,EAAQrT,OAE9BqT,EAAQ0sB,OAAO97B,EAAO,EAAU,EAAP2kC,GAAwByF,EAAa,EAAgB,GAAe7rC,EAAMb,EAAO,GAC1GqmC,GAAsB30B,EAASpP,EAAOqpC,EAAa5nB,GAC/C4oB,GApBR,SAASC,EAA0Bl7B,EAASm7B,GACxC,IAAK,IAAI3uC,EAAI2uC,EAAoB3uC,EAAIwT,EAAQrT,OAAQH,GAAK,EAAc,CACpE,IACIqqC,EAAckB,GADFxD,GAAYv0B,EAASxT,IAErC,GAAIqqC,EAAc,EAAG,CACjB,IACIuE,EAAwB1B,GADXnF,GAAYv0B,EAAS62B,IAMtCsD,GAAQn6B,EAAS62B,EADCwC,IAHDH,GAAQl5B,EAAS62B,GAAe,EAAgB,IAC5DsC,GAAkBn5B,EAAS62B,GAAe,EAAgB,IAC1DuC,GAAcp5B,EAAS62B,GAAe,EAAmB,GACxBuE,EAAuB5uC,MAcjE0uC,CAA0Bl7B,EAASpP,EAAQ,GAGnD,SAASunC,GAAY7pC,EAAOooC,GACxB,OAAiB,OAAVpoC,EAEX,SAASknC,GAAmBx1B,EAASnH,EAAMq6B,EAAmBzP,GAC1D,IACI4X,EADA9F,EAAQ9R,GAAaA,EAAU5qB,GAAS,EAAmB,EAY/D,OAVIq6B,GACAqC,GAAQ,EACR8F,EACIC,GAA+Bt7B,EAAQ,GAAqCnH,IAGhFwiC,EACIC,GAA+Bt7B,EAAQ,GAAqCnH,GAG7EwgC,GAAS9D,EADhB8F,EAAeA,EAAe,EAAKA,EAAe,EAAuB,EACrC,GAExC,SAASzG,GAAuB50B,EAASu1B,EAAMgG,GAC3C,IAAIC,EAAe/B,GAAgBz5B,EAASu1B,GAC5C,OAAQiG,GAAgBhH,GAAgBe,EAAMiG,EAAcD,GAEhE,SAAS/G,GAAgBe,EAAM/O,EAAGh7B,GAO9B,QAN0B,EAAP+pC,IACH/O,GAAKh7B,GACM,EAAP+pC,EAMT/O,EAAElzB,aAAe9H,EAAE8H,WAGvBkzB,IAAMh7B,EAEjB,IAAI6rC,GAA4C,WAC5C,SAASA,EAA2B3sC,EAAS+wC,EAAUC,GACnDrwC,KAAKowC,SAAWA,EAChBpwC,KAAKqwC,MAAQA,EACbrwC,KAAKswC,WACLtwC,KAAKuwC,QAAS,EACdvwC,KAAKwwC,SAAWnxC,EAoBpB,OAlBA2sC,EAA2BnrC,UAAUwoC,SAAW,SAAU77B,EAAMvK,GACxDjD,KAAKswC,QAAQ9iC,KAAUvK,IACvBjD,KAAKswC,QAAQ9iC,GAAQvK,EACrBjD,KAAKuwC,QAAS,IAGtBvE,EAA2BnrC,UAAU4vC,YAAc,SAAUC,EAAeC,GAIxE,GAAI3wC,KAAKuwC,OAAQ,CACb,IAAI5L,EAAS3kC,KAAKwwC,SAAS/nC,GAAGzI,KAAKowC,SAAUpwC,KAAKqwC,MAAOrwC,KAAKswC,QAASK,EAAeD,GAAiB,MAGvG,OAFA1wC,KAAKswC,WACLtwC,KAAKuwC,QAAS,EACP5L,IAIRqH,EA1BoC,GA4B/C,SAAShD,GAA2Br0B,EAASpP,GAEzC,OAAe,MADHoP,EAAQpP,EAAQ,GAGhC,SAASgmC,GAA8B52B,EAASywB,GAC5C,IAAIpe,EACA4pB,EAAOj8B,EAAQ,GACfpP,EAAQsrC,GAAkCD,EAAMxL,GACpD,IAAe,IAAX7/B,EAAc,CAIdyhB,GADAzhB,EAAQqrC,EAAKtvC,QACY,EAAIiE,EAAQ,EAAe,EACpDqrC,EAAKttC,KAAK,KAAM,KAAM,KAAM,MAC5BstC,EAAKrrC,EAAQ,GAAgC6/B,EAC7CwL,EAAKrrC,EAAQ,IAA2B,EACxCqrC,EAAKrrC,EAAQ,IAAwC,EACrD,IAAIurC,EAAoBxC,GAA0B35B,IAAY,EAC9Do8B,GAAsBp8B,EAASqS,GAAgB,EAAMrS,EAAQrT,QAC7DyvC,GAAsBp8B,EAASqS,GAAgB,EAAO8pB,QAGtD9pB,EAAiBzhB,EAAQ,EAAIA,EAAQ,EAAe,EAExD,OAAOyhB,EAEX,SAAS6pB,GAAkCjvB,EAAY8G,GACnD,IAAK,IAAIvnB,EAAI,EAAGA,EAAIygB,EAAWtgB,OAAQH,GAAK,EACxC,GAAIygB,EAAWzgB,KAAOunB,EAClB,OAAOvnB,EAGf,OAAQ,EAEZ,SAAS8uC,GAA+Be,EAAWpvC,GAC/C,IAAK,IAAIT,EAAI,EAA+BA,EAAI6vC,EAAU1vC,OAAQH,GAAK,EACnE,GAAI6vC,EAAU7vC,KAAOS,EACjB,OAAOT,EAEf,OAAQ,EAcZ,SAASsoC,GAAkB90B,EAASqS,GAChC,IAAI4pB,EAAOj8B,EAAQ,GAInB,OAHYi8B,EAAsB,EAAjB5pB,EACb,IACA4pB,EAAK,IAAiC,KAQ9C,SAAS3F,GAAkBt2B,EAASqS,EAAgBiqB,GACrCt8B,EAAQ,GACG,EAAjBqS,EACD,GAA2BiqB,EAEnC,SAAS7H,GAAiBP,EAAcqH,EAAUgB,EAAuBC,GAUrE,OAAoB,MAAhBtI,IACgB,MAAZqH,EAGOiB,GAAqBD,EAOrBA,IAA0BC,GAgB7C,SAASC,GAAyBz8B,GAC9B,IAAI08B,EAAqB18B,EAAQ,GAC7B24B,EAAY+D,EAAmB,GACnC,GAAkB,OAAd/D,EAAoB,CACpBA,EAAY,GACZ,IAAK,IAAInsC,EAAI,EAA+BA,EAAIkwC,EAAmB/vC,OAAQH,GAAK,EAC5DkwC,EAAmBlwC,EAAI,KAEnCmsC,IAAcA,EAAUhsC,OAAS,IAAM,IAAM+vC,EAAmBlwC,IAGxEkwC,EAAmB,GAAwC/D,EAE/D,OAAOA,EA+BX,SAASgE,GAAmB38B,EAASkzB,EAAmB7gB,GAIpD,OAHarS,EAAQkzB,EAAoB,EAA6B,GAC1D,EACS,EAAjB7gB,EACkB,IAAwB,KAgBlD,SAASuqB,GAAqB58B,EAASkzB,EAAmB7gB,EAAgBkpB,GAKtE,OAHmBv7B,EADOkzB,EAAoB,EAA6B,GAE/D,EACS,EAAjB7gB,EACqB,KAElBkpB,IAAa5T,IAChBgV,GAAmB38B,EAASkzB,EAAmB7gB,KAAoBkpB,GAsE3E,SAAStH,GAAU3lC,GACf,OAAOA,EAAM6R,QAAQ,cAAe,SAAUuf,GAAS,OAAOA,EAAM5f,OAAO,GAAK,IAAM4f,EAAM5f,OAAO,GAAG2iB,gBAE1G,SAAS2Z,GAAsBp8B,EAASqS,EAAgB6gB,EAAmB2C,EAAegH,QACxE,IAAVA,IAAoBA,EAAQ,GAChC,IAAIxJ,EAAerzB,EAAQkzB,EAAoB,EAA6B,GAC5E,GAAI7gB,EAAiB,EAGjB,IAFA,IAAIyqB,EAAQ,EACU,EAAjBzqB,EACEghB,EAAa1mC,OAASmwC,GAIzBzJ,EAAa1kC,KAAK,EAAGknC,EAAe,KAAM,GAGlDxC,EAAa1kC,KAAK,EAAGknC,EAAe,KAAMgH;;;;;;;OAU9C,IAAIE,GAAuB,cAC3B,SAASC,GAAmBC,EAAkBC,GAC1C,IAAIC,EAAiBF,EAAiBtwC,OAClCywC,EAAaH,EAAiBzpC,QAAQ0pC,GACtCG,EAAcD,EAAaF,EAAgBvwC,OAC/C,SAAoB,IAAhBywC,GACIA,EAAa,GAA0C,MAArCH,EAAiBG,EAAa,IAE/CC,EAAcF,GAAoD,MAAlCF,EAAiBI,IAgB9D,SAASC,GAAmB7sB,EAAO8sB,EAAiBC,GAChD,OAAOD,IAAoB9sB,EAAM8R,UAC5Bib,GACmB,IAAf/sB,EAAM9d,MAA2C,IAAf8d,EAAM9d,MACzB,IAAf8d,EAAM9d,MAA8B4qC,IAAoBR,IASrE,SAASU,GAAuBhtB,EAAOpJ,EAAUm2B,GAQ7C,IANA,IAAIpoB,EAAO,EACPsoB,EAAYjtB,EAAMwI,MAClB0kB,EAAsBD,EAAYA,EAAUlqC,QAAQ,IAAuB,EAG3EoqC,GAAqB,EAChBpxC,EAAI,EAAGA,EAAI6a,EAAS1a,OAAQH,IAAK,CACtC,IAAIs1B,EAAUza,EAAS7a,GACvB,GAAuB,iBAAZs1B,GAaX,IAAI8b,EAEJ,GAAW,EAAPxoB,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZ0M,IAAmBwb,GAAmB7sB,EAAOqR,EAAS0b,IAC1C,KAAZ1b,GAAsC,IAApBza,EAAS1a,OAAc,CACzC,GAAIkxC,GAAWzoB,GACX,OAAO,EACXwoB,GAAqB,OAGxB,CACD,IAAIE,EAA2B,EAAP1oB,EAAuB0M,EAAUza,IAAW7a,GAGpE,GAAY,EAAP4oB,GAAyB3E,EAAMsgB,gBAAiB,CACjD,IAAKiM,GAAmBe,GAAwBttB,GAAQqtB,GAAoB,CACxE,GAAID,GAAWzoB,GACX,OAAO,EACXwoB,GAAqB,EAEzB,SAEJ,IACII,EAAkBC,GADC,EAAP7oB,EAAwB,QAAU0M,EACE4b,GACpD,IAAyB,IAArBM,EAAwB,CACxB,GAAIH,GAAWzoB,GACX,OAAO,EACXwoB,GAAqB,EACrB,SAEJ,GAA0B,KAAtBE,EAA0B,CAC1B,IAAII,EAGAA,EADAP,GAAuB,GAAKK,EAAkBL,EAC9B,GAIAD,EAAUM,EAAkB,GAEhD,IAAIG,EAAiC,EAAP/oB,EAAuB8oB,EAAgB,KACrE,GAAIC,IACCnB,GAAmBmB,EAAyBL,IACtC,EAAP1oB,GAA4B0oB,IAAsBI,EAAe,CACjE,GAAIL,GAAWzoB,GACX,OAAO,EACXwoB,GAAqB,SA5DjC,CAEI,IAAKA,IAAuBC,GAAWzoB,KAAUyoB,GAAW/b,GACxD,OAAO,EAIX,GAAI8b,GAAsBC,GAAW/b,GACjC,SACJ8b,GAAqB,EACrBxoB,EAAO0M,EAAkB,EAAP1M,GAuD1B,OAAOyoB,GAAWzoB,IAASwoB,EAE/B,SAASC,GAAWzoB,GAChB,OAAgC,IAAjB,EAAPA,GAEZ,SAAS2oB,GAAwBttB,GAO7B,OAAOA,EAAMsgB,gBAAkB0L,GAAyBhsB,EAAMsgB,iBAAmB,GAWrF,SAASkN,GAAoB9uC,EAAM8pB,GAC/B,GAAc,OAAVA,EACA,OAAQ,EAGZ,IAFA,IAAImlB,GAAiB,EACjB5xC,EAAI,EACDA,EAAIysB,EAAMtsB,QAAQ,CACrB,IAAI0xC,EAAgBplB,EAAMzsB,GAC1B,GAAI6xC,IAAkBlvC,EAClB,OAAO3C,EAEgB,IAAlB6xC,EAEL7xC,GAAK,GAGiB,IAAlB6xC,IACAD,GAAiB,GAErB5xC,GAAK4xC,EAAiB,EAAI,GAGlC,OAAQ,EAEZ,SAASE,GAA2B7tB,EAAOpJ,EAAUm2B,QACxB,IAArBA,IAA+BA,GAAmB,GACtD,IAAK,IAAIhxC,EAAI,EAAGA,EAAI6a,EAAS1a,OAAQH,IACjC,GAAIixC,GAAuBhtB,EAAOpJ,EAAS7a,GAAIgxC,GAC3C,OAAO,EAGf,OAAO,EAqBX,SAASe,GAAsB9tB,EAAOnE,EAAWkyB,GAE7C,IADA,IAAIC,EApBR,SAASC,EAAsBjuB,GAC3B,IAAIitB,EAAYjtB,EAAMwI,MACtB,GAAiB,MAAbykB,EAAmB,CACnB,IAAIiB,EAAqBjB,EAAUlqC,QAAQ42B,IAG3C,GAAiC,IAAP,EAArBuU,GACD,OAAOjB,EAAUiB,EAAqB,GAG9C,OAAO,KAUkBD,CAAsBjuB,GACtCjkB,EAAI,EAAGA,EAAI8f,EAAU3f,OAAQH,IAGlC,GAAIiyC,IAAuBD,EAAchyC,IACd,OAAvBiyC,GACIH,GAA2B7tB,EAAOnE,EAAU9f,IAA2B,GAC3E,OAAOA,EAAI,EAGnB,OAAO;;;;;;;OAUX,SAASoyC,GAA0BnuB,GAM/B,IAAIouB,EACJ,GAAIA,EAAMpuB,EAAMquB,qBAAsB,CAClC,IAAK,IAAItyC,EAAI,EAAGA,EAAIqyC,EAAIlyC,OAAQH,IAC5BqyC,EAAIryC,KAERikB,EAAMquB,qBAAuB;;;;;;;;AA8CrC,IAAIC,GAAiBC,QAAQr6B,QAAQ,MAOrC,SAASs6B,GAAuB1uB,GAC5B,IAAIgC,EAAQhC,EAAM1B,IACdqwB,EAAejqB,GAAe1E,GAOlC,GALAgC,EAAMI,mBAAoB,EAE1BpC,EAAMnB,IAAiBmD,EAAMwD,mBAGxBmpB,EAAc,CACf,IAAI5rB,EAAqB4B,KACzB9B,GAAiB7C,EAAOgC,EAAOe,GAg4DvC,SAAS6rB,EAA4B5uB,GACjC,IAAK,IAAIuR,EAAUvR,EAAMZ,IAAyB,OAAZmS,EAAkBA,EAAUA,EAAQ9S,IAItE,GAAI8S,EAAQn1B,OAASojB,KAA4C,IAA3B+R,EAAQ9R,IAE1C,IADA,IAAIovB,EAActd,EACTt1B,EAAI,EAAGA,EAAI4yC,EAAYnvB,IAAOtjB,OAAQH,IAAK,CAChD,IAAI6yC,EAAkBD,EAAYnvB,IAAOzjB,GAGzC8yC,GAAuBD,EAAiBA,EAAgBxwB,IAAQwwB,EAAgB/vB,MA14DxF6vB,CAA4B5uB,GAE5BgvB,GAAsBhtB,EAAOhC,GAC7BgD,GAAahD,EAAOgC,EAAMQ,aAAcR,EAAMS,kBAAmBM,EAAoB,GAY7F,SAASksB,EAAgBjtB,EAAOoe,GAC5B,GAAIpe,EAAMktB,oBAAqB,CAC3B,IAAIpqB,EAAmBsb,EAASvhB,IAAiBmD,EAAMmtB,kBACvDnqB,GAAeF,GAGf,IAFA,IAAI+e,GAAyB,EACzBuL,GAAuB,EAClBnzC,EAAI,EAAGA,EAAI+lB,EAAMktB,oBAAoB9yC,OAAQH,IAAK,CACvD,IAAIozC,EAAcrtB,EAAMktB,oBAAoBjzC,GAC5C,GAA2B,iBAAhBozC,EAA0B,CACjC,GAAIA,GAAe,EAAG,CAGlBD,GAAuBC,EAEvB,IAAIC,EAAgBttB,EAAMktB,sBAAsBjzC,GAEhD4nC,EADA/e,GAAoBzD,GAA6BiuB,OAOjDxqB,GAAoBuqB,EAExBrqB,GAAeF,QAIK,OAAhBuqB,IACAjP,EAASvhB,IAAiBiG,EAC1BuqB,EAAY,EAAgBvvB,GAAiBsgB,EAASyD,IAAyBuL,IAEnFvL,MA3CRoL,CAAgBjtB,EAAOhC,GAKvB2uB,GAAgB3sB,EAAMutB,sBACtBP,GAAsBhtB,EAAOhC,GAwDrC,SAASwvB,EAAuBhW,GAC5B,GAAkB,MAAdA,EACA,IAAK,IAAIv9B,EAAI,EAAGA,EAAIu9B,EAAWp9B,OAAQH,KA0+D/C,SAASwzC,EAAapvB,GAClB,OAA8C,MAAxB,IAAdA,EAAK9B,MAvCTkxB,CAHAtvB,EAAWK,GAh8DUgZ,EAAWv9B,GA87DxBgoB,QAKoC,GAAlB9D,EAAS5B,MA+B3C,SAASmxB,EAAsBrU,GAE3B,IADA,IAAIsU,EAAiBtU,EAAc/c,IAC1BriB,EAAIo/B,EAAcj/B,OAAQH,EAAI0zC,EAAeloB,UAAUrrB,OAAQH,IACpEo/B,EAAcp/B,GAAK0zC,EAAeloB,UAAUxrB,GAjC5CyzC,CAAsBvvB,GACtByvB,GAAUzvB,EAAUA,EAASpB,MARrC,IAGQoB,EAz/DJqvB,CAAuBxtB,EAAMwX,YAyCjC,SAASwV,GAAsBhtB,EAAOhC,GAClC,GAA4B,MAAxBgC,EAAMzH,eAAwB,CAC9B4K,GAAqB,GACrB,IAAK,IAAIlpB,EAAI,EAAGA,EAAI+lB,EAAMzH,eAAene,OAAQH,IAAK,CAClD,IAAI4zC,EAAkB7tB,EAAMzH,eAAete,GACxB+lB,EAAMjL,KAAK84B,GAGjBt1B,eAAe,EAAgByF,EAAM6vB,GAAkBA,KAYhF,SAASC,GAAYjoB,EAAa7F,EAAOvS,EAAS3K,EAAOoF,EAAM6lC,EAAWC,EAAiBjW,EAAU7G,EAAW1uB,GAC5G,IAAIwb,EAAQgC,EAAMyF,UAAUra,QAY5B,OAXA4S,EAAMzB,IAAiB,IAARzZ,EACfkb,EAAMxB,IAAUwB,EAAMT,IAAoBsI,EAC1C7H,EAAMjB,IAAWtP,EACjBuQ,EAAMf,IAAqB+wB,GAAmBnoB,GAAeA,EAAY5I,IAEzEe,EAAMd,IAAa6a,GAAYlS,GAAeA,EAAY3I,IAE1Dc,EAAMb,IAAa+T,GAAarL,GAAeA,EAAY1I,KAAc,KACzEa,EAAMhB,IAAcxa,GAAYqjB,GAAeA,EAAY7I,KAAe,KAC1EgB,EAAMrB,IAAQzU,EACd8V,EAAMpB,IAAUmxB,EACT/vB,EAEX,SAASiwB,GAAkB5vC,EAAO+B,EAAM02B,EAAQl6B,EAAM8pB,GAClD,IAAI1I,EAAQiE,KACRjC,EAAQhC,EAAM1B,IACdoqB,EAAgBroC,EAAQmf,GAG5BQ,EAAM0oB,GAAiB5P,EACvB,IAAInV,EAAwBU,KACxBT,EAAWY,KACXtE,EAAQ8B,EAAMjL,KAAK2xB,GACvB,GAAa,MAATxoB,EAAe,CACf,IAAImT,EAAWzP,EAAWD,EAAwBA,GAAyBA,EAAsB9W,OAKjGqT,EAAQ8B,EAAMjL,KAAK2xB,GAAiBwH,GAFb7c,GAAYA,IAAarT,EAAMpB,IACjByU,EAAW,KACajxB,EAAMsmC,EAAe9pC,EAAM8pB,GAoB5F,OAfI/E,KACIC,GAA2C,MAA/BD,EAAsB2V,OAChB,OAAjBpZ,EAAMrT,QAAkD,IAA/B8W,EAAsBvhB,KAI1CwhB,IACND,EAAsB7lB,KAAOoiB,GAH7ByD,EAAsB2V,MAAQpZ,GAMd,MAApB8B,EAAMgM,aACNhM,EAAMgM,WAAa9N,GAEvBoE,GAAyBpE,GACzBuE,IAAY,GACLvE,EAEX,SAASiwB,GAAuBnuB,EAAOouB,EAAa/vC,EAAO2f,GAGvD,IAAIE,EAAQ8B,EAAMsQ,KAOlB,OANa,MAATpS,IAGA8B,EAAMsQ,KAAOpS,EAAQgwB,GAAYE,EACjC,EAAc/vC,EAAO,KAAM,OAExB2f,EAAMpB,IAAUsB,EA4D3B,SAAS6uB,GAAuBsB,EAAcruB,EAAOvS,GACjD,IAEI8V,EAFA+qB,EAAY9rB,KACZ+rB,EAAyBlsB,KAE7B,GAA0B,IAAtBgsB,EAAa9xB,IAEbiyB,GAAgB9pB,GAAe2pB,SAG/B,IACI5rB,IAAY,GACZH,GAAyB,MACzBiB,EAAUH,GAAUirB,EAAcA,EAAazxB,KAC/C6xB,KACAzuB,EAAMzJ,SAASm4B,GAAeL,GAAe5gC,GAK7C4gC,EAAa/xB,IAAO8D,mBAAoB,EACxCssB,GAAuB2B,GAE3B,QACIxqB,GAAUN,GACVd,GAAY6rB,GACZhsB,GAAyBisB,IAcrC,SAASI,GAAYjrB,GAEjB,YADc,IAAVA,IAAoBA,EAAQ,GACzBD,GAAgBC,GAE3B,SAASkrB,GAA0BzwB,EAAU1Q,EAASohC,GAClD,IAAIb,EAAkB7vB,EAASlB,IAC3BsG,EAAUH,GAAUjF,EAAUA,EAASvB,KACvCkyB,GAAuBnsB,KACvBosB,EAAuBrsB,GAAevE,GAC1C,IACQ2wB,IAAwBC,GAAwBf,EAAgBgB,OAChEhB,EAAgBgB,QAEhBD,IAEIF,IACAJ,KACAI,EAAW,EAAgBphC,IAE/Bi/B,GAAuBvuB,GACvBA,EAAS5B,MAAU,GAGvBsyB,GAAcA,EAAW,EAAgBphC,GACzCi/B,GAAuBvuB,GAE3B,QACQ2wB,IAAwBC,GAAwBf,EAAgB1tB,KAChE0tB,EAAgB1tB,MAEpBuD,GAAUN,IAQlB,SAASmrB,GAAerwB,GACpB,OAAOqE,GAAerE,GAAQ,EAAiB,EAKnD,IAAI4wB,GAAoB,KACxB,SAASC,KACLD,GAAoB,6BAExB,SAASE,KACLF,GAAoB,iCAExB,SAASR,KACLQ,GAAoB,KAcxB,SAAS73B,GAAQ/Y,EAAOzB,EAAM8pB,EAAOyQ,GACjCiY,GAAa/wC,EAAOzB,EAAM8pB,EAAOyQ,GACjCkY,KAcJ,SAASC,GAAsBjxC,EAAOqoB,EAAOyQ,GACzC,IAAInZ,EAAQiE,KACRjC,EAAQhC,EAAM1B,IAKdwa,EAJW9Y,EAAMd,IAICqyB,cAAoC,IAEtDrxB,EAAQ+vB,GAAkB5vC,EAAO,EAA0By4B,EALjD,eAKkEpQ,GAAS,MACzFqE,GAAY+L,EAAQ5Y,EAAOF,GAC3BwxB,GAA0BxvB,EAAOhC,EAAOmZ,GACxCH,GAAgBF,EAAQ9Y,GACxB,IAAIyxB,EAAiBzxB,EAAMtB,IACvB+yB,IACAA,EAAeC,QAAQxxB,GACvBF,EAAMtB,IAAW+yB,EAAeE,SAEpCC,GAAsB5vB,EAAO9B,EAAOF,GAExC,SAAS4xB,GAAsB5vB,EAAO9B,EAAOF,GACzC,GA14LJ,SAAS6xB,EAAmB3xB,GACxB,OAAmD,IAA7B,EAAdA,EAAMpb,OAy4LV+sC,CAAmB3xB,GAGnB,IAFA,IACIoC,EAAMpC,EAAMqC,aACPT,EAFG5B,EAAMmC,eAEeP,EAAiBQ,EAAKR,IAAkB,CACrE,IAAIhc,EAAMkc,EAAMjL,KAAK+K,GACjBhc,EAAIyU,gBACJzU,EAAIyU,eAAe,EAAgByF,EAAM8B,GAAiBA,IAM1E,SAASgwB,KACL,IAAInuB,EAAwBU,KACxBrE,EAAQiE,KACRjC,EAAQhC,EAAM1B,IACdkG,KACAC,IAAY,GAKZH,GADAX,EAAwBA,EAAsB9W,QAIlD,IAAI4kC,EAAiBzxB,EAAMtB,IACvB+yB,IACAzxB,EAAMtB,IAAW+yB,EAAe5kC,QAEpCsV,GAAuBH,EAAO2B,GAelC,SAASytB,GAAa/wC,EAAOzB,EAAM8pB,EAAOyQ,GACtC,IAAInZ,EAAQiE,KACRjC,EAAQhC,EAAM1B,IAGdwa,EAASiZ,GAAcnzC,GAEvBshB,EAAQ+vB,GAAkB5vC,EAAO,EAAiBy4B,EAAQl6B,EAAM8pB,GAAS,MAyB7E,GAxBIA,IAMI1G,EAAMI,oBAAsBlC,EAAMsgB,iBAxrE9C,SAASwR,EAAWtpB,GAChB,IAAK,IAAIzsB,EAAI,EAAGA,EAAIysB,EAAMtsB,OAAQH,IAAK,CACnC,IAAIwlC,EAAO/Y,EAAMzsB,GACjB,GAAY,GAARwlC,GAAmC,GAARA,EAC3B,OAAO,EAEf,OAAO,EAkrEsDuQ,CAAWtpB,KAChExI,EAAMsgB,gBAAkBgB,GAAwB9Y,IAEpDupB,GAAgBnZ,EAAQpQ,IAE5BqE,GAAY+L,EAAQ5Y,EAAOF,GAC3BwxB,GAA0BxvB,EAAOhC,EAAOmZ,GAIT,IAxjLnC,SAAS+Y,IAEL,OAAOjxB,GAsjLHixB,IACAlZ,GAAgBF,EAAQ9Y,GArjLhC,SAASmyB,IACLlxB,KAsjLAkxB,GAKInwB,EAAMI,kBAAmB,CACzB,IAAIgwB,EAAYC,GAAsBnyB,GAClCkyB,GAAaA,EAAU72C,eAAe,WACtC2kB,EAAMpb,OAAS,GAEfstC,GAAaA,EAAU72C,eAAe,WACtC2kB,EAAMpb,OAAS,IAKnBob,EAAMsgB,kBArlEd,SAAS8R,EAAqBl5B,EAAS3J,EAASsqB,GAE5C8H,GAA2BzoB,EAAS2gB,EADftqB,EAAQ,IACiC,GAolE1D6iC,CAAqBxZ,EAAQ5Y,EAAMsgB,gBAAiBxgB,EAAMd,KA9lElE,SAASqzB,EAAoBn5B,EAAS3J,EAASsqB,GAE3C8H,GAA2BzoB,EAAS2gB,EADhBtqB,EAAQ,IACiC,GA6lEzD8iC,CAAoBzZ,EAAQ5Y,EAAMsgB,gBAAiBxgB,EAAMd,MAE7D,IAAIuyB,EAAiBzxB,EAAMtB,IACvB+yB,IACAA,EAAeC,QAAQxxB,GACvBF,EAAMtB,IAAW+yB,EAAeE,SAEpCC,GAAsB5vB,EAAO9B,EAAOF,GAQxC,SAAS+xB,GAAcnzC,EAAM4zC,GACzB,IACIC,EAAgBD,GAAsBvuB,KAAW/E,IAYrD,OAXI4a,GAAqB2Y,GACZA,EAAc3lB,cAAcluB,EAAMqyC,IAGjB,OAAtBA,GACSwB,EAAc3lB,cAAcluB,GAG5B6zC,EAAcC,gBAAgBzB,GAAmBryC,GAWtE,SAAS4yC,GAA0BxvB,EAAOhC,EAAOmZ,EAAWwZ,GAExD,QAD0B,IAAtBA,IAAgCA,EAAoB1yB,IA9kL5D,SAAS2yB,IAEL,OAAOlvB,GA6kLFkvB,GAAL,CAEA,IAAIjvB,EAAwBU,KACxBrC,EAAMI,mBA08Bd,SAASywB,EAAkB7wB,EAAOoe,EAAU1jB,EAAYwD,EAAOiZ,GAG3D,IAAI2Z,EAAa3Z,GAAc4Z,IAAK,GAAM,KAC1C,GAAIr2B,EAAY,CACZs2B,GAAc9yB,EAAO8B,EAAMjL,KAAK3a,OAAQsgB,EAAWtgB,QAOnD,IAAK,IAAIH,EAAI,EAAGA,EAAIygB,EAAWtgB,OAAQH,KAC/B6J,EAAM4W,EAAWzgB,IACbie,mBACJpU,EAAIoU,kBAAkBpU,GAG9B,IADAmtC,GAAgCjxB,EAAO9B,EAAOxD,EAAWtgB,QAChDH,EAAI,EAAGA,EAAIygB,EAAWtgB,OAAQH,IAAK,CACxC,IAAI6J,EACA+pC,EAAkB7tB,EAAMjL,KAAK3a,OACjC82C,GAAqBlxB,EAAOoe,EAFxBt6B,EAAM4W,EAAWzgB,GAEsB6J,EAAI3L,SAC/Cg5C,GAAoBnxB,EAAMjL,KAAK3a,OAAS,EAAG0J,EAAKgtC,GAGhDjxB,GAAsBguB,EAAiB/pC,EAAKkc,IAGhD8wB,GAqKR,SAASM,EAAwBlzB,EAAOiZ,EAAW2Z,GAC/C,GAAI3Z,EAKA,IAJA,IAAIka,EAAanzB,EAAMmzB,cAIdp3C,EAAI,EAAGA,EAAIk9B,EAAU/8B,OAAQH,GAAK,EAAG,CAC1C,IAAIoE,EAAQyyC,EAAW3Z,EAAUl9B,EAAI,IACrC,GAAa,MAAToE,EACA,MAAM,IAAImB,MAAM,mBAAqB23B,EAAUl9B,EAAI,GAAK,gBAC5Do3C,EAAWj1C,KAAK+6B,EAAUl9B,GAAIoE,IA9KlC+yC,CAAwBlzB,EAAOiZ,EAAW2Z,GAr+B1CD,CAAkB7wB,EAAOhC,EAmlCjC,SAASszB,EAAqBtxB,EAAOoe,EAAUlgB,GAE3C,IAAIqzB,EAAWvxB,EAAMwxB,kBACjBC,EAAU,KACd,GAAIF,EACA,IAAK,IAAIt3C,EAAI,EAAGA,EAAIs3C,EAASn3C,OAAQH,IAAK,CACtC,IAAI6J,EAAMytC,EAASt3C,GACf8xC,GAA2B7tB,EAAOpa,EAAIiW,WAAkC,KACxE03B,IAAYA,MACZzrB,GAAmBZ,GAA+B/C,KAA4B+b,GAAWA,EAAUt6B,EAAI1D,MACnGwe,GAAe9a,IACG,EAAdoa,EAAMpb,OACNqyB,GAA4BjX,GAChCA,EAAMpb,MAAQ,EAEd2uC,EAAQ7yC,QAAQkF,IAGhB2tC,EAAQr1C,KAAK0H,IAK7B,OAAO2tC,EA1mC6BH,CAAqBtxB,EAAOhC,EAAO2D,GAAwBA,EAAuBwV,GAAa,MA0+BvI,SAASua,EAAyB1xB,EAAOhC,EAAOE,GAC5C,IAAIkiB,EAAQliB,EAAMmC,eACdC,EAAMpC,EAAMqC,cACXP,EAAMI,mBAAqBggB,EAAQ9f,GACpC8E,GAA+BlH,EAAOF,GAE1C,IAAK,IAAI/jB,EAAImmC,EAAOnmC,EAAIqmB,EAAKrmB,IAAK,CAC9B,IAAI6J,EAAMkc,EAAMjL,KAAK9a,GACjB2kB,GAAe9a,IACf6tC,GAAkB3zB,EAAOE,EAAOpa,GAGpC8tC,GAAqB5zB,EADL+J,GAAkB/H,EAAMjL,KAAMiJ,EAAO/jB,EAAGikB,GACjBpa,EAAK7J,IAp/BhDy3C,CAAyB1xB,EAAOhC,EAAO2D,GAu/B3C,SAASkwB,EAA6B7xB,EAAOoe,EAAUlgB,GAKnD,IAJA,IACIoC,EAAMpC,EAAMqC,aACZuxB,EAAU9xB,EAAMktB,oBAChB9sB,EAAoBJ,EAAMI,kBACrBnmB,EAJGikB,EAAMmC,eAIEpmB,EAAIqmB,EAAKrmB,IAAK,CAC9B,IAAI6J,EAAMkc,EAAMjL,KAAK9a,GAEjB6J,EAAIwU,aACJy5B,GAAiCjuC,EAAKguC,EAF1B1T,EAASnkC,GAEqCikB,EAAOkC,GAE5DA,GACL0xB,EAAQ11C,KAAK,OAlgCrBy1C,CAA6B7xB,EAAOhC,EAAO2D,GAO/C,SAASqwB,EAAyB5T,EAAUlgB,EAAOyyB,GAC/C,IAAIU,EAAanzB,EAAMmzB,WACvB,GAAIA,EAEA,IADA,IAAIY,EAAa/zB,EAAM7f,MAAQ,EACtBpE,EAAI,EAAGA,EAAIo3C,EAAWj3C,OAAQH,GAAK,EAAG,CAC3C,IAAIoE,EAAQgzC,EAAWp3C,EAAI,GACvB8B,GAAmB,IAAXsC,EACRsyC,EAAkBzyB,EAAOkgB,GACzBA,EAAS//B,GACb+/B,EAAS6T,KAAgBl2C,GAfjCi2C,CAAyBh0B,EAAO2D,EAAuBgvB,IAgC3D,SAASuB,GAAiBrD,EAAY12B,EAAQC,EAAMsC,EAAYG,EAAOb,EAAWO,GAO9E,OAAOs0B,EAAWsD,gBACbtD,EAAWsD,cAAgBC,IAAa,EAAGvD,EAAY12B,EAAQC,EAAMsC,EAAYG,EAAOb,EAAWO,IAa5G,SAAS63B,GAAYC,EAAWxD,EAAY12B,EAAQC,EAAMsC,EAAYG,EAAOb,EAAWO,GAEpF,IAAIiJ,EAAoBhG,GAAgBrF,EAIpCm6B,EAAoB9uB,EAAoBpL,EACxCqN,EA+BR,SAAS8sB,EAAoB/uB,EAAmB8uB,GAC5C,IAAI7sB,EAAY,IAAIpsB,MAAMi5C,GACrB7sC,KAAK,KAAM,EAAG+d,GACd/d,KAAK2vB,GAAW5R,GAErB,OADAiC,EAAU5I,IAAiB2G,EACpBiC,EApCS8sB,CAAoB/uB,EAAmB8uB,GACvD,OAAO7sB,EAAUnJ,KACbpN,GAAImjC,EACJ5sB,UAAWA,EACXlP,SAAUs4B,EACV70B,UAAWA,EACXsW,KAAM,KACNvb,KAAM0Q,EAAUra,QAAQ3F,KAAK,KAAM+d,GACnCA,kBAAmBA,EACnBgvB,oBAAqBF,EACrBnF,kBAAmBmF,EACnBpF,oBAAqB,KACrB9sB,mBAAmB,EACnBqyB,mBAAmB,EACnBlF,sBAAsB,EACtBttB,UAAW,KACXC,WAAY,KACZM,aAAc,KACdC,kBAAmB,KACnBC,UAAW,KACXC,eAAgB,KAChBC,aAAc,KACdsa,QAAS,KACT3iB,eAAgB,KAChBif,WAAY,KACZga,kBAAyC,mBAAf92B,EAA4BA,IAAeA,EACrEg4B,aAA+B,mBAAV73B,EAAuBA,IAAUA,EACtDmR,WAAY,KACZzR,QAASA,GAqCjB,SAAS01B,GAAgBnZ,EAAQpQ,GAI7B,IAHA,IAAIqR,EAAW9V,KAAW/E,IACtBy1B,EAAS7a,GAAqBC,GAC9B99B,EAAI,EACDA,EAAIysB,EAAMtsB,QAAQ,CACrB,IAAI2B,EAAQ2qB,EAAMzsB,GAClB,GAAqB,iBAAV8B,EAAoB,CAG3B,GAAc,IAAVA,EACA,MAIJ9B,IACA,IAAI24C,EAAelsB,EAAMzsB,KACrB0sB,EAAWD,EAAMzsB,KACjB44C,EAAUnsB,EAAMzsB,KAEpB04C,EACI5a,EAAS+a,aAAahc,EAAQnQ,EAAUksB,EAASD,GACjD9b,EAAOic,eAAeH,EAAcjsB,EAAUksB,QAK9CA,EAAUnsB,IAAQzsB,IADlB0sB,EAAW5qB,KAEE87B,KAGT8G,GAAgBhY,GACZgsB,GACA5a,EAASkO,YAAYnP,EAAQnQ,EAAUksB,GAI3CF,EACI5a,EACK+a,aAAahc,EAAQnQ,EAAUksB,GACpC/b,EAAOgc,aAAansB,EAAUksB,IAG1C54C,IAOR,OAAOA,EAUX,SAAS+4C,GAAkB76C,EAAS86C,GAChC,IAAIC,EAAkB/6C,EAAQ8/B,eAAe,KAAM,MAcnD,MAbyC,iBAAtBgb,EACdnb,GAAqBob,GAClBA,EAAgBC,kBAAkBF,GAClCC,EAAgBjoB,cAAcgoB,GAClCA,EAuBR,SAASG,GAASC,EAAWC,EAAYC,EAAYC,QAC9B,IAAfD,IAAyBA,GAAa,GAC1CE,GAAiBJ,EAAWC,EAAYC,EAAYC,GAqBxD,SAASE,GAA+BL,EAAWC,EAAYC,EAAYC,QACpD,IAAfD,IAAyBA,GAAa,GAC1CE,GAAiBJ,EAAWC,EAAYC,EAAYC,EAAqBG,IAE7E,SAASF,GAAiBJ,EAAWC,EAAYC,EAAYC,EAAqBI,QAC3D,IAAfL,IAAyBA,GAAa,GAC1C,IAAIv1B,EAAQiE,KACR/D,EAAQmE,KACRrC,EAAQhC,EAAM1B,IAEd2e,EADoBjb,EAAMI,oBACOJ,EAAMkb,UAAYlb,EAAMkb,aAG7D,GAAmB,IAAfhd,EAAM9d,KAA0B,CAChC,IAAI02B,EAAS7Y,GAAiBC,EAAOF,GACjC5V,EAAWorC,EAAsBA,EAAoB1c,MACrDr8B,EAAS2N,EAAS3N,QAAUq8B,EAE5BiB,EAAW6b,EAAiBA,EAAe11B,EAAOF,GAASA,EAAMd,IAEjE22B,GADA1Y,EAAW2Y,GAAW91B,IACG5jB,OACzBihC,EAAqBkY,EAGzB,GAAIzb,GAAqBC,GAAW,CAIhCub,EAAaS,GAAa71B,EAAOF,EAAOs1B,GAAY,GACpD,IAAI9X,EAAYzD,EAASic,OAAO5rC,EAASxL,MAAQnC,EAAQ44C,EAAWC,GACpEnY,EAAS/+B,KAAKk3C,EAAY9X,GAC1BH,EAAqBwY,EAAgB,OAGrCP,EAAaS,GAAa71B,EAAOF,EAAOs1B,GAAY,GACpD74C,EAAO0kC,iBAAiBkU,EAAWC,EAAYC,GAC/CpY,EAAS/+B,KAAKk3C,GAKlBrY,GAAYA,EAAS7+B,KAAKi3C,EAHFG,EACpB,SAAUvqB,GAAU,OAAOuqB,EAAoB11B,GAAiBmL,EAAO/K,EAAM7f,SAAS5D,QACtFyjB,EAAM7f,MAC8Cw1C,EAAexY,QAGrDv7B,IAAlBoe,EAAMzF,UAGNyF,EAAMzF,QAAUw7B,GAAwB/1B,EAAO,IAEnD,IACIrhB,EADA4b,EAAUyF,EAAMzF,QAEpB,GAAIA,IAAY5b,EAAQ4b,EAAQ46B,IAAa,CACzC,IAAIa,EAAcr3C,EAAMzC,OACxB,GAAI85C,EAEA,IADA,IAAI/Y,EAAW2Y,GAAW91B,GACjB/jB,EAAI,EAAGA,EAAIi6C,EAAaj6C,GAAK,EAAG,CACrC,IAQIk6C,EALoBn2B,EAHZnhB,EAAM5C,IAEC4C,EAAM5C,EAAI,IAMHw5B,UAAU6f,GAChCc,EAAMjZ,EAAS/gC,OACnB+gC,EAAS/+B,KAAKk3C,EAAYa,GAC1BlZ,GAAYA,EAAS7+B,KAAKi3C,EAAWn1B,EAAM7f,MAAO+1C,IAAOA,EAAM,MAkC/E,SAAS/E,KACL,IAAI1tB,EAAwBU,KACxBG,KACAC,IAAY,GAKZH,GADAX,EAAwBA,EAAsB9W,QAKlD8W,EAAsB4qB,sBAAwBF,GAA0B1qB,GAExE,IAAI3D,EAAQiE,KACRwtB,EAAiBzxB,EAAMtB,IAS3B,GARI+yB,IACAzxB,EAAMtB,IAAW+yB,EAAe5kC,QAEpCsV,GAAuB8B,KAAW3F,IAAQqF,GA19L9C,SAAS0yB,IACLp1B,KA09LAo1B,GAIIzV,GAAcjd,GAAwB,CACtC,IAAI2d,EAAiBnB,GAAkBxc,EAAsBtjB,MAAO2f,GACpEs2B,GAAqBt2B,EAAO2D,EAAsBnJ,OAAc,MAAG0xB,GAAyB5K,IAE5FT,GAAcld,KACV2d,EAAiBnB,GAAkBxc,EAAsBtjB,MAAO2f,GACpEs2B,GAAqBt2B,EAAO2D,EAAsBnJ,OAAc,MAnvCxE,SAAS+7B,EAA2B9mC,GAChC,IAAI+mC,EAAqB/mC,EAAQ,GAC7BgnC,EAAcD,EAAmB,GACrC,GAAoB,OAAhBC,EAAsB,CACtBA,EAAc,GACd,IAAK,IAAIx6C,EAAI,EAA+BA,EAAIu6C,EAAmBp6C,OAAQH,GAAK,EAAc,CAC1F,IAAI8B,EAAQy4C,EAAmBv6C,EAAI,GACrB,OAAV8B,IACA04C,IAAgBA,EAAYr6C,OAAS,IAAM,IAAOo6C,EAAmBv6C,GAAK,IAAM8B,GAGxFy4C,EAAmB,GAAwCC,EAE/D,OAAOA,EAsuCgEF,CAA2BjV,KAatG,SAASoV,GAAiBr2C,EAAOzB,EAAMb,EAAOm1B,EAAWyjB,GACrD,GAAI54C,IAAUq5B,GAAW,CAErB,IAAIpX,EAAQiE,KACR8V,EAAW/Z,EAAMd,IACjB03B,EAAY72B,GAAiB1f,EAAO2f,GACxC,GAAa,MAATjiB,EAEA+7B,GAAqBC,GAAYA,EAAStL,gBAAgBmoB,EAAWh4C,EAAM+3C,GACvEC,EAAUnoB,gBAAgB7vB,OAE7B,CAED,IAAIshB,EAAQE,GAAS/f,EAAO2f,GACxB62B,EAAwB,MAAb3jB,EAAoBna,GAAgBhb,GAASm1B,EAAUn1B,EAAOmiB,EAAM8R,SAAW,GAAIpzB,GAC9Fk7B,GAAqBC,GACrBA,EAAS+a,aAAa8B,EAAWh4C,EAAMi4C,EAAUF,GAGjDA,EAAYC,EAAU7B,eAAe4B,EAAW/3C,EAAMi4C,GAClDD,EAAU9B,aAAal2C,EAAMi4C,KAoBjD,SAASC,GAAgBz2C,EAAON,EAAUhC,EAAOm1B,EAAW6jB,GACxDC,GAAwB32C,EAAON,EAAUhC,EAAOm1B,EAAW6jB,GAuB/D,SAASE,GAA+B52C,EAAON,EAAUhC,EAAOm1B,EAAW6jB,GACvEC,GAAwB32C,EAAON,EAAUhC,EAAOm1B,EAAW6jB,EAAYpB,IAK3E,IAAIuB,IACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEhB,SAASR,GAAwB32C,EAAON,EAAUhC,EAAOm1B,EAAW6jB,EAAYnB,GAC5E,GAAI73C,IAAUq5B,GAAd,CAEA,IAGIgb,EACAqF,EAJAz3B,EAAQiE,KACR7K,EAAU2G,GAAiB1f,EAAO2f,GAClCE,EAAQE,GAAS/f,EAAO2f,GAG5B,IAAK+2B,IAAe3E,EAAYC,GAAsBnyB,MACjDu3B,EAAYrF,EAAUryC,IACvBu2C,GAAqBt2B,EAAOy3B,EAAW15C,GACnC4iB,GAAYT,IAkxCxB,SAASw3B,EAAkB13B,EAAOq0B,GAE9B,IAAIsD,EAAsBn3B,GAAwB6zB,EAAWr0B,GAC1B,GAA7B23B,EAAoBp5B,MACtBo5B,EAAoBp5B,KAAU,IArxC1Bm5B,CAAkB13B,EAAO3f,EAAQmf,SAOpC,GAAmB,IAAfU,EAAM9d,KAA0B,EAqD7C,SAASw1C,EAAsB13B,EAAOF,EAAOjgB,EAAUwoB,EAAOwuB,GAC1D,IAAIc,EAAmB73B,EAAMnB,IAAiB,EAK1Ci5B,EAAkBvvB,EAAMsvB,GACxBC,EAAgB,IAAMp+B,KACtB6O,EAAMsvB,GAAoB93C,EAAW+3C,EAGhCf,KACwC,GAArC72B,EAAM63B,6BACN73B,EAAM63B,2BAA6BF,GAEvC33B,EAAM83B,yBAA2BH,EAAmB,IA7DxDD,CAAsB13B,EAAOF,EAN7BjgB,EAAWm3C,GAAan3C,IAAaA,EAMSigB,EAAM1B,IAAOvH,KAAMggC,GACjE,IAAIhd,EAAW6b,EAAiBA,EAAe11B,EAAOF,GAASA,EAAMd,IAGrEnhB,EAAqB,MAAbm1B,EAAoBA,EAAUn1B,EAAOmiB,EAAM8R,SAAW,GAAIjyB,GAAYhC,EAC1E+7B,GAAqBC,GACrBA,EAASkO,YAAY7uB,EAASrZ,EAAUhC,GAElC4iC,GAAgB5gC,KACtBqZ,EAAQ6uB,YAAc7uB,EAAQ6uB,YAAYloC,EAAUhC,GAChDqb,EAAQrZ,GAAYhC,KAiEpC,SAASmyC,GAAY+H,EAAS71C,EAAMsmC,EAAe1W,EAAStJ,GAExD,OACItmB,KAAMA,EACN/B,MAAOqoC,EACPnhB,cAAe0wB,EAAUA,EAAQ1wB,eAAiB,EAClDlF,gBAAiB,EACjBE,cAAe,EACfw1B,4BAA6B,EAC7BC,0BAA2B,EAC3BlzC,MAAO,EACPqlB,gBAAiB,EACjB6H,QAASA,EACTtJ,MAAOA,EACP2qB,WAAY,KACZ6E,mBAAep2C,EACf0Y,YAAQ1Y,EACR2Y,aAAS3Y,EACTq2C,OAAQ,KACRr6C,KAAM,KACNw7B,MAAO,KACPzsB,OAAQorC,EACRzX,gBAAiB,KACjBjF,WAAY,KACZgT,qBAAsB,MAW9B,SAAS+H,GAAqBt2B,EAAOxF,EAAQzc,GAEzC,IADA,IAAIikB,EAAQhC,EAAM1B,IACTriB,EAAI,EAAGA,EAAIue,EAAOpe,QAAS,CAChC,IAAIiE,EAAQma,EAAOve,KACf2hB,EAAapD,EAAOve,KACpBm8C,EAAc59B,EAAOve,KACrBstB,EAAWvJ,EAAM3f,GAEjByF,EAAMkc,EAAMjL,KAAK1W,GACNyF,EAAIwW,SAEfxW,EAAIwW,SAASiN,EAAUxrB,EAAO6f,EAAYw6B,GAG1C7uB,EAAS6uB,GAAer6C,GAiCpC,SAASk4C,GAAwB/1B,EAAOm4B,GACpC,IAAIr2B,EAAQiC,KAAW3F,IACnBg6B,EAAY,KACZlW,EAAQliB,EAAMmC,eACdC,EAAMpC,EAAMqC,aAChB,GAAID,EAAM8f,EAGN,IAFA,IAAImW,EAAwB,IAAdF,EACVG,EAAOx2B,EAAMjL,KACR9a,EAAImmC,EAAOnmC,EAAIqmB,EAAKrmB,IAAK,CAC9B,IAAI8lB,EAAey2B,EAAKv8C,GACpBw8C,EAAmBF,EAAUx2B,EAAavH,OAASuH,EAAatH,QACpE,IAAK,IAAImD,KAAc66B,EACnB,GAAIA,EAAiBl9C,eAAeqiB,GAAa,CAE7C,IAAI86B,EAAeD,EAAiB76B,IADpC06B,EAAYA,OAEgB/8C,eAAeqiB,GAC7B06B,EAAU16B,GAAYxf,KAAKnC,EAAG2hB,EAAY86B,GACnDJ,EAAU16B,IAAe3hB,EAAG2hB,EAAY86B,IAK7D,OAAOJ,EAuBX,SAASK,GAAeC,EAAmBC,EAAmBC,EAAgBt1B,GAC1E,IAAItD,EAAQmE,KACPnE,EAAMsgB,kBACPtgB,EAAMsgB,gBAAkBV,MAExBtc,GAMAyc,GAA6B/f,EAAMsgB,gBAAiBhd,IAC1CtD,EAAMquB,qBAAuBruB,EAAMquB,0BACzCnwC,KAAK,WAAc,OAAO26C,GAAmB74B,EAAO04B,EAAmBC,EAAmBC,EAAgBt1B,MAM9Gu1B,GAAmB74B,EAAO04B,EAAmBC,EAAmBC,EAAgBt1B,GAGxF,SAASu1B,GAAmB74B,EAAO04B,EAAmBC,EAAmBC,EAAgBt1B,IAxyFzF,SAASw1B,EAA0BvpC,EAASywB,EAAc0Y,EAAmBC,EAAmBC,GAC5F,KAA0C,GAAtCrpC,EAAQ,IAAZ,CAGA,IAAIqS,EAqNR,SAASm3B,EAAiCxpC,EAASywB,EAAc4Y,GAC7D,IAEIh3B,EAFAo3B,EAAgBzpC,EAAQ,GACxB0pC,EAA2B1pC,EAAQ,GAAmCrT,OAEtEg9C,EAAgBzN,GAAkCuN,EAAehZ,GACrE,IAAuB,IAAnBkZ,EACAA,EAAgBF,EAAc98C,OAC9B0lB,EAAiBo3B,EAAc98C,OAAS,EACxC6jC,GAA6BxwB,EAASywB,GACtCgZ,EAAcE,EAAgB,GAC1BD,EACJD,EAAcE,EAAgB,GAC1BN,GAAkB,SAErB,CAED,GAAII,EAD0BE,EAAgB,IACA,EAE1C,OAAQ,EAEZt3B,EAAiBs3B,EAAgB,EAKjCF,EAD8BE,EAAgB,GACLD,EAIzCD,EAD0BE,EAAgB,GACLN,GAAkB,KAE3D,OAAOh3B,EApPcm3B,CAAiCxpC,EAASywB,EAAc4Y,GAC7E,IAAwB,IAApBh3B,EAAJ,CAII+2B,IACAA,EAm0CR,SAASQ,EAAiBC,GAEtB,IADA,IAAIC,KACKt9C,EAAI,EAAGA,EAAIq9C,EAAQl9C,OAAQH,IAChCs9C,EAAWn7C,KAAKslC,GAAU4V,EAAQr9C,KAEtC,OAAOs9C,EAx0CiBF,CAAiBR,IAOzC,IAAIW,EAAyB/pC,EAAQ,GACjCgqC,EAA4BD,EAAuB,GACnDE,EAA4BF,EAAuB,GACnDG,EAAuBlqC,EAAQ,GAC/BmqC,EAAuBnqC,EAAQ,GAE/BoqC,EAA2C,EAA5BH,EAEfI,EADyB,EAC0BD,EACnDE,EAAwBD,EAJoB,EAA5BL,EAKhBO,EAAyBD,EAAwBF,EASjDI,EAA2BT,EAAuBp9C,OACtDo9C,EAAuBp7C,KAAKy6C,EAAoBA,EAAkBz8C,OAAS,EAAGw8C,EAAoBA,EAAkBx8C,OAAS,GAI7H,IAAI89C,EAAkB,EAClBC,KACJ,GAAItB,GAAqBA,EAAkBz8C,OACvC,IAAK,IAAIg+C,EAAM,EAAGA,EAAMvB,EAAkBz8C,OAAQg+C,IAAO,CACrD,IAAIC,EAASxB,EAAkBuB,IAEP,IADpBE,EAAkBpY,GAAwBzyB,EAAS4qC,EAtBlC,EAsBkEP,MAEnFQ,EAAkBR,EAA0BI,EAC5CA,GAAmB,EACnBC,EAA0B/7C,KAAKi8C,IAEnCb,EAAuBp7C,KAAKk8C,GAIpC,IAAIC,KACJ,GAAI3B,GAAqBA,EAAkBx8C,OACvC,IAAK,IAAIo+C,EAAM,EAAGA,EAAM5B,EAAkBx8C,OAAQo+C,IAAO,CACrD,IACIF,EADAG,EAAS7B,EAAkB4B,IAEP,IADpBF,EAAkBpY,GAAwBzyB,EAASgrC,EAAQX,EAAyBC,KAEpFO,EAAkBP,EAAwBG,EAC1CA,GAAmB,EACnBK,EAA0Bn8C,KAAKq8C,IAG/BH,GAAsD,EAAnCH,EAA0B/9C,OAEjDo9C,EAAuBp7C,KAAKk8C,GAOpC,IAAIr+C,EAAI,EACR,GAAIk+C,EAA0B/9C,OAC1B,KAAOH,EAAIg+C,GAA0B,CACjC,IAAIS,EAAclB,EAAuBv9C,EAAI,GACzC0+C,EAAenB,EAAuBv9C,EAAI,GAC9C,GAAI0+C,EAEA,IADA,IAAIvY,EAAQnmC,EAAI,EAA6By+C,EACpCj1C,EAAI28B,EAAO38B,EAAI28B,EAAQuY,EAAcl1C,IAC1C+zC,EAAuB/zC,IAAyC,EAAnC00C,EAA0B/9C,OAI/DH,GAAK,GADOy+C,EAAcC,GAQlC,IAJA,IAAIC,EAAkBL,EAA0Bn+C,OAAS+9C,EAA0B/9C,OAI1Ey+C,EAvEoB,EAuEUA,EAAMprC,EAAQrT,OAAQy+C,GAAO,EAAc,CAC9E,IAAIC,EAAeD,GAAOd,EACtB5T,EAAe0U,IAAQC,EAAed,EAAyBF,GAC/D9U,EAAOhB,GAAYv0B,EAASorC,GAC5B7R,EAAcG,GAAgBnE,GAC9B+V,EAAqBvT,GAAsBxC,GAS/C4E,GAAQn6B,EAASorC,EAAK/R,GAAS9D,EAAMgE,EAPjC+R,GADAD,EAEI3U,EAAmD,EAAnCgU,EAA0B/9C,OAAyB,EAG9B,EAAlBw+C,EACsC,GAAvDzU,EAAegU,EAA0B/9C,OAAS,KAKhE,IAAK,IAAI4+C,EAAM,EAAGA,EAAyC,EAAnCb,EAA0B/9C,OAAuB4+C,IACrEvrC,EAAQ0sB,OAAO6d,EAAwB,EAAG,MAC1CvqC,EAAQ0sB,OAAO2d,EAAyB,EAAG,MAC3CA,IACAC,IACAC,GAA0B,EAG9B,IAAK,IAAIiB,EAAM,EAAGA,EAAyC,EAAnCV,EAA0Bn+C,OAAuB6+C,IACrExrC,EAAQ0sB,OAAO4d,EAAuB,EAAG,MACzCtqC,EAAQrR,KAAK,MACb27C,IACAC,IAOJ,IALA,IAAIha,EAAiBvwB,EAAQ,GACzBswB,EAAgBtwB,EAAQ,GAInByrC,EAAM,EAAGA,EAAMN,EAAiBM,IAAO,CAC5C,IAAIvY,EAAoBuY,GAAOf,EAA0B/9C,OACrDssC,EAAgB/F,EAAqBuY,EAAMf,EAA0B/9C,OAAU8+C,EAC/En7C,EAAW4iC,EAAoB4X,EAA0B7R,GACzDyR,EAA0BzR,GAC1ByS,OAAa,EAAQ7U,OAAc,EACnC3D,GACAwY,EAAanB,EACsC,GAA7CP,EAA4B/Q,GAClCpC,EAAcwT,EACqC,GAA7CL,EAA4B/Q,KAGlCyS,EACIpB,EAAuE,GAA7CL,EAA4BhR,GAC1DpC,EA1HqB,EA2H8B,GAA7CoT,EAA4BhR,IAKtC,IAAI0S,EAAwBzY,EAAoB3C,EAAiBD,EAC7Dsb,EAAkBtQ,GAA+BqQ,EAAuBr7C,IACnD,IAArBs7C,GACAA,EAAkBD,EAAsBh/C,OAAS,EACjDg/C,EAAsBh9C,KAAK2B,GAAU4iC,GAA4B,OAGjE0Y,GAAmB,EAEvB,IAAIC,EAAcrW,GAAmBx1B,EAAS1P,EAAU4iC,EAAmBmW,GAAkB,MAC7FlP,GAAQn6B,EAAS62B,EAAawC,GAASwS,EAAaD,EAAiBF,IACrE7R,GAAQ75B,EAAS62B,EAAavmC,GAC9BokC,GAAS10B,EAAS62B,EAAa,MAC/BlC,GAAsB30B,EAAS62B,EAAa,EAAGxkB,GAC/C8nB,GAAQn6B,EAAS0rC,EAAYrS,GAASwS,EAAaD,EAAiB/U,IACpEgD,GAAQ75B,EAAS0rC,EAAYp7C,GAC7BokC,GAAS10B,EAAS0rC,EAAY,MAC9B/W,GAAsB30B,EAAS0rC,EAAY,EAAGr5B,GAKlD03B,EAAuB,GACnBC,EAA4Bc,EAA0Bn+C,OAC1Do9C,EAAuB,GACnBE,EAA4BS,EAA0B/9C,OAE1Du9C,EAAqB,IACjBY,EAA0Bn+C,OAC9Bw9C,EAAqB,IACjBO,EAA0B/9C,OAC9B,IAAIm/C,EAAkE,EAAnCpB,EAA0B/9C,OACzDo/C,EAAmE,EAAnCjB,EAA0Bn+C,OAG1Dq/C,EAAsB7B,EAAqBx9C,OAC/CyvC,GAAsBp8B,EAASqS,GAAgB,EAFVi4B,EAAoD,EAA5BL,EAEyBS,EAA0B/9C,QAChH,IAAK,IAAIs/C,GAAM,EAA6BA,GAAMD,EAAqBC,IAAO,EAG1E9B,EAAqB8B,GAAM,IACvBF,EAAgCD,EAGxC,IACII,GAAsBhC,EAAqBv9C,OAC/CyvC,GAAsBp8B,EAASqS,GAAgB,EAFTk4B,EAAqD,EAA5BP,EAEuBc,EAA0Bn+C,QAChH,IAAK,IAAIw/C,GAAM,EAA6BA,GAAMD,GAAqBC,IAAO,EAO1EjC,EAAqBiC,GAAM,IACS,EAA/BL,EAAoCC,EAK7C5R,GAAQn6B,EAAS,EADAq5B,GAAS,EAAG,EAAGiR,MAslFhCf,CAA0B94B,EAAMsgB,gBAAiBhd,GAAa,KAAMo1B,EAAmBC,EAAmBC,GAyC9G,SAAS+C,GAAiBr4B,EAAWkF,GACjC,IAAIxI,EAAQmE,KACPnE,EAAMsgB,kBACPtgB,EAAMsgB,gBAAkBgB,GAAwB9Y,IAEpD,IAEIzsB,EAAIg2C,GADKhyB,GAAiBC,EADlB+D,MAEoByE,IA97FpC,SAASozB,EAA4BrsC,EAASiZ,EAAOqzB,EAAe7b,GAMhE,IAAoE,GAAhEyL,GADal8B,EAAQ,GACyBywB,GAAqB,CAEnED,GAA6BxwB,EAASywB,GAItC,IAHA,IAAIF,EAAiB,KACjBD,EAAgB,KAChBlb,GAAQ,EACH5oB,EAAI8/C,EAAe9/C,EAAIysB,EAAMtsB,OAAQH,IAAK,CAC/C,IAAIwlC,EAAO/Y,EAAMzsB,GACE,iBAARwlC,EACP5c,EAAO4c,EAEM,GAAR5c,EAEL6c,GADA1B,EAAiBA,GAAkBvwB,EAAQ,GACFgyB,GAAM,GAElC,GAAR5c,GAEL6c,GADA3B,EAAgBA,GAAiBtwB,EAAQ,GACDgyB,EAAM/Y,IAAQzsB,MAw6FlE6/C,CAA4B57B,EAAMsgB,gBAAiB9X,EAAOzsB,EAAGunB,GAgBjE,SAASw4B,GAAoB37C,EAAOmjB,GAChC,IAAIxD,EAAQiE,KACRwnB,EAA4D,IAA5B,EAAfzrB,EAAMzB,MAhsE/B,SAAS09B,EAAcxsC,EAASsqB,EAAUmiB,EAAYzQ,EAAe0Q,EAAcC,EAAalc,GAC5F,IAAImc,EAAqB,EACrBC,EAAuBjW,GAA8B52B,EAASywB,GAAgB,MAClF,GAkSJ,SAASqc,EAAe9sC,GACpB,OAAOk5B,GAAQl5B,EAAS,GAnSpB8sC,CAAe9sC,IAwevB,SAAS+sC,EAAiB/sC,EAASqS,GAE/B,OADWrS,EAAQ,GACU,EAAjBqS,EACR,GA3e2B06B,CAAiB/sC,EAAS6sC,GAAuB,CAK5E,IAJA,IAAIG,EAA4D,EAAtChtC,EAAQ,GAC9BqpB,EAASrpB,EAAQ,GACjBitC,EAAkBrT,GAAyB55B,GAC3CktC,GAAa,EACR1gD,EAAI,EAAmCA,EAAIwT,EAAQrT,OAAQH,GAAK,EAErE,GAAI0sC,GAAQl5B,EAASxT,GAAI,CACrB,IAAI+oC,EAAOhB,GAAYv0B,EAASxT,GAC5B6lB,EAAiBgiB,GAA2Br0B,EAASxT,GACzD,GAAIqgD,IAAyBx6B,EAAgB,CACzC66B,GAAa,EACb,SAEJ,IAAIr0C,EAAO+5B,GAAQ5yB,EAASxT,GACxB8B,EAAQ6lC,GAASn0B,EAASxT,GAC1B68C,EAAyB,EAAP9T,EAA2BT,GAAkB90B,EAASqS,GAAkB,KAC1F+kB,EAAgB8C,GAAiBl6B,EAASxT,GAC1CkqC,KAAsB,EAAPnB,GAEf4X,EAAe7+C,EADI9B,EAAIygD,IAKF9U,GAAYgV,KAGjCA,EAAehZ,GAASn0B,EADP+3B,GAAsBxC,KAWtC4C,GAAYgV,KACbA,EAAe1T,GAAgBz5B,EAASu1B,MAMzByG,GAAgBmR,KAE3BzW,EACAnE,GAASlJ,EAAQxwB,IAAMs0C,EAA6B7iB,EAAUoiB,EAActV,GAG5E5E,GAASnJ,EAAQxwB,EAAMs0C,EAAc7iB,EAAU+e,EAAgBsD,EAAavV,IAGpFvC,GAAS70B,EAASxT,GAAG,GAG7B,GAAIwgD,EAAqB,CACrB,IAAIzb,EAAc3lC,MAAMmK,QAAQ02C,GAAcx1B,GAAew1B,GAAcA,EACvEnb,EAAgBM,GAAiB5xB,GACjCotC,EAAoB9b,EAAc,GACtC,IAAS9kC,EAAI,EAAqCA,EAAI4gD,EAAmB5gD,GAAK,EAA0C,CACpH,IAAIstC,EAAUxI,EAAc9kC,GACxB6gD,EAAuB7gD,EAAI,EAC3B8gD,EAAYhc,EAAc+b,GAC9B,GAAIvT,EAAS,CACT,IAAI9J,EAAS8J,EAAQgC,YAAYwR,EAAWtR,QAC7B3pC,IAAX29B,IACc,MAAVA,GACgBqB,GAAkBC,EAAeC,EAAalI,EAAQ2G,EAAQqd,IACjET,IAEbU,GACAA,EAAUtf,gBAIbsf,GAGLA,EAAUtf,UAGlBoK,GAAuBp4B,GAAS,GAEpCs2B,GAAkBt2B,EAAS6sC,GAAsB,GACjDxW,GAAgBr2B,EAASktC,GAE7B,OAAON,GAumEkBJ,CAAc9b,GAAkB9/B,EAAQmf,GAAeQ,GAAQA,EAAMd,IAAWc,EAAOyrB,EAAe,KAAM,KAAMjoB,GAClH,GAErBw5B,GADkBt2B,GAAe1G,GACP,GA6BlC,SAASi9B,GAAiB58C,EAAO68C,EAAYn/C,EAAOo/C,EAAQ35B,EAAW4iB,GACnE,IAAIgX,EAAa,KACH,OAAVr/C,IAIIq/C,EAHAD,EAGapkC,GAAgBhb,GAASo/C,EAOzBp/C,GA7zEzB,SAASs/C,EAAgB5tC,EAASw2B,EAAQC,EAAOhG,EAAckG,GAC3DJ,GAAyBv2B,EAASw2B,EAAQC,GAAO,EAAOhG,EAAckG,GA+zEtEiX,CAAgBld,GAAkB9/B,EAAQmf,GAAeyE,MAAai5B,EAAYE,EAAY55B,EAAW4iB,GAsB7G,SAASkX,GAAiBj9C,EAAOk9C,EAAYx/C,EAAOylB,EAAW4iB,GAC3D,IAAIF,EAASnoC,aAAiBshC,GAC1BthC,EAIR,SAASy/C,EAAcz/C,GACnB,MAAqB,kBAAVA,EACAA,IACJA,GAAe,KANlBy/C,CAAcz/C,IAh3EtB,SAAS0/C,EAAgBhuC,EAASw2B,EAAQC,EAAOhG,EAAckG,GAC3DJ,GAAyBv2B,EAASw2B,EAAQC,GAAO,EAAMhG,EAAckG,GAg3ErEqX,CAAgBtd,GAAkB9/B,EAAQmf,GAAeyE,MAAas5B,EAAYrX,EAAO1iB,EAAW4iB,GA+BxG,SAASsX,GAAkBr9C,EAAOs9C,EAASvhC,EAAQoH,GAC/C,IAAIxD,EAAQiE,KACR/D,EAAQE,GAAS/f,EAAO2f,GACxBshB,EAAiBnB,GAAkB9/B,EAAQmf,GAAeQ,GAI9D,IAAKwD,EAAW,CACZ,GAAIod,GAAc1gB,IAAUy9B,IAAYvmB,GAAW,CAC/C,IAAI4I,EAAiBkM,GAAyB5K,GAC1Csc,GAAiB5d,EAAe5jC,OAAU4jC,EAAiB,IAAO,IAxtGlF,SAAS6d,EAAqBF,GAI1B,OAHIA,GAA8B,iBAAZA,IAClBA,EAAUziD,OAAOkN,KAAKu1C,GAAS/6C,KAAK,MAEjC+6C,GAAW,GAotGkEE,CAAqBF,GACjGrH,GAAqBt2B,EAAOE,EAAM1F,OAAc,MAAGojC,GACnDD,EAAUvmB,GAEd,GAAIyJ,GAAc3gB,IAAU9D,IAAWgb,GAAW,CAC9C,IAAI2I,EAAgBmM,GAAyB5K,GACzCwc,GAAiB/d,EAAc3jC,OAAU2jC,EAAgB,IAAO,IAxtGhF,SAASge,EAAoB3hC,GACzB,IAAIxC,EAAM,GACV,GAAIwC,EAEA,IADA,IAAIvd,EAAQ3D,OAAOkN,KAAKgU,GACfngB,EAAI,EAAGA,EAAI4C,EAAMzC,OAAQH,IAAK,CACnC,IAAIqM,EAAOzJ,EAAM5C,GACjB2d,IAAQ3d,EAAI,IAAM,IAAOqM,EAAO,IAAM8T,EAAO9T,GAGrD,OAAOsR,EA+sG2EmkC,CAAoB3hC,GAC9Fk6B,GAAqBt2B,EAAOE,EAAM1F,OAAc,MAAGsjC,GACnD1hC,EAASgb,KA3sFrB,SAAS4mB,EAAiBvuC,EAASwuC,EAAcC,EAAahe,GAC1D,IAAIpe,EAAiBukB,GAA8B52B,EAASywB,GAAgB,MAC5E+d,EAAeA,GAAgB,KAC/BC,EAAcA,GAAe,KAC7B,IAAIC,EAAwB9R,GAAqB58B,GAAS,EAAMqS,EAAgBm8B,GAC5EG,EAAwB/R,GAAqB58B,GAAS,EAAOqS,EAAgBo8B,GAEjF,IAAIC,IAAyBC,EAA7B,CAEAH,EACIA,IAAiB7mB,GAAYgV,GAAmB38B,GAAS,EAAMqS,GAAkBm8B,EACrFC,EACIA,IAAgB9mB,GAAYgV,GAAmB38B,GAAS,EAAOqS,GAAkBo8B,EACrF,IAAI9kC,EAAU3J,EAAQ,GAClB4uC,EAAuBJ,aAAwB5e,GAC/C,IAAIyH,GAA2BmX,EAAc7kC,EAAS,GACtD,KACAklC,EAAsBJ,aAAuB7e,GAC7C,IAAIyH,GAA2BoX,EAAa9kC,EAAS,GACrD,KACAmlC,EAAeF,EACfJ,EAAalgD,MACbkgD,EACAO,EAAcF,EAAsBJ,EAAYngD,MAAQmgD,EACxDO,EAAa3lC,GACb4lC,GAAkB,EAClBzX,GAAyB,EACzB0X,EAA4BN,EAAuB,EAAwC,EAC3FnX,GAAwBz3B,EAAS4uC,EAAsB,KACvDjX,GAAiB33B,EAAS4uC,EAAsB,GAChDpX,GAAyB,GAE7B,IAAI2X,EAA2BN,EAAsB,EAAwC,EACzFpX,GAAwBz3B,EAAS6uC,EAAqB,KACtDlX,GAAiB33B,EAAS6uC,EAAqB,GAC/CrX,GAAyB,GAIxBkX,IAC0B,iBAAhBI,GACPE,EAAaF,EAAahvB,MAAM,OAGhCmvB,GAAkB,GAGlBD,EAAaF,EAAerjD,OAAOkN,KAAKm2C,GAAgBzlC,IAGhE,IAAIihC,EAAwB1Q,GAAyB55B,GACjDuqC,EAAyB5Q,GAA0B35B,GACnDovC,EAAuBpvC,EAAQrT,OACnC,IAAKgiD,EAAuB,CACxB,IAEIxD,EAAkBtY,GAA2B7yB,EAASqS,EAAgB88B,EAA0B7E,EAAuBC,EAF1GwE,EAActjD,OAAOkN,KAAKo2C,GAAe1lC,GAC7C0lC,GAAe3lC,GAC2IqlC,GAAa,GAChLtD,IACAZ,GAA4C,EAAlBY,EAC1BiE,GAA0C,EAAlBjE,GAG3BuD,GAED7b,GAA2B7yB,EAASqS,EAAgB68B,EAA2B3E,EAAwB6E,EAAsBJ,EAAYC,GAD1HH,GAAgB1lC,GACsIolC,GAAc,GAEnLhX,GACAY,GAAuBp4B,GAAS,IA2oFpCuuC,CAAiB1c,EAAgBqc,EAASvhC,EAAQoH,GAWtD,SAASnU,GAAKhP,EAAOtC,GACjB,IAAIiiB,EAAQiE,KAGR66B,EAAajjB,GAAe99B,EAAOiiB,EAAMd,KACzCgB,EAAQ+vB,GAAkB5vC,EAAO,EAAiBy+C,EAAY,KAAM,MAExEr6B,IAAY,GACZsI,GAAY+xB,EAAY5+B,EAAOF,GASnC,SAAS++B,GAAY1+C,EAAOtC,GACxB,GAAIA,IAAUq5B,GAAW,CACrB,IAAIpX,EAAQiE,KAER+6B,EAAYj/B,GAAiB1f,EAAO2f,GAGpC+Z,EAAW/Z,EAAMd,IACrB4a,GAAqBC,GAAYA,EAASoK,SAAS6a,EAAWjmC,GAAgBhb,IAC1EihD,EAAUC,YAAclmC,GAAgBhb,IAyFpD,SAASg2C,GAAiCjuC,EAAKguC,EAAStwB,EAAWtD,EAAOkC,GACtE,IAAI88B,EAAwBpL,EAAQ13C,OACpC0nB,GAAuBhe,GACvBA,EAAIwU,aAAa,EAAgBkJ,EAAWtD,EAAM7f,MAAQmf,IAC1DsE,GAAuB,MAKnBo7B,IAA0BpL,EAAQ13C,QAAUgmB,GAC5C0xB,EAAQ11C,KAAK0H,EAAIwU,cASzB,SAAS24B,GAAgCjxB,EAAO9B,EAAOi/B,GAEnD,IAAIC,IAAiBl/B,EAAM7f,MAAQmf,IAE/B8vB,EAAgBttB,EAAMjL,KAAK3a,QADkB,MAAxB8jB,EAAMiK,kBAE9BnI,EAAMktB,sBAAwBltB,EAAMktB,yBAA2B9wC,KAAKghD,EAAc9P,EAAe6P,GAmBtG,SAASvL,GAAqBxT,EAAU5c,EAAW1d,EAAK+pC,GACpD,IAAIlsB,EAAwBU,KAC5Bg7B,GAAyBjf,EAAUzc,EAAuBH,GAEtDG,GAAyBA,EAAsB+E,OA0JvD,SAAS42B,EAAmBx9B,EAAgByH,EAAUzjB,EAAKoa,GACvD,IAAIq/B,EAAmBr/B,EAAMg4B,oBACJp2C,IAArBy9C,GAAkCz9B,GAAkBy9B,EAAiBnjD,UACrEmjD,EAiCR,SAASC,EAAsB19B,EAAgBtH,EAAQ0F,GACnD,IAAIq/B,EAAmBr/B,EAAMg4B,gBAAkBh4B,EAAMg4B,kBACrDqH,EAAiBz9B,GAAkB,KAGnC,IAFA,IAAI4G,EAAQxI,EAAMwI,MACdzsB,EAAI,EACDA,EAAIysB,EAAMtsB,QAAQ,CACrB,IAAIusB,EAAWD,EAAMzsB,GAErB,GAAiB,IAAb0sB,GAAgD,IAAbA,GACtB,IAAbA,EACA,MACJ,GAAiB,IAAbA,EAAJ,CAKA,IAAI82B,EAAoBjlC,EAAOmO,GAC3B+2B,EAAYh3B,EAAMzsB,EAAI,QACA6F,IAAtB29C,IACoBF,EAAiBz9B,KAAoBy9B,EAAiBz9B,QAC5D1jB,KAAKuqB,EAAU82B,EAAmBC,GAEpDzjD,GAAK,OATDA,GAAK,EAWb,OAAOsjD,EAzDgBC,CAAsB19B,EAAgBhc,EAAI0U,OAAQ0F,IAEzE,IAAIg4B,EAAgBqH,EAAiBz9B,GACrC,GAAIo2B,EAEA,IADA,IAAI57B,EAAWxW,EAAIwW,SACVrgB,EAAI,EAAGA,EAAIi8C,EAAc97C,QAAS,CACvC,IAAIwhB,EAAas6B,EAAcj8C,KAC3Bm8C,EAAcF,EAAcj8C,KAC5B8B,EAAQm6C,EAAcj8C,KACtBqgB,EACAxW,EAAIwW,SAASiN,EAAUxrB,EAAO6f,EAAYw6B,GAG1C7uB,EAAS6uB,GAAer6C,GAzKhCuhD,CAAmBzP,EAAiBrsB,EAAW1d,EAAK6d,GAEpDyc,EAAS9hB,IAAO8D,mBAAqBtc,EAAIyU,iBACzCoJ,EAAsB7e,OAAS,GAE/B8b,GAAe9a,KACK0a,GAAwBmD,EAAsBtjB,MAAO+/B,GAC3DrhB,IAAWyE,GAMjC,SAAS67B,GAAyBr/B,EAAO2D,EAAuBH,GAC5D,IAAIsV,EAAS7Y,GAAiB0D,EAAuB3D,GAGrDgZ,GAAgBxV,EAAWxD,GACvB8Y,GACAE,GAAgBF,EAAQ9Y,GAiChC,SAAS2/B,GAA4Bh8B,GACjC,IAAI3B,EAAQiC,KAAW3F,KAGtB0D,EAAMwX,aAAexX,EAAMwX,gBAAkBp7B,KAAKulB,EAAsBtjB,OA0C7E,SAAS8yC,GAAoB9yC,EAAOyF,EAAKgtC,GACrC,GAAIA,EAAY,CACZ,GAAIhtC,EAAI4U,SACJ,IAAK,IAAIze,EAAI,EAAGA,EAAI6J,EAAI4U,SAASte,OAAQH,IACrC62C,EAAWhtC,EAAI4U,SAASze,IAAMoE,EAGlCyF,EAAIyS,WACJu6B,EAAW,IAAMzyC,IAQ7B,SAAS2yC,GAAc9yB,EAAO7f,EAAOu/C,GAKjC1/B,EAAMpb,MAAgB,EAJVob,EAAMpb,MAKlBob,EAAMmC,eAAiBhiB,EACvB6f,EAAMqC,aAAeliB,EAAQu/C,EAC7B1/B,EAAMiK,gBAAkB9pB,EAE5B,SAAS6yC,GAAqBlxB,EAAOoe,EAAUt6B,EAAK+5C,GAChD79B,EAAMjL,KAAK3Y,KAAK0H,GAChB,IAAIg6C,EAAsB,IAAI5+B,GAAoB2+B,EAAkBj/B,GAAe9a,GAAM,MACzFkc,EAAMyF,UAAUrpB,KAAK0hD,GACrB1f,EAAShiC,KAAK0hD,GAElB,SAASnM,GAAkB3zB,EAAO2D,EAAuB7d,GACrD,IAAIgzB,EAAS7Y,GAAiB0D,EAAuB3D,GAKjDqb,EAAgB0kB,GAAc//B,EAAO8vB,GAAY9vB,EAJzCk0B,GAAiBpuC,EAAIyS,SAAUzS,EAAIqU,OAAQrU,EAAIsU,KAAMtU,EAAI+V,cAAe/V,EAAIgW,SAAUhW,EAAIkW,UAAWlW,EAAIyW,SAIlD,KAAMzW,EAAI4V,OAAS,GAAiB,GAAsBsE,EAAM2D,EAAsBtjB,OAAQsjB,EAD3I3D,EAAMf,IAC6Ke,EAAMf,IAAkBgb,eAAenB,EAAQhzB,KACxPu1B,EAAczc,IAAU+E,EAGxB3D,EAAM2D,EAAsBtjB,OAASg7B,EACjCrb,EAAM1B,IAAO8D,mBACbu9B,GAA4Bh8B,GAsFpC,SAASq8B,GAAiBC,EAAYn9B,EAAagW,EAAQonB,GAGvD,OACIA,GAAyB,EAAI,KAE7Bp9B,EACA,KACA,KACAm9B,EACAnnB,GAoBR,SAASvgB,GAASlY,EAAOwwC,EAAY12B,EAAQC,EAAM4X,EAAStJ,EAAOyQ,EAAWwZ,GAC1E,IAAI3yB,EAAQiE,KACRjC,EAAQhC,EAAM1B,IAEd6hC,EAAiBC,GAAkB//C,EAAO2xB,GAAW,KAAMtJ,GAAS,MACpE1G,EAAMI,oBACN+9B,EAAehI,OAAS/D,IAAa,EAAGvD,EAAY12B,EAAQC,EAAM4H,EAAMwxB,kBAAmBxxB,EAAM0yB,aAAc,KAAM,OAEzHlD,GAA0BxvB,EAAOhC,EAAOmZ,EAAWwZ,GACnD0N,GAAuBrgC,EAAOmgC,GAC9BnnB,GAAgB/Y,GAAiBkgC,EAAgBngC,GAAQA,GACzDmC,GAAuBH,EAAOm+B,GAC9B17B,IAAY,GAWhB,SAAS6V,GAAUj6B,GACf,IAAI6f,EAAQkgC,GAAkB//C,EAAO,KAAM,MACvC2f,EAAQiE,KACRjE,EAAM1B,IAAO8D,oBACblC,EAAMi4B,WAEVkI,GAAuBrgC,EAAOE,GAC9BuE,IAAY,GAEhB,SAAS27B,GAAkB//C,EAAO2xB,EAAStJ,GACvC,IAAI1I,EAAQiE,KAERykB,EAAgBroC,EAAQmf,GACxB8gC,EAAUtgC,EAAMd,IAAUqyB,cAAwC,IAElErxB,EAAQ+vB,GAAkB5vC,EAAO,EAAmBigD,EAAStuB,EAAStJ,GACtE0S,EAAapb,EAAM0oB,GAAiBsX,GAAiBhgC,EAAM0oB,GAAgB1oB,EAAOsgC,GAMtF,OALAvzB,GAAYuzB,EAASpgC,EAAOF,GAG5B+/B,GAAc//B,EAAOob,GAEdlb,EAWX,SAASmgC,GAAuBrgC,EAAOmgC,GACnC,IAAII,EAAUvgC,EAAMtB,IAChB6hC,IACAA,EAAQ7O,QAAQyO,GACCngC,EAAMmgC,EAAe9/C,OAC3Bqe,IAAW6hC,EAAQjmB,aAQtC,SAASkmB,GAAsBngD,GAC3B,IAAI2f,EAAQiE,KACRjC,EAAQhC,EAAM1B,IAElBgG,GAD4B/D,GAAayB,EAAMjL,KAAM1W,IAGrDokB,IAAY,GACZzE,EAAM3f,EAAQmf,IAAeC,IAAgB,EAG7CoD,GAAiB7C,EAAOgC,EAAO2C,MAOnC,SAAS87B,KACL,IAAI98B,EAAwBU,KACxBG,KACAC,IAAY,GAMZH,GADAX,EAAwBA,EAAsB9W,QAOlD,IAHA,IAAIuuB,EAAanX,KAAWN,EAAsBtjB,OAC9CqgD,EAAYtlB,EAAW3b,IAEpBihC,EAAYtlB,EAAW1b,IAAOtjB,QACjCmgC,GAAWnB,EAAYslB,GA0D/B,SAASC,GAAkBC,EAAazmC,EAAQC,GAC5C,IAAI4F,EAAQiE,KACRN,EAAwBU,KAExBw8B,EAAgD,IAA/Bl9B,EAAsBvhB,KACvCuhB,EAAsB9W,OACtB8W,EACAyX,EAAapb,EAAM6gC,EAAexgD,OAElCgwC,EAnCR,SAASyQ,EAAY1lB,EAAY2lB,EAAUH,GAEvC,IADA,IAAI1kB,EAAQd,EAAW1b,IACdzjB,EAAI8kD,EAAU9kD,EAAIigC,EAAM9/B,OAAQH,IAAK,CAC1C,IAAI+kD,EAAmB9kB,EAAMjgC,GAAGqiB,IAAOpN,GACvC,GAAI8vC,IAAqBJ,EACrB,OAAO1kB,EAAMjgC,GAEZ,KAAI+kD,EAAmBJ,GAQxB,MANArkB,GAAWnB,EAAYn/B,GAS/B,OAAO,KAiBY6kD,CAAY1lB,EAAYA,EAAW3b,IAAemhC,GACrE,GAAIvQ,EACA5rB,IAAY,GACZW,GAAUirB,EAAcA,EAAa/xB,IAAOgU,UAE3C,CAED+d,EAAeP,GAAY9vB,EAgCnC,SAASihC,EAAyB5M,EAAWl6B,EAAQC,EAAMvN,GACvD,IAAImV,EAAQiC,KAAW3F,IAEnB4iC,EAAkBr0C,EAAOsrC,OAM7B,OAHI9D,GAAa6M,EAAgB9kD,QAAwC,MAA9B8kD,EAAgB7M,MACvD6M,EAAgB7M,GAAaD,GAAYC,EAAW,KAAMl6B,EAAQC,EAAM4H,EAAMwxB,kBAAmBxxB,EAAM0yB,aAAc,KAAM,OAExHwM,EAAgB7M,GAzCe4M,CAAyBL,EAAazmC,EAAQC,EAAMymC,GAAiB,KAAM,GAAsB,KAAM,MACrIzlB,EAAW1c,MACX2xB,EAAa3xB,IAAW0c,EAAW1c,IAASyiC,cAEhD,IAAI/Q,EAAc5rB,KAAgBb,EAC9BA,GAAyBA,EAAsB9W,OACnDsjC,GAAuBE,EAAa/xB,IAAQ8xB,EAAawQ,EAAavQ,GACtEjrB,GAAUirB,EAAcA,EAAa/xB,IAAOgU,MAShD,OAPI8I,IACI1W,GAAe2rB,IAEfpU,GAAWoU,EAAcjV,EAAYA,EAAW3b,KAEpD2b,EAAW3b,OAERiF,GAAe2rB,GAAgB,EAClC,EA2BR,SAAS+Q,KACL,IAAIphC,EAAQiE,KACRo9B,EAAWrhC,EAAMpB,IACjB8F,GAAe1E,KACf0uB,GAAuB1uB,GACvBA,EAAMzB,MAAU,GAEpBmwB,GAAuB1uB,GAGvB6F,GAFiB7F,EAAMxB,IAEFA,KACrB8F,GAAyB+8B,GACzB58B,IAAY,GA4EhB,SAAS68B,GAAcvlC,EAAWkyB,GAC9B,IAAIsT,EAAgB/6B,GAAkBvC,MAAYrF,IAClD,IAAK2iC,EAAchmB,WAMf,IALA,IACIimB,EAAQD,EAAchmB,WACtB,IAAIlgC,MAFc0gB,EAAYA,EAAU3f,OAAS,EAAI,GAE1BqL,KAAK,MAChCg6C,EAAQD,EAAMp0C,QACds0C,EAAiBH,EAAcjoB,MACT,OAAnBooB,GAAyB,CAC5B,IAAIC,EAAc5lC,EAAYiyB,GAAsB0T,EAAgB3lC,EAAWkyB,GAAiB,EAC5F1b,EAAWmvB,EAAe5jD,KAC1B2jD,EAAME,GACNF,EAAME,GAAa7jD,KAAO4jD,EAG1BF,EAAMG,GAAeD,EAEzBA,EAAe5jD,KAAO,KACtB2jD,EAAME,GAAeD,EACrBA,EAAiBnvB,GAW7B,IAAIqvB,MAUJ,SAASrmB,GAAW9a,EAAWohC,EAAen5B,QACpB,IAAlBm5B,IAA4BA,EAAgB,GAChD,IAAI7hC,EAAQiE,KACRib,EAAkB+Q,GAAkBxvB,EAAW,EAAoB,KAAM,KAAMiI,GAAS,MAEzD,OAA/BwW,EAAgB3D,aAChB2D,EAAgB3D,WAAasmB,GAEjCp9B,IAAY,GAEZ,IAAI4W,EAAgB7U,GAAkBxG,GAElC8hC,EADgBzmB,EAAczc,IACA2c,WAAWsmB,GACzCE,EAAgB1mB,EAAc7c,IAE9Bwc,GAAuB,EAC3B,GAAI3/B,MAAMmK,QAAQs8C,GACd/0B,GAAY+0B,EAAe5iB,EAAiBlf,QAG5C,KAAO8hC,GAAe,CAClB,GAA2B,IAAvBA,EAAc1/C,KAA6B,CAE3C,IAAI4/C,EAAuBx7B,GAAkBu7B,GAEzCE,EADuBD,EAAqBpjC,IACF2c,WAAWumB,EAAcvmB,YACvE,GAAI0mB,EAAoB,CACpB,IAAI5mD,MAAMmK,QAAQy8C,GAGb,CACDL,KAAwB5mB,GAAuB8mB,EAC/CF,KAAwB5mB,GAAuB+mB,EAC/CD,EAAgBG,EAChBF,EAAgBx7B,GAAey7B,GAC/B,SAPAj1B,GAAYk1B,EAAoB/iB,EAAiBlf,SAczD8hC,EAAch9C,OAAS,EACvBk6B,GAAoB8iB,EAAe5iB,EAAiBlf,EAAO+hC,GAIpC,OAAvBD,EAAchkD,MAAiBikD,IAAkB1mB,EAAc7c,MAC/DujC,EAAgBH,GAAsB5mB,KACtC8mB,EAAgBF,GAAsB5mB,MAE1C8mB,EAAgBA,EAAchkD,MAe1C,SAASiiD,GAAc//B,EAAO2c,GAY1B,OAPI3c,EAAMZ,IACNY,EAAMX,IAAYZ,IAAQke,EAG1B3c,EAAMZ,IAAcud,EAExB3c,EAAMX,IAAcsd,EACbA,EAuBX,SAASoZ,GAAa71B,EAAOF,EAAOs1B,EAAY4M,GAG5C,OAAO,SAASC,EAA0CjkD,GAGtD,IAAIkoB,EAA0B,EAAdlG,EAAMpb,MAA8B0b,GAAwBN,EAAM7f,MAAO2f,GAASA,EAEnD,IAA3B,GAAfA,EAAMzB,MACP6jC,GAAch8B,GAElB,IACI,IAAIvf,EAASyuC,EAAWp3C,GAMxB,OALIgkD,IAAqC,IAAXr7C,IAC1B3I,EAAEmkD,iBAEFnkD,EAAEokD,aAAc,GAEbz7C,EAEX,MAAOxI,GACHqtB,GAAY1L,EAAO3hB,KAe/B,SAAS+jD,GAAcpiC,GACnB,KAAOA,GAAO,CACVA,EAAMzB,KAAU,GAChB,IAAIgkC,EAAWh8B,GAAevG,GAE9B,GAAIc,GAAWd,KAAWuiC,EACtB,OAAOviC,EAGXA,EAAQuiC,EAEZ,OAAO,KAaX,SAASvF,GAAahc,EAAal8B,GAC/B,IAGQ09C,EAHJC,EAAyC,IAAtBzhB,EAAYl8B,MACnCk8B,EAAYl8B,OAASA,EACjB29C,GAAoBzhB,EAAY0hB,OAASlU,KAEzCxN,EAAY0hB,MAAQ,IAAIjU,QAAQ,SAAU5xC,GAAK,OAAO2lD,EAAQ3lD,IAC9DmkC,EAAY2hB,UAAU,WAKlB,GAJwB,EAApB3hB,EAAYl8B,QACZk8B,EAAYl8B,QAAS,EACrB0rC,GAAgBxP,IAEI,EAApBA,EAAYl8B,MAA8B,CAC1Ck8B,EAAYl8B,QAAS,EACrB,IAAIs8B,EAAgBJ,EAAYI,cAC5BA,GACAA,EAAc5B,eAGtBwB,EAAY0hB,MAAQlU,GACpBgU,EAAM,SAIlB,SAAShS,GAAgBxP,GACrB,IAAK,IAAI/kC,EAAI,EAAGA,EAAI+kC,EAAYxH,WAAWp9B,OAAQH,IAAK,CACpD,IAAI2mD,EAAgB5hB,EAAYxH,WAAWv9B,GAC3C20C,GAA0B5vB,GAAiB4hC,GAAgBA,IAoBnE,SAASC,GAAsBxiC,EAAM5Q,GACjC,IAAIugC,EAAkB3vB,EAAKpB,IACvB+wB,EAAgBgB,OAChBhB,EAAgBgB,QACpB,IACQtsB,GAAerE,IACfuvB,GAAUvvB,EAAM5Q,GAEpBmgC,GAAUvvB,EAAM5Q,GAEpB,MAAOpR,GAEH,MADAqtB,GAAYrL,EAAMhiB,GACZA,EAEV,QACQ2xC,EAAgB1tB,KAChB0tB,EAAgB1tB,OAQ5B,SAASwgC,GAAwB9iC,GAC7BwwB,GAAgBxwB,EAAMjB,KA8B1B,SAAS6wB,GAAUzvB,EAAU9H,GACzB,IAAI0qC,EAAY5iC,EAAS7B,IACrBiH,EAAUH,GAAUjF,EAAUA,EAASvB,KACvCiyB,EAAakS,EAAUxqC,SACvBo2B,EAAejqB,GAAevE,GAClC,IACIswB,KACA9B,GAAgBqU,GAAmB,EAAgBD,EAAW1qC,GAC9Dw4B,EAAWH,GAAevwB,GAAW9H,GACrCq2B,GAAuBvuB,GAElBwuB,IAAgBoU,EAAUtO,mBAC3BuO,GAAmB,EAAgBD,EAAW1qC,GAGtD,QACIwN,GAAUN,IAGlB,SAASy9B,GAAmBl+C,EAAOkd,EAAO3J,GACtC,IAAI2D,EAAYgG,EAAMhG,UAClBA,IACAmJ,GAAqBnD,EAAMwyB,qBAC3Bx4B,EAAUlX,EAAOuT,IAmBzB,SAAS4qC,GAAU5qC,GAIf2kC,GAFeoF,GAAchpB,GAA2B/gB,IAElC0G,IAAU,GAUpC,SAASvf,GAAKzB,GACV,IAAIiiB,EAAQiE,KACRqT,EAAetX,EAAMnB,MAEzB,OADAqkC,GAAqBljC,GACdwX,GAAexX,EAAOsX,EAAcv5B,GAASA,EAAQq5B,GAOhE,SAAS+rB,GAAc7W,GACnB,IAAItsB,EAAQiE,KACRjC,EAAQhC,EAAM1B,IACb0D,EAAMI,oBA52Bf,SAASghC,EAAyBphC,EAAOlc,EAAKu9C,GAG1C,IAAIvP,EAAU9xB,EAAMktB,oBAChB9yC,EAAS03C,EAAQ13C,OAMjBA,GAAU,GAAK03C,EAAQ13C,EAAS,KAAO0J,EAAIwU,aAC3Cw5B,EAAQ13C,EAAS,GAAK03C,EAAQ13C,EAAS,GAAKinD,EAG5CvP,EAAQ11C,KAAK0H,EAAIwU,aAAc+oC,GAg2BnCD,CAAyBphC,EAnlP7B,SAASshC,IAEL,OAAOz/B,GAilPyBy/B,GAA0BhX,GA77B9D,SAASiX,EAAgBvhC,EAAOhC,EAAOwjC,GAGnC,IAAK,IAAIvnD,EAAI,EAAGA,EAAIunD,EAAevnD,IAC/B+jB,EAAM5hB,KAAKg5B,IACXpV,EAAMyF,UAAUrpB,KAAKg5B,IACrBpV,EAAMjL,KAAK3Y,KAAK,MAw7BpBmlD,CAAgBvhC,EAAOhC,EAAOssB,IAclC,SAASmX,GAAe3jD,GAGpB,IAAI+3B,GAAY,EACZ7X,EAAQiE,KACRsE,EAAQvI,EAAM1B,IAAOvH,KACrBugB,EAAetX,EAAMnB,IACzB,GAA2B,MAAvB0J,EAAM+O,GAAuB,CAE7B,IAAK,IAAIr7B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EACpCssB,EAAM+O,KAAkBx3B,EAAO7D,GAEnCq7B,EAAetX,EAAMnB,IAEzB,IAAS5iB,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EAEpCu7B,GAAexX,EAAOsX,IAAgBx3B,EAAO7D,MAAQ47B,GAAY,GAIrE,GAFA7X,EAAMnB,IAAiByY,EACvB4rB,GAAqBljC,EAAOlgB,EAAO,GAAIA,EAAOA,EAAO1D,OAAS,KACzDy7B,EACD,OAAOT,GAGX,IAAI7D,EAAUzzB,EAAO,GACrB,IAAS7D,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EACpCs3B,GAAWxa,GAAgBjZ,EAAO7D,IAAM6D,EAAO7D,EAAI,GAEvD,OAAOs3B,EASX,SAASmwB,GAAeC,EAAQC,EAAIzG,GAChC,IAAIn9B,EAAQiE,KACR4T,EAAYL,GAAexX,EAAOA,EAAMnB,MAAkB+kC,GAE9D,OADAV,GAAqBljC,EAAO2jC,EAAQxG,GAC7BtlB,EAAY8rB,EAAS5qC,GAAgB6qC,GAAMzG,EAAS/lB,GAG/D,SAASysB,GAAeF,EAAQC,EAAIE,EAAIC,EAAI5G,GACxC,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYH,GAAgB1X,EAAOsX,EAAcssB,EAAIG,GAOzD,OANA/jC,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,KAE3Cn9B,EAAM1B,IAAOvH,KAAKugB,GAAgBwsB,GAE/BjsB,EAAY8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAM5G,EAAS/lB,GAG1F,SAAS4sB,GAAeL,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI/G,GAChD,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYC,GAAgB9X,EAAOsX,EAAcssB,EAAIG,EAAIG,GAI7D,GAHAlkC,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,GACrC,CACN,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACzBwR,EAAM+O,GAAgBwsB,EACtBv7B,EAAM+O,EAAe,GAAK2sB,EAE9B,OAAOpsB,EACH8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAME,EAAKlrC,GAAgBmrC,GAAM/G,EACrF/lB,GAGR,SAAS+sB,GAAeR,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlH,GACxD,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYG,GAAgBhY,EAAOsX,EAAcssB,EAAIG,EAAIG,EAAIG,GAIjE,GAHArkC,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,GACrC,CACN,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACzBwR,EAAM+O,GAAgBwsB,EACtBv7B,EAAM+O,EAAe,GAAK2sB,EAC1B17B,EAAM+O,EAAe,GAAK8sB,EAE9B,OAAOvsB,EACH8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAME,EAAKlrC,GAAgBmrC,GAAME,EACjFrrC,GAAgBsrC,GAAMlH,EAC1B/lB,GAGR,SAASktB,GAAeX,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrH,GAChE,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYG,GAAgBhY,EAAOsX,EAAcssB,EAAIG,EAAIG,EAAIG,GAKjE,GAJAxsB,EAAYL,GAAexX,EAAOsX,EAAe,EAAGktB,IAAO3sB,EAC3D7X,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,GACrC,CACN,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACzBwR,EAAM+O,GAAgBwsB,EACtBv7B,EAAM+O,EAAe,GAAK2sB,EAC1B17B,EAAM+O,EAAe,GAAK8sB,EAC1B77B,EAAM+O,EAAe,GAAKitB,EAE9B,OAAO1sB,EACH8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAME,EAAKlrC,GAAgBmrC,GAAME,EACjFrrC,GAAgBsrC,GAAME,EAAKxrC,GAAgByrC,GAAMrH,EACrD/lB,GAGR,SAASqtB,GAAed,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIxH,GACxE,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYG,GAAgBhY,EAAOsX,EAAcssB,EAAIG,EAAIG,EAAIG,GAKjE,GAJAxsB,EAAYH,GAAgB1X,EAAOsX,EAAe,EAAGktB,EAAIG,IAAO9sB,EAChE7X,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,GACrC,CACN,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACzBwR,EAAM+O,GAAgBwsB,EACtBv7B,EAAM+O,EAAe,GAAK2sB,EAC1B17B,EAAM+O,EAAe,GAAK8sB,EAC1B77B,EAAM+O,EAAe,GAAKitB,EAC1Bh8B,EAAM+O,EAAe,GAAKotB,EAE9B,OAAO7sB,EACH8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAME,EAAKlrC,GAAgBmrC,GAAME,EACjFrrC,GAAgBsrC,GAAME,EAAKxrC,GAAgByrC,GAAME,EAAK3rC,GAAgB4rC,GAAMxH,EAChF/lB,GAGR,SAASwtB,GAAejB,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI3H,GAChF,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYG,GAAgBhY,EAAOsX,EAAcssB,EAAIG,EAAIG,EAAIG,GAKjE,GAJAxsB,EAAYC,GAAgB9X,EAAOsX,EAAe,EAAGktB,EAAIG,EAAIG,IAAOjtB,EACpE7X,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,GACrC,CACN,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACzBwR,EAAM+O,GAAgBwsB,EACtBv7B,EAAM+O,EAAe,GAAK2sB,EAC1B17B,EAAM+O,EAAe,GAAK8sB,EAC1B77B,EAAM+O,EAAe,GAAKitB,EAC1Bh8B,EAAM+O,EAAe,GAAKotB,EAC1Bn8B,EAAM+O,EAAe,GAAKutB,EAE9B,OAAOhtB,EACH8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAME,EAAKlrC,GAAgBmrC,GAAME,EACjFrrC,GAAgBsrC,GAAME,EAAKxrC,GAAgByrC,GAAME,EAAK3rC,GAAgB4rC,GAAME,EAC5E9rC,GAAgB+rC,GAAM3H,EAC1B/lB,GAGR,SAAS2tB,GAAepB,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI9H,GACxF,IAAIn9B,EAAQiE,KACRqT,EAAetX,EAAMnB,IACrBgZ,EAAYG,GAAgBhY,EAAOsX,EAAcssB,EAAIG,EAAIG,EAAIG,GAKjE,GAJAxsB,EAAYG,GAAgBhY,EAAOsX,EAAe,EAAGktB,EAAIG,EAAIG,EAAIG,IAAOptB,EACxE7X,EAAMnB,KAAkB,EAEbqkC,GAAqBljC,EAAO2jC,EAAQxG,GACrC,CACN,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACzBwR,EAAM+O,GAAgBwsB,EACtBv7B,EAAM+O,EAAe,GAAK2sB,EAC1B17B,EAAM+O,EAAe,GAAK8sB,EAC1B77B,EAAM+O,EAAe,GAAKitB,EAC1Bh8B,EAAM+O,EAAe,GAAKotB,EAC1Bn8B,EAAM+O,EAAe,GAAKutB,EAC1Bt8B,EAAM+O,EAAe,GAAK0tB,EAE9B,OAAOntB,EACH8rB,EAAS5qC,GAAgB6qC,GAAME,EAAK/qC,GAAgBgrC,GAAME,EAAKlrC,GAAgBmrC,GAAME,EACjFrrC,GAAgBsrC,GAAME,EAAKxrC,GAAgByrC,GAAME,EAAK3rC,GAAgB4rC,GAAME,EAC5E9rC,GAAgB+rC,GAAME,EAAKjsC,GAAgBksC,GAAM9H,EACrD/lB,GAkBR,SAAS8rB,GAAqBljC,EAAO2jC,EAAQxG,QAC1B,IAAXwG,IAAqBA,EAAS,SACnB,IAAXxG,IAAqBA,EAAS,IAClC,IAAI50B,EAAQvI,EAAM1B,IAAOvH,KACrB8gC,EAAmB73B,EAAMnB,IAAiB,EAE9C,OAAkC,MAA3B0J,EAAMsvB,GAA6BtvB,EAAMsvB,GADpCn+B,GAA0BiqC,EAASjqC,GAA0ByjC,EACI,KAGjF,SAASrV,GAAMznC,EAAOtC,GAClB,IAAIiiB,EAAQiE,KACRjC,EAAQhC,EAAM1B,IAGdoqB,EAAgBroC,EAAQmf,GACxBkpB,GAAiB1mB,EAAMjL,KAAK3a,SAC5B4lB,EAAMjL,KAAK2xB,GAAiB,KAC5B1mB,EAAMyF,UAAUihB,GAAiB,MAErC1oB,EAAM0oB,GAAiB3qC,EAU3B,SAASmnD,GAAU7kD,GAEf,OAAOkgB,GAtsPX,SAAS4kC,IAEL,OAAO/gC,GAmsPY+gC,GACe9kD,GAGtC,SAAS+kD,GAAK/kD,GACV,OAAOkgB,GAAa0D,KAAY5jB,GAEpC,SAASglD,GAAgBtkD,EAAO+D,GAG5B,YAFc,IAAVA,IAAoBA,EAAQ1K,EAAQyG,YAAYkE,SACpDhE,EAAQuC,EAAkBvC,GACnB6nB,GAAsBvE,KAA4BJ,KAAYljB,EAAO+D,GAKhF,SAASwgD,GAAgB78B,GACrB,OAAOD,GAAoBnE,KAA4BoE,GAE3D,IAAI88B,GAAgB/W,GACpB,SAAS6D,GAAsBnyB,GAG3B,OAAIA,QACqBpe,IAAjBoe,EAAM1F,SAEN0F,EAAM1F,OAASy7B,GAAwB/1B,EAAO,IAE3CA,EAAM1F,QAEV,KASX,SAASgrC,KACL,OAAOvhC,KAEX,SAAS6xB,GAAWz1B,GAEhB,OAAOA,EAAKvB,MAAauB,EAAKvB,QAElC,SAAS2mC,GAAgBplC,GACrB,OAAOA,EAAK/B,IAAO4e,UAAY7c,EAAK/B,IAAO4e,YAM/C,SAASyY,GAAsBz1B,EAAOF,GAElC,OADqBA,EAAME,EAAM7f,OACX6e,IAG1B,SAASwM,GAAY1L,EAAO3hB,GACxB,IAAImG,EAAWwb,EAAMhB,IACjB0mC,EAAelhD,EAAWA,EAASS,IAAIumB,GAAc,MAAQ,KACjEk6B,GAAgBA,EAAah6B,YAAYrtB;;;;;;;OA8C7C,SAASsnD,GAAWzkB,GAChB,IAAIzxB,EAAUyoB,GAAYgJ,GAC1B,IAAKzxB,EAED,SAEJ,IAAI6xB,EAAiBnB,GAAkB1wB,EAAQgR,UAAWhR,EAAQuQ,OAC9D+gB,EAAgBO,EAAiBD,GAAiBC,GAAkB,KACxE,OAAOP,EAnnJX,SAAS6kB,EAAmB7kB,GAIxB,IAHA,IAAI8kB,KACAC,EAAyB/kB,EAAc,GAElC9kC,EAAI,EAAoEA,EAAI6pD,EAAwB7pD,GAAK,EAA0C,CACxJ,IAAIwjC,EAASsB,EAAc9kC,GACvBwjC,GACAomB,EAAQznD,KAAKqhC,GAIrB,IAASxjC,EAAI6pD,EAAwB7pD,EAAI8kC,EAAc3kC,OAAQH,IAC3D4pD,EAAQznD,KAAK2iC,EAAc9kC,IAE/B,OAAO4pD,EAqmJgBD,CAAmB7kB;;;;;;;OA8B9C,SAASglB,GAAa3sC,GAClB,IAAI3J,EAAUu2C,GAAqB5sC,GAInC,YAH0BtX,IAAtB2N,EAAQ4I,YACR5I,EAAQ4I,UAvkLhB,SAAS4tC,EAAwBxlC,EAAWT,GACxC,IAAIE,EAAQF,EAAM1B,IAAOvH,KAAK0J,GAE9B,OAAqB,EAAdP,EAAMpb,MAA8Bkb,EADjBE,EAAMmC,gBACwC,KAokLhD4jC,CAAwBx2C,EAAQgR,UAAWhR,EAAQuQ,QAEpEvQ,EAAQ4I,UAsBnB,SAAS6tC,GAAW9sC,GAEhB,OADc4sC,GAAqB5sC,GACpB4G,MAAMjB,IAsBzB,SAASonC,GAAiB/sC,GAKtB,IAJA,IAEIvM,EADAmT,EADUomC,GAAahtC,GACP4G,MAGG,OAAhBA,EAAMrB,MAAmB9R,EAAS0Z,GAAevG,KAEpDA,EAAQnT,EAEZ,OAAsB,IAAfmT,EAAMzB,IAA4B,KAAOyB,EAAMjB,IAW1D,SAASsnC,GAAkB5pD,GACvB,OAAO6B,EAASooB,GAAejqB,GAAQ+8B,YAS3C,SAAS8sB,GAAY7pD,GACjB,IAAIgT,EAAU22C,GAAa3pD,GAE3B,OAAO,IAAIysB,GADCzZ,EAAQuQ,MAAM1B,IAAOvH,KAAKtH,EAAQgR,WACfhR,EAAQuQ,OAsC3C,SAASumC,GAAc9pD,GACnB,IAAIgT,EAAU22C,GAAa3pD,GAI3B,YAH2BqF,IAAvB2N,EAAQiN,aACRjN,EAAQiN,WAAaic,GAAyBlpB,EAAQgR,UAAWhR,EAAQuQ,OAAO,IAE7EvQ,EAAQiN,eAEnB,SAAS0pC,GAAa3pD,EAAQ+pD,QACF,IAApBA,IAA8BA,GAAkB,GACpD,IAAI/2C,EAAUyoB,GAAYz7B,GAC1B,IAAKgT,GAAW+2C,EACZ,MAAM,IAAIhlD,MACN,qBAER,OAAOiO,EA4BX,SAASg3C,GAAejjC,GACpB,OAAO0U,GAAY1U,GAAWsV,OAElC,SAASktB,GAAqB1zB,GAC1B,KAAMA,aAAgB1D,MAClB,MAAM,IAAIptB,MAAM,kCACpB,OAAO4kD,GAAa9zB,GAExB,SAASo0B,GAAgBtR,GAErB,MAAsC,kBAAxBA,EAASG,WAuB3B,SAASoR,GAAavtC,GAClB,IACI4G,EADWgmC,GAAqB5sC,GACf4G,MAEjBmd,EAAWnd,EAAMlB,IACjBme,EAFQjd,EAAM1B,IAEG4e,QACjB0pB,KACJ,GAAI3pB,GAAYE,EACZ,IAAK,IAAIlhC,EAAI,EAAGA,EAAIghC,EAAS7gC,QAAS,CAClC,IAAIyqD,EAAa5pB,EAAShhC,KACtB6qD,EAAc7pB,EAAShhC,KAC3B,GAA0B,iBAAf4qD,EAAyB,CAChC,IAAIxM,EAASwM,EACTE,EAAkBjnC,GAAiBE,EAAM8mC,IACzCE,EAAW7pB,EAASF,EAAShhC,MAC7BgrD,EAAmBhqB,EAAShhC,KAO5Bmd,GAAW2tC,GACXH,EAAUxoD,MAAOgb,QAASA,EAASxa,KAAMy7C,EAAQ2M,SAAUA,EAAUzR,WAJ5B,kBAArB0R,EACpBA,IACCA,GAAoB,IAAY,QAQjD,OADAL,EAAUM,KAAKC,IACRP,EAEX,SAASO,GAAclxB,EAAGh7B,GACtB,OAAIg7B,EAAEr3B,MAAQ3D,EAAE2D,KACL,EACJq3B,EAAEr3B,KAAO3D,EAAE2D,MAAQ,EAAI;;;;;;;;;;;;;;;AAyClC,IAAIwoD,GAA6B,KAC7BC,IAAa,EA0BjB,SAASC,GAAkB1oD,EAAM2E,GAG7B,GAFQE,EAED,CACH,IAAI62B,EAHA72B,EAGc2jD,IACb9sB,IACDA,EALA72B,EAKc2jD,QAElB9sB,EAAU17B,GAAQ2E;;;;;;;OAuE1B,SAASgkD,GAAwB3oB,EAAO94B,EAAK42B,EAAUsT,EAAiBjW,EAAU7G,IA7nQlF,SAASs0B,IACL5jC,IAAW,EACXD,GAAwB,KACxB1C,GAAoB,EACpByC,IAAkB,EA0nQlB8jC,GACA,IAAIxlC,EAAQ0a,EAASpe,IACjB4B,EAAQ+vB,GAAkB,EAAG,EAAiBrR,EAAO,KAAM,MAC3DvD,EAAgByU,GAAYpT,EAAUwX,GAAiBpuC,EAAIyS,SAAUzS,EAAIqU,OAAQrU,EAAIsU,KAAMtU,EAAI+V,cAAe/V,EAAIgW,SAAUhW,EAAIkW,UAAWlW,EAAIyW,SAAU,KAAMzW,EAAI4V,OAAS,GAAiB,GAAsBghB,EAASld,IAAgBU,EAAO8vB,EAAiBjW,EAAU7G,GAQlR,OAPIlR,EAAMI,oBACN4F,GAAmBZ,GAA+BlH,EAAOwc,GAAWA,EAAU52B,EAAI1D,MAClF8d,EAAMpb,MAAQ,EACdkuC,GAAc9yB,EAAOwc,EAAStgC,OAAQ,GACtCujD,GAA4Bz/B,IAGzBwc,EAASld,IAAiB6b,EAMrC,SAASosB,GAAoBpsB,EAAeqsB,EAAchrB,EAAUsE,EAAa2mB,GAC7E,IAAI3lC,EAAQ0a,EAASpe,IAEjBjG,EAh0DR,SAASuvC,EAAyB5lC,EAAOoe,EAAUt6B,GAC/C,IAAI2gB,EAAYpC,KACZrC,EAAMI,oBACFtc,EAAIoU,mBACJpU,EAAIoU,kBAAkBpU,GAC1BmtC,GAAgCjxB,EAAOyE,EAAW,GAClDysB,GAAqBlxB,EAAOoe,EAAUt6B,EAAKA,EAAI3L,UAEnD,IAAIqpB,EAAYuG,GAAkB/H,EAAMjL,KAAMqpB,EAAUA,EAAShkC,OAAS,EAAGqqB,GAE7E,OADA44B,GAAyBjf,EAAU3Z,EAAWjD,GACvCA,EAszDSokC,CAAyB5lC,EAAO0a,EAAUgrB,GAI1D,GAHA1mB,EAAYxH,WAAWp7B,KAAKia,GAC5BgjB,EAActc,IAAW1G,EACzBsvC,GAAgBA,EAAat/C,QAAQ,SAAUsU,GAAW,OAAOA,EAAQtE,EAAWqvC,KAChF1lC,EAAMI,mBAAqBslC,EAAaptC,aAAc,CACtD,IAAImM,EAAYpC,KAEhB0vB,GAAiC2T,EADnB1lC,EAAMktB,oBACoC72B,EAAWoO,EAAWzE,EAAMI,mBACpFqE,EAAU8nB,sBAAwBF,GAA0B5nB,GAEhE,OAAOpO,EAEX,SAASwvC,GAAkBlF,EAAWvhB,GAClC,OACI5H,cACAmpB,UAAWA,GAAa3pC,GACxB0pC,MAAO6C,GACPnkB,cAAeA,GAAiB,KAChCt8B,MAAO,GAgBf,SAASgjD,GAAsBzvC,EAAWvS,GACtC,IAAIiiD,EAAY/mC,GAAiB3I,GAAWiG,IACxC0pC,EAAWD,EAAUhxC,KAAK3a,OAAS,EACvCylB,GAAsBmmC,EAAUliD,EAAKiiD,GAGrC5lC,GAAuB4lC,GAAa1lC,eAAgB2lC,EAAUzlC,aAAcylC,EAAW;;;;;;;;AAsC3F,IAAIC,GAA8B,WAC9B,SAASA,EAAaC,EAAevkB,EAAcwkB,GAC/CrtD,KAAKotD,cAAgBA,EACrBptD,KAAK6oC,aAAeA,EACpB7oC,KAAKqtD,YAAcA,EAMvB,OADAF,EAAatsD,UAAUysD,cAAgB,WAAc,OAAOttD,KAAKqtD,aAC1DF,EAVsB;;;;;;;OAwCjC,SAASI,KAIL,OADAC,GAAuBC,WAAY,EAC5BD,GAEX,SAASA,GAAuBE,GACxBA,EAAWpmD,KAAKzG,UAAU8sD,cAC1BD,EAAWlsC,SAAWosC,GACtBF,EAAW7tC,UAGnB,SAASguC,IACL,OAAO,WACH,IAAIC,EAAqBC,GAAsB/tD,MAC3Cy2B,EAAUq3B,GAAsBA,EAAmBr3B,QACvD,GAAIA,EAAS,CACT,IAAI3sB,EAAWgkD,EAAmBhkD,SAClC,GAAIA,IAAaiU,GACb+vC,EAAmBhkD,SAAW2sB,OAK9B,IAAK,IAAI70B,KAAO60B,EACZ3sB,EAASlI,GAAO60B,EAAQ70B,GAGhCksD,EAAmBr3B,QAAU,KAC7Bz2B,KAAK2tD,YAAYl3B,KApBEo3B,IAwB/B,SAASD,GAAoBn/B,EAAUxrB,EAAO6f,EAAYw6B,GACtD,IAAIwQ,EAAqBC,GAAsBt/B,IAanD,SAASu/B,EAAsBv/B,EAAUue,GACrC,OAAOve,EAASw/B,IAAwBjhB;;;;;;;OAbpCghB,CAAsBv/B,GAAY3kB,SAAUiU,GAAW0Y,QAAS,OAChEA,EAAUq3B,EAAmBr3B,UAAYq3B,EAAmBr3B,YAC5D3sB,EAAWgkD,EAAmBhkD,SAC9BiZ,EAAe/iB,KAAKmf,eAAe2D,GACnCorC,EAAiBpkD,EAASiZ,GAC9B0T,EAAQ1T,GAAgB,IAAIoqC,GAAae,GAAkBA,EAAerlB,aAAc5lC,EAAO6G,IAAaiU,IAC5G0Q,EAAS6uB,GAAer6C,EAE5B,IAAIgrD,GAAuB,sBAC3B,SAASF,GAAsBt/B,GAC3B,OAAOA,EAASw/B,KAAyB,KAoB7C,SAASE,GAAyBT,GAmI9B,IAlIA,IAAIU,EARR,SAASC,EAAa/mD,GAClB,OAAOlH,OAAOwO,eAAetH,EAAKzG,WAAWD,YAO7BytD,CAAaX,EAAWpmD,MACpCgnD,EAAU,WACV,IAAIz5B,EAAKvwB,EACLiqD,OAAWvnD,EACf,GAAI8e,GAAe4nC,GAEfa,EAAWH,EAAU1xC,gBAAkB0xC,EAAUxxC,mBAEhD,CACD,GAAIwxC,EAAU1xC,eACV,MAAM,IAAIhW,MAAM,wCAGpB6nD,EAAWH,EAAUxxC,eAEzB,IAAI4xC,EAAUJ,EAAUlxC,UAGxB,GAAIsxC,GAAWD,EAAU,CACrB,IAAIE,EAAef,EACnBe,EAAa/uC,OAASgvC,GAAiBhB,EAAWhuC,QAClD+uC,EAAatvC,eAAiBuvC,GAAiBhB,EAAWvuC,gBAC1DsvC,EAAa9uC,QAAU+uC,GAAiBhB,EAAW/tC,SAQvD,GANI6uC,IAEA7nD,EAAe+mD,EAAWhuC,OAAQ8uC,EAAQ9uC,QAC1C/Y,EAAe+mD,EAAWvuC,eAAgBqvC,EAAQrvC,gBAClDxY,EAAe+mD,EAAW/tC,QAAS6uC,EAAQ7uC,UAE3C4uC,EAAU,CAEV,IAAII,EAAqBjB,EAAWluC,aAChCovC,EAAsBL,EAAS/uC,aAanC,GAZIovC,IAEIlB,EAAWluC,aADXmvC,EAC0B,SAAUE,EAAIC,EAAKxK,GACzCsK,EAAoBC,EAAIC,EAAKxK,GAC7BqK,EAAmBE,EAAIC,EAAKxK,IAINsK,GAI9B9oC,GAAe4nC,IAAe5nC,GAAeyoC,GAAW,CACxD,IAAIQ,EAAkBrB,EAAWxsC,UAC7B8tC,EAAmBT,EAASrtC,UAC5B8tC,IAEItB,EAAWxsC,UADX6tC,EACuB,SAAUF,EAAIC,GACjCE,EAAiBH,EAAIC,GACrBC,EAAgBF,EAAIC,IAIDE,GAKnC,IAAIC,EAAuBvB,EAAWjuC,eAClCyvC,EAAwBX,EAAS9uC,eACjCyvC,IAEIxB,EAAWjuC,eADXwvC,EAC4B,SAAUJ,EAAIC,EAAK9nC,GAC3CkoC,EAAsBL,EAAIC,EAAK9nC,GAC/BioC,EAAqBJ,EAAIC,EAAK9nC,IAINkoC,GAIpCvoD,EAAe+mD,EAAWhuC,OAAQ6uC,EAAS7uC,QAC3C/Y,EAAe+mD,EAAWvuC,eAAgBovC,EAASpvC,gBACnDxY,EAAe+mD,EAAW/tC,QAAS4uC,EAAS5uC,SAG5C+tC,EAAWttC,oBACPstC,EAAWttC,qBAAuBmuC,EAASnuC,oBAC/CstC,EAAWxtC,iBAAmBwtC,EAAWxtC,kBAAoBquC,EAASruC,iBACtEwtC,EAAWltC,iBAAmBktC,EAAWltC,kBAAoB+tC,EAAS/tC,iBACtEktC,EAAWptC,cAAgBotC,EAAWptC,eAAiBiuC,EAASjuC,cAChEotC,EAAW1tC,QAAU0tC,EAAW1tC,SAAWuuC,EAASvuC,QACpD0tC,EAAWhtC,UAAYgtC,EAAWhtC,WAAa6tC,EAAS7tC,UACxDgtC,EAAW5tC,OAAS4tC,EAAW5tC,QAAUyuC,EAASzuC,OAElD,IAAIqB,EAAWotC,EAASptC,SACxB,GAAIA,EACA,IACI,IAAK,IAAIguC,EAAaxsD,EAASwe,GAAWiuC,EAAeD,EAAWnsD,QAASosD,EAAalsD,KAAMksD,EAAeD,EAAWnsD,OAAQ,CAC9H,IAAI6e,EAAUutC,EAAansD,MACvB4e,GAAWA,EAAQ4rC,WACnB5rC,EAAQ6rC,IAIpB,MAAO14B,GAASH,GAAQtxB,MAAOyxB,GAC/B,QACI,IACQo6B,IAAiBA,EAAalsD,OAASoB,EAAK6qD,EAAWl6B,SAAS3wB,EAAG/C,KAAK4tD,GAEhF,QAAU,GAAIt6B,EAAK,MAAMA,EAAItxB,YAIpC,CAED,IAAI8rD,EAAiBjB,EAAUvtD,UAC3BwuD,IACA3B,EAAWttC,oBACPstC,EAAWttC,qBAAuBivC,EAAehvC,sBACrDqtC,EAAWxtC,iBACPwtC,EAAWxtC,kBAAoBmvC,EAAelvC,mBAClDutC,EAAWltC,iBACPktC,EAAWltC,kBAAoB6uC,EAAe5uC,mBAClDitC,EAAWptC,cAAgBotC,EAAWptC,eAAiB+uC,EAAe9uC,gBACtEmtC,EAAW1tC,QAAU0tC,EAAW1tC,SAAWqvC,EAAepvC,UAC1DytC,EAAWhtC,UAAYgtC,EAAWhtC,WAAa2uC,EAAe1uC,YAC9D+sC,EAAW5tC,OAAS4tC,EAAW5tC,QAAUuvC,EAAetvC,SACpDsvC,EAAe1B,aACfJ,IAAAA,CAAqBG,IAIjCU,EAAYhuD,OAAOwO,eAAew/C,IAE/BA,GACHE,IAGR,SAASI,GAAiBzrD,GACtB,OAAIA,IAAU8a,MAGL9a,IAAU+a,MAIR/a;;;;;;;OAgBf,IAAIqsD,GAAW,IAAIh+C,GAAe,4EAY9Bi+C,MAQAC,MACAC,MAIAC,QAAkB1oD;;;;;;;OACtB,SAAS2oD,KAIL,YAHwB3oD,IAApB0oD,KACAA,GAAkB,IAAI79C,IAEnB69C,GAOX,SAASE,GAAeC,EAAS99C,EAAQ+9C,EAAqBhsD,GAI1D,YAHe,IAAXiO,IAAqBA,EAAS,WACN,IAAxB+9C,IAAkCA,EAAsB,MAC5D/9C,EAASA,GAAU49C,KACZ,IAAII,GAAWF,EAASC,EAAqB/9C,EAAQjO,GAEhE,IAAIisD,GAA4B,WAC5B,SAASA,EAAW/kD,EAAK8kD,EAAqB/9C,EAAQnL,QACnC,IAAXA,IAAqBA,EAAS,MAClC,IAAImU,EAAQ/a,KACZA,KAAK+R,OAASA,EAId/R,KAAK6S,QAAU,IAAIE,IAInB/S,KAAKgwD,iBAAmB,IAAI3yC,IAI5Brd,KAAK0gB,UAAY,IAAIrD,IACrBrd,KAAKiwD,YAAa,EAGlB,IAAIC,KACJC,IAAanlD,GAAM,SAAUolD,GAAe,OAAOr1C,EAAMs1C,oBAAoBD,KAAiBF,KAC9FJ,GAAuBK,GAAYL,EAAqB,SAAUr/C,GAAY,OAAOsK,EAAMu1C,gBAAgB7/C,EAAUzF,EAAK8kD,KAE1H9vD,KAAK6S,QAAQG,IAAIpB,GAAU2+C,QAAWvpD,EAAWhH,OAGjDA,KAAKwwD,eAAiBxwD,KAAK6S,QAAQ+D,IAAI04C,IAEvCtvD,KAAKgwD,iBAAiBziD,QAAQ,SAAUsiD,GAAW,OAAO90C,EAAM5Q,IAAI0lD,KAEpE7vD,KAAK4G,OAASA,IAAWoE,aAAezK,MAAQ,KAAOqH,EAAUoD,IA2NrE,OAzNA5K,OAAO+B,eAAe4tD,EAAWlvD,UAAW,aAIxCsJ,IAAK,WAAc,OAAOnK,KAAKiwD,YAC/Bz5C,YAAY,EACZC,cAAc,IAQlBs5C,EAAWlvD,UAAU8hC,QAAU,WAC3B3iC,KAAKywD,qBAELzwD,KAAKiwD,YAAa,EAClB,IAEIjwD,KAAK0gB,UAAUnT,QAAQ,SAAUmjD,GAAW,OAAOA,EAAQ/vC,gBAE/D,QAEI3gB,KAAK6S,QAAQ+K,QACb5d,KAAK0gB,UAAU9C,QACf5d,KAAKgwD,iBAAiBpyC,UAG9BmyC,EAAWlvD,UAAUsJ,IAAM,SAAUlE,EAAOoE,EAAeL,QACjC,IAAlBK,IAA4BA,EAAgByH,GAASH,yBAC3C,IAAV3H,IAAoBA,EAAQ1K,EAAQyG,YAAYkE,SACpDjK,KAAKywD,qBAEL,IAAIE,EAAmBlnD,EAAmBzJ,MAC1C,IAEI,KAAMgK,EAAQ1K,EAAQyG,YAAYK,UAAW,CAEzC,IAAIuN,EAAS3T,KAAK6S,QAAQ1I,IAAIlE,GAC9B,QAAee,IAAX2M,EAAsB,CAGtB,IAAI3I,EA0RxB,SAAS4lD,EAAsB3tD,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiBqO;;;;;;;OA5RzBs/C,CAAsB3qD,IAAUoB,EAAiBpB,GACvD+E,GAAOhL,KAAK6wD,qBAAqB7lD,KAGjC2I,EAAS48C,GAAWO,GAAkC7qD,GAAQspD,IAC9DvvD,KAAK6S,QAAQG,IAAI/M,EAAO0N,IAIhC,QAAe3M,IAAX2M,EACA,OAAO3T,KAAK+wD,QAAQ9qD,EAAO0N,GAMnC,OADqB3J,EAAQ1K,EAAQyG,YAAYI,KAAsBwpD,KAAd3vD,KAAK+R,QAC1C5H,IAAIlE,EAAO+D,EAAQ1K,EAAQyG,YAAYG,SAAW,KAAOmE,GAEjF,MAAOjH,GACH,GAAe,sBAAXA,EAAEU,KAA8B,CAGhC,IAFWV,EAAEqP,IAAsBrP,EAAEqP,SAChC3M,QAAQ8B,EAAU3B,IACnB0qD,EAEA,MAAMvtD,EAIN,OAAO6Q,GAAmB7Q,EAAG6C,EAAO,kBAAmBjG,KAAK4G,QAIhE,MAAMxD,EAGd,QAEIqG,EAAmBknD,KAG3BZ,EAAWlvD,UAAU4vD,mBAAqB,WACtC,GAAIzwD,KAAKiwD,WACL,MAAM,IAAIvpD,MAAM,yCAOxBqpD,EAAWlvD,UAAUwvD,oBAAsB,SAAUW,EAAiBC,EAASf,GAC3E,IAAIn1C,EAAQ/a,KAEZ,GADAgxD,EAAkBxoD,EAAkBwoD,GACpC,CAMA,IAAIhmD,EAAMxD,EAAewpD,GAErBE,EAAmB,MAAPlmD,GAAgBgmD,EAAgBE,eAAYlqD,EAIxD6oD,OAAwB7oD,IAAbkqD,EAA0BF,EAAkBE,EAOvDC,GAA+C,IAAjCjB,EAAW/nD,QAAQ0nD,GAGjC1oD,OAA0BH,IAAbkqD,GAA2BF,EAAgB7pD,WACxDsoD,GAOJ,QAJiBzoD,IAAbkqD,IACAlmD,EAAMxD,EAAe0pD,IAGd,MAAPlmD,EAAJ,CAQA,GAJAhL,KAAKgwD,iBAAiBziB,IAAIsiB,GAC1B7vD,KAAK6S,QAAQG,IAAI68C,EAASU,GAAWvlD,EAAI3L,QAASkwD,KAG/B,MAAfvkD,EAAI5D,UAAoB+pD,EAAa,CAKrCjB,EAAW5sD,KAAKusD,GAChB,IACIM,GAAYnlD,EAAI5D,QAAS,SAAUgqD,GAAY,OAAOr2C,EAAMs1C,oBAAoBe,EAAUH,EAASf,KAEvG,UAMJ,IAAImB,EAAermD,EAAI7D,UACvB,GAAoB,MAAhBkqD,IAAyBF,EAAa,CACtC,IAAIG,EAAiBN,EACrBb,GAAYkB,EAAc,SAAU5gD,GAAY,OAAOsK,EAAMu1C,gBAAgB7/C,EAAU6gD,EAAgBD,KAG3G,IAAIE,EAAeP,EAAgBE,SACnCf,GAAYhpD,EAAW,SAAUsJ,GAAY,OAAOsK,EAAMu1C,gBAAgB7/C,EAAU8gD,EAAcpqD,QAKtG4oD,EAAWlvD,UAAUyvD,gBAAkB,SAAU7/C,EAAU8gD,EAAcpqD,GAIrE,IAAIlB,EAAQurD,GADZ/gD,EAAWjI,EAAkBiI,IACUA,EAAWjI,EAAkBiI,GAAYA,EAASb,SAErF+D,EA2EZ,SAAS89C,EAAiBhhD,EAAU8gD,EAAcpqD,GAC9C,IAAI9H,EAAUqyD,GAAkBjhD,EAAU8gD,EAAcpqD,GACxD,OAAIwqD,GAAgBlhD,GACT8/C,QAAWvpD,EAAWyJ,EAASX,UAG/BygD,GAAWlxD,EAASkwD,IAjFdkC,CAAiBhhD,EAAU8gD,EAAcpqD,GACtD,GAAKqqD,GAAe/gD,KAAgC,IAAnBA,EAAS+C,MAkBrC,CACD,IAAIkF,EAAW1Y,KAAK6S,QAAQ1I,IAAIlE,GAChC,GAAIyS,QAA+B1R,IAAnB0R,EAASlF,MACrB,MAAM,IAAI9M,MAAM,4BAA8BkB,EAAU3B,QArBN,CAGtD,IAAI2rD,EAAgB5xD,KAAK6S,QAAQ1I,IAAIlE,GACrC,GAAI2rD,GAEA,QAA4B5qD,IAAxB4qD,EAAcp+C,MACd,MAAM,IAAI9M,MAAM,4BAA8BT,EAAQ,UAI1D2rD,EAAgBrB,QAAWvpD,EAAWuoD,IAAS,IACjClwD,QAAU,WAAc,OAAOkL,EAAWqnD,EAAcp+C,QACtExT,KAAK6S,QAAQG,IAAI/M,EAAO2rD,GAE5B3rD,EAAQwK,EACRmhD,EAAcp+C,MAAMlQ,KAAKmN,GAQ7BzQ,KAAK6S,QAAQG,IAAI/M,EAAO0N,IAE5Bo8C,EAAWlvD,UAAUkwD,QAAU,SAAU9qD,EAAO0N,GAC5C,GAAIA,EAAO1Q,QAAUusD,GACjB,MAAM,IAAI9oD,MAAM,yCAA2CkB,EAAU3B,IASzE,OAPS0N,EAAO1Q,QAAUssD,KACtB57C,EAAO1Q,MAAQusD,GACf77C,EAAO1Q,MAAQ0Q,EAAOtU,WAEE,iBAAjBsU,EAAO1Q,OAAsB0Q,EAAO1Q,OAwHvD,SAAS4uD,EAAa5uD,GAClB,OAAiB,OAAVA,GAAmC,iBAAVA,GACC,mBAAtBA,EAAM0d,YA1H2CkxC,CAAal+C,EAAO1Q,QACxEjD,KAAK0gB,UAAU6sB,IAAI55B,EAAO1Q,OAEvB0Q,EAAO1Q,OAElB8sD,EAAWlvD,UAAUgwD,qBAAuB,SAAU7lD,GAClD,QAAKA,EAAIjE,aAG0B,iBAAnBiE,EAAIjE,WACU,QAAnBiE,EAAIjE,YAA4C,SAAnBiE,EAAIjE,YAAyB/G,KAAKwwD,eAG/DxwD,KAAKgwD,iBAAiBp5C,IAAI5L,EAAIjE,cAGtCgpD,EA1PoB,GA4P/B,SAASe,GAAkC7qD,GACvC,IAAIqE,EAAgBjD,EAAiBpB,GACrC,GAAsB,OAAlBqE,EAAwB,CACxB,IAAI8lD,EAAc5oD,EAAevB,GACjC,GAAoB,OAAhBmqD,EACA,OAAOA,EAAY/wD,QAElB,GAAI4G,aAAiBqL,GACtB,MAAM,IAAI5K,MAAM,SAAWkB,EAAU3B,GAAS,8CAE7C,GAAIA,aAAiBiF,SAAU,CAChC,IAAI4mD,EAAc7rD,EAAM3E,OACxB,GAAIwwD,EAAc,EAAG,CACjB,IAAIvtD,EAAO,IAAIhE,MAAMuxD,GAAanlD,KAAK,KACvC,MAAM,IAAIjG,MAAM,oCAAsCkB,EAAU3B,GAAS,MAAQ1B,EAAKuD,KAAK,MAAQ,MAEvG,OAAO,WAAc,OAAO,IAAI7B,GAEpC,MAAM,IAAIS,MAAM,eAEpB,OAAO4D,EAAcjL,QAgBzB,SAASqyD,GAAkBjhD,EAAU8gD,EAAcpqD,GAC/C,IAAI9H,OAAU2H,EACd,GAAIwqD,GAAe/gD,GACf,OAAOqgD,GAAkCtoD,EAAkBiI,IAG3D,GAAIkhD,GAAgBlhD,GAChBpR,EAAU,WAAc,OAAOmJ,EAAkBiI,EAASX,gBAEzD,GA0Cb,SAASiiD,EAAmB9uD,GACxB,SAAUA,IAASA,EAAMoN,aA3CZ0hD,CAAmBthD,GACxBpR,EAAU,WAAc,OAAO+K,EAAO5B,EAAkBiI,EAASJ,oBAEhE,GA0Cb,SAAS2hD,EAAkB/uD,GACvB,SAAUA,IAASA,EAAMkN,YA3CZ6hD,CAAkBvhD,GACvBpR,EAAU,WAAc,OAAOoR,EAASN,WAAW3O,MAAMiP,EAAUjN,EAAS+G,EAAWkG,EAASzB,iBAE/F,CACD,IAAIijD,EAAazpD,EAAkBiI,IAC9BA,EAAST,UAAYS,EAASb,UACnC,IAAKqiD,EAAY,CACb,IAAIC,EAAiB,GAMrB,MALIX,GAAgBpqD,IAEhB+qD,EACI,6DAFiB/qD,EAAUU,IAAI,SAAUuD,GAAK,OAAOA,GAAKqF,EAAW,IAAMA,EAAW,IAAM,QAEd3I,KAAK,MAAQ,KAE7F,IAAIpB,MAAM,sCAAwCkB,EAAU2pD,GAAgB,IAAMW,GAE5F,IAoCZ,SAASC,EAAQlvD,GACb,QAASA,EAAM+L,KArCHmjD,CAAQ1hD,GAIR,OAAOqgD,GAAkCmB,GAHzC5yD,EAAU,WAAc,OAAO,IAAK,EAAaqF,KAAKlD,MAAM,EAAcgC,QAAU,GAAS+G,EAAWkG,EAASzB,UAO7H,OAAO3P,EAEX,SAASkxD,GAAWlxD,EAAS4D,EAAOuQ,GAEhC,YADc,IAAVA,IAAoBA,GAAQ,IAE5BnU,QAASA,EACT4D,MAAOA,EACPuQ,MAAOA,UAAaxM,GAG5B,SAASmpD,GAAY/kB,EAAO3iC,GACxB2iC,EAAM79B,QAAQ,SAAUtK,GAAS,OAAO1C,MAAMmK,QAAQzH,GAASktD,GAAYltD,EAAOwF,GAAMA,EAAGxF,KAE/F,SAAS0uD,GAAgB1uD,GACrB,OAAiB,OAAVA,GAAkC,iBAATA,GAAqBsP,MAAetP,EAQxE,SAASuuD,GAAevuD,GACpB,MAAwB,mBAAVA,EAwDlB,SAASmvD,GAAkB3hD,EAAU6e,EAAc+iC,EAAuBC,EAAgB5rC,GAEtF,GADAjW,EAAWjI,EAAkBiI,GACzBlQ,MAAMmK,QAAQ+F,GAId,IAAK,IAAItP,EAAI,EAAGA,EAAIsP,EAASnP,OAAQH,IACjCixD,GAAkB3hD,EAAStP,GAAImuB,EAAc+iC,EAAuBC,EAAgB5rC,OAGvF,CACD,IAAIxB,EAAQiE,KACRljB,EAAQurD,GAAe/gD,GAAYA,EAAWjI,EAAkBiI,EAASb,SACzE2iD,EAAkBb,GAAkBjhD,GACpC2U,EAAQmE,KACRipC,EAAqC,MAAxBptC,EAAMiK,gBACnBK,EAAWtK,EAAMmC,eACjBkI,EAAwBrK,EAAMiK,iBAAmB,GACrD,GAxER,SAASojC,EAAgBxvD,GACrB,QAASA,EAAM+M,SAuEPyiD,CAAgBhiD,IAAa+gD,GAAe/gD,GAAW,CACvD,IACIkQ,GADalQ,EAAST,UAAYS,GAAU5P,UACpB8f,YAC5B,GAAIA,EAAa,CACb,IAAIuG,EAAQhC,EAAM1B,KACjB0D,EAAMY,eAAiBZ,EAAMY,kBAAoBxkB,KAAKgsB,EAAahuB,OAAQqf,IAGpF,GAAI6wC,GAAe/gD,KAAcA,EAAS+C,MAAO,CAE7C,IAAInU,EAAU,IAAI+mB,GAAoBmsC,EAAiB7rC,EAAgB6jC,IACnEmI,EAAuBvqD,GAAQlC,EAAOqpB,EAAc5I,EAAiB8rC,EAAaA,EAAa/iC,EAAuBC,IAC7F,GAAzBgjC,GACAxlC,GAAmBZ,GAA+BlH,EAAOF,GAAQA,EAAOjf,GACxEqpB,EAAahsB,KAAK2C,GAClBmf,EAAMmC,iBACNnC,EAAMqC,eACFf,IACAtB,EAAMiK,iBAAmB,OAE7BgjC,EAAsB/uD,KAAKjE,GAC3B6lB,EAAM5hB,KAAKjE,KAGXgzD,EAAsBK,GAAwBrzD,EAC9C6lB,EAAMwtC,GAAwBrzD,OAGjC,CAqBD,IAAIszD,EAAgCxqD,GAAQlC,EAAOqpB,EAAckjC,EAAa/iC,EAAuBC,GACjGkjC,EAAoCzqD,GAAQlC,EAAOqpB,EAAckjC,EAAYA,EAAa/iC,GAG1FojC,EAAgCD,GAAqC,GACrEP,EAAsBO,GACtBlsC,IAAmBmsC,IAClBnsC,KAL2BisC,GAAiC,GAC7DN,EAAsBM,KAMtBzlC,GAAmBZ,GAA+BlH,EAAOF,GAAQA,EAAOjf,GACpE5G,EAwFpB,SAASyzD,EAAa/6C,EAAWxS,EAAOmhB,EAAgB4rC,EAAgBS,GACpE,IAAI1zD,EAAU,IAAI+mB,GAAoBrO,EAAW2O,EAAgB6jC,IAKjE,OAJAlrD,EAAQmU,SACRnU,EAAQkG,MAAQA,EAChBlG,EAAQ2zD,mBAAqB,EAC7BC,GAAgB5zD,EAAS0zD,EAAGT,IAAmB5rC,GACxCrnB,EA9FmByzD,CAAapsC,EAAiBwsC,GAAoCC,GAA+Bd,EAAsB/wD,OAAQolB,EAAgB4rC,EAAgBC,IACxK7rC,GAAkBmsC,IACnBR,EAAsBO,GAAmCL,gBAAkBlzD,GAE/EiwB,EAAahsB,KAAK2C,GAClBmf,EAAMmC,iBACNnC,EAAMqC,eACFf,IACAtB,EAAMiK,iBAAmB,OAE7BgjC,EAAsB/uD,KAAKjE,GAC3B6lB,EAAM5hB,KAAKjE,IAIX4zD,GAAgBZ,EAAsB3rC,EAAiBksC,EAAoCD,GAAgCJ,GAAkB7rC,GAAkB4rC,IAE9J5rC,GAAkB4rC,GAAkBO,GACrCR,EAAsBO,GAAmCI,uBAQzE,SAASC,GAAgBH,EAAczzD,EAAS+zD,GAC5CN,EAAat/C,MAAMlQ,KAAKjE,GACpB+zD,GACAN,EAAaE,qBAMrB,SAAS7qD,GAAQurB,EAAMnL,EAAK2tB,EAAO1uB,GAC/B,IAAK,IAAIrmB,EAAI+0C,EAAO/0C,EAAIqmB,EAAKrmB,IACzB,GAAIonB,EAAIpnB,KAAOuyB,EACX,OAAOvyB,EAEf,OAAQ,EAKZ,SAASgyD,GAA8B5xC,EAAGkM,EAAOoC,EAAOzK,GACpD,OAAOiuC,GAAarzD,KAAKwT,UAO7B,SAAS0/C,GAAkC3xC,EAAGkM,EAAOoC,EAAOzK,GACxD,IACIrZ,EADAunD,EAAYtzD,KAAKwT,MAErB,GAAIxT,KAAKuyD,gBAAiB,CACtB,IAAIgB,EAAiBvzD,KAAKuyD,gBAAgBS,mBACtCQ,EAAiBvkC,GAAkBxB,EAAOoC,EAAO7vB,KAAKuyD,gBAAgBhtD,MAAO6f,GAIjFiuC,GAAaC,EAFbvnD,EAASynD,EAAelhD,MAAM,EAAGihD,IAIjC,IAAK,IAAIpyD,EAAIoyD,EAAgBpyD,EAAIqyD,EAAelyD,OAAQH,IACpD4K,EAAOzI,KAAKkwD,EAAeryD,SAM/BkyD,GAAaC,EAFbvnD,MAIJ,OAAOA,EAKX,SAASsnD,GAAaC,EAAWvnD,GAC7B,IAAK,IAAI5K,EAAI,EAAGA,EAAImyD,EAAUhyD,OAAQH,IAElC4K,EAAOzI,MAAKjE,EADEi0D,EAAUnyD,OAG5B,OAAO4K,EA0CX,SAAS0nD,GAAiBtsD,EAAWusD,GAEjC,YADsB,IAAlBA,IAA4BA,MACzB,SAAUhG,GACbA,EAAWtuC,kBAAoB,SAAUpU,GACrC,OA5NZ,SAASoU,EAAkBpU,EAAK7D,EAAWusD,GACvC,IACIxsC,EADQiC,KACM3F,IAClB,GAAI0D,EAAMI,kBAAmB,CACzB,IAAIgrC,EAAiBxsC,GAAe9a,GAEpConD,GAAkBsB,EAAexsC,EAAMjL,KAAMiL,EAAMyF,UAAW2lC,GAAgB,GAE9EF,GAAkBjrD,EAAW+f,EAAMjL,KAAMiL,EAAMyF,UAAW2lC,GAAgB,IAoN/DlzC,CAAkBpU,EAAK7D,EAAWusD;;;;;;;OAmBrD,IAAIC,GACA,SAASA,OAOTC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwBt2C,GAC7B,IAAIha,EAAQmD,MAAM,kCAAoCkB,EAAU2V,GAAa,kDAE7E,OADAha,EAAMuwD,IAAmBv2C,EAClBha,EAEX,IA6XIwwD,GAsBAC,GAsDAC,GAzcAH,GAAkB,cAClBI,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8BrzD,UAAUszD,wBAA0B,SAAU52C,GACxE,MAAMs2C,GAAwBt2C,IAE3B22C,EANuC,GAW9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBniD,KAAO,IAAIiiD,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCf,EAAW15C,EAAS06C,GACzDt0D,KAAK4Z,QAAUA,EACf5Z,KAAKs0D,UAAYA,EACjBt0D,KAAKu0D,WAAa,IAAIxhD,IACtB,IAAK,IAAI5R,EAAI,EAAGA,EAAImyD,EAAUhyD,OAAQH,IAAK,CACvC,IAAI9B,EAAUi0D,EAAUnyD,GACxBnB,KAAKu0D,WAAWvhD,IAAI3T,EAAQm1D,cAAen1D,IAanD,OAVAg1D,EAAgCxzD,UAAUszD,wBAA0B,SAAU52C,GAC1E,IAAIle,EAAUW,KAAKu0D,WAAWpqD,IAAIoT,GAIlC,IAHKle,GAAWW,KAAK4Z,UACjBva,EAAUW,KAAK4Z,QAAQu6C,wBAAwB52C,KAE9Cle,EACD,MAAMw0D,GAAwBt2C,GAElC,OAAO,IAAIk3C,GAA8Bp1D,EAASW,KAAKs0D,YAEpDD,EApByC,GAsBhDI,GAA+C,SAAUC,GAEzD,SAASD,EAA8Bp1D,EAAS6xD,GAC5C,IAAIn2C,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAQjC,OAPA+a,EAAM1b,QAAUA,EAChB0b,EAAMm2C,SAAWA,EACjBn2C,EAAMiB,SAAW3c,EAAQ2c,SACzBjB,EAAMy5C,cAAgBn1D,EAAQm1D,cAC9Bz5C,EAAMwE,mBAAqBlgB,EAAQkgB,mBACnCxE,EAAM2E,OAASrgB,EAAQqgB,OACvB3E,EAAM4E,QAAUtgB,EAAQsgB,QACjB5E,EAKX,OAfAra,EAAU+zD,EAA+BC,GAYzCD,EAA8B5zD,UAAUC,OAAS,SAAU4I,EAAUirD,EAAkBC,EAAoB1D,GACvG,OAAOlxD,KAAKX,QAAQyB,OAAO4I,EAAUirD,EAAkBC,EAAoB1D,GAAYlxD,KAAKkxD,WAEzFuD,EAhBuC,CAiBhDb,IAiBEiB,GACA,SAASA,OAOTC,GACA,SAASA,OAYTC,GAAyB,WACzB,SAASA,EAAQ5kC,EAAQ6kC,EAAUC,GAC/Bj1D,KAAKg1D,SAAWA,EAChBh1D,KAAKi1D,gBAAkBA,EACvBj1D,KAAKk1D,QAAU,KACfl1D,KAAKm1D,kBAAoB,KAIzBn1D,KAAKo1D,WAAa,KAClBp1D,KAAKmwB,OAASA,EAsOlB,OApOA/vB,OAAO+B,eAAe4yD,EAAQl0D,UAAW,aACrCsJ,IAAK,WACD,OAAyB,MAArBnK,KAAKmwB,OAAOtM,IAqP5B,SAASwxC,EAAmBnwC,EAAOse,EAAaz3B,GAE5C,IADA,IAAIupD,EAAa9xB,EAAYhF,MACtB82B,GACHvpD,EAAOzI,KAAK6hB,GAAiBmwC,EAAYpwC,IACjB,IAApBowC,EAAWhuD,MACX+tD,EAAmBnwC,EAAOowC,EAAYvpD,GAE1CupD,EAAaA,EAAWtyD,KAE5B,OAAO+I;;;;;;;OA5PYspD,CAAmBr1D,KAAKmwB,OADnBnwB,KAAKmwB,OAAOrM,YAKhCtN,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe4yD,EAAQl0D,UAAW,WACrCsJ,IAAK,WAAc,OAAOnK,KAAKg1D,SAAWh1D,KAAKg1D,SAAWh1D,KAAKu1D,kBAC/D/+C,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe4yD,EAAQl0D,UAAW,aACrCsJ,IAAK,WACD,OAAsD,MAAzB,IAArBnK,KAAKmwB,OAAO1M,MAExBjN,YAAY,EACZC,cAAc,IAElBs+C,EAAQl0D,UAAU8hC,QAAU,WACxB,GAAI3iC,KAAKk1D,QACLl1D,KAAKk1D,QAAQ5zB,WAAWthC,WAEvB,GAAIA,KAAKm1D,kBAAmB,CAC7B,IAAI5vD,EAAQvF,KAAKm1D,kBAAkBhtD,QAAQnI,MACvCuF,GAAS,GACTvF,KAAKm1D,kBAAkBK,OAAOjwD,GAElCvF,KAAKm1D,kBAAoB,KAE7BzzB,GAAa1hC,KAAKmwB,SAEtB4kC,EAAQl0D,UAAU6f,UAAY,SAAUwrC,IAxkH5C,SAASuJ,EAAelwC,EAAMmd,GAC1BsY,GAAWz1B,GAAMjiB,KAAKo/B,GAClBnd,EAAK/B,IAAO8D,mBACZqjC,GAAgBplC,GAAMjiB,KAAKiiB,EAAKvB,IAAS1iB,OAAS,EAAG,MAqkHLm0D,CAAez1D,KAAKmwB,OAAQ+7B,IAmChF6I,EAAQl0D,UAAU60D,aAAe,WAAcpO,GAActnD,KAAKmwB,SAsDlE4kC,EAAQl0D,UAAU20D,OAAS,WAAcx1D,KAAKmwB,OAAO1M,MAAU,KAyD/DsxC,EAAQl0D,UAAU80D,SAAW,WAAc31D,KAAKmwB,OAAO1M,KAAU,KAsBjEsxC,EAAQl0D,UAAU+0D,cAAgB,WAAc7N,GAAsB/nD,KAAKmwB,OAAQnwB,KAAK2U,UAOxFogD,EAAQl0D,UAAUg1D,eAAiB,YApsEvC,SAASC,EAAuBvwC,EAAM5Q,GAClCmV,IAAsB,GACtB,IACIi+B,GAAsBxiC,EAAM5Q,GAEhC,QACImV,IAAsB,IA8rEuBgsC,CAAuB91D,KAAKmwB,OAAQnwB,KAAK2U,UAC1FogD,EAAQl0D,UAAUk1D,yBAA2B,SAAUC,GACnD,GAAIh2D,KAAKk1D,QACL,MAAM,IAAIxuD,MAAM,iEAEpB1G,KAAKm1D,kBAAoBa,GAE7BjB,EAAQl0D,UAAUo1D,iBAAmB,WAAcj2D,KAAKk1D,QAAU,MAClEH,EAAQl0D,UAAUq1D,eAAiB,SAAUC,GACzC,GAAIn2D,KAAKm1D,kBACL,MAAM,IAAIzuD,MAAM,qDAEpB1G,KAAKk1D,QAAUiB,GAEnBpB,EAAQl0D,UAAU00D,eAAiB,WAC/B,OAAOv1D,KAAKg1D,SAAWvpC,GAAezrB,KAAKmwB,QAAQnwB,KAAKi1D,kBAErDF,EAhPiB,GAmPxBqB,GAA6B,SAAU1B,GAEvC,SAAS0B,EAAYC,GACjB,IAAIt7C,EAAQ25C,EAAOnzD,KAAKvB,KAAMq2D,EAAO,MAAO,IAAMr2D,KAElD,OADA+a,EAAMs7C,MAAQA,EACPt7C,EASX,OAbAra,EAAU01D,EAAa1B,GAMvB0B,EAAYv1D,UAAU+0D,cAAgB,WAAc5N,GAAwBhoD,KAAKq2D,QACjFD,EAAYv1D,UAAUg1D,eAAiB,YA9sE3C,SAASS,EAAyBpxC,GAC9B4E,IAAsB,GACtB,IACIk+B,GAAwB9iC,GAE5B,QACI4E,IAAsB,IAwsE2BwsC,CAAyBt2D,KAAKq2D,QACnFj2D,OAAO+B,eAAei0D,EAAYv1D,UAAW,WACzCsJ,IAAK,WAAc,OAAO,MAC1BqM,YAAY,EACZC,cAAc,IAEX2/C,EAdqB,CAe9BrB,IAqCF,SAASwB,GAAiBC,EAAiBpxC,EAAOG,GAW9C,OAVKwuC,KAEDA,GAA8B,SAAUW,GAEpC,SAAS+B,IACL,OAAkB,OAAX/B,GAAmBA,EAAOlzD,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAU+1D,EAAa/B,GAIhB+B,EALkB,CAM3BD,IAEC,IAAIzC,GAAa5uC,GAAiBC,EAAOG,IAoBpD,SAASmxC,GAAkBC,EAAkBH,EAAiBhsC,EAAWnF,GA2BrE,GA1BK2uC,KAEDA,GAA+B,SAAUU,GAErC,SAASkC,EAAaC,EAAwBC,EAAYC,EAAQC,EAAiBC,GAC/E,IAAIl8C,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAMjC,OALA+a,EAAM87C,uBAAyBA,EAC/B97C,EAAM+7C,WAAaA,EACnB/7C,EAAMg8C,OAASA,EACfh8C,EAAMi8C,gBAAkBA,EACxBj8C,EAAMk8C,eAAiBA,EAChBl8C,EAYX,OApBAra,EAAUk2D,EAAclC,GAUxBkC,EAAa/1D,UAAUq2D,mBAAqB,SAAUviD,EAASwiD,EAAc5xD,GACzE,IAAI2f,EA1+IpB,SAASkyC,EAA0BlwC,EAAOvS,EAAS0iD,EAAiB5R,EAASh5B,GACzE,IAAI+oB,EAAY9rB,KACZ+rB,EAAyBlsB,KAC7BI,IAAY,GACZH,GAAyB,MACzB,IAAItE,EAAQ8vB,GAAYqiB,EAAiBnwC,EAAOvS,EAAS,GAAsB,KAAM,MAWrF,OAVAuQ,EAAMT,IAAoB4yC,EACtB5R,IACAvgC,EAAMtB,IAAW6hC,EAAQY,cAE7BhR,GAAuBnuB,EAAO,MAAO,EAAGhC,GACpCgC,EAAMI,oBACNJ,EAAMsQ,KAAK/K,cAAgBA,GAE/B9C,GAAY6rB,GACZhsB,GAAyBisB,GAClBvwB,EA09IiBkyC,CAA0Bp3D,KAAK+2D,OAAQpiD,EAAS3U,KAAK62D,uBAAwB72D,KAAKg3D,gBAAgBpzC,IAAU5jB,KAAKi3D,gBACzHE,GACAh2B,GAAWjc,EAAOiyC,EAAc5xD,GAEpC0uC,GAAuB/uB,EAAOllB,KAAK+2D,OAAQpiD,GAC3C,IAAI2iD,EAAU,IAAIvC,GAAQ7vC,EAAOvQ,GAAU,GAE3C,OADA2iD,EAAQlC,WAAalwC,EAAMpB,IACpBwzC,GAEJV,EArBmB,CAsB5BD,IAEiB,IAAnBnsC,EAAUljB,KAA4B,CACtC,IAAIiwD,EAAgBlyC,EAASmF,EAAUjlB,OAEvC,OAAO,IAAIyuD,GAAc3uC,EAAUkxC,GAAiBC,EAAiBhsC,EAAWnF,GAAWmF,EAAU6yB,OAAQka,EAAe/sC,EAAUiC,eAGtI,OAAO,KAoLf,SAAS+qC,GAAchtC,EAAWnF,EAAU1Q,GACxC,GAAIkR,GAAY2E,GAAY,CACxB,IAAIitC,EAAiBjtC,EAAUjD,eAC3BgZ,EAAgB7a,GAAwB8E,EAAUjlB,MAAO8f,GAC7D,OAAO,IAAI0vC,GAAQx0B,EAAe5rB,EAAS8iD,GAE1C,GAAuB,IAAnBjtC,EAAUljB,MAA+C,IAAnBkjB,EAAUljB,KAA4B,CACjF,IAAIowD,EAAoBhsC,GAAkBrG,GAC1C,OAAO,IAAI0vC,GAAQ2C,EAAmBA,EAAkBzzC,KAAW,GAEvE,OAAO;;;;;;;;AAuBX,SAAS0zC,KAEL,IADA,IAAIpzD,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD;;;;;;;OA2B7B,IAqFWozD,GArFPC,GAA4B,WAC5B,SAASA,EAAWC,GAChB93D,KAAK83D,cAAgBA,EAOzB,OADAD,EAAWrmD,kBAAoB,WAAc,OAAOumD,GAA2BF,IACxEA,EAToB,GAa3BE,GADuCJ,GAcvCK,GACA,SAASA,GAAoB5hD,EAAIoH,EAAay6C,EAAW72C,EAAeE,EAAQ42C,GAC5El4D,KAAKoW,GAAKA,EACVpW,KAAKwd,YAAcA,EACnBxd,KAAKi4D,UAAYA,EACjBj4D,KAAKohB,cAAgBA,EACrBphB,KAAKshB,OAASA,EACdthB,KAAKk4D,WAAaA,GAOtBC,GACA,SAASA,OAQTC,GACA,SAASA,OAoBTC,IAhBuB,IAAI/mD,GAAe,wBAiB1C,SAAS+mD,QASTC,GACA,SAASA,QAIFV,GASRt4D,EAAQs4D,sBAAwBt4D,EAAQs4D,yBALnBA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IA0BIW,GA1BAC,GAA2B,WAC3B,SAASA,KAOT,OADAA,EAAUhnD,kBAAoB,WAAc,OAAOinD,MAC5CD,EARmB,GAY1BC,GADqCd,GA2BrCe,GAAU,IAZVH,GACA,SAASA,GAAQI,GACb34D,KAAK24D,KAAOA,EACZ34D,KAAK44D,MAAQD,EAAKlkC,MAAM,KAAK,GAC7Bz0B,KAAK64D,MAAQF,EAAKlkC,MAAM,KAAK,GAC7Bz0B,KAAK84D,MAAQH,EAAKlkC,MAAM,KAAKniB,MAAM,GAAGxK,KAAK,OAOzB,qBAStBixD,GAA8C,WAC9C,SAASA,KAMT,OAJAA,EAA6Bl4D,UAAUm4D,SAAW,SAAUxkD,GAAO,OAAO+mB,GAAqB/mB,IAC/FukD,EAA6Bl4D,UAAUC,OAAS,SAAUm4D,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EAPsC,GAS7CI,GAAkB,SAAU5zD,EAAOmuB,GAAQ,OAAOA,GAKlDwlC,GAAuC,WACvC,SAASA,EAAsBD,GAC3Bj5D,KAAKsB,OAAS,EAEdtB,KAAKo5D,eAAiB,KAEtBp5D,KAAKq5D,iBAAmB,KACxBr5D,KAAKs5D,gBAAkB,KACvBt5D,KAAKu5D,QAAU,KACfv5D,KAAKw5D,QAAU,KACfx5D,KAAKy5D,eAAiB,KACtBz5D,KAAK05D,eAAiB,KACtB15D,KAAK25D,WAAa,KAClB35D,KAAK45D,WAAa,KAClB55D,KAAK65D,cAAgB,KACrB75D,KAAK85D,cAAgB,KAErB95D,KAAK+5D,qBAAuB,KAC5B/5D,KAAKg6D,qBAAuB,KAC5Bh6D,KAAKi6D,WAAahB,GAAaE,GAwdnC,OAtdAD,EAAsBr4D,UAAUq5D,YAAc,SAAUzxD,GACpD,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKu5D,QAAoB,OAAX5lD,EAAiBA,EAASA,EAAOwmD,MACzD1xD,EAAGkL,IAGXulD,EAAsBr4D,UAAUu5D,iBAAmB,SAAU3xD,GAKzD,IAJA,IAAI4xD,EAASr6D,KAAKu5D,QACde,EAAat6D,KAAK65D,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAI3mD,GAAU2mD,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiB/mD,EAAQ4mD,EAAiBC,GAC7DC,EAAe9mD,EAAO8mD,aAE1B,GAAI9mD,IAAW2mD,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxBxmD,EAAOknD,cACPN,QAEC,CAEIC,IACDA,MACJ,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAI55D,EAAI,EAAGA,EAAI25D,EAAwB35D,IAAK,CAC7C,IAAIgqC,EAAShqC,EAAIq5D,EAAYl5D,OAASk5D,EAAYr5D,GAAMq5D,EAAYr5D,GAAK,EACrEoE,EAAQ4lC,EAAShqC,EACjB45D,GAAqBx1D,GAASA,EAAQu1D,IACtCN,EAAYr5D,GAAKgqC,EAAS,GAIlCqvB,EADoB7mD,EAAOknD,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrBhyD,EAAGkL,EAAQgnD,EAAkBF,KAIzCvB,EAAsBr4D,UAAUm6D,oBAAsB,SAAUvyD,GAC5D,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKs5D,gBAA4B,OAAX3lD,EAAiBA,EAASA,EAAOsnD,cACjExyD,EAAGkL,IAGXulD,EAAsBr4D,UAAUq6D,iBAAmB,SAAUzyD,GACzD,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKy5D,eAA2B,OAAX9lD,EAAiBA,EAASA,EAAOwnD,WAChE1yD,EAAGkL,IAGXulD,EAAsBr4D,UAAUu6D,iBAAmB,SAAU3yD,GACzD,IAAIkL,EACJ,IAAKA,EAAS3T,KAAK25D,WAAuB,OAAXhmD,EAAiBA,EAASA,EAAO0nD,WAC5D5yD,EAAGkL,IAGXulD,EAAsBr4D,UAAUy6D,mBAAqB,SAAU7yD,GAC3D,IAAIkL,EACJ,IAAKA,EAAS3T,KAAK65D,cAA0B,OAAXlmD,EAAiBA,EAASA,EAAOinD,aAC/DnyD,EAAGkL,IAGXulD,EAAsBr4D,UAAU06D,sBAAwB,SAAU9yD,GAC9D,IAAIkL,EACJ,IAAKA,EAAS3T,KAAK+5D,qBAAiC,OAAXpmD,EAAiBA,EAASA,EAAO6nD,oBACtE/yD,EAAGkL,IAGXulD,EAAsBr4D,UAAU46D,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,OACCngC,GAAqBmgC,GACtB,MAAM,IAAIh1D,MAAM,yBAA2BkB,EAAU8zD,GAAc,4CAEvE,OAAI17D,KAAK27D,MAAMD,GACJ17D,KAGA,MAGfk5D,EAAsBr4D,UAAU6f,UAAY,aAC5Cw4C,EAAsBr4D,UAAU86D,MAAQ,SAAUD,GAC9C,IAAI3gD,EAAQ/a,KACZA,KAAK47D,SACL,IAEIr2D,EACAmuB,EACAmoC,EAJAloD,EAAS3T,KAAKu5D,QACduC,GAAa,EAIjB,GAAIv7D,MAAMmK,QAAQgxD,GAAa,CAC3B17D,KAAKsB,OAASo6D,EAAWp6D,OACzB,IAAK,IAAIy6D,EAAU,EAAGA,EAAU/7D,KAAKsB,OAAQy6D,IAEzCF,EAAc77D,KAAKi6D,WAAW8B,EAD9BroC,EAAOgoC,EAAWK,IAEH,OAAXpoD,GAAoBunB,GAAevnB,EAAOqoD,UAAWH,IAKjDC,IAEAnoD,EAAS3T,KAAKi8D,mBAAmBtoD,EAAQ+f,EAAMmoC,EAAaE,IAE3D7gC,GAAevnB,EAAO+f,KAAMA,IAC7B1zB,KAAKk8D,mBAAmBvoD,EAAQ+f,KATpC/f,EAAS3T,KAAKm8D,UAAUxoD,EAAQ+f,EAAMmoC,EAAaE,GACnDD,GAAa,GAUjBnoD,EAASA,EAAOwmD,WAIpB50D,EAAQ,EAt0QpB,SAAS62D,EAAkB5nD,EAAK/L,GAC5B,GAAIlI,MAAMmK,QAAQ8J,GACd,IAAK,IAAIrT,EAAI,EAAGA,EAAIqT,EAAIlT,OAAQH,IAC5BsH,EAAG+L,EAAIrT,SAMX,IAFA,IAAI4B,EAAWyR,EAAIumB,QACfrH,OAAO,IACDA,EAAO3wB,EAASC,QAAY,MAClCyF,EAAGirB,EAAKzwB,OA6zQRm5D,CAAkBV,EAAY,SAAUhoC,GACpCmoC,EAAc9gD,EAAMk/C,WAAW10D,EAAOmuB,GACvB,OAAX/f,GAAoBunB,GAAevnB,EAAOqoD,UAAWH,IAKjDC,IAEAnoD,EAASoH,EAAMkhD,mBAAmBtoD,EAAQ+f,EAAMmoC,EAAat2D,IAE5D21B,GAAevnB,EAAO+f,KAAMA,IAC7B3Y,EAAMmhD,mBAAmBvoD,EAAQ+f,KATrC/f,EAASoH,EAAMohD,UAAUxoD,EAAQ+f,EAAMmoC,EAAat2D,GACpDu2D,GAAa,GAUjBnoD,EAASA,EAAOwmD,MAChB50D,MAEJvF,KAAKsB,OAASiE,EAIlB,OAFAvF,KAAKq8D,UAAU1oD,GACf3T,KAAK07D,WAAaA,EACX17D,KAAK6tC,SAEhBztC,OAAO+B,eAAe+2D,EAAsBr4D,UAAW,WAInDsJ,IAAK,WACD,OAA+B,OAAxBnK,KAAKy5D,gBAA+C,OAApBz5D,KAAK25D,YACjB,OAAvB35D,KAAK65D,eAAwD,OAA9B75D,KAAK+5D,sBAE5CvjD,YAAY,EACZC,cAAc,IAUlByiD,EAAsBr4D,UAAU+6D,OAAS,WACrC,GAAI57D,KAAK6tC,QAAS,CACd,IAAIl6B,OAAS,EACT2oD,OAAa,EACjB,IAAK3oD,EAAS3T,KAAKs5D,gBAAkBt5D,KAAKu5D,QAAoB,OAAX5lD,EAAiBA,EAASA,EAAOwmD,MAChFxmD,EAAOsnD,cAAgBtnD,EAAOwmD,MAElC,IAAKxmD,EAAS3T,KAAKy5D,eAA2B,OAAX9lD,EAAiBA,EAASA,EAAOwnD,WAChExnD,EAAOknD,cAAgBlnD,EAAO8mD,aAGlC,IADAz6D,KAAKy5D,eAAiBz5D,KAAK05D,eAAiB,KACvC/lD,EAAS3T,KAAK25D,WAAuB,OAAXhmD,EAAiBA,EAAS2oD,EACrD3oD,EAAOknD,cAAgBlnD,EAAO8mD,aAC9B6B,EAAa3oD,EAAO0nD,WAExBr7D,KAAK25D,WAAa35D,KAAK45D,WAAa,KACpC55D,KAAK65D,cAAgB75D,KAAK85D,cAAgB,KAC1C95D,KAAK+5D,qBAAuB/5D,KAAKg6D,qBAAuB,OAehEd,EAAsBr4D,UAAUs7D,UAAY,SAAUxoD,EAAQ+f,EAAMmoC,EAAat2D,GAE7E,IAAIg3D,EAkCJ,OAjCe,OAAX5oD,EACA4oD,EAAiBv8D,KAAKw5D,SAGtB+C,EAAiB5oD,EAAO6oD,MAExBx8D,KAAKy8D,QAAQ9oD,IAIF,QADfA,EAAiC,OAAxB3T,KAAKo5D,eAA0B,KAAOp5D,KAAKo5D,eAAejvD,IAAI0xD,EAAat2D,KAI3E21B,GAAevnB,EAAO+f,KAAMA,IAC7B1zB,KAAKk8D,mBAAmBvoD,EAAQ+f,GACpC1zB,KAAK08D,WAAW/oD,EAAQ4oD,EAAgBh3D,IAKzB,QADfoO,EAAmC,OAA1B3T,KAAKq5D,iBAA4B,KAAOr5D,KAAKq5D,iBAAiBlvD,IAAI0xD,EAAa,QAI/E3gC,GAAevnB,EAAO+f,KAAMA,IAC7B1zB,KAAKk8D,mBAAmBvoD,EAAQ+f,GACpC1zB,KAAK28D,eAAehpD,EAAQ4oD,EAAgBh3D,IAI5CoO,EACI3T,KAAK48D,UAAU,IAAIC,GAAsBnpC,EAAMmoC,GAAcU,EAAgBh3D,GAGlFoO,GA6BXulD,EAAsBr4D,UAAUo7D,mBAAqB,SAAUtoD,EAAQ+f,EAAMmoC,EAAat2D,GACtF,IAAIu3D,EAA2C,OAA1B98D,KAAKq5D,iBAA4B,KAAOr5D,KAAKq5D,iBAAiBlvD,IAAI0xD,EAAa,MAQpG,OAPuB,OAAnBiB,EACAnpD,EAAS3T,KAAK28D,eAAeG,EAAgBnpD,EAAO6oD,MAAOj3D,GAEtDoO,EAAO8mD,cAAgBl1D,IAC5BoO,EAAO8mD,aAAel1D,EACtBvF,KAAK+8D,YAAYppD,EAAQpO,IAEtBoO,GASXulD,EAAsBr4D,UAAUw7D,UAAY,SAAU1oD,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAI2oD,EAAa3oD,EAAOwmD,MACxBn6D,KAAKg9D,eAAeh9D,KAAKi9D,QAAQtpD,IACjCA,EAAS2oD,EAEiB,OAA1Bt8D,KAAKq5D,kBACLr5D,KAAKq5D,iBAAiBz7C,QAEE,OAAxB5d,KAAK05D,iBACL15D,KAAK05D,eAAeyB,WAAa,MAEb,OAApBn7D,KAAK45D,aACL55D,KAAK45D,WAAWyB,WAAa,MAEZ,OAAjBr7D,KAAKw5D,UACLx5D,KAAKw5D,QAAQW,MAAQ,MAEE,OAAvBn6D,KAAK85D,gBACL95D,KAAK85D,cAAcc,aAAe,MAEJ,OAA9B56D,KAAKg6D,uBACLh6D,KAAKg6D,qBAAqBwB,oBAAsB,OAIxDtC,EAAsBr4D,UAAU87D,eAAiB,SAAUhpD,EAAQupD,EAAY33D,GAC7C,OAA1BvF,KAAKq5D,kBACLr5D,KAAKq5D,iBAAiB3rB,OAAO/5B,GAEjC,IAAIwpD,EAAOxpD,EAAOypD,aACdp6D,EAAO2Q,EAAOinD,aAelB,OAda,OAATuC,EACAn9D,KAAK65D,cAAgB72D,EAGrBm6D,EAAKvC,aAAe53D,EAEX,OAATA,EACAhD,KAAK85D,cAAgBqD,EAGrBn6D,EAAKo6D,aAAeD,EAExBn9D,KAAKq9D,aAAa1pD,EAAQupD,EAAY33D,GACtCvF,KAAK+8D,YAAYppD,EAAQpO,GAClBoO,GAGXulD,EAAsBr4D,UAAU67D,WAAa,SAAU/oD,EAAQupD,EAAY33D,GAIvE,OAHAvF,KAAKi9D,QAAQtpD,GACb3T,KAAKq9D,aAAa1pD,EAAQupD,EAAY33D,GACtCvF,KAAK+8D,YAAYppD,EAAQpO,GAClBoO,GAGXulD,EAAsBr4D,UAAU+7D,UAAY,SAAUjpD,EAAQupD,EAAY33D,GAatE,OAZAvF,KAAKq9D,aAAa1pD,EAAQupD,EAAY33D,GAIlCvF,KAAK05D,eAHmB,OAAxB15D,KAAK05D,eAGiB15D,KAAKy5D,eAAiB9lD,EAMtB3T,KAAK05D,eAAeyB,WAAaxnD,EAEpDA,GAGXulD,EAAsBr4D,UAAUw8D,aAAe,SAAU1pD,EAAQupD,EAAY33D,GAKzE,IAAIvC,EAAsB,OAAfk6D,EAAsBl9D,KAAKu5D,QAAU2D,EAAW/C,MAuB3D,OAnBAxmD,EAAOwmD,MAAQn3D,EACf2Q,EAAO6oD,MAAQU,EACF,OAATl6D,EACAhD,KAAKw5D,QAAU7lD,EAGf3Q,EAAKw5D,MAAQ7oD,EAEE,OAAfupD,EACAl9D,KAAKu5D,QAAU5lD,EAGfupD,EAAW/C,MAAQxmD,EAEK,OAAxB3T,KAAKo5D,iBACLp5D,KAAKo5D,eAAiB,IAAIkE,IAE9Bt9D,KAAKo5D,eAAemE,IAAI5pD,GACxBA,EAAO8mD,aAAel1D,EACfoO,GAGXulD,EAAsBr4D,UAAU47D,QAAU,SAAU9oD,GAChD,OAAO3T,KAAKg9D,eAAeh9D,KAAKi9D,QAAQtpD,KAG5CulD,EAAsBr4D,UAAUo8D,QAAU,SAAUtpD,GACpB,OAAxB3T,KAAKo5D,gBACLp5D,KAAKo5D,eAAe1rB,OAAO/5B,GAE/B,IAAIwpD,EAAOxpD,EAAO6oD,MACdx5D,EAAO2Q,EAAOwmD,MAgBlB,OAZa,OAATgD,EACAn9D,KAAKu5D,QAAUv2D,EAGfm6D,EAAKhD,MAAQn3D,EAEJ,OAATA,EACAhD,KAAKw5D,QAAU2D,EAGfn6D,EAAKw5D,MAAQW,EAEVxpD,GAGXulD,EAAsBr4D,UAAUk8D,YAAc,SAAUppD,EAAQ6pD,GAG5D,OAAI7pD,EAAOknD,gBAAkB2C,EAClB7pD,GAKP3T,KAAK45D,WAHe,OAApB55D,KAAK45D,WAGa55D,KAAK25D,WAAahmD,EAKlB3T,KAAK45D,WAAWyB,WAAa1nD,EAE5CA,IAEXulD,EAAsBr4D,UAAUm8D,eAAiB,SAAUrpD,GAoBvD,OAnB8B,OAA1B3T,KAAKq5D,mBACLr5D,KAAKq5D,iBAAmB,IAAIiE,IAEhCt9D,KAAKq5D,iBAAiBkE,IAAI5pD,GAC1BA,EAAO8mD,aAAe,KACtB9mD,EAAOinD,aAAe,KACK,OAAvB56D,KAAK85D,eAGL95D,KAAK85D,cAAgB95D,KAAK65D,cAAgBlmD,EAC1CA,EAAOypD,aAAe,OAMtBzpD,EAAOypD,aAAep9D,KAAK85D,cAC3B95D,KAAK85D,cAAgB95D,KAAK85D,cAAcc,aAAejnD,GAEpDA,GAGXulD,EAAsBr4D,UAAUq7D,mBAAqB,SAAUvoD,EAAQ+f,GAQnE,OAPA/f,EAAO+f,KAAOA,EAEV1zB,KAAKg6D,qBADyB,OAA9Bh6D,KAAKg6D,qBACuBh6D,KAAK+5D,qBAAuBpmD,EAG5B3T,KAAKg6D,qBAAqBwB,oBAAsB7nD,EAEzEA,GAEJulD,EA3e+B,GA6etC2D,GACA,SAASA,GAAsBnpC,EAAMsoC,GACjCh8D,KAAK0zB,KAAOA,EACZ1zB,KAAKg8D,UAAYA,EACjBh8D,KAAKy6D,aAAe,KACpBz6D,KAAK66D,cAAgB,KAErB76D,KAAKi7D,cAAgB,KAErBj7D,KAAKw8D,MAAQ,KAEbx8D,KAAKm6D,MAAQ,KAEbn6D,KAAKy9D,SAAW,KAEhBz9D,KAAK09D,SAAW,KAEhB19D,KAAKo9D,aAAe,KAEpBp9D,KAAK46D,aAAe,KAEpB56D,KAAKm7D,WAAa,KAElBn7D,KAAKq7D,WAAa,KAElBr7D,KAAKw7D,oBAAsB,MAK/BmC,GAA0C,WAC1C,SAASA,IAEL39D,KAAK49D,MAAQ,KAEb59D,KAAK69D,MAAQ,KAiEjB,OA1DAF,EAAyB98D,UAAU0sC,IAAM,SAAU55B,GAC5B,OAAf3T,KAAK49D,OACL59D,KAAK49D,MAAQ59D,KAAK69D,MAAQlqD,EAC1BA,EAAO+pD,SAAW,KAClB/pD,EAAO8pD,SAAW,OAMlBz9D,KAAK69D,MAAMH,SAAW/pD,EACtBA,EAAO8pD,SAAWz9D,KAAK69D,MACvBlqD,EAAO+pD,SAAW,KAClB19D,KAAK69D,MAAQlqD,IAKrBgqD,EAAyB98D,UAAUsJ,IAAM,SAAU6xD,EAAW8B,GAC1D,IAAInqD,EACJ,IAAKA,EAAS3T,KAAK49D,MAAkB,OAAXjqD,EAAiBA,EAASA,EAAO+pD,SACvD,IAAwB,OAAnBI,GAA2BA,GAAkBnqD,EAAO8mD,eACrDv/B,GAAevnB,EAAOqoD,UAAWA,GACjC,OAAOroD,EAGf,OAAO,MAOXgqD,EAAyB98D,UAAU6sC,OAAS,SAAU/5B,GASlD,IAAIwpD,EAAOxpD,EAAO8pD,SACdz6D,EAAO2Q,EAAO+pD,SAalB,OAZa,OAATP,EACAn9D,KAAK49D,MAAQ56D,EAGbm6D,EAAKO,SAAW16D,EAEP,OAATA,EACAhD,KAAK69D,MAAQV,EAGbn6D,EAAKy6D,SAAWN,EAEE,OAAfn9D,KAAK49D,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACLt9D,KAAK6H,IAAM,IAAIkL,IA2CnB,OAzCAuqD,EAAcz8D,UAAU08D,IAAM,SAAU5pD,GACpC,IAAI/R,EAAM+R,EAAOqoD,UACb+B,EAAa/9D,KAAK6H,IAAIsC,IAAIvI,GACzBm8D,IACDA,EAAa,IAAIJ,GACjB39D,KAAK6H,IAAImL,IAAIpR,EAAKm8D,IAEtBA,EAAWxwB,IAAI55B,IASnB2pD,EAAcz8D,UAAUsJ,IAAM,SAAU6xD,EAAW8B,GAC/C,IACIE,EAAah+D,KAAK6H,IAAIsC,IADhB6xD,GAEV,OAAOgC,EAAaA,EAAW7zD,IAAI6xD,EAAW8B,GAAkB,MAOpER,EAAcz8D,UAAU6sC,OAAS,SAAU/5B,GACvC,IAAI/R,EAAM+R,EAAOqoD,UAMjB,OALiBh8D,KAAK6H,IAAIsC,IAAIvI,GAEf8rC,OAAO/5B,IAClB3T,KAAK6H,IAAIo2D,OAAOr8D,GAEb+R,GAEXvT,OAAO+B,eAAem7D,EAAcz8D,UAAW,WAC3CsJ,IAAK,WAAc,OAAyB,IAAlBnK,KAAK6H,IAAIiP,MACnCN,YAAY,EACZC,cAAc,IAElB6mD,EAAcz8D,UAAU+c,MAAQ,WAAc5d,KAAK6H,IAAI+V,SAChD0/C,EA7CuB,GA+ClC,SAAS5C,GAAiBhnC,EAAM6mC,EAAiBC,GAC7C,IAAIK,EAAgBnnC,EAAKmnC,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAIqD,EAAa,EAIjB,OAHI1D,GAAeK,EAAgBL,EAAYl5D,SAC3C48D,EAAa1D,EAAYK,IAEtBA,EAAgBN,EAAkB2D;;;;;;;OAU7C,IAAIC,GAA8C,WAC9C,SAASA,KAIT,OAFAA,EAA6Bt9D,UAAUm4D,SAAW,SAAUxkD,GAAO,OAAOA,aAAezB,KAAOqpB,GAAa5nB,IAC7G2pD,EAA6Bt9D,UAAUC,OAAS,WAAc,OAAO,IAAIs9D,IAClED,EALsC,GAO7CC,GAAuC,WACvC,SAASA,IACLp+D,KAAK8S,SAAW,IAAIC,IACpB/S,KAAKq+D,SAAW,KAEhBr+D,KAAKs+D,aAAe,KACpBt+D,KAAKu+D,iBAAmB,KACxBv+D,KAAKw+D,aAAe,KACpBx+D,KAAKy+D,aAAe,KACpBz+D,KAAKy5D,eAAiB,KACtBz5D,KAAK05D,eAAiB,KACtB15D,KAAK65D,cAAgB,KACrB75D,KAAK85D,cAAgB,KA+MzB,OA7MA15D,OAAO+B,eAAei8D,EAAsBv9D,UAAW,WACnDsJ,IAAK,WACD,OAA+B,OAAxBnK,KAAKy5D,gBAAiD,OAAtBz5D,KAAKw+D,cACjB,OAAvBx+D,KAAK65D,eAEbrjD,YAAY,EACZC,cAAc,IAElB2nD,EAAsBv9D,UAAUq5D,YAAc,SAAUzxD,GACpD,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKq+D,SAAqB,OAAX1qD,EAAiBA,EAASA,EAAOwmD,MAC1D1xD,EAAGkL,IAGXyqD,EAAsBv9D,UAAUm6D,oBAAsB,SAAUvyD,GAC5D,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKu+D,iBAA6B,OAAX5qD,EAAiBA,EAASA,EAAOsnD,cAClExyD,EAAGkL,IAGXyqD,EAAsBv9D,UAAU69D,mBAAqB,SAAUj2D,GAC3D,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKw+D,aAAyB,OAAX7qD,EAAiBA,EAASA,EAAOgrD,aAC9Dl2D,EAAGkL,IAGXyqD,EAAsBv9D,UAAUq6D,iBAAmB,SAAUzyD,GACzD,IAAIkL,EACJ,IAAKA,EAAS3T,KAAKy5D,eAA2B,OAAX9lD,EAAiBA,EAASA,EAAOwnD,WAChE1yD,EAAGkL,IAGXyqD,EAAsBv9D,UAAUy6D,mBAAqB,SAAU7yD,GAC3D,IAAIkL,EACJ,IAAKA,EAAS3T,KAAK65D,cAA0B,OAAXlmD,EAAiBA,EAASA,EAAOinD,aAC/DnyD,EAAGkL,IAGXyqD,EAAsBv9D,UAAU46D,KAAO,SAAU5zD,GAC7C,GAAKA,GAGA,KAAMA,aAAekL,KAAOqpB,GAAav0B,IAC1C,MAAM,IAAInB,MAAM,yBAA2BkB,EAAUC,GAAO,6CAH5DA,EAAM,IAAIkL,IAKd,OAAO/S,KAAK27D,MAAM9zD,GAAO7H,KAAO,MAEpCo+D,EAAsBv9D,UAAU6f,UAAY,aAK5C09C,EAAsBv9D,UAAU86D,MAAQ,SAAU9zD,GAC9C,IAAIkT,EAAQ/a,KACZA,KAAK47D,SACL,IAAIh5B,EAAe5iC,KAAKq+D,SAcxB,GAbAr+D,KAAKs+D,aAAe,KACpBt+D,KAAK4+D,SAAS/2D,EAAK,SAAU5E,EAAOrB,GAChC,GAAIghC,GAAgBA,EAAahhC,MAAQA,EACrCmZ,EAAM8jD,mBAAmBj8B,EAAc3/B,GACvC8X,EAAMujD,aAAe17B,EACrBA,EAAeA,EAAau3B,UAE3B,CACD,IAAIxmD,EAASoH,EAAM+jD,yBAAyBl9D,EAAKqB,GACjD2/B,EAAe7nB,EAAMgkD,sBAAsBn8B,EAAcjvB,MAI7DivB,EAAc,CACVA,EAAa45B,QACb55B,EAAa45B,MAAMrC,MAAQ,MAE/Bn6D,KAAK65D,cAAgBj3B,EACrB,IAAK,IAAIjvB,EAASivB,EAAyB,OAAXjvB,EAAiBA,EAASA,EAAOinD,aACzDjnD,IAAW3T,KAAKq+D,WAChBr+D,KAAKq+D,SAAW,MAEpBr+D,KAAK8S,SAASmrD,OAAOtqD,EAAO/R,KAC5B+R,EAAOinD,aAAejnD,EAAOwmD,MAC7BxmD,EAAOy5C,cAAgBz5C,EAAOk1B,aAC9Bl1B,EAAOk1B,aAAe,KACtBl1B,EAAO6oD,MAAQ,KACf7oD,EAAOwmD,MAAQ,KAQvB,OAJIn6D,KAAKy+D,eACLz+D,KAAKy+D,aAAaE,aAAe,MACjC3+D,KAAK05D,iBACL15D,KAAK05D,eAAeyB,WAAa,MAC9Bn7D,KAAK6tC,SAUhBuwB,EAAsBv9D,UAAUk+D,sBAAwB,SAAUC,EAAQrrD,GACtE,GAAIqrD,EAAQ,CACR,IAAI7B,EAAO6B,EAAOxC,MAWlB,OAVA7oD,EAAOwmD,MAAQ6E,EACfrrD,EAAO6oD,MAAQW,EACf6B,EAAOxC,MAAQ7oD,EACXwpD,IACAA,EAAKhD,MAAQxmD,GAEbqrD,IAAWh/D,KAAKq+D,WAChBr+D,KAAKq+D,SAAW1qD,GAEpB3T,KAAKs+D,aAAeU,EACbA,EAUX,OARIh/D,KAAKs+D,cACLt+D,KAAKs+D,aAAanE,MAAQxmD,EAC1BA,EAAO6oD,MAAQx8D,KAAKs+D,cAGpBt+D,KAAKq+D,SAAW1qD,EAEpB3T,KAAKs+D,aAAe3qD,EACb,MAEXyqD,EAAsBv9D,UAAUi+D,yBAA2B,SAAUl9D,EAAKqB,GACtE,GAAIjD,KAAK8S,SAAS8D,IAAIhV,GAAM,CACxB,IAAIq9D,EAAWj/D,KAAK8S,SAAS3I,IAAIvI,GACjC5B,KAAK6+D,mBAAmBI,EAAUh8D,GAClC,IAAIk6D,EAAO8B,EAASzC,MAChBx5D,EAAOi8D,EAAS9E,MASpB,OARIgD,IACAA,EAAKhD,MAAQn3D,GAEbA,IACAA,EAAKw5D,MAAQW,GAEjB8B,EAAS9E,MAAQ,KACjB8E,EAASzC,MAAQ,KACVyC,EAEX,IAAItrD,EAAS,IAAIurD,GAAsBt9D,GAIvC,OAHA5B,KAAK8S,SAASE,IAAIpR,EAAK+R,GACvBA,EAAOk1B,aAAe5lC,EACtBjD,KAAKm/D,gBAAgBxrD,GACdA,GAGXyqD,EAAsBv9D,UAAU+6D,OAAS,WACrC,GAAI57D,KAAK6tC,QAAS,CACd,IAAIl6B,OAAS,EAGb,IADA3T,KAAKu+D,iBAAmBv+D,KAAKq+D,SACxB1qD,EAAS3T,KAAKu+D,iBAA6B,OAAX5qD,EAAiBA,EAASA,EAAOwmD,MAClExmD,EAAOsnD,cAAgBtnD,EAAOwmD,MAIlC,IAAKxmD,EAAS3T,KAAKw+D,aAAyB,OAAX7qD,EAAiBA,EAASA,EAAOgrD,aAC9DhrD,EAAOy5C,cAAgBz5C,EAAOk1B,aAElC,IAAKl1B,EAAS3T,KAAKy5D,eAA0B,MAAV9lD,EAAgBA,EAASA,EAAOwnD,WAC/DxnD,EAAOy5C,cAAgBz5C,EAAOk1B,aAElC7oC,KAAKw+D,aAAex+D,KAAKy+D,aAAe,KACxCz+D,KAAKy5D,eAAiBz5D,KAAK05D,eAAiB,KAC5C15D,KAAK65D,cAAgB,OAI7BuE,EAAsBv9D,UAAUg+D,mBAAqB,SAAUlrD,EAAQu8B,GAC9DhV,GAAegV,EAAUv8B,EAAOk1B,gBACjCl1B,EAAOy5C,cAAgBz5C,EAAOk1B,aAC9Bl1B,EAAOk1B,aAAeqH,EACtBlwC,KAAKo/D,cAAczrD,KAG3ByqD,EAAsBv9D,UAAUs+D,gBAAkB,SAAUxrD,GAC5B,OAAxB3T,KAAKy5D,eACLz5D,KAAKy5D,eAAiBz5D,KAAK05D,eAAiB/lD,GAG5C3T,KAAK05D,eAAeyB,WAAaxnD,EACjC3T,KAAK05D,eAAiB/lD,IAG9ByqD,EAAsBv9D,UAAUu+D,cAAgB,SAAUzrD,GAC5B,OAAtB3T,KAAKw+D,aACLx+D,KAAKw+D,aAAex+D,KAAKy+D,aAAe9qD,GAGxC3T,KAAKy+D,aAAaE,aAAehrD,EACjC3T,KAAKy+D,aAAe9qD,IAI5ByqD,EAAsBv9D,UAAU+9D,SAAW,SAAUpqD,EAAK/L,GAClD+L,aAAezB,IACfyB,EAAIjH,QAAQ9E,GAGZrI,OAAOkN,KAAKkH,GAAKjH,QAAQ,SAAU8H,GAAK,OAAO5M,EAAG+L,EAAIa,GAAIA,MAG3D+oD,EA3N+B,GA6NtCc,GACA,SAASA,GAAsBt9D,GAC3B5B,KAAK4B,IAAMA,EACX5B,KAAKotD,cAAgB,KACrBptD,KAAK6oC,aAAe,KAEpB7oC,KAAKi7D,cAAgB,KAErBj7D,KAAKm6D,MAAQ,KAEbn6D,KAAKw8D,MAAQ,KAEbx8D,KAAKm7D,WAAa,KAElBn7D,KAAK46D,aAAe,KAEpB56D,KAAK2+D,aAAe,MAiBxBU,GAAiC,WACjC,SAASA,EAAgB/L,GACrBtzD,KAAKszD,UAAYA,EA2DrB,OAzDA+L,EAAgBv+D,OAAS,SAAUwyD,EAAWvhD,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAIutD,EAASvtD,EAAOuhD,UAAUhhD,QAC9BghD,EAAYA,EAAU7vD,OAAO67D,GAEjC,OAAO,IAAID,EAAgB/L,IAsB/B+L,EAAgBE,OAAS,SAAUjM,GAC/B,OACI1jD,QAASyvD,EACTlvD,WAAY,SAAU4B,GAClB,IAAKA,EAID,MAAM,IAAIrL,MAAM,2DAEpB,OAAO24D,EAAgBv+D,OAAOwyD,EAAWvhD,IAG7C/C,OAAQqwD,EAAiB,IAAIj5D,EAAY,IAAIF,MAGrDm5D,EAAgBx+D,UAAU2+D,KAAO,SAAUC,GACvC,IAAIpgE,EAAUW,KAAKszD,UAAUkM,KAAK,SAAUzM,GAAK,OAAOA,EAAEiG,SAASyG,KACnE,GAAe,MAAXpgE,EACA,OAAOA,EAGP,MAAM,IAAIqH,MAAM,2CAA6C+4D,EAAW,cAUpF,SAASC,EAAwBp4D,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAXkEo4D,CAAwBD,GAAY,MAIpIJ,EAAgB33D,gBAAkBb,GAC9BE,WAAY,OACZ1H,QAAS,WAAc,OAAO,IAAIggE,GAAiB,IAAItG,QAEpDsG,EA7DyB,GA+EhCM,GAAiC,WACjC,SAASA,EAAgBrM,GACrBtzD,KAAKszD,UAAYA,EAwDrB,OAtDAqM,EAAgB7+D,OAAS,SAAUwyD,EAAWvhD,GAC1C,GAAIA,EAAQ,CACR,IAAIutD,EAASvtD,EAAOuhD,UAAUhhD,QAC9BghD,EAAYA,EAAU7vD,OAAO67D,GAEjC,OAAO,IAAIK,EAAgBrM,IAsB/BqM,EAAgBJ,OAAS,SAAUjM,GAC/B,OACI1jD,QAAS+vD,EACTxvD,WAAY,SAAU4B,GAClB,IAAKA,EAGD,MAAM,IAAIrL,MAAM,2DAEpB,OAAOi5D,EAAgB7+D,OAAOwyD,EAAWvhD,IAG7C/C,OAAQ2wD,EAAiB,IAAIv5D,EAAY,IAAIF,MAGrDy5D,EAAgB9+D,UAAU2+D,KAAO,SAAUI,GACvC,IAAIvgE,EAAUW,KAAKszD,UAAUkM,KAAK,SAAUzM,GAAK,OAAOA,EAAEiG,SAAS4G,KACnE,GAAIvgE,EACA,OAAOA,EAEX,MAAM,IAAIqH,MAAM,2CAA6Ck5D,EAAK,MAGtED,EAAgBj4D,gBAAkBb,GAC9BE,WAAY,OACZ1H,QAAS,WAAc,OAAO,IAAIsgE,GAAiB,IAAIxB,QAEpDwB,EA1DyB,GA8GhCE,GAAmC,WACnC,SAASA,KAOT,OADAA,EAAkBruD,kBAAoB,WAAc,OAAOsuD,MACpDD,EAR2B,GAiBlCC,GAN+C,WAE/C,IADA,IAAIv7D,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,IAezBu7D,IAAc,IAAI5B,IAKlB6B,GAAyB,IAAIX,IADb,IAAItG,KAEpBkH,GAAyB,IAAIN,GAAgBI,IA2B7CG,GAA6B,WAC7B,SAASA,KAOT,OADAA,EAAY1uD,kBAAoB,WAAc,OAAO2uD,GAA4BD,EAAarI,KACvFqI,EARqB,GAY5BC,GADwCxI,GAyBxCyI,GAAkC,WAClC,SAASA,KAOT,OADAA,EAAiB5uD,kBAAoB,WAAc,OAAO6uD,GAAkCD,EAAkBvI,KACvGuI,EAR0B,GAYjCC,GAD8C1I;;;;;;;;AAUlD,SAAS2I,GAA4C3rD,EAASuX,EAAU0f,EAAW20B,GAC/E,IAAI5qD,EAAM,8GAAgHuW,EAAW,sBAAwB0f,EAAY,KAMzK,OALI20B,IACA5qD,GACI,wJAcZ,SAAS6qD,EAAe7qD,EAAKhB,GACzB,IAAI8rD,EAAM,IAAI/5D,MAAMiP,GAEpB,OADA+qD,GAAiBD,EAAK9rD,GACf8rD,EAdAD,CAAe7qD,EAAKhB,GAgB/B,SAAS+rD,GAAiBD,EAAK9rD,GAC3B8rD,EAAI1rD,IAAuBJ,EAC3B8rD,EAAIxrD,IAAgBN,EAAQgsD,SAASj8D,KAAKiQ,GAK9C,SAASisD,GAAmB7gC,GACxB,OAAO,IAAIr5B,MAAM,wDAA0Dq5B;;;;;;;OAc/E,SAAS8gC,GAAet7C,EAAMu7C,EAAgBC,GAU1C,IAAIn8B,EAAQrf,EAAKqf,MACbo8B,EAAoB,KAARp8B,EAChB,OAAIo8B,IAAcF,GACdv7C,EAAKqf,OAAiB,KAARA,EAAsCm8B,EACpDx7C,EAAK07C,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4B37C,EAAMy7C,EAAWz7D,GAClD,OAAkB,KAAbggB,EAAKqf,SAAuCo8B,GAAaz7C,EAAK07C,WAAa17D,IAC5EggB,EAAK07C,UAAY17D,EAAQ,GAClB,GAOf,SAAS47D,GAAW57C,EAAMhgB,GACtB,OAAOggB,EAAK67C,MAAM77D,GAKtB,SAAS87D,GAAc97C,EAAMhgB,GACzB,OAAOggB,EAAK67C,MAAM77D,GAKtB,SAAS+7D,GAAe/7C,EAAMhgB,GAC1B,OAAOggB,EAAK67C,MAAM77D,GAKtB,SAASg8D,GAAqBh8C,EAAMhgB,GAChC,OAAOggB,EAAK67C,MAAM77D,GAKtB,SAASi8D,GAAYj8C,EAAMhgB,GACvB,OAAOggB,EAAK67C,MAAM77D,GAEtB,IAAIk8D,GACA,SAASA,OAQTC,IACAC,oBAAgB36D,EAChB46D,oBAAgB56D,EAChBkwD,wBAAoBlwD,EACpB66D,yBAAqB76D,EACrB86D,uBAAmB96D,EACnB+6D,sBAAkB/6D,EAClBg7D,2BAAuBh7D,EACvBi7D,oBAAgBj7D,EAChBk7D,wBAAoBl7D,EACpBm7D,wBAAoBn7D,EACpBo7D,iBAAap7D,EACbq7D,gBAAYr7D,EACZs7D,wBAAoBt7D,EACpBu7D,iBAAav7D,EACbw7D,sBAAkBx7D,EAClBy7D,oBAAgBz7D,EAChB07D,wBAAoB17D,GAUpB27D,GAAO,aACPC,GAAiB,IAAI7vD,IACzB,SAAS8vD,GAAS58D,GACd,IAAIrE,EAAMghE,GAAez4D,IAAIlE,GAK7B,OAJKrE,IACDA,EAAMgG,EAAU3B,GAAS,IAAM28D,GAAe9rD,KAC9C8rD,GAAe5vD,IAAI/M,EAAOrE,IAEvBA,EAWX,IAYIkhE,GAAqB,EAkBzB,SAASC,GAAax9C,EAAMva,EAAKg4D,EAAY//D,GAEzC,UAAkB,EAAbsiB,EAAKqf,QACL1J,GAFW3V,EAAK09C,UAESj4D,EAAIwxB,aAAewmC,GAAa//D,IAKlE,SAASigE,GAAsB39C,EAAMva,EAAKg4D,EAAY//D,GAClD,QAAI8/D,GAAax9C,EAAMva,EAAKg4D,EAAY//D,KACpCsiB,EAAK09C,UAAUj4D,EAAIwxB,aAAewmC,GAAc//D,GACzC,GAIf,SAASkgE,GAAsB59C,EAAMva,EAAKg4D,EAAY//D,GAClD,IAAIipB,EAAW3G,EAAK09C,UAAUj4D,EAAIwxB,aAAewmC,GACjD,GAAkB,EAAbz9C,EAAKqf,QAAsCvJ,GAAenP,EAAUjpB,GAAQ,CAC7E,IAAIokC,EAAcr8B,EAAIo4D,SAASJ,GAAYl/D,KAC3C,MAAMw8D,GAA4CoB,GAASY,mBAAmB/8C,EAAMva,EAAI2a,WAAY0hB,EAAc,KAAOnb,EAAUmb,EAAc,KAAOpkC,EAAmD,IAA9B,EAAbsiB,EAAKqf,SAG7K,SAASy+B,GAAwB99C,GAE7B,IADA,IAAI+9C,EAAW/9C,EACR+9C,GACsB,EAArBA,EAASt4D,IAAIhB,QACbs5D,EAAS1+B,OAAS,GAEtB0+B,EAAWA,EAASC,qBAAuBD,EAASvxD,OAG5D,SAASyxD,GAAsCj+C,EAAMk+C,GAEjD,IADA,IAAIH,EAAW/9C,EACR+9C,GAAYA,IAAaG,GAC5BH,EAAS1+B,OAAS,GAClB0+B,EAAWA,EAASC,qBAAuBD,EAASvxD,OAG5D,SAAS2xD,GAAcn+C,EAAMI,EAAW40B,EAAWopB,GAC/C,IAMI,OADAN,GAHgC,SADlB99C,EAAKva,IAAIo2D,MAAMz7C,GACL3b,MACpBq3D,GAAc97C,EAAMI,GAAW4a,cAC/Bhb,GAEGm8C,GAASa,YAAYh9C,EAAMI,EAAW40B,EAAWopB,GAE5D,MAAOvgE,GAEHmiB,EAAKq+C,KAAKhZ,aAAah6B,YAAYxtB,IAG3C,SAASygE,GAAsBt+C,GAC3B,OAAIA,EAAKxT,OAEEsvD,GADU97C,EAAKxT,OACWwT,EAAKu+C,cAAcn+C,WAEjD,KAOX,SAASo+C,GAAax+C,GAElB,OADiBA,EAAKxT,OAEXwT,EAAKu+C,cAAc/xD,OAGnB,KAGf,SAASiyD,GAAWz+C,EAAMva,GACtB,OAAoB,UAAZA,EAAIhB,OACR,KAAK,EACD,OAAOq3D,GAAc97C,EAAMva,EAAI2a,WAAWs+C,cAC9C,KAAK,EACD,OAAO9C,GAAW57C,EAAMva,EAAI2a,WAAWu+C,YAGnD,SAASC,GAAqBxiE,EAAQmC,GAClC,OAAOnC,EAASA,EAAS,IAAMmC,EAAOA,EAE1C,SAASsgE,GAAgB7+C,GACrB,QAASA,EAAKxT,WAAwC,MAA3BwT,EAAKu+C,cAAc95D,OAElD,SAASq6D,GAAe9+C,GACpB,SAASA,EAAKxT,QAAuC,MAA3BwT,EAAKu+C,cAAc95D,OAEjD,SAASs6D,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,KACAC,EAAkB,EAClBC,KAaJ,OAZIH,GACAA,EAAkBl3D,QAAQ,SAAUjJ,GAChC,IAAIwwB,EAAK3xB,EAAOmB,EAAI,GAAIigE,EAAUzvC,EAAG,GAAI+vC,EAAY/vC,EAAG,GACjC,iBAAZyvC,GACPG,EAAeH,GAAWM,EAC1BF,GAAmBL,GAAcC,IAGjCK,EAAWL,GAAWM,KAIzBH,eAAgBA,EAAgBE,WAAYA,EAAYD,gBAAiBA,GAEtF,SAASG,GAAa91D,EAAM+1D,GACxB,OAAO/1D,EAAKnH,IAAI,SAAU5E,GACtB,IAAIqB,EACA2B,EACA+D,EAWJ,OAVIzJ,MAAMmK,QAAQzH,IACS+G,GAAvB1F,EAAKnB,EAAOF,EAAO,IAAe,GAAIgD,EAAQ3B,EAAG,KAGjD0F,EAAQ,EACR/D,EAAQhD,GAERgD,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuB8+D,GACvE3kE,OAAO+B,eAAe8D,EAAOwL,IAAUxO,MAAO8hE,EAAYtuD,cAAc,KAEnEzM,MAAOA,EAAO/D,MAAOA,EAAO48D,SAAUA,GAAS58D,MAGhE,SAAS++D,GAAuBz/C,EAAM0/C,EAAYj6D,GAC9C,IAAIg1B,EAAeh1B,EAAIg1B,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAah2B,QAC0C,IAAlC,SAArBg2B,EAAah2B,QACbg2B,EAAa1hB,QAAQ4mD,uBAClBllC,EAAa1hB,QAAQ4mD,sBAAsB9jD,gBACvC9hB,EAAQkd,kBAAkB6mB,OAG3Bg+B,GAAc97C,EAAMva,EAAIg1B,aAAara,WAAWs+C,mBAP3D,EAWOgB,EAGf,IAAIE,GAAmB,IAAIC,QAC3B,SAASC,GAAkBhmE,GACvB,IAAI4D,EAAQkiE,GAAiBh7D,IAAI9K,GAMjC,OALK4D,KACDA,EAAQ5D,EAAQ,WAAc,OAAOsjE,MAC/BtjE,QAAUA,EAChB8lE,GAAiBnyD,IAAI3T,EAAS4D,IAE3BA,EAOX,SAASqiE,GAAqB//C,EAAMwa,EAAQ9I,EAAYjD,EAAaryB,GAElD,IAAXo+B,IACA9I,EAAa1R,EAAK0Z,SAAShI,WAAW+sC,GAAWz+C,EAAMA,EAAKva,IAAIu6D,sBAEpEC,GAAwBjgD,EAAMwa,EAAQ,EAAGxa,EAAKva,IAAIo2D,MAAM9/D,OAAS,EAAG21B,EAAYjD,EAAaryB,GAEjG,SAAS6jE,GAAwBjgD,EAAMwa,EAAQ0lC,EAAY/1C,EAAUuH,EAAYjD,EAAaryB,GAC1F,IAAK,IAAIR,EAAIskE,EAAYtkE,GAAKuuB,EAAUvuB,IAAK,CACzC,IAAIukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,GACT,GAAhBukE,EAAQ17D,OACR27D,GAAgBpgD,EAAMmgD,EAAS3lC,EAAQ9I,EAAYjD,EAAaryB,GAGpER,GAAKukE,EAAQE,YAGrB,SAASC,GAA0BtgD,EAAMugD,EAAgB/lC,EAAQ9I,EAAYjD,EAAaryB,GAEtF,IADA,IAAIokE,EAAWxgD,EACRwgD,IAAa3B,GAAgB2B,IAChCA,EAAWA,EAASh0D,OAMxB,IAJA,IAAIsT,EAAW0gD,EAASh0D,OACpBi0D,EAAYjC,GAAagC,GAEzBr2C,EAAWs2C,EAAUrgD,UAAYqgD,EAAUJ,WACtCzkE,EAFQ6kE,EAAUrgD,UAAY,EAEdxkB,GAAKuuB,EAAUvuB,IAAK,CACzC,IAAIukE,EAAUrgD,EAASra,IAAIo2D,MAAMjgE,GAC7BukE,EAAQI,iBAAmBA,GAC3BH,GAAgBtgD,EAAUqgD,EAAS3lC,EAAQ9I,EAAYjD,EAAaryB,GAGxER,GAAKukE,EAAQE,WAEjB,IAAKvgD,EAAStT,OAAQ,CAElB,IAAIk0D,EAAiB1gD,EAAKq+C,KAAKjP,iBAAiBmR,GAChD,GAAIG,EACA,IAAS9kE,EAAI,EAAGA,EAAI8kE,EAAe3kE,OAAQH,IACvC+kE,GAAqB3gD,EAAM0gD,EAAe9kE,GAAI4+B,EAAQ9I,EAAYjD,EAAaryB,IAK/F,SAASgkE,GAAgBpgD,EAAMmgD,EAAS3lC,EAAQ9I,EAAYjD,EAAaryB,GACrE,GAAoB,EAAhB+jE,EAAQ17D,MACR67D,GAA0BtgD,EAAMmgD,EAAQS,UAAU5gE,MAAOw6B,EAAQ9I,EAAYjD,EAAaryB,OAEzF,CACD,IAAIykE,EAAKpC,GAAWz+C,EAAMmgD,GAe1B,GAde,IAAX3lC,GAAmD,SAAhB2lC,EAAQ17D,OACnB,GAAvB07D,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqB3gD,EAAM6gD,EAAIrmC,EAAQ9I,EAAYjD,EAAaryB,GAEzC,GAAvB+jE,EAAQW,cAERH,GADe7E,GAAc97C,EAAMmgD,EAAQ//C,WAAW4a,cACvB6lC,EAAIrmC,EAAQ9I,EAAYjD,EAAaryB,IAIxEukE,GAAqB3gD,EAAM6gD,EAAIrmC,EAAQ9I,EAAYjD,EAAaryB,GAEhD,SAAhB+jE,EAAQ17D,MAER,IADA,IAAIs8D,EAAgBjF,GAAc97C,EAAMmgD,EAAQ//C,WAAW4gD,cAAcC,eAChEnxD,EAAI,EAAGA,EAAIixD,EAAchlE,OAAQ+T,IACtCiwD,GAAqBgB,EAAcjxD,GAAI0qB,EAAQ9I,EAAYjD,EAAaryB,GAG5D,EAAhB+jE,EAAQ17D,QAAgC07D,EAAQpnD,QAAQxa,MACxD0hE,GAAwBjgD,EAAMwa,EAAQ2lC,EAAQ//C,UAAY,EAAG+/C,EAAQ//C,UAAY+/C,EAAQE,WAAY3uC,EAAYjD,EAAaryB,IAI1I,SAASukE,GAAqB3gD,EAAMy+C,EAAYjkC,EAAQ9I,EAAYjD,EAAaryB,GAC7E,IAAIs9B,EAAW1Z,EAAK0Z,SACpB,OAAQc,GACJ,KAAK,EACDd,EAAShN,YAAYgF,EAAY+sC,GACjC,MACJ,KAAK,EACD/kC,EAAS2D,aAAa3L,EAAY+sC,EAAYhwC,GAC9C,MACJ,KAAK,EACDiL,EAAShM,YAAYgE,EAAY+sC,GACjC,MACJ,KAAK,EACDriE,EAAO2B,KAAK0gE,IAIxB,IAAIyC,GAAe,kBACnB,SAASC,GAAe5iE,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAIuwB,EAAQvwB,EAAKuwB,MAAMoyC,IACvB,OAAQpyC,EAAM,GAAIA,EAAM,IAE5B,OAAQ,GAAIvwB,GAEhB,SAAS6iE,GAAiBvD,GAEtB,IADA,IAAIp5D,EAAQ,EACH7I,EAAI,EAAGA,EAAIiiE,EAAS9hE,OAAQH,IACjC6I,GAASo5D,EAASjiE,GAAG6I,MAEzB,OAAOA,EA2CX,SAAS48D,GAAkBx7D,GACvB,OAAY,MAALA,EAAYA,EAAEnD,WAAa,GAEtC,IAUI4+D,GAAkB,IAAIzmE,OACtB0mE,GAAsBjE,GAAS/wD,IAC/Bi1D,GAAsBlE,GAASjxD,IAC/Bo1D,GAAsBnE,GAAShO,IAkDnC,SAASoS,GAAmBhrD,EAAMirD,EAAQ78D,QAChB,IAAlBA,IAA4BA,EAAgByH,GAASH,oBACzD,IAAIhI,EAASF,EAAmBwS,GAChC,IACI,GAAmB,EAAfirD,EAAOl9D,MACP,OAAOk9D,EAAOjhE,MAKlB,GAHmB,EAAfihE,EAAOl9D,QACPK,EAAgB,MAED,EAAf68D,EAAOl9D,MACP,OAAOiS,EAAKrC,QAAQzP,IAAI+8D,EAAOjhE,MAAOoE,GAE1C,IAAI88D,EAAaD,EAAOrE,SACxB,OAAQsE,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAO/qD,EAEf,IACI3R,EADA88D,EAAcnrD,EAAKorD,KAAKC,eAAeH,GAE3C,GAAIC,EAAa,CACb,IAAIG,EAAmBtrD,EAAKtC,WAAWytD,EAAY7hE,OAKnD,YAJyByB,IAArBugE,IACAA,EAAmBtrD,EAAKtC,WAAWytD,EAAY7hE,OAC3CiiE,GAAwBvrD,EAAMmrD,IAE/BG,IAAqBV,QAAkB7/D,EAAYugE,EAEzD,IAAKj9D,EAAgBjD,EAAiB6/D,EAAOjhE,SAwB1D,SAASwhE,EAAcvW,EAAUlmD,GAC7B,OAAyB,MAAlBA,EAAIjE,aAJf,SAAS2gE,EAA0BxW,EAAUyW,GACzC,OAAOzW,EAASmW,KAAKO,QAAQz/D,QAAQw/D,IAAU,EAGbD,CAA0BxW,EAAUlmD,EAAIjE,aACnD,SAAnBiE,EAAIjE,YAAyBmqD,EAASmW,KAAKQ,QA1BkBJ,CAAcxrD,EAAM3R,GAAgB,CAC7F,IAAI/E,EAAQ0W,EAAKtC,WAAWrY,OAQ5B,OAPA2a,EAAKorD,KAAKC,eAAeJ,EAAOrE,WAC5B74D,MAAO,KACP/G,MAAOqH,EAAcjL,QACrB2P,QAAUzJ,MAAOA,EACjBU,MAAOihE,EAAOjhE,OAElBgW,EAAKtC,WAAWpU,GAASshE,GACjB5qD,EAAKtC,WAAWpU,GACpBiiE,GAAwBvrD,EAAMA,EAAKorD,KAAKC,eAAeJ,EAAOrE,WAEjE,OAAmB,EAAfqE,EAAOl9D,MACLK,EAEJ4R,EAAKrC,QAAQzP,IAAI+8D,EAAOjhE,MAAOoE,GAE1C,QACIZ,EAAmBE,IAU3B,SAAS69D,GAAwBtW,EAAUkW,GACvC,IAAIU,EACJ,OAA4B,UAApBV,EAAYp9D,OAChB,KAAK,IACD89D,EAsBZ,SAASC,EAAa7W,EAAUnsD,EAAMiK,GAClC,IAAI8K,EAAM9K,EAAK1N,OACf,OAAQwY,GACJ,KAAK,EACD,OAAO,IAAI/U,EACf,KAAK,EACD,OAAO,IAAIA,EAAKkiE,GAAmB/V,EAAUliD,EAAK,KACtD,KAAK,EACD,OAAO,IAAIjK,EAAKkiE,GAAmB/V,EAAUliD,EAAK,IAAKi4D,GAAmB/V,EAAUliD,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIjK,EAAKkiE,GAAmB/V,EAAUliD,EAAK,IAAKi4D,GAAmB/V,EAAUliD,EAAK,IAAKi4D,GAAmB/V,EAAUliD,EAAK,KACpI,QAEI,IADA,IAAIg5D,EAAY,IAAIznE,MAAMuZ,GACjB3Y,EAAI,EAAGA,EAAI2Y,EAAK3Y,IACrB6mE,EAAU7mE,GAAK8lE,GAAmB/V,EAAUliD,EAAK7N,IAErD,OAAO,IAAK4D,EAAKL,KAAKlD,MAAMuD,EAAMvB,QAAU,GAASwkE,MAtCxCD,CAAa7W,EAAUkW,EAAYnkE,MAAOmkE,EAAYp4D,MACnE,MACJ,KAAK,KACD84D,EAsCZ,SAASG,EAAa/W,EAAU7xD,EAAS2P,GACrC,IAAI8K,EAAM9K,EAAK1N,OACf,OAAQwY,GACJ,KAAK,EACD,OAAOza,IACX,KAAK,EACD,OAAOA,EAAQ4nE,GAAmB/V,EAAUliD,EAAK,KACrD,KAAK,EACD,OAAO3P,EAAQ4nE,GAAmB/V,EAAUliD,EAAK,IAAKi4D,GAAmB/V,EAAUliD,EAAK,KAC5F,KAAK,EACD,OAAO3P,EAAQ4nE,GAAmB/V,EAAUliD,EAAK,IAAKi4D,GAAmB/V,EAAUliD,EAAK,IAAKi4D,GAAmB/V,EAAUliD,EAAK,KACnI,QAEI,IADA,IAAIg5D,EAAYznE,MAAMuZ,GACb3Y,EAAI,EAAGA,EAAI2Y,EAAK3Y,IACrB6mE,EAAU7mE,GAAK8lE,GAAmB/V,EAAUliD,EAAK7N,IAErD,OAAO9B,EAAQmC,WAAM,EAAQgC,EAASwkE,KAtDzBC,CAAa/W,EAAUkW,EAAYnkE,MAAOmkE,EAAYp4D,MACnE,MACJ,KAAK,KACD84D,EAAab,GAAmB/V,EAAUkW,EAAYp4D,KAAK,IAC3D,MACJ,KAAK,IACD84D,EAAaV,EAAYnkE,MAWjC,OAJI6kE,IAAejB,IAAkC,OAAfiB,GAA6C,iBAAfA,GAC1C,OAApBV,EAAYp9D,OAAqE,mBAA3B89D,EAAWnnD,cACnEymD,EAAYp9D,OAAS,aAEHhD,IAAf8gE,EAA2BjB,GAAkBiB,EAgHxD,SAASI,GAAmBC,EAAa5uB,GACrC,IAAI+sB,EAAgB6B,EAAY5B,cAAcC,eAI9C,IAHiB,MAAbjtB,GAAqBA,GAAa+sB,EAAchlE,UAChDi4C,EAAY+sB,EAAchlE,OAAS,GAEnCi4C,EAAY,EACZ,OAAO,KAEX,IAAIh0B,EAAO+gD,EAAc/sB,GAMzB,OALAh0B,EAAKg+C,oBAAsB,KAC3B6E,GAAgB9B,EAAe/sB,GAE/BmoB,GAASgB,mBAAmBn9C,GAC5B8iD,GAAiB9iD,GACVA,EA+BX,SAAS+iD,GAAyBH,EAAaI,EAAUhjD,GACrD,IAAIijD,EAAiBD,EAAWvE,GAAWuE,EAAUA,EAASv9D,IAAIu6D,oBAC9D4C,EAAYlE,cAKhBqB,GAAqB//C,EAAM,EAJVA,EAAK0Z,SAAShI,WAAWuxC,GACxBjjD,EAAK0Z,SAASjL,YAAYw0C,QAG8BxhE,GAE9E,SAASqhE,GAAiB9iD,GACtB+/C,GAAqB//C,EAAM,EAAqB,KAAM,UAAMve,GAEhE,SAASyhE,GAAWlgD,EAAKhjB,EAAOtC,GAExBsC,GAASgjB,EAAIjnB,OACbinB,EAAIjlB,KAAKL,GAGTslB,EAAI8Y,OAAO97B,EAAO,EAAGtC,GAG7B,SAASmlE,GAAgB7/C,EAAKhjB,GAEtBA,GAASgjB,EAAIjnB,OAAS,EACtBinB,EAAImgD,MAGJngD,EAAI8Y,OAAO97B,EAAO;;;;;;;OAW1B,IAAIojE,GAAgB,IAAIvoE,OAMxB,SAASwoE,GAAkCC,GACvC,OAAOA,EAAiBC,eAE5B,IAAIC,GAAmC,SAAUrU,GAE7C,SAASqU,EAAkB/sD,EAAUw4C,EAAesU,EAAgBE,EAASC,EAAU1pD,GACnF,IAAIxE,EAGJ25C,EAAOnzD,KAAKvB,OAASA,KAOrB,OANA+a,EAAMiB,SAAWA,EACjBjB,EAAMy5C,cAAgBA,EACtBz5C,EAAMiuD,QAAUA,EAChBjuD,EAAMkuD,SAAWA,EACjBluD,EAAMwE,mBAAqBA,EAC3BxE,EAAM+tD,eAAiBA,EAChB/tD,EA2CX,OAvDAra,EAAUqoE,EAAmBrU,GAc7Bt0D,OAAO+B,eAAe4mE,EAAkBloE,UAAW,UAC/CsJ,IAAK,WACD,IAAI++D,KACAxpD,EAAS1f,KAAKgpE,QAClB,IAAK,IAAI/jE,KAAYya,EAEjBwpD,EAAU5lE,MAAO2B,SAAUA,EAAUkkE,aADlBzpD,EAAOza,KAG9B,OAAOikE,GAEX1yD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe4mE,EAAkBloE,UAAW,WAC/CsJ,IAAK,WACD,IAAIi/D,KACJ,IAAK,IAAInkE,KAAYjF,KAAKipE,SAEtBG,EAAW9lE,MAAO2B,SAAUA,EAAUkkE,aADnBnpE,KAAKipE,SAAShkE,KAGrC,OAAOmkE,GAEX5yD,YAAY,EACZC,cAAc,IAKlBsyD,EAAkBloE,UAAUC,OAAS,SAAU4I,EAAUirD,EAAkBC,EAAoB1D,GAC3F,IAAKA,EACD,MAAM,IAAIxqD,MAAM,+BAEpB,IAAI2iE,EAAUhE,GAAkBrlE,KAAK8oE,gBACjCQ,EAAqBD,EAAQjI,MAAM,GAAG9iD,QAAQirD,kBAAkB5jD,UAChEJ,EAAOm8C,GAASE,eAAel4D,EAAUirD,MAAwBC,EAAoByU,EAASnY,EAAUyX,IACxGprD,EAAY+jD,GAAe/7C,EAAM+jD,GAAoB76C,SAIzD,OAHImmC,GACArvC,EAAK0Z,SAAS+a,aAAaqnB,GAAc97C,EAAM,GAAG0+C,cAAe,aAAcvL,GAAQC,MAEpF,IAAI6Q,GAAcjkD,EAAM,IAAIkkD,GAASlkD,GAAOhI,IAEhDwrD,EAxD2B,CAyDpCnV,IACE4V,GAA+B,SAAU9U,GAEzC,SAAS8U,EAAcnT,EAAOqT,EAAUC,GACpC,IAAI5uD,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAQjC,OAPA+a,EAAMs7C,MAAQA,EACdt7C,EAAM2uD,SAAWA,EACjB3uD,EAAM4uD,WAAaA,EACnB5uD,EAAM6uD,OAAS7uD,EAAMs7C,MAAMrrD,IAAIo2D,MAAM,GACrCrmD,EAAMsK,SAAWqkD,EACjB3uD,EAAM8uD,kBAAoBH,EAC1B3uD,EAAM0T,SAAWk7C,EACV5uD,EAqBX,OA/BAra,EAAU8oE,EAAe9U,GAYzBt0D,OAAO+B,eAAeqnE,EAAc3oE,UAAW,YAC3CsJ,IAAK,WACD,OAAO,IAAI0tD,GAAWwJ,GAAcrhE,KAAKq2D,MAAOr2D,KAAK4pE,OAAOjkD,WAAWs+C,gBAE3EztD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeqnE,EAAc3oE,UAAW,YAC3CsJ,IAAK,WAAc,OAAO,IAAI2/D,GAAU9pE,KAAKq2D,MAAOr2D,KAAK4pE,SACzDpzD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeqnE,EAAc3oE,UAAW,iBAC3CsJ,IAAK,WAAc,OAAOnK,KAAK2pE,WAAW/oE,aAC1C4V,YAAY,EACZC,cAAc,IAElB+yD,EAAc3oE,UAAU8hC,QAAU,WAAc3iC,KAAK0pE,SAAS/mC,WAC9D6mC,EAAc3oE,UAAU6f,UAAY,SAAUwrC,GAAYlsD,KAAK0pE,SAAShpD,UAAUwrC,IAC3Esd,EAhCuB,CAiChC7V,IACF,SAASoW,GAAwBxkD,EAAMykD,EAAOC,GAC1C,OAAO,IAAIC,GAAkB3kD,EAAMykD,EAAOC,GAE9C,IAAIC,GAAmC,WACnC,SAASA,EAAkB7T,EAAOuT,EAAQO,GACtCnqE,KAAKq2D,MAAQA,EACbr2D,KAAK4pE,OAASA,EACd5pE,KAAKmqE,MAAQA,EAIbnqE,KAAKwmE,kBA4FT,OA1FApmE,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,WAC/CsJ,IAAK,WAAc,OAAO,IAAI0tD,GAAW73D,KAAKmqE,MAAMlG,gBACpDztD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,YAC/CsJ,IAAK,WAAc,OAAO,IAAI2/D,GAAU9pE,KAAKq2D,MAAOr2D,KAAK4pE,SACzDpzD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,kBAE/CsJ,IAAK,WAGD,IAFA,IAAIob,EAAOvlB,KAAKq2D,MACZ2T,EAAQhqE,KAAK4pE,OAAO73D,QAChBi4D,GAASzkD,GACbykD,EAAQjG,GAAax+C,GACrBA,EAAOA,EAAKxT,OAEhB,OAAOwT,EAAO,IAAIukD,GAAUvkD,EAAMykD,GAAS,IAAIF,GAAU9pE,KAAKq2D,MAAO,OAEzE7/C,YAAY,EACZC,cAAc,IAElByzD,EAAkBrpE,UAAU+c,MAAQ,WAEhC,IADA,IACSzc,EADCnB,KAAKwmE,eAAellE,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAIokB,EAAO2iD,GAAmBloE,KAAKmqE,MAAOhpE,GAC1CugE,GAASU,YAAY78C,KAG7B2kD,EAAkBrpE,UAAUsJ,IAAM,SAAU5E,GACxC,IAAIggB,EAAOvlB,KAAKwmE,eAAejhE,GAC/B,GAAIggB,EAAM,CACN,IAAI6gB,EAAM,IAAIqjC,GAASlkD,GAEvB,OADA6gB,EAAI2vB,yBAAyB/1D,MACtBomC,EAEX,OAAO,MAEXhmC,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,UAC/CsJ,IAAK,WAAc,OAAOnK,KAAKwmE,eAAellE,QAC9CkV,YAAY,EACZC,cAAc,IAElByzD,EAAkBrpE,UAAUq2D,mBAAqB,SAAUkT,EAAaz1D,EAASpP,GAC7E,IAAI+xD,EAAU8S,EAAYlT,mBAAmBviD,OAE7C,OADA3U,KAAKqqE,OAAO/S,EAAS/xD,GACd+xD,GAEX4S,EAAkBrpE,UAAUypE,gBAAkB,SAAUzB,EAAkBtjE,EAAOmE,EAAUirD,EAAkB4V,GACzG,IAAIC,EAAkB9gE,GAAY1J,KAAKyqE,eAClCF,GAAiB1B,aAA4BpU,KAC9C8V,EAAcC,EAAgBrgE,IAAI0qD,KAEtC,IAAI6V,EAAe7B,EAAiB/nE,OAAO0pE,EAAiB7V,OAAkB3tD,EAAWujE,GAEzF,OADAvqE,KAAKqqE,OAAOK,EAAarlD,SAAU9f,GAC5BmlE,GAEXR,EAAkBrpE,UAAUwpE,OAAS,SAAU/S,EAAS/xD,GACpD,GAAI+xD,EAAQqT,UACR,MAAM,IAAIjkE,MAAM,sDAEpB,IAAIkkE,EAAWtT;;;;;;;;AAIf,OAvTR,SAASuT,EAAmBr/C,EAAY28C,EAAa5uB,EAAWh0B,GAC5D,IAAI+gD,EAAgB6B,EAAY5B,cAAcC,eAC5B,OAAdjtB,QAAoCvyC,IAAduyC,IACtBA,EAAY+sB,EAAchlE,QAE9BikB,EAAKg+C,oBAAsB/3C,EAC3Bi9C,GAAWnC,EAAe/sB,EAAWh0B,GAMzC,SAASulD,EAAoBC,EAAexlD,GACxC,IAAIylD,EAAiBnH,GAAsBt+C,GAC3C,GAAKylD,GAAkBA,IAAmBD,KACzB,GAAbxlD,EAAKqf,OADT,CAWArf,EAAKqf,OAAS,GACd,IAAIqmC,EAAiBD,EAAevtD,SAASytD,gBACxCD,IACDA,EAAiBD,EAAevtD,SAASytD,oBAE7CD,EAAe3nE,KAAKiiB,GAKxB,SAAS4lD,EAA4B9B,EAAS3D,GAC1C,KAAoB,EAAhBA,EAAQ17D,OAAZ,CAGAq/D,EAAQ+B,WAAa,EACrB1F,EAAQ17D,OAAS,EAEjB,IADA,IAAI85D,EAAgB4B,EAAQ3zD,OACrB+xD,GACHA,EAAcuH,YAAc,EAC5BvH,EAAgBA,EAAc/xD,QAXlCo5D,CAA4B5lD,EAAKxT,OAAO/G,IAAKua,EAAKu+C,gBA1BlDgH,CAAoB3C,EAAa5iD,GACjCm8C,GAASgB,mBAAmBn9C,GAE5B+iD,GAAyBH,EADV5uB,EAAY,EAAI+sB,EAAc/sB,EAAY,GAAK,KACdh0B,GA2S5CslD,CAAmB7qE,KAAKq2D,MAAOr2D,KAAKmqE,MAAO5kE,EAD5BqlE,EAASvU,OAExBuU,EAAS7U,yBAAyB/1D,MAC3Bs3D,GAEX4S,EAAkBrpE,UAAUyqE,KAAO,SAAUhU,EAASmD,GAClD,GAAInD,EAAQqT,UACR,MAAM,IAAIjkE,MAAM,oDAEpB,IAAIm0D,EAAgB76D,KAAKwmE,eAAer+D,QAAQmvD,EAAQjB,OAExD,OAnPR,SAASkV,EAAiBpD,EAAaqD,EAAcC,GACjD,IAAInF,EAAgB6B,EAAY5B,cAAcC,eAC1CjhD,EAAO+gD,EAAckF,GACzBpD,GAAgB9B,EAAekF,GACX,MAAhBC,IACAA,EAAenF,EAAchlE,QAEjCmnE,GAAWnC,EAAemF,EAAclmD,GAGxCm8C,GAASgB,mBAAmBn9C,GAC5B8iD,GAAiB9iD,GAEjB+iD,GAAyBH,EADVsD,EAAe,EAAInF,EAAcmF,EAAe,GAAK,KACpBlmD,GAqO5CgmD,CAAiBvrE,KAAKmqE,MAAOtP,EAAeJ,GACrCnD,GAEX4S,EAAkBrpE,UAAUsH,QAAU,SAAUmvD,GAC5C,OAAOt3D,KAAKwmE,eAAer+D,QAAQmvD,EAAQjB,QAE/C6T,EAAkBrpE,UAAU6sC,OAAS,SAAUnoC,GAC3C,IAAI+/B,EAAW4iC,GAAmBloE,KAAKmqE,MAAO5kE,GAC1C+/B,GACAo8B,GAASU,YAAY98B,IAG7B4kC,EAAkBrpE,UAAU20D,OAAS,SAAUjwD,GAC3C,IAAIggB,EAAO2iD,GAAmBloE,KAAKmqE,MAAO5kE,GAC1C,OAAOggB,EAAO,IAAIkkD,GAASlkD,GAAQ,MAEhC2kD,EApG2B,GAsGtC,SAASwB,GAAwBnmD,GAC7B,OAAO,IAAIkkD,GAASlkD,GAExB,IAAIkkD,GAA0B,WAC1B,SAASA,EAASpT,GACdr2D,KAAKq2D,MAAQA,EACbr2D,KAAKm1D,kBAAoB,KACzBn1D,KAAKk1D,QAAU,KAmEnB,OAjEA90D,OAAO+B,eAAesnE,EAAS5oE,UAAW,aACtCsJ,IAAK,WAAc,OAxsB3B,SAASwhE,EAAgBpmD,GACrB,IAAIqmD,KAEJ,OADAtG,GAAqB//C,EAAM,OAAiBve,OAAWA,EAAW4kE,GAC3DA,EAqsBuBD,CAAgB3rE,KAAKq2D,QAC/C7/C,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAesnE,EAAS5oE,UAAW,WACtCsJ,IAAK,WAAc,OAAOnK,KAAKq2D,MAAM1hD,SACrC6B,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAesnE,EAAS5oE,UAAW,aACtCsJ,IAAK,WAAc,OAAoD,IAAzB,IAAnBnK,KAAKq2D,MAAMzxB,QACtCpuB,YAAY,EACZC,cAAc,IAElBgzD,EAAS5oE,UAAU60D,aAAe,WAAc2N,GAAwBrjE,KAAKq2D,QAC7EoT,EAAS5oE,UAAU20D,OAAS,WAAcx1D,KAAKq2D,MAAMzxB,QAAS,GAC9D6kC,EAAS5oE,UAAU+0D,cAAgB,WAC/B,IAAIiW,EAAK7rE,KAAKq2D,MAAMuN,KAAK1uB,gBACrB22B,EAAG31B,OACH21B,EAAG31B,QAEP,IACIwrB,GAASQ,mBAAmBliE,KAAKq2D,OAErC,QACQwV,EAAGrkD,KACHqkD,EAAGrkD,QAIfiiD,EAAS5oE,UAAUg1D,eAAiB,WAAc6L,GAASS,mBAAmBniE,KAAKq2D,QACnFoT,EAAS5oE,UAAU80D,SAAW,WAAc31D,KAAKq2D,MAAMzxB,OAAS,GAChE6kC,EAAS5oE,UAAU6f,UAAY,SAAUwrC,GAChClsD,KAAKq2D,MAAMyV,cACZ9rE,KAAKq2D,MAAMyV,gBAEf9rE,KAAKq2D,MAAMyV,YAAYxoE,KAAK4oD,IAEhCud,EAAS5oE,UAAU8hC,QAAU,WACrB3iC,KAAKk1D,QACLl1D,KAAKk1D,QAAQ5zB,WAAWthC,MAEnBA,KAAKm1D,mBACVn1D,KAAKm1D,kBAAkBK,OAAOx1D,KAAKm1D,kBAAkBhtD,QAAQnI,OAEjE0hE,GAASU,YAAYpiE,KAAKq2D,QAE9BoT,EAAS5oE,UAAUo1D,iBAAmB,WAClCj2D,KAAKk1D,QAAU,KACfmT,GAAiBroE,KAAKq2D,OACtBqL,GAASgB,mBAAmB1iE,KAAKq2D,QAErCoT,EAAS5oE,UAAUq1D,eAAiB,SAAUC,GAC1C,GAAIn2D,KAAKm1D,kBACL,MAAM,IAAIzuD,MAAM,qDAEpB1G,KAAKk1D,QAAUiB,GAEnBsT,EAAS5oE,UAAUk1D,yBAA2B,SAAUC,GACpD,GAAIh2D,KAAKk1D,QACL,MAAM,IAAIxuD,MAAM,iEAEpB1G,KAAKm1D,kBAAoBa,GAEtByT,EAvEkB,GAyE7B,SAASsC,GAAmBxmD,EAAMva,GAC9B,OAAO,IAAI4rD,GAAarxC,EAAMva,GAElC,IAAI4rD,GAA8B,SAAUlC,GAExC,SAASkC,EAAaoV,EAAa3E,GAC/B,IAAItsD,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAGjC,OAFA+a,EAAMixD,YAAcA,EACpBjxD,EAAMssD,KAAOA,EACNtsD,EAYX,OAjBAra,EAAUk2D,EAAclC,GAOxBkC,EAAa/1D,UAAUq2D,mBAAqB,SAAUviD,GAClD,OAAO,IAAI80D,GAAS/H,GAASxK,mBAAmBl3D,KAAKgsE,YAAahsE,KAAKqnE,KAAMrnE,KAAKqnE,KAAK/oD,QAAQb,SAAU9I,KAE7GvU,OAAO+B,eAAey0D,EAAa/1D,UAAW,cAC1CsJ,IAAK,WACD,OAAO,IAAI0tD,GAAWwJ,GAAcrhE,KAAKgsE,YAAahsE,KAAKqnE,KAAK1hD,WAAWs+C,gBAE/EztD,YAAY,EACZC,cAAc,IAEXmgD,EAlBsB,CAmB/BsJ,IACF,SAAS+L,GAAiB1mD,EAAMykD,GAC5B,OAAO,IAAIF,GAAUvkD,EAAMykD,GAE/B,IAAIF,GAA2B,WAC3B,SAASA,EAAUvkD,EAAMykD,GACrBhqE,KAAKulB,KAAOA,EACZvlB,KAAKgqE,MAAQA,EAOjB,OALAF,EAAUjpE,UAAUsJ,IAAM,SAAUlE,EAAOoE,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgByH,GAASH,oBAElD+vD,GAASW,WAAWriE,KAAKulB,KAAMvlB,KAAKgqE,QADhBhqE,KAAKgqE,OAA8D,IAAlC,SAAnBhqE,KAAKgqE,MAAMhgE,QACsBA,MAAO,EAAc/D,MAAOA,EAAO48D,SAAUA,GAAS58D,IAAUoE,IAEvIy/D,EAVmB,GA0B9B,SAASoC,GAAiB3mD,GACtB,OAAO,IAAI4mD,GAAgB5mD,EAAK0Z,UAEpC,IAAIktC,GAAiC,WACjC,SAASA,EAAgBC,GACrBpsE,KAAKosE,SAAWA,EA4FpB,OA1FAD,EAAgBtrE,UAAUw5C,kBAAoB,SAAUgyB,GACpD,OAAOrsE,KAAKosE,SAAS/xB,kBAAkBgyB,IAE3CF,EAAgBtrE,UAAUmxB,cAAgB,SAAUjgB,EAAQu6D,GACxD,IAAIhoE,EAAKnB,EAAOujE,GAAe4F,GAAmB,GAC9C/4C,EAAKvzB,KAAKosE,SAASp6C,cADkD1tB,EAAG,GAAjBA,EAAG,IAK9D,OAHIyN,GACA/R,KAAKosE,SAASn6C,YAAYlgB,EAAQwhB,GAE/BA,GAEX44C,EAAgBtrE,UAAU0rE,eAAiB,SAAUntC,GAAe,OAAOA,GAC3E+sC,EAAgBtrE,UAAU2rE,qBAAuB,SAAUC,GACvD,IAAIjnB,EAAUxlD,KAAKosE,SAAS31B,cAAc,IAI1C,OAHIg2B,GACAzsE,KAAKosE,SAASn6C,YAAYw6C,EAAejnB,GAEtCA,GAEX2mB,EAAgBtrE,UAAUmgC,WAAa,SAAUyrC,EAAexpE,GAC5D,IAAIu0B,EAAOx3B,KAAKosE,SAASprC,WAAW/9B,GAIpC,OAHIwpE,GACAzsE,KAAKosE,SAASn6C,YAAYw6C,EAAej1C,GAEtCA,GAEX20C,EAAgBtrE,UAAU6rE,aAAe,SAAUD,EAAerL,GAC9D,IAAK,IAAIjgE,EAAI,EAAGA,EAAIigE,EAAM9/D,OAAQH,IAC9BnB,KAAKosE,SAASn6C,YAAYw6C,EAAerL,EAAMjgE,KAGvDgrE,EAAgBtrE,UAAU8rE,gBAAkB,SAAUn1C,EAAMo1C,GAGxD,IAFA,IAAIH,EAAgBzsE,KAAKosE,SAASn1C,WAAWO,GACzCxD,EAAch0B,KAAKosE,SAASp4C,YAAYwD,GACnCr2B,EAAI,EAAGA,EAAIyrE,EAActrE,OAAQH,IACtCnB,KAAKosE,SAASxpC,aAAa6pC,EAAeG,EAAczrE,GAAI6yB,IAGpEm4C,EAAgBtrE,UAAUygC,WAAa,SAAUsrC,GAC7C,IAAK,IAAIzrE,EAAI,EAAGA,EAAIyrE,EAActrE,OAAQH,IAAK,CAC3C,IAAIq2B,EAAOo1C,EAAczrE,GACrBsrE,EAAgBzsE,KAAKosE,SAASn1C,WAAWO,GAC7Cx3B,KAAKosE,SAASn5C,YAAYw5C,EAAej1C,KAGjD20C,EAAgBtrE,UAAUuhE,YAAc,SAAUhjC,EAAaytC,GAC3D,IAAK,IAAI1rE,EAAI,EAAGA,EAAI0rE,EAAavrE,OAAQH,IACrCnB,KAAKosE,SAAStrC,YAAY+rC,EAAa1rE,KAG/CgrE,EAAgBtrE,UAAUq6C,OAAS,SAAU+oB,EAAengE,EAAMooD,GAC9D,OAAOlsD,KAAKosE,SAASlxB,OAAO+oB,EAAengE,EAAMooD,IAErDigB,EAAgBtrE,UAAUisE,aAAe,SAAUnrE,EAAQmC,EAAMooD,GAC7D,OAAOlsD,KAAKosE,SAASlxB,OAAOv5C,EAAQmC,EAAMooD,IAE9CigB,EAAgBtrE,UAAUksE,mBAAqB,SAAU9I,EAAe+I,EAAcC,GAClFjtE,KAAKosE,SAASj/B,YAAY82B,EAAe+I,EAAcC,IAE3Dd,EAAgBtrE,UAAUqsE,oBAAsB,SAAUjJ,EAAeqI,EAAkBa,GACvF,IAAI7oE,EAAKnB,EAAOujE,GAAe4F,GAAmB,GAAIc,EAAK9oE,EAAG,GAAIR,EAAOQ,EAAG,GACtD,MAAlB6oE,EACAntE,KAAKosE,SAASpyB,aAAaiqB,EAAengE,EAAMqpE,EAAgBC,GAGhEptE,KAAKosE,SAASz4C,gBAAgBswC,EAAengE,EAAMspE,IAG3DjB,EAAgBtrE,UAAUwsE,oBAAsB,SAAUpJ,EAAe+I,EAAcC,KACvFd,EAAgBtrE,UAAUysE,gBAAkB,SAAUrJ,EAAe32B,EAAWigC,GACxEA,EACAvtE,KAAKosE,SAAS5+B,SAASy2B,EAAe32B,GAGtCttC,KAAKosE,SAAS3+B,YAAYw2B,EAAe32B,IAGjD6+B,EAAgBtrE,UAAU2sE,gBAAkB,SAAUvJ,EAAewJ,EAAWC,GAC1D,MAAdA,EACA1tE,KAAKosE,SAASjlC,SAAS88B,EAAewJ,EAAWC,GAGjD1tE,KAAKosE,SAASh/B,YAAY62B,EAAewJ,IAGjDtB,EAAgBtrE,UAAU8sE,oBAAsB,SAAU1J,EAAe2J,EAAYrpE,GACjF0/D,EAAc2J,GAAYpsE,MAAMyiE,EAAe1/D,IAEnD4nE,EAAgBtrE,UAAUgtE,QAAU,SAAUC,EAAev5D,GAAQvU,KAAKosE,SAAS/iC,SAASykC,EAAev5D,IAC3G43D,EAAgBtrE,UAAUktE,QAAU,WAAc,MAAM,IAAIrnE,MAAM,6CAC3DylE,EA9FyB,GAgGpC,SAASrK,GAAkBkM,EAAYj8D,EAAQk8D,EAAqBjjE,GAChE,OAAO,IAAIkjE,GAAaF,EAAYj8D,EAAQk8D,EAAqBjjE,GAErE,IAAIkjE,GAA8B,WAC9B,SAASA,EAAaC,EAAav0D,EAASw0D,EAAsB/G,GAC9DrnE,KAAKmuE,YAAcA,EACnBnuE,KAAK4Z,QAAUA,EACf5Z,KAAKouE,qBAAuBA,EAC5BpuE,KAAKqnE,KAAOA,EACZrnE,KAAKquE,qBACLruE,KAAKiwD,YAAa,EAClBjwD,KAAK0J,SAAW1J,KA9tBxB,SAASsuE,EAAaryD,GAGlB,IAFA,IAAIjR,EAAMiR,EAAKorD,KACXlgE,EAAY8U,EAAKtC,WAAa,IAAIpZ,MAAMyK,EAAI7D,UAAU7F,QACjDH,EAAI,EAAGA,EAAI6J,EAAI7D,UAAU7F,OAAQH,IAAK,CAC3C,IAAIotE,EAAUvjE,EAAI7D,UAAUhG,GACN,KAAhBotE,EAAQvkE,YAEWhD,IAAjBG,EAAUhG,KACVgG,EAAUhG,GAAKqmE,GAAwBvrD,EAAMsyD,KAutBrDD,CAAatuE,MAiCjB,OA/BAkuE,EAAartE,UAAUsJ,IAAM,SAAUlE,EAAOoE,EAAemkE,QACnC,IAAlBnkE,IAA4BA,EAAgByH,GAASH,yBACrC,IAAhB68D,IAA0BA,EAAclvE,EAAQyG,YAAYkE,SAChE,IAAID,EAAQ,EAOZ,OANIwkE,EAAclvE,EAAQyG,YAAYK,SAClC4D,GAAS,EAEJwkE,EAAclvE,EAAQyG,YAAYI,OACvC6D,GAAS,GAENi9D,GAAmBjnE,MAAQiG,MAAOA,EAAO48D,SAAUA,GAAS58D,GAAQ+D,MAAOA,GAASK,IAE/FjK,OAAO+B,eAAe+rE,EAAartE,UAAW,YAC1CsJ,IAAK,WAAc,OAAOnK,KAAKmK,IAAInK,KAAKmuE,cACxC33D,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe+rE,EAAartE,UAAW,4BAC1CsJ,IAAK,WAAc,OAAOnK,KAAKmK,IAAIiqD,KACnC59C,YAAY,EACZC,cAAc,IAElBy3D,EAAartE,UAAU8hC,QAAU,WAC7B,GAAI3iC,KAAKiwD,WACL,MAAM,IAAIvpD,MAAM,iBAAmBkB,EAAU5H,KAAKyuB,SAAS7tB,aAAe,gCAE9EZ,KAAKiwD,YAAa,EApnB1B,SAASwe,EAAsBvd,EAAUwd,GAGrC,IAFA,IAAI1jE,EAAMkmD,EAASmW,KACfsD,EAAY,IAAIttD,IACXlc,EAAI,EAAGA,EAAI6J,EAAI7D,UAAU7F,OAAQH,IAEtC,GAAoB,OADN6J,EAAI7D,UAAUhG,GAChB6I,MAAgC,CACxC,IAAIykB,EAAWyiC,EAASv3C,WAAWxY,GACnC,GAAIstB,GAAYA,IAAao4C,GAAiB,CAC1C,IAAInmD,EAAY+N,EAAS9N,YACA,mBAAdD,GAA6BiqD,EAAU/zD,IAAI6X,KAClD/N,EAAUlf,MAAMitB,GAChBk8C,EAAUp9B,IAAI9e,MA0mB1BggD,CAAsBzuE,MACtBA,KAAKquE,kBAAkB9gE,QAAQ,SAAU+sC,GAAY,OAAOA,OAEhE4zB,EAAartE,UAAU6f,UAAY,SAAUwrC,GAAYlsD,KAAKquE,kBAAkB/qE,KAAK4oD,IAC9EgiB,EA1CsB,GAoD7BS,GAAqB9L,GAASzK,IAC9BwW,GAAoB/L,GAASrK,IAC7BqW,GAAqBhM,GAAShL,IAC9BiX,GAA2BjM,GAASzC,IACpC2O,GAAsBlM,GAAS3C,IAC/B8O,GAA4BnM,GAAShD,IACrCoP,GAAwBpM,GAAS/wD,IACjCo9D,GAAwBrM,GAASjxD;;;;;;;OA+BrC,SAASy1D,GAAK8H,EAAYnlE,EAAOy6D,EAAmBmB,EAAY3/D,EAAOhD,EAAO+L,EAAMo0D,EAAUzjD,GAC1F,IAAIrb,EAAKkgE,GAAuBC,GAAoBC,EAAiBpgE,EAAGogE,eAAgBE,EAAatgE,EAAGsgE,WAAYD,EAAkBrgE,EAAGqgE,gBACpIhlD,IACDA,MAECyjD,IACDA,MAKJngE,EAAQuF,EAAkBvF,GAC1B,IAAImsE,EAAUtK,GAAa91D,EAAMpH,EAAU3B,IAC3C,OAEI0f,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAEdF,WAAYA,EACZnlE,MAAOA,EACPqhE,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EAAG7K,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EACtGkB,gBAAiB,EAAGF,WAAYA,EAAYxC,SAAUA,EACtDiD,aAAcM,GAAiBvD,GAAWzjD,QAASA,EACnDrB,QAAS,KACT7N,UAAYxK,MAAOA,EAAOhD,MAAOA,EAAO+L,KAAMogE,GAC9C76D,KAAM,KACNi7D,MAAO,KACPrJ,UAAW,MAGnB,SAASsJ,GAAuBlqD,EAAMva,GAClC,OAAO0kE,GAA0BnqD,EAAMva,GAE3C,SAAS2kE,GAAmBpqD,EAAMva,GAG9B,IADA,IAAI+6D,EAAWxgD,EACRwgD,EAASh0D,SAAWqyD,GAAgB2B,IACvCA,EAAWA,EAASh0D,OAKxB,OAAO69D,GAAY7J,EAASh0D,OAAQgyD,GAAagC,IAFtB,EAEuD/6D,EAAIyF,SAASxN,MAAO+H,EAAIyF,SAASzB,MAEvH,SAAS6gE,GAAwBtqD,EAAMva,GAEnC,IAEIyjB,EAAWmhD,GAAYrqD,EAAMva,EAAI+G,QAFG,MAAZ/G,EAAIhB,OAAiC,EAEEgB,EAAIyF,SAASxN,MAAO+H,EAAIyF,SAASzB,MACpG,GAAIhE,EAAI2U,QAAQre,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAI6J,EAAI2U,QAAQre,OAAQH,IAAK,CACzC,IAAI2uE,EAAS9kE,EAAI2U,QAAQxe,GACrB4uE,EAAmBthD,EAASqhD,EAAO7qE,UACvC,IAAIy1B,GAAaq1C,GAKb,MAAM,IAAIrpE,MAAM,WAAaopE,EAAO7qE,SAAW,wBAA0BwpB,EAAS7tB,YAAYkD,KAAO,MAJrG,IAAIu3C,EAAe00B,EAAiBp1C,UAAUq1C,GAAoBzqD,EAAMva,EAAI+G,OAAO4T,UAAWmqD,EAAOv1B,YACrGh1B,EAAKumD,YAAY9gE,EAAIqkE,YAAcluE,GAAKk6C,EAAa5Y,YAAY/9B,KAAK22C,GAOlF,OAAO5sB,EAEX,SAASuhD,GAAoBzqD,EAAMhgB,EAAOg1C,GACtC,OAAO,SAAUopB,GAAS,OAAOD,GAAcn+C,EAAMhgB,EAAOg1C,EAAWopB,IAmF3E,SAAS+L,GAA0BnqD,EAAMva,GAErC,IAAIilE,GAAoC,KAAZjlE,EAAIhB,OAAsC,EAClEo9D,EAAcp8D,EAAIyF,SACtB,OAAoB,UAAZzF,EAAIhB,OACR,KAAK,IACD,OAAO4lE,GAAYrqD,EAAMva,EAAI+G,OAAQk+D,EAAsB7I,EAAYnkE,MAAOmkE,EAAYp4D,MAC9F,KAAK,KACD,OA0BZ,SAASkhE,EAAY3qD,EAAMykD,EAAOiG,EAAsB5wE,EAAS2P,GAC7D,IAAI8K,EAAM9K,EAAK1N,OACf,OAAQwY,GACJ,KAAK,EACD,OAAOza,IACX,KAAK,EACD,OAAOA,EAAQgjE,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,KACtE,KAAK,EACD,OAAO3P,EAAQgjE,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,IAAKqzD,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,KAC9H,KAAK,EACD,OAAO3P,EAAQgjE,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,IAAKqzD,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,IAAKqzD,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,KACtL,QAEI,IADA,IAAIg5D,EAAYznE,MAAMuZ,GACb3Y,EAAI,EAAGA,EAAI2Y,EAAK3Y,IACrB6mE,EAAU7mE,GAAKkhE,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK7N,IAEtE,OAAO9B,EAAQmC,WAAM,EAAQgC,EAASwkE,KA1C/BkI,CAAY3qD,EAAMva,EAAI+G,OAAQk+D,EAAsB7I,EAAYnkE,MAAOmkE,EAAYp4D,MAC9F,KAAK,KACD,OAAOqzD,GAAW98C,EAAMva,EAAI+G,OAAQk+D,EAAsB7I,EAAYp4D,KAAK,IAC/E,KAAK,IACD,OAAOo4D,EAAYnkE,OAG/B,SAAS2sE,GAAYrqD,EAAMykD,EAAOiG,EAAsBlrE,EAAMiK,GAC1D,IAAI8K,EAAM9K,EAAK1N,OACf,OAAQwY,GACJ,KAAK,EACD,OAAO,IAAI/U,EACf,KAAK,EACD,OAAO,IAAIA,EAAKs9D,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,KACvE,KAAK,EACD,OAAO,IAAIjK,EAAKs9D,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,IAAKqzD,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIjK,EAAKs9D,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,IAAKqzD,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,IAAKqzD,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK,KACvL,QAEI,IADA,IAAIg5D,EAAY,IAAIznE,MAAMuZ,GACjB3Y,EAAI,EAAGA,EAAI2Y,EAAK3Y,IACrB6mE,EAAU7mE,GAAKkhE,GAAW98C,EAAMykD,EAAOiG,EAAsBjhE,EAAK7N,IAEtE,OAAO,IAAK4D,EAAKL,KAAKlD,MAAMuD,EAAMvB,QAAU,GAASwkE,MAuCjE,IAAImI,MACJ,SAAS9N,GAAW98C,EAAMykD,EAAOiG,EAAsB/I,EAAQ78D,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgByH,GAASH,oBACtC,EAAfu1D,EAAOl9D,MACP,OAAOk9D,EAAOjhE,MAElB,IAAIqlB,EAAY/F,EACG,EAAf2hD,EAAOl9D,QACPK,EAAgB,MAEpB,IAAI+lE,EAAclJ,EAAOrE,SACrBuN,IAAgBpB,KAGhBiB,KAA0BjG,IAASA,EAAM1rD,QAAQiiB,gBAEjDypC,GAAyB,EAAf9C,EAAOl9D,QACjBimE,GAAuB,EACvBjG,EAAQA,EAAMj4D,QAGlB,IADA,IAAIs+D,EAAa9qD,EACV8qD,GAAY,CACf,GAAIrG,EACA,OAAQoG,GACJ,KAAKzB,GAED,OAAOzC,GADQoE,GAAaD,EAAYrG,EAAOiG,IAGnD,KAAKrB,GAED,OADe0B,GAAaD,EAAYrG,EAAOiG,GAC/BhxC,SAEpB,KAAK4vC,GACD,OAAO,IAAIhX,GAAWwJ,GAAcgP,EAAYrG,EAAMrkD,WAAWs+C,eACrE,KAAK6K,GACD,OAAOzN,GAAcgP,EAAYrG,EAAMrkD,WAAW4gD,cACtD,KAAKwI,GACD,GAAI/E,EAAM1rD,QAAQb,SACd,OAAO4jD,GAAcgP,EAAYrG,EAAMrkD,WAAWlI,SAEtD,MAEJ,KAAKuxD,GAED,OAAOtD,GADM4E,GAAaD,EAAYrG,EAAOiG,IAGjD,KAAKhB,GACL,KAAKC,GACD,OAAOjD,GAAiBoE,EAAYrG,GACxC,QACI,IAAIuG,GAAiBN,EAAuBjG,EAAM1rD,QAAQkyD,aACtDxG,EAAM1rD,QAAQmyD,iBAAiBL,GACnC,GAAIG,EAAe,CACf,IAAIG,EAAepP,GAAe+O,EAAYE,EAAc5qD,WAK5D,OAJK+qD,IACDA,GAAiBjiD,SAAUihD,GAA0BW,EAAYE,IACjEF,EAAWjP,MAAMmP,EAAc5qD,WAAa+qD,GAEzCA,EAAajiD,UAIpCwhD,EAAuB7L,GAAgBiM,GACvCrG,EAAQjG,GAAasM,GACrBA,EAAaA,EAAWt+D,OACL,EAAfm1D,EAAOl9D,QACPqmE,EAAa,MAGrB,IAAIptE,EAAQqoB,EAAUs4C,KAAKl6D,SAASS,IAAI+8D,EAAOjhE,MAAOkqE,IACtD,OAAIltE,IAAUktE,IACV9lE,IAAkB8lE,GAMXltE,EAEJqoB,EAAUs4C,KAAK1S,SAASxnD,SAASS,IAAI+8D,EAAOjhE,MAAOoE,GAE9D,SAASimE,GAAa/qD,EAAMykD,EAAOiG,GAC/B,IAAIlK,EACJ,GAAIkK,EACAlK,EAAW1E,GAAc97C,EAAMykD,EAAMrkD,WAAW4a,mBAIhD,IADAwlC,EAAWxgD,EACJwgD,EAASh0D,SAAWqyD,GAAgB2B,IACvCA,EAAWA,EAASh0D,OAG5B,OAAOg0D,EAEX,SAAS4K,GAAWprD,EAAMmrD,EAAc1lE,EAAKg4D,EAAY//D,EAAO2tE,GAC5D,GAAgB,MAAZ5lE,EAAIhB,MAA+B,CACnC,IAAI+7D,EAAW1E,GAAc97C,EAAMva,EAAI+G,OAAO4T,WAAW4a,cAChC,EAArBwlC,EAAS/6D,IAAIhB,QACb+7D,EAASnhC,OAAS,GAS1B,GADA8rC,EAAajiD,SALCzjB,EAAIo4D,SAASJ,GACJl/D,MAIWb,EAClB,OAAZ+H,EAAIhB,MAAgC,CACpC4mE,EAAUA,MACV,IAAI1kD,EAAW6P,GAAaG,OAAO3W,EAAK09C,UAAUj4D,EAAIwxB,aAAewmC,IAErE4N,EADgB5lE,EAAIo4D,SAASJ,GACX6N,iBACd,IAAI1jB,GAAajhC,EAAUjpB,EAA6C,IAAxB,EAAbsiB,EAAKqf,QAGhD,OADArf,EAAK09C,UAAUj4D,EAAIwxB,aAAewmC,GAAc//D,EACzC2tE,EA6CX,SAASE,GAAgCvrD,EAAMmpD,GAC3C,GAAMnpD,EAAKva,IAAIogE,UAAYsD,EAK3B,IAFA,IAAItN,EAAQ77C,EAAKva,IAAIo2D,MACjBH,EAAY,EACP9/D,EAAI,EAAGA,EAAIigE,EAAM9/D,OAAQH,IAAK,CACnC,IAAIukE,EAAUtE,EAAMjgE,GAChBo3B,EAAWmtC,EAAQ3zD,OASvB,KARKwmB,GAAYmtC,EAAQ17D,MAAQ0kE,GAE7BqC,GAAuBxrD,EAAMpkB,EAAGukE,EAAQ17D,MAAQ0kE,EAAYzN,KAEtB,IAArCyE,EAAQ2F,WAAaqD,KAEtBvtE,GAAKukE,EAAQE,YAEVrtC,GAA8B,EAAjBA,EAASvuB,OACzB7I,IAAMo3B,EAAS5S,UAAY4S,EAASqtC,YAEhCrtC,EAAS+2C,iBAAmBZ,IAC5BzN,EAAY+P,GAA+BzrD,EAAMgT,EAAUm2C,EAAYzN,IAE3E1oC,EAAWA,EAASxmB,QAIhC,SAASi/D,GAA+BzrD,EAAMykD,EAAO0E,EAAYzN,GAC7D,IAAK,IAAI9/D,EAAI6oE,EAAMrkD,UAAY,EAAGxkB,GAAK6oE,EAAMrkD,UAAYqkD,EAAMpE,WAAYzkE,IAAK,CAC5E,IAAIukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,GACzBukE,EAAQ17D,MAAQ0kE,GAChBqC,GAAuBxrD,EAAMpkB,EAAGukE,EAAQ17D,MAAQ0kE,EAAYzN,KAGhE9/D,GAAKukE,EAAQE,WAEjB,OAAO3E,EAEX,SAAS8P,GAAuBxrD,EAAMhgB,EAAOmpE,EAAYzN,GACrD,IAAIyP,EAAepP,GAAe/7C,EAAMhgB,GACxC,GAAKmrE,EAAL,CAGA,IAAIjgE,EAAWigE,EAAajiD,SACvBhe,IAGLixD,GAASC,eAAep8C,EAAMhgB,GACb,QAAbmpE,GACAxN,GAA4B37C,EAAM,IAA6C07C,IAC/ExwD,EAAS0P,qBAEI,QAAbuuD,GACAj+D,EAAS4P,wBAEI,QAAbquD,GACAxN,GAA4B37C,EAAM,IAA0C07C,IAC5ExwD,EAAS8P,kBAEI,QAAbmuD,GACAj+D,EAASgQ,qBAEI,OAAbiuD,GACAj+D,EAASkQ;;;;;;;OAWjB,IAAIswD,GAA4C,SAAUvc,GAKtD,SAASwc,EAA4BhgB,GACjC,IAAIn2C,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAEjC,OADA+a,EAAMm2C,SAAWA,EACVn2C,EAOX,OAdAra,EAAUwwE,EAA6Bxc,GASvCwc,EAA4BrwE,UAAUszD,wBAA0B,SAAU52C,GAEtE,IAAIqvC,EAAexqC,GAAgB7E,GACnC,OAAO,IAAI4zD,GAAmBvkB,EAAc5sD,KAAKkxD,WAE9CggB,EAfoC,CAgB7C9c,IACF,SAASgd,GAAWvpE,GAChB,IAAIwpE,KACJ,IAAK,IAAIC,KAAezpE,EAChBA,EAAIpH,eAAe6wE,IAEnBD,EAAM/tE,MAAO2B,SADE4C,EAAIypE,GACcnI,aAAcmI,IAGvD,OAAOD,EAKX,IAAIE,GAAe,IAAIjgE,GAAe,sBAAwBvK,WAAY,OAAQ1H,QAAS,WAAc,OAAO0tD,GAAkB3iD,EAAOonE,QAKrIA,GAAY,IAAIlgE,GAAe,mBAC/BvK,WAAY,OACZ1H,QAAS,WAAc,OAAO6e,MAsB9BizD,GAAoC,SAAUzc,GAM9C,SAAS+c,EAAoB7kB,EAAcsE,GACvC,IAAIn2C,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAUjC,OATA+a,EAAM6xC,aAAeA,EACrB7xC,EAAMm2C,SAAWA,EACjBn2C,EAAMy5C,cAAgB5H,EAAatlD,KACnCyT,EAAMiB,SAAW4wC,EAAa3rC,UAAU,GAAG,GAG3ClG,EAAMwE,mBACFqtC,EAAartC,mBAAqB/b,GAAU,KAAMopD,EAAartC,uBACnExE,EAAM22D,kBAAoBxgB,EACnBn2C,EAoEX,OApFAra,EAAU+wE,EAAqB/c,GAkB/Bt0D,OAAO+B,eAAesvE,EAAoB5wE,UAAW,UACjDsJ,IAAK,WACD,OAAOinE,GAAWpxE,KAAK4sD,aAAaltC,SAExClJ,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAesvE,EAAoB5wE,UAAW,WACjDsJ,IAAK,WACD,OAAOinE,GAAWpxE,KAAK4sD,aAAajtC,UAExCnJ,YAAY,EACZC,cAAc,IAElBg7D,EAAoB5wE,UAAUC,OAAS,SAAU4I,EAAUirD,EAAkBC,EAAoB1D,GAC7F,IAAIygB,OAA4C3qE,IAAvB4tD,EAErBgd,GADJ1gB,EAAWA,GAAYlxD,KAAKkxD,UAvDpC,SAAS2gB,EAAsBD,EAAkBhjD,GAC7C,OACIzkB,IAAK,SAAUlE,EAAOoE,EAAeL,GACjC,IAAI/G,EAAQ2uE,EAAiBznE,IAAIlE,EAAOkqE,GAAuCnmE,GAC/E,OAAI/G,IAAUktE,IACV9lE,IAAkB8lE,GAMXltE,EAEJ2rB,EAAezkB,IAAIlE,EAAOoE,EAAeL,KA2ClB6nE,CAAsBnoE,EAAUwnD,EAASxnD,UAAYA,EACnFwrC,EAAkB08B,EAAiBznE,IAAImuD,GAAkBp5B,IACzD9G,EAAYw5C,EAAiBznE,IAAIuuB,GAAW,MAC5Co5C,EAAYH,EACZ16B,GAAcj3C,KAAKgc,SAAUk5B,EAAgB/V,eAAe,KAAMn/B,KAAK4sD,eACvE1S,GAAkBhF,EAAiB0f,GACnCmd,EAAY/xE,KAAK4sD,aAAahsC,OAAS,IACvC,IACAslB,EAAeyrC,EAA0D5kB,KAArC6kB,EAAiBznE,IAAIonE,IACzDtyC,EAAWiW,EAAgB/V,eAAe2yC,EAAW9xE,KAAK4sD,cAC1DgI,GAAsBkd,IAEtB9yC,GAAqBC,GACjBA,EAAS+a,aAAa83B,EAAW,aAAcpZ,GAAQC,MACvDmZ,EAAU93B,aAAa,aAAc0e,GAAQC,OAGrD,IAGIp7C,EACAy0D,EAJAC,EAAYj9B,GAAY,KAAMsE,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MAAOpT,EAAa6rC,EAAW,KAAM,KAAM78B,EAAiBjW,EAAU7G,EAAWw5C,GAE7JM,EAAW5nD,GAAU2nD,EAAW,MAGpC,IACI,IAAI1xC,EAAgBksB,GAAwBqlB,EAAW9xE,KAAK4sD,aAAcqlB,EAAW/8B,EAAiBjW,GACtG+yC,EAAe1sD,GAAS,EAAG2sD,GACvBtd,IAIAqd,EAAavxC,WACTk0B,EAAiB9sD,IAAI,SAAUsqE,GAAgB,OAAO5xE,MAAMsY,KAAKs5D,MAKzE50D,EAAYovC,GAAoBpsB,EAAevgC,KAAK4sD,aAAcqlB,EAAW/rC,GAAc8mB,KAC3F/H,GAAcgtB,EAAW1xC,GACzBqT,GAAuBq+B,GAE3B,QACIlnD,GAAUmnD,GAEd,IAAIxH,EAAe,IAAI0H,GAAepyE,KAAKw0D,cAAej3C,EAAWg5C,GAAiBsB,GAAYma,EAAcC,GAAYA,EAAWD,GAKvI,OAJIL,IAEAjH,EAAarlD,SAAS+vC,WAAW52B,MAAQwzC,GAEtCtH,GAEJ+G,EArF4B,CAsFrC7d,IAUEwe,IAT2B,IAAInB,GASC,SAAUvc,GAE1C,SAAS2d,EAAgB7d,EAAe/lC,EAAUpD,EAAUinD,EAAYpiD,GACpE,IAAInV,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KASjC,OARA+a,EAAMsQ,SAAWA,EACjBtQ,EAAMu3D,WAAaA,EACnBv3D,EAAMmV,OAASA,EACfnV,EAAMw3D,cACNx3D,EAAM0T,SAAWA,EACjB1T,EAAMsK,SAAWtK,EAAM8uD,kBAAoB,IAAIzT,GAAYkc,GAC3Dv3D,EAAMsK,SAAS+vC,WAAa/f,GAAuBi9B,EAAW9uD,IAAQ,MAAO,EAAG8uD,GAChFv3D,EAAMy5C,cAAgBA,EACfz5C,EAiBX,OA5BAra,EAAU2xE,EAAiB3d,GAa3Bt0D,OAAO+B,eAAekwE,EAAgBxxE,UAAW,YAC7CsJ,IAAK,WAAc,OAAO,IAAIikB,GAAapuB,KAAKkwB,OAAQlwB,KAAKsyE,aAC7D97D,YAAY,EACZC,cAAc,IAElB47D,EAAgBxxE,UAAU8hC,QAAU,WAEhC3iC,KAAKuyE,WAAWhlE,QAAQ,SAAU9E,GAAM,OAAOA,MAC/CzI,KAAKuyE,WAAa,MACjBvyE,KAAKqlB,SAASslD,WAAa3qE,KAAKqlB,SAASsd,WAE9C0vC,EAAgBxxE,UAAU6f,UAAY,SAAUwrC,GAE5ClsD,KAAKuyE,WAAWjvE,KAAK4oD,IAElBmmB,EA7BwB,CA8BjC1e,KAcE6e,IACAC,OAAQ,WAORC,IACAD,OAAQ;;;;;;;;AAgBZ,SAASE,GAAcC,EAAOrqD,GAC1B,IAAK,IAAIpnB,EAAI,EAAGA,EAAIyxE,EAAMtxE,OAAQH,IAC9BonB,EAAIjlB,KAAKsvE,EAAMzxE;;;;;;;OAWvB,IAAI0xE,GAAS,IACTC,GAAmB,6CACnBC,GAAqB,qBACrBC,GAAY,wBACZC,GAAiB,iBACjBC,GAAa,6CAEbC,GAAmB,EACnBC,GAAqC,eACrCC,GAAyB,iCACzBC,GAAqB,4CACrBC,GAAiB,2BACjBC,GAA2B,OAC3BC,GAAwB,aAU5B,SAASC,GAAaC,GAClB,IAAKA,EACD,SAEJ,IAMIt/C,EANAu/C,EAAU,EACVC,KACAC,KACAC,EAAS,QAIb,IAFAA,EAAOC,UAAY,EAEZ3/C,EAAQ0/C,EAAO5nE,KAAKwnE,IAAU,CACjC,IAAIM,EAAM5/C,EAAM9uB,MAChB,GAAgB,KAAZ8uB,EAAM,IAEN,GADAw/C,EAAWnL,MACc,GAArBmL,EAAWvyE,OAAa,CAExB,IAAI4yE,EAAQP,EAAQvrE,UAAUwrE,EAASK,GACnCnB,GAAiBqB,KAAKD,GACtBJ,EAAQxwE,KAAK8wE,GAAcF,IAEtBA,GACLJ,EAAQxwE,KAAK4wE,GAEjBN,EAAUK,EAAM,OAGnB,CACD,GAAyB,GAArBJ,EAAWvyE,OAAa,CACxB,IAAI+yE,EAAcV,EAAQvrE,UAAUwrE,EAASK,GAC7CH,EAAQxwE,KAAK+wE,GACbT,EAAUK,EAAM,EAEpBJ,EAAWvwE,KAAK,MAGxB,IAAI8E,EAAYurE,EAAQvrE,UAAUwrE,GAIlC,MAHiB,IAAbxrE,GACA0rE,EAAQxwE,KAAK8E,GAEV0rE,EASX,SAASM,GAAcT,GAiBnB,IAhBA,IAAIW,KACAtvE,KACAuvE,EAAU,EACVC,EAAc,EAWd5/D,EAAQ8+D,GAVZC,EAAUA,EAAQ7+D,QAAQg+D,GAAkB,SAAUh0D,EAAK21D,EAASntE,GAQhE,OANIitE,EADS,WAATjtE,EACU,EAGA,EAEdktE,EAAcE,SAASD,EAAQ//D,OAAO,GAAI,IACnC,MAIFu/D,EAAM,EAAGA,EAAMr/D,EAAMtT,QAAS,CACnC,IAAIM,EAAMgT,EAAMq/D,KAAOv/C,OACP,IAAZ6/C,IAEA3yE,EAAMA,EAAIkT,QAAQ,oBAAqB,OAEvClT,EAAIN,QACJgzE,EAAMhxE,KAAK1B,GAEf,IAAI+yE,EAASjB,GAAa9+D,EAAMq/D,MAC5BU,EAAOrzE,QACP0D,EAAO1B,KAAKqxE,GAKpB,OAl3cJ,SAASC,EAAkBC,EAAQC,EAAUn/D,GACrCk/D,GAAUC,GASlB,SAASC,EAAWp/D,GAGhB,MAAM,IAAIjP,MAAM,oBAAsBiP,GAXlCo/D,CAAWp/D,GA82cfi/D,CAAkBN,EAAMnsE,QAAQ,UAAW,EAAG,0CAErCb,KAAMitE,EAASC,YAAaA,EAAaF,MAAOA,EAAOtvE,OAAQA,GAK5E,SAASgwE,GAA+B3gE,GAMpC,IALA,IAAIggB,EAIA4gD,EAHAjtE,EAAM,GACNzC,EAAQ,EACR2vE,GAAa,EAEqC,QAA9C7gD,EAAQ0+C,GAAmB5mE,KAAKkI,KAC/B6gE,EAMG7gD,EAAM,KAAOw+C,GAAS,KAAOoC,EAAapC,KAC1CttE,EAAQ8uB,EAAM9uB,MACd2vE,GAAa,IAPjBltE,GAAOqM,EAAQjM,UAAU7C,EAAO8uB,EAAM9uB,MAAQ8uB,EAAM,GAAG/yB,QACvD2zE,EAAa5gD,EAAM,GACnB6gD,GAAa,GAYrB,OADAltE,EAAOqM,EAAQK,OAAOnP,GAsC1B,SAAS4vE,GAA6Br2D,EAAKs2D,EAAiBvnD,EAAUwnD,QAC/C,IAAfA,IAAyBA,EAAa,MAI1C,IAHA,IAAIC,GAAiB,KAAM,MACvBC,EAAYz2D,EAAI2V,MAAMw+C,IACtB3lD,EAAO,EACF3iB,EAAI,EAAGA,EAAI4qE,EAAUj0E,OAAQqJ,IAAK,CACvC,IAAI6qE,EAAYD,EAAU5qE,GAC1B,GAAQ,EAAJA,EAAO,CAEP,IAAI6xB,EAAek4C,SAASc,EAAW,IACvCF,EAAchyE,MAAM,EAAIk5B,GACxBlP,GAAcmoD,GAAUj5C,OAEL,KAAdg5C,GAELF,EAAchyE,KAAKkyE,GAU3B,OAPAF,EAAchyE,KAAK8xE,GAAmB,GACjCvnD,EAAW,EAAe,IAC3BA,GACAynD,EAAchyE,KAAKuqB,EAAUwnD,GAEjCC,EAAc,GAAKhoD,EACnBgoD,EAAc,GAAKA,EAAch0E,OAAS,EACnCg0E,EAEX,SAASI,GAAeC,EAAeroD,GAGnC,IAAI+G,OAFS,IAAT/G,IAAmBA,EAAO,GAC9BA,GAAcmoD,GAAUE,EAAcnB,aAEtC,IAAK,IAAIrzE,EAAI,EAAGA,EAAIw0E,EAAc3wE,OAAO1D,OAAQH,IAE7C,IADA,IAAIy0E,EAAWD,EAAc3wE,OAAO7D,GAC3BwJ,EAAI,EAAGA,EAAIirE,EAASt0E,OAAQqJ,IAAK,CACtC,IAAI1H,EAAQ2yE,EAASjrE,GACrB,GAAqB,iBAAV1H,EACP,KAAOoxB,EAAQ4+C,GAAe9mE,KAAKlJ,IAC/BqqB,GAAcmoD,GAAUf,SAASrgD,EAAM,GAAI,UAI/C/G,EAAOooD,GAAezyE,EAAOqqB,GAIzC,OAAOA,EAEX,IAAIuoD,MACAC,IAAyB,EAS7B,SAASL,GAAUj5C,GACf,OAAO,GAAKu5C,KAAKC,IAAIx5C,EAAc,IAEvC,IAmCIy5C,GAnCAC,MAwBJ,SAASC,GAAU5wE,EAAO8O,EAAS+hE,GAC/B,IAAIlvD,EAAQiC,KAAW3F,IAEvBqyD,KAAiBC,IAAyBvwE,EACtC2hB,EAAMI,mBAA2D,OAAtCJ,EAAMjL,KAAK1W,EAAQmf,KAWtD,SAAS2xD,EAAmBnvD,EAAO3hB,EAAO8O,EAAS+hE,GAC/C,IAAI9wC,EAAWnc,KACXs8C,EAAav+C,EAAMyF,UAAUrrB,OAASojB,GAC1CuxD,GAAgB,EAChB,IAAIptD,EAAwBU,KACxBia,EAAc9Z,KAAgBH,KAC9BV,GAAyBA,EAAsB9W,OAC/C+a,EAAc0W,GAAeA,IAAgB8B,EAASxhB,IAAU0f,EAAYj+B,MAAQmf,GAAgBnf,EACpG+wE,EAAqB,EACzBJ,GAAiBI,GAAsBxpD,EACvC,IAAIypD,KAGAhxE,EAAQ,GAAKsjB,IAA0B2a,GAEvC+yC,EAAcjzE,KAAKulB,EAAsBtjB,OAAS,EAAoB,GAM1E,IAJA,IAAI+vE,KACAkB,KAEAC,EA3IR,SAASC,EAA0BriE,EAAS+hE,GACxC,GAAgC,iBAArBA,EAEP,OAAOpB,GAA+B3gE,GAItC,IAAIizB,EAAQjzB,EAAQlM,QAAQ,IAAMiuE,EAAmBvD,IAAU,EAAIuD,EAAiBnuE,WAAW3G,OAC3FkmB,EAAMnT,EAAQsiE,OAAO,IAAI/9C,OAAOi6C,GAAS,cAAgBuD,EAAmBvD,KAChF,OAAOmC,GAA+B3gE,EAAQjM,UAAUk/B,EAAO9f,IAiIzCkvD,CAA0BriE,EAAS+hE,GAC1B3hD,MAAMu+C,IAChC7xE,EAAI,EAAGA,EAAIs1E,EAASn1E,OAAQH,IAAK,CACtC,IAAI8B,EAAQwzE,EAASt1E,GACrB,GAAQ,EAAJA,EAEA,GAAwB,MAApB8B,EAAMwR,OAAO,IAEb,GAAwB,MAApBxR,EAAMwR,OAAO,GAAY,CACzB,IAAImiE,EAAUlC,SAASzxE,EAAMyR,OAAO,GAAI,IACxCoY,EAAcopD,KAAmBI,GACjCC,EAAcjzE,KAAKszE,GAAW,EAAoB,SAIlDA,EAAUlC,SAASzxE,EAAMyR,OAAO,GAAI,IAExC6hE,EAAcjzE,KAAKszE,GAAW,EAAoB,EAAgB9pD,GAAe,GAAwB,GACjF,MAApB7pB,EAAMwR,OAAO,KACbyhE,KAAmBI,GAAsBxpD,EAAc8pD,QAO/D,IADA,IAAIhiE,EAAQ8+D,GAAazwE,GAChB0H,EAAI,EAAGA,EAAIiK,EAAMtT,OAAQqJ,IAC9B,GAAQ,EAAJA,EAAO,CAGP,IAAIksE,EAAepR,EAAawQ,KAChCM,EAAcjzE,KAAKovE,GAAoD,GAAImE,EAAc/pD,GAAe,GAAwB,GAEhI,IAAI6oD,EAAgB/gE,EAAMjK,GACtB2iB,EAAOooD,GAAeC,GAC1BmB,GAASN,EAAgBb,EAAekB,EAAcA,GAEtD,IAAIE,EAAYP,EAAel1E,OAAS,EACxCg0E,EAAchyE,KAAKmyE,GAAUE,EAAcnB,aAC3C,GACC,EAAImB,EAAcnB,YAAaqC,GAAgB,EAAoB,EAAmBE,EAAWzpD,EAClG,EACAupD,GAAgB,EAAoB,EAAmBE,QAEtD,GAAiB,KAAbniE,EAAMjK,GAAW,CACtB,IAAIqsE,EAAUpiE,EAAMjK,GAEhBssE,EAAaD,EAAQ3iD,MAAM4+C,IAE3BiE,EAAgBzR,EAAawQ,KACjCM,EAAcjzE,KAEd2zE,EAAa,GAAKD,EAASE,EAAepqD,GAAe,GAAwB,GAC7EmqD,GACAtE,GAAcwC,GAA6B6B,EAASE,GAAgB5B,KAj+Q5F,SAAS6B,EAAa5xD,EAAM6xD,GACxB,IAAIlwD,EAAQ3B,EAAK/B,IACjB,GAAI0D,EAAMI,kBAAmB,CACzB,IAAK,IAAInmB,EAAI,EAAGA,EAAIi2E,EAAiBj2E,IACjC+lB,EAAMyF,UAAUrpB,KAAK,MACrB4jB,EAAMjL,KAAK3Y,KAAK,MAChBiiB,EAAKjiB,KAAK,MAIT4jB,EAAMktB,oBAMPltB,EAAMktB,oBAAoB9wC,KAAK8zE,GAL/BlwD,EAAMmtB,mBAAqB+iC,IA49QnCD,CAAa7xC,EAAU2wC,IAQvB/uD,EAAMjL,KAAK1W,EAAQmf,KALfpF,KAAM22D,GACNn1E,OAAQy1E,EACRc,OAAQ/B,EACRgC,KAAMd,EAAel1E,OAASk1E,EAAiB,MA/F/CH,CAAmBnvD,EAAO3hB,EAAO8O,EAAS+hE,GAmGlD,SAASmB,GAAenyD,EAAOoe,EAAag0C,GAExC,IAAI//C,EAAWrS,EAAMpiB,KACjBsiC,EAAWnc,KACVquD,IACDA,EAAgBh0C,GAGhBg0C,IAAkBh0C,GAAepe,IAAUoe,EAAYhF,OACvDpZ,EAAMpiB,KAAOwgC,EAAYhF,MACzBgF,EAAYhF,MAAQpZ,GAEfoyD,IAAkBh0C,GAAepe,IAAUoyD,EAAcx0E,MAC9DoiB,EAAMpiB,KAAOw0E,EAAcx0E,KAC3Bw0E,EAAcx0E,KAAOoiB,GAGrBA,EAAMpiB,KAAO,KAEbwgC,IAAgB8B,EAASxhB,MACzBsB,EAAMrT,OAASyxB,GAInB,IADA,IAAIi0C,EAASryD,EAAMpiB,KACZy0E,GACCA,EAAOz0E,OAASoiB,IAChBqyD,EAAOz0E,KAAOy0B,GAElBggD,EAASA,EAAOz0E,KAEpBivB,GAAY9M,GAAiBC,EAAOkgB,GAAWlgB,EAAOkgB,GACtD,IAAI1f,EAAY0f,EAASlgB,EAAM7f,OAK/B,OAJmB,IAAf6f,EAAM9d,MAA8Bye,GAAaH,IAEjDqM,GAAYrM,EAAUf,IAASO,EAAOkgB,GAEnClgB,EAqBX,SAASsyD,GAAgBrjE,EAASsjE,QACT,IAAjBA,IAA2BA,MAW/B,IAAI5rE,EAASsI,EACb,GAAI++D,GAAmCe,KAAK9/D,GAAU,CAClD,IAAIujE,KACAC,GAAsB1E,IAwC1B,GAvCApnE,EAASA,EAAO+I,QAAQu+D,GAAwB,SAAUxwE,EAAGi1E,EAAKC,GAC9D,IAAIt/C,EAAUq/C,GAAOC,EACrB,IAAKH,EAAUn/C,GAAU,CACrB,IAAIu/C,KACJv/C,EAAQhE,MAAM,KAAKlnB,QAAQ,SAAU0qE,GACjC,IAAI5jD,EAAQ4jD,EAAY5jD,MAAMo/C,IAC1ByE,EAAa7jD,EAAQqgD,SAASrgD,EAAM,GAAI,IAAM8+C,GAC9CgF,EAAqB3E,GAAyBW,KAAK8D,GACvDD,EAAe10E,MAAM40E,EAAYC,EAAoBF,MAEzDL,EAAUn/C,GAAWu/C,EAEzB,IAAKJ,EAAUn/C,GAASn3B,OACpB,MAAM,IAAIoF,MAAM,6CAA+C+xB,GAMnE,IAJA,IAAI2/C,EAAoBP,EAAmBA,EAAmBv2E,OAAS,GACnE+2E,EAAeT,EAAUn/C,GACzB6iB,EAAM,EAEDn6C,EAAI,EAAGA,EAAIk3E,EAAa/2E,OAAQH,IACrC,GAAIk3E,EAAal3E,GAAG,KAAOi3E,EAAmB,CAC1C98B,EAAMn6C,EACN,MAIR,IAAImD,EAAKnB,EAAOk1E,EAAa/8B,GAAM,GAAI48B,EAAa5zE,EAAG,GAAgC2zE,EAAc3zE,EAAG,GASxG,OATgFA,EAAG,GAE/EuzE,EAAmBnP,MAEd0P,IAAsBF,GAC3BL,EAAmBv0E,KAAK40E,GAG5BG,EAAah3C,OAAOia,EAAK,GAClB28B,IAGc73E,OAAOkN,KAAKsqE,GAAW9+D,KAAK,SAAUlX,GAAO,QAASg2E,EAAUh2E,GAAKN,SAE1F,MAAM,IAAIoF,MAAM,wCAA0CmO,KAAKjN,UAAUgwE,IAIjF,OAAKx3E,OAAOkN,KAAKqqE,GAAcr2E,OAa/ByK,GAPAA,EAASA,EAAO+I,QAAQw+D,GAAoB,SAAUj/C,EAAOiT,EAAO1lC,EAAKyuC,EAAOioC,EAAM9wD,GAClF,OAAOmwD,EAAal3E,eAAemB,GAAO,GAAK0lC,EAAQqwC,EAAa/1E,GAAO4lB,EAAM6M,KAMrEvf,QAAQy+D,GAAgB,SAAUl/C,EAAOzyB,GACrD,GAAI+1E,EAAal3E,eAAemB,GAAM,CAClC,IAAI22E,EAAOZ,EAAa/1E,GACxB,IAAK22E,EAAKj3E,OACN,MAAM,IAAIoF,MAAM,qCAAuC2tB,EAAQ,cAAgBzyB,GAEnF,OAAO22E,EAAKC,QAEhB,OAAOnkD,IApBAtoB,EA4Bf,SAAS0sE,MAiBT,SAASC,EAAiBxxD,GACtB,IAAIoe,EAAWnc,KAEXwvD,EAAY9C,GAAeC,MAC3B8C,EAAQ1xD,EAAMjL,KAAK08D,EAAYj0D,IAG/BmE,EAAwBU,KACxBsvD,EAAeC,GAAkBH,EAAWC,EAAM93E,OAAQ83E,EAAYtzC,GAEtEyzC,EAAkBlwD,EAClBkwD,EAAgBv6C,QAChBu6C,EAxBR,SAASC,EAAaxhD,GAClB,KAAOA,EAAKx0B,MACRw0B,EAAOA,EAAKx0B,KAEhB,OAAIw0B,EAAKgH,MACEw6C,EAAaxhD,EAAKgH,OAEtBhH,EAiBewhD,CAAaD,EAAgBv6C,QAGnD,IAAK,IAAIr9B,EAAIw3E,EAAY,EAAGx3E,GAAK43E,EAAgBxzE,MAAQmf,GAAevjB,KACnC,IAA7B03E,EAAa1wE,QAAQhH,IACrB83E,GAAW93E,EAAGmkC,GA/BtBozC,CAFYvvD,KAAW3F,KAwC3B,SAAS01D,GAAyB3zE,EAAO+B,EAAM02B,EAAQl6B,GACnD,IAAI+kB,EAAwBU,KACxBnE,EAAQ+vB,GAAkB5vC,EAAO+B,EAAM02B,EAAQl6B,EAAM,MAMzD,OAHI+kB,EAAsB7lB,OAASoiB,IAC/ByD,EAAsB7lB,KAAO,MAE1BoiB,EAEX,SAAS0zD,GAAkBvzE,EAAOgxE,EAAee,EAAMhyC,GAKnD,IAJA,IAAIrG,EAAW9V,KAAW/E,IACtB+0D,EAAe,KACf3B,EAAgB,KAChBqB,KACK13E,EAAI,EAAGA,EAAIo1E,EAAcj1E,OAAQH,IAAK,CAC3C,IAAIi4E,EAAS7C,EAAcp1E,GAC3B,GAAqB,iBAAVi4E,EAAoB,CAC3B,IAAIC,EAAYt4C,GAAeq4C,EAAQn6C,GACnCi4C,EAAgBX,IAAgBp1E,GAEpCq2E,EAAgB2B,EAChBA,EAAeD,GAAyBhC,EAAe,EAAiBmC,EAAW,MACnFR,EAAav1E,KAAK4zE,GAClBvtD,IAAY,QAEX,GAAqB,iBAAVyvD,EACZ,OAAiB,EAATA,GACJ,KAAK,EACD,IAAIE,EAAuBF,IAAW,GAClCG,OAAmB,EAWvB/B,EAAgBD,GAAe4B,EAP3BI,EAHAD,IAAyB/zE,EAGN+/B,EAASxhB,IAGTwB,GAASg0D,EAAsBh0C,GAISkyC,GAC/D+B,EAAiBv2E,KAAO,KACxB,MACJ,KAAK,EACD,IAAI2iB,EAAYyzD,IAAW,EAC3BP,EAAav1E,KAAKqiB,GAClB6xD,EAAgB2B,GAChBA,EAAe7zD,GAASK,EAAW2f,MAE/B9b,GAAyB2vD,GACC,IAAtBA,EAAa7xE,MACbqiB,IAAY,IAGpB,MACJ,KAAK,EAED6tD,EAAgB2B,EAAe7zD,GADZ8zD,IAAW,EACwB9zC,GACtD9b,GAAyB2vD,GACzBxvD,IAAY,GACZ,MACJ,KAAK,EAIDiyB,GAHI49B,EAAmBJ,IAAW,EACnB7C,IAAgBp1E,GACfo1E,IAAgBp1E,IAEhC,MACJ,QACI,MAAM,IAAIuF,MAAM,yDAA4D0yE,EAAS,UAI7F,OAAQA,GACJ,KAAK1G,GACD,IAAI+G,EAAelD,IAAgBp1E,GAC/Bu4E,EAAmBnD,IAAgBp1E,GAEnCw4E,EAAe16C,EAASwX,cAAcgjC,GAE1CjC,EAAgB2B,EAChBA,EAAeD,GAAyBQ,EAAkB,EAAsBC,EAAc,MAC9Fd,EAAav1E,KAAKo2E,GAClBx7C,GAAgBy7C,EAAcr0C,GAC9B6zC,EAAaS,gBAAkB,KAE/BjwD,IAAY,GACZ,MACJ,KAAK6oD,GACD,IACIgH,EADAK,EAAetD,IAAgBp1E,GAKnCq2E,EAAgB2B,EAChBA,EAAeD,GALXM,EAAmBjD,IAAgBp1E,GAKmB,EAHvC89B,EAASjN,cAAc6nD,GAG+CA,GACzFhB,EAAav1E,KAAKk2E,GAClB,MACJ,QACI,MAAM,IAAI9yE,MAAM,yDAA4D0yE,EAAS,MAKrG,OADAzvD,IAAY,GACLkvD,EAqFX,SAASI,GAAW1zE,EAAO+/B,GACvB,IAAIw0C,EAAiBx0D,GAAS/f,EAAO+/B,GACjCy0C,EAAiB90D,GAAiB1f,EAAO+/B,GACzCy0C,GACAl5C,GAAiByE,EAASlhB,IAAW21D,GAEzC,IAAIn0D,EAAY0kC,GAAK/kD,GACjBwgB,GAAaH,IAEe,IAAxBk0D,EAAexyE,MACfu5B,GAAiByE,EAASlhB,IAFbwB,EAEmCf,KA6B5D,SAASm1D,GAAKz0E,EAAO8O,EAAS+hE,GAC1BD,GAAU5wE,EAAO8O,EAAS+hE,GAC1BqC,KAQJ,SAASwB,GAAe10E,EAAOP,GAC3B,IAAIkiB,EAAQiC,KAAW3F,IAEnB0D,EAAMI,mBAA2D,OAAtCJ,EAAMjL,KAAK1W,EAAQmf,KAOtD,SAASw1D,EAAwBhzD,EAAO3hB,EAAOP,GAI3C,IAHA,IACIm1E,EADkB5wD,KACqBhkB,MAAQmf,GAC/C4wD,KACKn0E,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EAIpC,IAHA,IAAI0sB,EAAW7oB,EAAO7D,GAElByT,EADU5P,EAAO7D,EAAI,GACLszB,MAAMy+C,IACjBvoE,EAAI,EAAGA,EAAIiK,EAAMtT,OAAQqJ,IAAK,CACnC,IAAI1H,EAAQ2R,EAAMjK,GACV,EAAJA,GACe,KAAV1H,IAEcA,EAAMoxB,MAAM4+C,IAE3BN,GAAcwC,GAA6BlyE,EAAOk3E,EAAsBtsD,GAAWynD,GAGnF15B,GAAiBu+B,EAAsBtsD,EAAU5qB,IAKjEikB,EAAMjL,KAAK1W,EAAQmf,IAAiB4wD,EA7BhC4E,CAAwBhzD,EAAO3hB,EAAOP,GA+B9C,IA0CIo1E,GA1CAC,GAAa,EACbC,GAAgB,EAOpB,SAASC,GAAQC,GACTA,IAAel+C,KACf+9C,IAA2B,GAAKC,IAEpCA,KAQJ,SAASG,GAAUl1E,GACf,GAAI+0E,GAAe,CACf,IAAIp1D,EAAQiE,KAGRyvD,EAFQ1zD,EAAM1B,IAEAvH,KAAK1W,EAAQmf,IAC3B4wD,OAAgB,EAChBgC,EAAO,KACP/2E,MAAMmK,QAAQkuE,GACdtD,EAAgBsD,GAGhBtD,EAAgBsD,EAAMvB,OACtBC,EAAOsB,EAAMtB,MAxMzB,SAASoD,EAAkBpF,EAAegC,EAAMqD,EAAoBN,EAAY/0C,EAAUs1C,QAC/D,IAAnBA,IAA6BA,GAAiB,GAElD,IADA,IAAIC,GAAc,EACT15E,EAAI,EAAGA,EAAIm0E,EAAch0E,OAAQH,IAAK,CAE3C,IAAI25E,EAAWxF,EAAcn0E,GAEzB45E,EAAYzF,IAAgBn0E,GAChC,GAAIy5E,GAAmBE,EAAWT,EAG9B,IADA,IAAIp3E,EAAQ,GACH0H,EAAIxJ,EAAI,EAAGwJ,GAAMxJ,EAAI45E,EAAYpwE,IAAK,CAC3C,IAAIyuE,EAAS9D,EAAc3qE,GAC3B,GAAqB,iBAAVyuE,EACPn2E,GAASm2E,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAETn2E,GAASgb,GAAgBqnB,EAASq1C,EAAqBvB,QAEtD,CACD,IAAIzzD,EAAYyzD,IAAW,EAEvB4B,OAAO,EACPC,OAAW,EACf,OAAiB,EAAT7B,GACJ,KAAK,EAGDx9B,GAAiBj2B,EAFF2vD,IAAgB3qE,GAEO1H,EADrBqyE,IAAgB3qE,IAEjC,MACJ,KAAK,EACDs5C,GAAYt+B,EAAW1iB,GACvB,MACJ,KAAK,EAKD,GAHA+3E,EAAO1D,EADKhC,IAAgB3qE,IAIK,QAFjCswE,EAAW31D,GAASK,EAAW2f,IAElBs0C,gBAET,IADA,IAAIsB,EAAcF,EAAKttC,OAAOutC,EAASrB,iBAC9BvkE,EAAI,EAAGA,EAAI6lE,EAAY55E,OAAQ+T,IAAK,CACzC,IAAI8lE,EAAeD,EAAY7lE,GAC/B,OAAuB,EAAf8lE,GACJ,KAAK,EAEDlC,GADkBkC,IAAiB,EACX71C,GACxB,MACJ,KAAK,EACD,IAEI81C,EADiB91D,GADI41D,EAAY7lE,EAAI,KAAO,EACEiwB,GACjBs0C,gBACb,OAAhBwB,GAGAzI,GADiB2E,EADK6D,IAAiB,GAEdztC,OAAO0tC,GAAcF,IAOlE,IAAIG,EAAYC,GAAaN,EAAM/3E,GACnCg4E,EAASrB,iBAAiC,IAAfyB,EAAmBA,EAAY,KAE1DvC,IAAmB,EAAGkC,EAAKl6E,OAAOu6E,GAAY/D,EAAMhyC,GACpDu1C,GAAc,EACd,MACJ,KAAK,EAEDG,EAAO1D,EADKhC,IAAgB3qE,IAE5BswE,EAAW31D,GAASK,EAAW2f,GAC/Bo1C,EAAkBM,EAAK3D,OAAO4D,EAASrB,iBAAkBtC,EAAMqD,EAAoBN,EAAY/0C,EAAUu1C,KAOjI15E,GAAK45E,GA2HLL,CAAkBpF,EAAegC,EADRpyD,EAAMnB,IAAiBu2D,GAAgB,EACLD,GAAYn1D,GAEvEm1D,GAAa,EACbC,GAAgB,GAwZxB,SAASgB,GAAa3F,EAAe4F,GACjC,IAAIh2E,EAAQowE,EAAcrB,MAAMnsE,QAAQozE,GACxC,IAAe,IAAXh2E,EACA,OAAQowE,EAAcruE,MAClB,KAAK,EAED,IACIk0E,EA9BpB,SAASC,EAAkBx4E,EAAOy4E,GAE9B,OAhXJ,SAASC,EAAcD,EAAQE,GACN,iBAAVA,IACPA,EAAQlH,SAASkH,EAAO,KAE5B,IAAIx6E,EAAIw6E,EACJC,EAAWz6E,EAAE6G,WAAW6M,QAAQ,YAAa,IAC7C3T,EAAI40E,KAAK+F,MAAM/F,KAAKgG,IAAI36E,IACxBgK,EAAIywE,EAASv6E,OACbyxD,EAAI2hB,SAASmH,EAAU,IACvB56E,EAAIyzE,SAAStzE,EAAE6G,WAAW6M,QAAQ,iBAAkB,IAAK,KAAO,EAEpE,OADW4mE,EAAOjnD,MAAM,KAAK,GAAG2C,eh2B,EACOg5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAI76E,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,GAAKA,GAAK,EAC/Bg5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAAN96E,GAAiB,IAANC,EACJg5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,EACOg5E,GAAO8B,KACR,IAAN96E,EACOg5E,GAAO4B,IACR,IAAN56E,EACOg5E,GAAO+B,IACd/6E,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACvDg5E,GAAOgC,IACdh7E,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxDg5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAAN96E,GAAiB,IAANiK,EACJgvE,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAI76E,EAAI,IAAO,GAAOA,EAAI,KAAQ,GACvBg5E,GAAO4B,IACd56E,EAAI,KAAO20E,KAAK+F,MAAM16E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACxDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBg5E,GAAOgC,IACdh7E,EAAI,IAAO,GAAKA,EAAI,KAAO20E,KAAK+F,MAAM16E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC1EA,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxDg5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAI76E,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAC3Dg5E,GAAO4B,IACd56E,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAC3Dg5E,GAAO+B,IACd/6E,EAAI,KAAO20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAAKA,EAAI,IAAO,MACzEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAC5DA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACzBg5E,GAAOgC,IACN,IAANh7E,GAAYA,EAAI,KAAQ,EACnBg5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAAN7wE,GAAWjK,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAO4xD,EAAI,IAAO,GAAOA,EAAI,KAAQ,GACvEqnB,GAAO4B,IACR,IAAN5wE,GAAWjK,EAAI,KAAO40E,KAAK+F,MAAM36E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,KAC9B4xD,EAAI,KAAOgjB,KAAK+F,MAAM/oB,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACpDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAC3BqnB,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACD,OAAU,IAAN96E,GAAiB,IAANiK,EACJgvE,GAAO4B,IACd76E,IAAM40E,KAAK+F,MAAM36E,IAAMA,GAAK,GAAKA,GAAK,GAAW,IAANiK,EACpCgvE,GAAOgC,IACN,IAANhxE,EACKgvE,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,EACOg5E,GAAO8B,KACR,IAAN96E,EACOg5E,GAAO4B,IACR,IAAN56E,EACOg5E,GAAO+B,IACR,IAAN/6E,EACOg5E,GAAOgC,IACR,IAANh7E,EACOg5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,GAAmB,IAANH,IAAmB,IAANE,GAAiB,IAANA,GAC9Bi5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,MACL,IAAK,MACD,OAAU,IAAN7wE,GAAWjK,EAAI,KAAQ,GAAK4xD,EAAI,KAAQ,EACjCqnB,GAAO4B,IACR,IAAN5wE,GAAWjK,EAAI,KAAQ,GAAK4xD,EAAI,KAAQ,EACjCqnB,GAAO+B,IACR,IAAN/wE,GAAWjK,EAAI,MAAQ40E,KAAK+F,MAAM36E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACzE4xD,EAAI,MAAQgjB,KAAK+F,MAAM/oB,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,EACvDqnB,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACD,OAAU,IAAN96E,GAAiB,IAANA,EACJi5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,MACD,OAAU,IAAN7wE,IAAkB,IAANjK,GAAiB,IAANA,GAAiB,IAANA,IAC5B,IAANiK,GAAajK,EAAI,IAAO,GAAKA,EAAI,IAAO,GAAKA,EAAI,IAAO,GAChD,IAANiK,GAAc2nD,EAAI,IAAO,GAAKA,EAAI,IAAO,GAAKA,EAAI,IAAO,EACpDqnB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,EACOg5E,GAAO4B,IACR,IAAN56E,EACOg5E,GAAO+B,IACd/6E,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,GAAKA,GAAK,EAC/Bg5E,GAAOgC,IACdh7E,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,GAAKA,GAAK,GAC/Bg5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,GAAiB,KAANA,EACJg5E,GAAO4B,IACR,IAAN56E,GAAiB,KAANA,EACJg5E,GAAO+B,IACd/6E,IAAM20E,KAAK+F,MAAM16E,KAAOA,GAAK,GAAKA,GAAK,IAAMA,GAAK,IAAMA,GAAK,IACtDg5E,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN7wE,GAAWjK,EAAI,IAAO,EACfi5E,GAAO4B,IACR,IAAN5wE,GAAWjK,EAAI,IAAO,EACfi5E,GAAO+B,IACR,IAAN/wE,GACCjK,EAAI,KAAQ,GAAKA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAE5E,IAANiK,EACKgvE,GAAOiC,KACXjC,GAAO6B,MAHH7B,GAAOgC,IAItB,IAAK,KACD,OAAU,IAANj7E,GAAiB,IAANiK,EACJgvE,GAAO4B,IACR,IAAN76E,GAAiB,IAANiK,EACJgvE,GAAO+B,IACR,IAAN/wE,GAAahK,GAAK,GAAKA,GAAK,IAAOA,EAAI,IAAO,EAE3Cg5E,GAAO6B,MADH7B,GAAOiC,KAEtB,IAAK,KACD,OAAU,IAANp7E,GAAWE,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAe,IAANF,EAC3Cm5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,MACD,OAAU,IAAN76E,EACOg5E,GAAO8B,KACR,IAAN96E,EACOg5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACD,OAAU,IAAN76E,EACOg5E,GAAO4B,IACR,IAAN56E,EACOg5E,GAAO+B,IACX/B,GAAO6B,MAClB,IAAK,MACD,OAAU,IAAN76E,EACOg5E,GAAO8B,KACP,IAAN/6E,GAAiB,IAANA,GAAoB,IAANC,EAEvBg5E,GAAO6B,MADH7B,GAAO4B,IAEtB,IAAK,KACD,OAAI56E,EAAI,IAAO,GAAOA,EAAI,KAAO,IAAMA,EAAI,KAAO,GAE9CA,EAAI,KAAO20E,KAAK+F,MAAM16E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACxDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBg5E,GAAOgC,IACN,IAANrpB,EACKqnB,GAAOiC,KACXjC,GAAO6B,MANH7B,GAAO4B,IAOtB,IAAK,KACL,IAAK,MACD,OAAI56E,EAAI,IAAO,GAAKA,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACzE,IAANgK,GAAW2nD,EAAI,MAAQgjB,KAAK+F,MAAM/oB,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEqnB,GAAO8B,KACd96E,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAa,IAANgK,GAAW2nD,EAAI,IAAO,GAAOA,EAAI,KAAQ,IACtE,IAAN3nD,GAAY2nD,EAAI,IAAO,EAClBqnB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN7wE,GAAWjK,EAAI,IAAO,GAAK4xD,EAAI,IAAO,EAC/BqnB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,EACOg5E,GAAO4B,IACR,IAAN56E,GAAWA,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAClEg5E,GAAOgC,IACdh7E,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxDg5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN96E,GAAiB,IAANiK,EACJgvE,GAAO4B,IACR,IAAN5wE,GAAWjK,EAAI,KAAO40E,KAAK+F,MAAM36E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBi5E,GAAOgC,IACR,IAANhxE,GAAmB,IAANjK,GAAYA,EAAI,KAAO40E,KAAK+F,MAAM36E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC7E,IAANiK,GAAWjK,EAAI,KAAO40E,KAAK+F,MAAM36E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC/D,IAANiK,GAAWjK,EAAI,MAAQ40E,KAAK+F,MAAM36E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEi5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAI76E,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,GAAKA,GAAK,GAAa,IAANA,EACtCg5E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN96E,GAAiB,IAANiK,EACJgvE,GAAO4B,IACN,IAAN5wE,GAAkB,IAANhK,GACN,IAANA,GAAYA,EAAI,MAAQ20E,KAAK+F,MAAM16E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACrEg5E,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACD,OAAU,IAAN7wE,GAAWjK,EAAI,IAAO,GAAOA,EAAI,KAAQ,GAClCi5E,GAAO4B,IACR,IAAN5wE,GAAWjK,EAAI,KAAO40E,KAAK+F,MAAM36E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBi5E,GAAOgC,IACR,IAANhxE,GAAWjK,EAAI,IAAO,GAChB,IAANiK,GAAWjK,EAAI,KAAO40E,KAAK+F,MAAM36E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC/D,IAANiK,GAAWjK,EAAI,MAAQ40E,KAAK+F,MAAM36E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEi5E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,MACD,OAAU,IAAN96E,GAAiB,IAANC,EACJg5E,GAAO4B,IACd56E,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,GAAKA,GAAK,GAC/Bg5E,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN76E,GAAiB,IAANA,GAAiB,IAAND,GAAiB,IAAN4xD,EAC1BqnB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAAN7wE,GAAWjK,EAAI,KAAQ,EAChBi5E,GAAO4B,IACR,IAAN5wE,GAAWjK,EAAI,KAAQ,EAChBi5E,GAAO+B,IACR,IAAN/wE,GAAWjK,EAAI,MAAQ40E,KAAK+F,MAAM36E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAAa,IAANiK,EACzEgvE,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,MACD,OAAI76E,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,GAAKA,GAAK,GAAKA,IAAM20E,KAAK+F,MAAM16E,IAAMA,GAAK,IAAMA,GAAK,GAC3Eg5E,GAAO4B,IACX5B,GAAO6B,MAIlB,QACI,OAAO7B,GAAO6B,OAITN,CAAcD,EAAQz4E,IAE/B,KAAKm3E,GAAO8B,KACR,MAAO,OACX,KAAK9B,GAAO4B,IACR,MAAO,MACX,KAAK5B,GAAO+B,IACR,MAAO,MACX,KAAK/B,GAAOgC,IACR,MAAO,MACX,KAAKhC,GAAOiC,KACR,MAAO,OACX,QACI,MAAO,SAgBgBZ,CAAkBF,EADxB,UAGE,KADfh2E,EAAQowE,EAAcrB,MAAMnsE,QAAQqzE,KACC,UAAjBA,IAChBj2E,EAAQowE,EAAcrB,MAAMnsE,QAAQ,UAExC,MAEJ,KAAK,EACD5C,EAAQowE,EAAcrB,MAAMnsE,QAAQ,SAKhD,OAAO5C,EAUX,SAASuxE,GAASwF,EAAO3G,EAAelQ,EAAYpxB,GAMhD,IALA,IAAIkoC,KACArB,KACAsB,KACAl9D,KACAm9D,KACKt7E,EAAI,EAAGA,EAAIw0E,EAAc3wE,OAAO1D,OAAQH,IAAK,CAIlD,IAFA,IAAIy0E,EAAWD,EAAc3wE,OAAO7D,GAChCu7E,KACK/xE,EAAI,EAAGA,EAAIirE,EAASt0E,OAAQqJ,IAAK,CACtC,IAAI1H,EAAQ2yE,EAASjrE,GACrB,GAAqB,iBAAV1H,EAAoB,CAE3B,IAAI05E,EAAWD,EAAWp5E,KAAKL,GAAS,EAExC2yE,EAASjrE,GAAK,WAAegyE,EAAW,WAGhD,IAAIC,EAAUC,GAAajH,EAAS9tE,KAAK,IAAK29D,EAAYiX,EAAYJ,EAAOjoC,GAC7EkoC,EAAYj5E,KAAKs5E,EAAQ97E,QACzBo6E,EAAY53E,KAAKs5E,EAAQlvC,QACzB8uC,EAAYl5E,KAAKs5E,EAAQvF,QACzB/3D,EAAKhc,KAAKs5E,EAAQt9D,MAClBm9D,EAAUn5E,KAAKs5E,EAAQH,WAW3BH,EAAMh5E,MARFgE,KAAMquE,EAAcruE,KACpBgY,KAAMA,EACNm9D,UAAWA,EACXnI,MAAOqB,EAAcrB,MACrBxzE,OAAQy7E,EACR7uC,OAAQwtC,EACR7D,OAAQmF,IAIZvG,IAAiBF,KAAK+G,IAAIt7E,MAAMu0E,KAAMvyE,EAAS8b,IAYnD,SAASu9D,GAAa5kD,EAAYnL,EAAa4vD,EAAYJ,EAAOjoC,GAC9D,IACIviB,EADkB,IAAIL,GAAgB8H,UACHnH,oBAAoB6F,GAC3D,IAAKnG,EACD,MAAM,IAAIprB,MAAM,yCAEpB,IACIq2E,GAAYz9D,KAAM,EAAGm9D,aAAe37E,UAAY4sC,UAAY2pC,WAEhE,OAaJ,SAAS2F,EAAWC,EAAaL,EAAS9vD,EAAa4vD,EAAYJ,EAAOjoC,GACtE,GAAI4oC,EAAa,CAEb,IADA,IAAIC,KACGD,GAAa,CAChB,IAAIxlD,EAAWwlD,EAAYjpD,YACvBqY,EAAWgI,KAAsBuoC,EAAQt9D,KAC7C,OAAQ29D,EAAYppD,UAChB,KAAKC,KAAKC,aACN,IAAIopD,EAAaF,EACb/lD,EAAUimD,EAAWjmD,QAAQE,cACjC,GAAKpB,GAAev1B,eAAey2B,GAI9B,CACD0lD,EAAQ97E,OAAOwC,KAAKkvE,GAAgBt7C,EAASmV,EAAUvf,GAAe,GAAwB,GAE9F,IADA,IAAI0G,EAAU2pD,EAAW1pD,WAChBtyB,EAAI,EAAGA,EAAIqyB,EAAQlyB,OAAQH,IAAK,CACrC,IAAIwlC,EAAOnT,EAAQE,KAAKvyB,GACpBi8E,EAAgBz2C,EAAK7iC,KAAKszB,cACTuP,EAAK1jC,MAAMoxB,MAAM4+C,IAG9B78C,GAAY31B,eAAe28E,IAEvBzK,GADA18C,GAAUmnD,GACIjI,GAA6BxuC,EAAK1jC,MAAOopC,EAAU1F,EAAK7iC,KAAMqwB,IAEvE+B,GAAaknD,GACJjI,GAA6BxuC,EAAK1jC,MAAOopC,EAAU1F,EAAK7iC,KAAMywB,IAG9D4gD,GAA6BxuC,EAAK1jC,MAAOopC,EAAU1F,EAAK7iC,MANqB84E,EAAQvF,QAe3GuF,EAAQ97E,OAAOwC,KAAK+oC,GAAY,EAAoB,EAAc1F,EAAK7iC,KAAM6iC,EAAK1jC,OAI1F+5E,EAAWC,EAAY/pD,WAAY0pD,EAASvwC,EAAUqwC,EAAYJ,EAAOjoC,GAEzEuoC,EAAQlvC,OAAOpqC,KAAK+oC,GAAY,EAAoB,QAlCpDuwC,EAAQt9D,OAoCZ,MACJ,KAAKwU,KAAK8C,UACN,IAAI3zB,EAAQg6E,EAAY94B,aAAe,GACnC8yB,EAAah0E,EAAMoxB,MAAM4+C,IAC7B2J,EAAQ97E,OAAOwC,KAAK2zE,EAAa,GAAKh0E,EAAOopC,EAAUvf,GAAe,GAAwB,GAC9F8vD,EAAQlvC,OAAOpqC,KAAK+oC,GAAY,EAAoB,GAChD4qC,GACAtE,GAAcwC,GAA6BlyE,EAAOopC,GAAWuwC,EAAQvF,QAEzE,MACJ,KAAKvjD,KAAKupD,aAEN,IAAIhpD,EAAQipD,GAAWnxE,KAAK8wE,EAAY94B,aAAe,IACvD,GAAI9vB,EAAO,CACP,IAAIkpD,EAAiB7I,SAASrgD,EAAM,GAAI,IAGxCuoD,EAAQ97E,OAAOwC,KAAKovE,GAFwC,GAEdrmC,EAAUvf,GAAe,GAAwB,GAE/FowD,EAAmB55E,MADfk6E,EAAYd,EAAWa,GACSlxC,SAIpCuwC,EAAQt9D,OAEZ,MACJ,QAEIs9D,EAAQt9D,OAEhB29D,EAAcxlD,EAElB,IAASt2B,EAAI,EAAGA,EAAI+7E,EAAmB57E,OAAQH,IAAK,CAChD,IAAIq8E,EACAC,EAAqBP,EAAmB/7E,GAAG,GAC/C21E,GAASwF,EAFLkB,EAAYN,EAAmB/7E,GAAG,GAEXs8E,EAAoBppC,EAAoBuoC,EAAQt9D,MAE3E,IAAIo+D,EAAgBpB,EAAMh7E,OAAS,EACnCs7E,EAAQt9D,MAAQy2D,KAAK+G,IAAIt7E,MAAMu0E,KAAMvyE,EAAS84E,EAAMoB,GAAep+D,OACnEs9D,EAAQH,UAAUn5E,KAAKo6E,GACvB,IAAIpwD,EAAOooD,GAAe8H,GAC1BZ,EAAQvF,OAAO/zE,KAAKmyE,GAAU+H,EAAUhJ,aACxC,GACC,EAAIgJ,EAAUhJ,YAAaiJ,GAAsB,EAAoB,EAAmBC,EAAepwD,EACxG,EACAmwD,GAAsB,EAAoB,EAAmBC,GAC7Dd,EAAQlvC,OAAOpqC,KAAKo6E,GAAiB,EAAoB,EAAyBD,GAAsB,EAAoB;;;;;;;OA5GpIT,EAFc1kD,GAAmBxG,IAAqBA,GAEnCoB,WAAY6pD,EAASjwD,EAAa4vD,EAAYJ,EAAOjoC,GACjE0oC,GA5eX,SAAW3C,GACPA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAc,MAAI,GAAK,QANlC,CAOGA,KAAWA,QAued,IAAIkD,GAAa,UAqHbK,IACA/tE,QAASwkD,GACTpkD,SAAUihE,GACVjiE,MAAO6lD,KAEP+oB,GAA+B,SAAUlpB,GAEzC,SAASmpB,EAAetsB,EAAc33C,GAClC,IAAImB,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KACjC+a,EAAMnB,QAAUA,EAEhBmB,EAAMqzD,wBACNrzD,EAAMrR,SAAWqR,EACjBA,EAAMw3D,cACN,IAAIv1D,EAAcsG,GAAeiuC,GAYjC,OAVAx2C,EAAMqzD,qBAAuBpxD,EAAYwF,UAQzCzH,EAAM+iE,YAAcluB,GAAe2B,EAAc33C,IALzChK,QAASilD,GACT/kD,SAAUiL,GAEd4iE,IAE2E/1E,EAAU2pD,IACzFx2C,EAAM0T,SAAW1T,EAAM5Q,IAAIonD,GACpBx2C,EA4BX,OAhDAra,EAAUm9E,EAAgBnpB,GAsB1BmpB,EAAeh9E,UAAUsJ,IAAM,SAAUlE,EAAOoE,EAAemkE,GAG3D,YAFsB,IAAlBnkE,IAA4BA,EAAgByH,GAASH,yBACrC,IAAhB68D,IAA0BA,EAAclvE,EAAQyG,YAAYkE,SAC5DhE,IAAU6L,IAAY7L,IAAU4uD,IAAe5uD,IAAU2L,GAClD5R,KAEJA,KAAK89E,YAAY3zE,IAAIlE,EAAOoE,EAAemkE,IAEtDpuE,OAAO+B,eAAe07E,EAAeh9E,UAAW,4BAC5CsJ,IAAK,WACD,OAAOnK,KAAKmK,IAAIiqD,KAEpB59C,YAAY,EACZC,cAAc,IAElBonE,EAAeh9E,UAAU8hC,QAAU,WAE/B,IAAIj5B,EAAW1J,KAAK89E,aACnBp0E,EAASihE,WAAajhE,EAASi5B,UAChC3iC,KAAKuyE,WAAWhlE,QAAQ,SAAU9E,GAAM,OAAOA,MAC/CzI,KAAKuyE,WAAa,MAEtBsL,EAAeh9E,UAAU6f,UAAY,SAAUwrC,GAE3ClsD,KAAKuyE,WAAWjvE,KAAK4oD,IAElB2xB,EAjDuB,CAkDhChpB,IACEkpB,GAAmC,SAAUrpB,GAE7C,SAASspB,EAAmBhQ,GACxB,IAAIjzD,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAEjC,OADA+a,EAAMizD,WAAaA,EACZjzD,EAKX,OATAra,EAAUs9E,EAAoBtpB,GAM9BspB,EAAmBn9E,UAAUC,OAAS,SAAU2pE,GAC5C,OAAO,IAAImT,GAAc59E,KAAKguE,WAAYvD,IAEvCuT,EAV2B,CAWpClpB;;;;;;;;AAkFF,SAASmpB,GAAcC,EAAYC,EAAQC,GAEvC,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACZ,OAAOS,KACH2S,GAAcrX,EAAOsX,EAAc4hD,EAAUD,EAAO58E,KAAK68E,GAAWD,KACpE1hD,GAAWvX,EAAOsX,GAY1B,SAAS6hD,GAAcH,EAAYC,EAAQG,EAAKF,GAE5C,IAAIl5D,EAAQiE,KACRqT,EAAevS,KAAmBi0D,EACtC,OAAOxhD,GAAexX,EAAOsX,EAAc8hD,GACvC/hD,GAAcrX,EAAOsX,EAAe,EAAG4hD,EAAUD,EAAO58E,KAAK68E,EAASE,GAAOH,EAAOG,IACpF7hD,GAAWvX,EAAOsX,EAAe,GAazC,SAAS+hD,GAAcL,EAAYC,EAAQthD,EAAMC,EAAMshD,GAEnD,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACZ,OAAOyT,GAAgB1X,EAAOsX,EAAcK,EAAMC,GAC9CP,GAAcrX,EAAOsX,EAAe,EAAG4hD,EAAUD,EAAO58E,KAAK68E,EAASvhD,EAAMC,GAAQqhD,EAAOthD,EAAMC,IACjGL,GAAWvX,EAAOsX,EAAe,GAczC,SAASgiD,GAAcN,EAAYC,EAAQthD,EAAMC,EAAMG,EAAMmhD,GAEzD,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACZ,OAAO6T,GAAgB9X,EAAOsX,EAAcK,EAAMC,EAAMG,GACpDV,GAAcrX,EAAOsX,EAAe,EAAG4hD,EAAUD,EAAO58E,KAAK68E,EAASvhD,EAAMC,EAAMG,GAAQkhD,EAAOthD,EAAMC,EAAMG,IAC7GR,GAAWvX,EAAOsX,EAAe,GAezC,SAASiiD,GAAcP,EAAYC,EAAQthD,EAAMC,EAAMG,EAAME,EAAMihD,GAE/D,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACZ,OAAO+T,GAAgBhY,EAAOsX,EAAcK,EAAMC,EAAMG,EAAME,GAC1DZ,GAAcrX,EAAOsX,EAAe,EAAG4hD,EAAUD,EAAO58E,KAAK68E,EAASvhD,EAAMC,EAAMG,EAAME,GAAQghD,EAAOthD,EAAMC,EAAMG,EAAME,IACzHV,GAAWvX,EAAOsX,EAAe,GAgBzC,SAASkiD,GAAcR,EAAYC,EAAQthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAMP,GAErE,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACR4T,EAAYG,GAAgBhY,EAAOsX,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOT,GAAexX,EAAOsX,EAAe,EAAGmiD,IAAS5hD,EACpDR,GAAcrX,EAAOsX,EAAe,EAAG4hD,EAAUD,EAAO58E,KAAK68E,EAASvhD,EAAMC,EAAMG,EAAME,EAAMwhD,GAC1FR,EAAOthD,EAAMC,EAAMG,EAAME,EAAMwhD,IACnCliD,GAAWvX,EAAOsX,EAAe,GAiBzC,SAASoiD,GAAcV,EAAYC,EAAQthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAMT,GAE3E,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACR4T,EAAYG,GAAgBhY,EAAOsX,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOP,GAAgB1X,EAAOsX,EAAe,EAAGmiD,EAAME,IAAS9hD,EAC3DR,GAAcrX,EAAOsX,EAAe,EAAG4hD,EACnCD,EAAO58E,KAAK68E,EAASvhD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,GACnDV,EAAOthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,IACzCpiD,GAAWvX,EAAOsX,EAAe,GAkBzC,SAASsiD,GAAcZ,EAAYC,EAAQthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAME,EAAMX,GAEjF,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACR4T,EAAYG,GAAgBhY,EAAOsX,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOH,GAAgB9X,EAAOsX,EAAe,EAAGmiD,EAAME,EAAME,IAAShiD,EACjER,GAAcrX,EAAOsX,EAAe,EAAG4hD,EACnCD,EAAO58E,KAAK68E,EAASvhD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAME,GACzDZ,EAAOthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAME,IAC/CtiD,GAAWvX,EAAOsX,EAAe,GAmBzC,SAASwiD,GAAcd,EAAYC,EAAQthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAME,EAAME,EAAMb,GAEvF,IAAI5hD,EAAevS,KAAmBi0D,EAClCh5D,EAAQiE,KACR4T,EAAYG,GAAgBhY,EAAOsX,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOD,GAAgBhY,EAAOsX,EAAe,EAAGmiD,EAAME,EAAME,EAAME,IAASliD,EACvER,GAAcrX,EAAOsX,EAAe,EAAG4hD,EACnCD,EAAO58E,KAAK68E,EAASvhD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAME,EAAME,GAC/Dd,EAAOthD,EAAMC,EAAMG,EAAME,EAAMwhD,EAAME,EAAME,EAAME,IACrDxiD,GAAWvX,EAAOsX,EAAe,GAezC,SAAS0iD,GAAchB,EAAYC,EAAQgB,EAAMf,GAK7C,IAHA,IAAI5hD,EAAevS,KAAmBi0D,EAClCnhD,GAAY,EACZ7X,EAAQiE,KACHhoB,EAAI,EAAGA,EAAIg+E,EAAK79E,OAAQH,IAC7Bu7B,GAAexX,EAAOsX,IAAgB2iD,EAAKh+E,MAAQ47B,GAAY,GAEnE,OAAOA,EAAYR,GAAcrX,EAAOsX,EAAc2hD,EAAO38E,MAAM48E,EAASe,IACxE1iD,GAAWvX,EAAOsX;;;;;;;OAiB1B,SAAS4iD,GAAK75E,EAAO85E,GACjB,IACIj8D,EADA8D,EAAQiC,KAAW3F,IAEnBoqB,EAAgBroC,EAAQmf,GACxBwC,EAAMI,mBACNlE,EAqBR,SAASk8D,EAAax7E,EAAM20C,GACxB,GAAIA,EACA,IAAK,IAAIt3C,EAAIs3C,EAASn3C,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC3C,IAAIiiB,EAAUq1B,EAASt3C,GACvB,GAAI2C,IAASsf,EAAQtf,KACjB,OAAOsf,EAInB,MAAM,IAAI1c,MAAM,aAAe5C,EAAO,yBA9BxBw7E,CAAaD,EAAUn4D,EAAM0yB,cACvC1yB,EAAMjL,KAAK2xB,GAAiBxqB,EACxBA,EAAQ1C,YACPwG,EAAMY,eAAiBZ,EAAMY,kBAAoBxkB,KAAKsqC,EAAexqB,EAAQ1C,YAIlF0C,EAAU8D,EAAMjL,KAAK2xB,GAEzB,IAAI2xC,EAAen8D,EAAQ/jB,QAAQ,MAEnC,OADA2tC,GAAMznC,EAAOg6E,GACNA,EA+BX,SAASC,GAAUj6E,EAAO24E,EAAYj1B,GAClC,IAAIs2B,EAAej1B,GAAK/kD,GACxB,OAAOk6E,GAAcC,GAAOn6E,GAAS84E,GAAcH,EAAYqB,EAAaI,UAAW12B,EAAIs2B,GACvFA,EAAaI,UAAU12B,IAa/B,SAAS22B,GAAUr6E,EAAO24E,EAAYj1B,EAAIG,GACtC,IAAIm2B,EAAej1B,GAAK/kD,GACxB,OAAOk6E,GAAcC,GAAOn6E,GAASg5E,GAAcL,EAAYqB,EAAaI,UAAW12B,EAAIG,EAAIm2B,GAC3FA,EAAaI,UAAU12B,EAAIG,IAcnC,SAASy2B,GAAUt6E,EAAO24E,EAAYj1B,EAAIG,EAAIG,GAC1C,IAAIg2B,EAAej1B,GAAK/kD,GACxB,OAAOk6E,GAAcC,GAAOn6E,GAASi5E,GAAcN,EAAYqB,EAAaI,UAAW12B,EAAIG,EAAIG,EAAIg2B,GAC/FA,EAAaI,UAAU12B,EAAIG,EAAIG,IAevC,SAASu2B,GAAUv6E,EAAO24E,EAAYj1B,EAAIG,EAAIG,EAAIG,GAC9C,IAAI61B,EAAej1B,GAAK/kD,GACxB,OAAOk6E,GAAcC,GAAOn6E,GACxBk5E,GAAcP,EAAYqB,EAAaI,UAAW12B,EAAIG,EAAIG,EAAIG,EAAI61B,GAClEA,EAAaI,UAAU12B,EAAIG,EAAIG,EAAIG,IAY3C,SAASq2B,GAAUx6E,EAAO24E,EAAYl5E,GAClC,IAAIu6E,EAAej1B,GAAK/kD,GACxB,OAAOk6E,GAAcC,GAAOn6E,GAAS25E,GAAchB,EAAYqB,EAAaI,UAAW36E,EAAQu6E,GAC3FA,EAAaI,UAAUn+E,MAAM+9E,EAAcv6E,IAEnD,SAAS06E,GAAOn6E,GACZ,OAAO4jB,KAAW3F,IAAOvH,KAAK1W,EAAQmf,IAAerB,KASzD,SAASo8D,GAAcvvC,GACnB,GAAInU,GAAaI,UAAU+T,GAAW,CAClCA,EAAWnU,GAAaG,OAAOgU,GAC/B,IAAIhrB,EAAQiE,KAIZjE,EAD6BA,EAAMnB,KACHuY,GAEpC,OAAO4T;;;;;;;OA+DX,IAAI8vC,GAA8B,SAAUtrB,GASxC,SAASsrB,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAIllE,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAEjC,OADA+a,EAAMmlE,UAAYD,EACXllE,EAkDX,OA9DAra,EAAUs/E,EAActrB,GAkBxBsrB,EAAan/E,UAAUs/E,KAAO,SAAUl9E,GAASyxD,EAAO7zD,UAAUmC,KAAKzB,KAAKvB,KAAMiD,IASlF+8E,EAAan/E,UAAU85B,UAAY,SAAUylD,EAAiB78E,EAAO88E,GACjE,IAAIC,EACAC,EAAU,SAAU9f,GAAO,OAAO,MAClC+f,EAAa,WAAc,OAAO,MAClCJ,GAA8C,iBAApBA,GAC1BE,EAActgF,KAAKkgF,UAAY,SAAUj9E,GACrCmb,WAAW,WAAc,OAAOgiE,EAAgBp9E,KAAKC,MACrD,SAAUA,GAASm9E,EAAgBp9E,KAAKC,IACxCm9E,EAAgB78E,QAChBg9E,EAAUvgF,KAAKkgF,UAAY,SAAUzf,GAAOriD,WAAW,WAAc,OAAOgiE,EAAgB78E,MAAMk9D,MAC9F,SAAUA,GAAO2f,EAAgB78E,MAAMk9D,KAE3C2f,EAAgBC,WAChBG,EAAaxgF,KAAKkgF,UAAY,WAAc9hE,WAAW,WAAc,OAAOgiE,EAAgBC,cACxF,WAAcD,EAAgBC,eAItCC,EAActgF,KAAKkgF,UAAY,SAAUj9E,GAASmb,WAAW,WAAc,OAAOgiE,EAAgBn9E,MAC9F,SAAUA,GAASm9E,EAAgBn9E,IACnCM,IACAg9E,EACIvgF,KAAKkgF,UAAY,SAAUzf,GAAOriD,WAAW,WAAc,OAAO7a,EAAMk9D,MAAc,SAAUA,GAAOl9D,EAAMk9D,KAEjH4f,IACAG,EACIxgF,KAAKkgF,UAAY,WAAc9hE,WAAW,WAAc,OAAOiiE,OAAoB,WAAcA,OAG7G,IAAII,EAAO/rB,EAAO7zD,UAAU85B,UAAUp5B,KAAKvB,KAAMsgF,EAAaC,EAASC,GAIvE,OAHIJ,aAA2BtgF,EAAK4gF,cAChCN,EAAgB7yC,IAAIkzC,GAEjBA,GAEJT,EA/DsB,CAgE/BlgF,EAAK6gF,SAmCHC,GAA2B,WAC3B,SAASA,IACL5gF,KAAK8nC,OAAQ,EACb9nC,KAAK6gF,YACL7gF,KAAK4wE,QAAU,IAAIoP,GACnBhgF,KAAKsB,OAAS,EA0DlB,OApDAs/E,EAAU//E,UAAUgH,IAAM,SAAUY,GAAM,OAAOzI,KAAK6gF,SAASh5E,IAAIY,IAKnEm4E,EAAU//E,UAAUigF,OAAS,SAAUr4E,GACnC,OAAOzI,KAAK6gF,SAASC,OAAOr4E,IAMhCm4E,EAAU//E,UAAU2+D,KAAO,SAAU/2D,GACjC,OAAOzI,KAAK6gF,SAASrhB,KAAK/2D,IAM9Bm4E,EAAU//E,UAAUkgF,OAAS,SAAUt4E,EAAIu4E,GACvC,OAAOhhF,KAAK6gF,SAASE,OAAOt4E,EAAIu4E,IAMpCJ,EAAU//E,UAAU0M,QAAU,SAAU9E,GAAMzI,KAAK6gF,SAAStzE,QAAQ9E,IAKpEm4E,EAAU//E,UAAUiY,KAAO,SAAUrQ,GACjC,OAAOzI,KAAK6gF,SAAS/nE,KAAKrQ,IAE9Bm4E,EAAU//E,UAAUogF,QAAU,WAAc,OAAOjhF,KAAK6gF,SAASvuE,SACjEsuE,EAAU//E,UAAUk6B,MAAuB,WAAc,OAAO/6B,KAAK6gF,SAAS9lD,SAC9E6lD,EAAU//E,UAAUoH,SAAW,WAAc,OAAOjI,KAAK6gF,SAAS54E,YAClE24E,EAAU//E,UAAUqgF,MAAQ,SAAUl5E,GAClChI,KAAK6gF,SAgBb,SAASM,EAAU5I,GACf,OAAOA,EAAKwI,OAAO,SAAUK,EAAM1tD,GAC/B,IAAI2tD,EAAW9gF,MAAMmK,QAAQgpB,GAAQytD,EAAUztD,GAAQA,EACvD,OAAO0tD,EAAK39E,OAAO49E;;;;;;;;;;;;;;;;;;;;;OAnBHF,CAAUn5E,GAC1BhI,KAAK8nC,OAAQ,EACb9nC,KAAKsB,OAAStB,KAAK6gF,SAASv/E,OAC5BtB,KAAKshF,KAAOthF,KAAK6gF,SAAS7gF,KAAKsB,OAAS,GACxCtB,KAAKob,MAAQpb,KAAK6gF,SAAS,IAE/BD,EAAU//E,UAAU0gF,gBAAkB,WAAcvhF,KAAK4wE,QAAQuP,KAAKngF,OAEtE4gF,EAAU//E,UAAU2oC,SAAW,WAAcxpC,KAAK8nC,OAAQ,GAE1D84C,EAAU//E,UAAU8hC,QAAU,WAC1B3iC,KAAK4wE,QAAQyP,WACbrgF,KAAK4wE,QAAQnuC,eAEVm+C,EA/DmB,GA+F1BY,GAA2B,WAC3B,SAASA,EAAUzvE,EAAQ0vE,EAASC,GAChC1hF,KAAK+R,OAASA,EACd/R,KAAKyhF,QAAUA,EACfzhF,KAAK0hF,KAAOA,EAiChB,OA/BAF,EAAU3gF,UAAU8gF,MAAQ,SAAUC,EAAWC,EAAWC,EAASC,GAC7DD,EACA9hF,KAAK0hF,KAAOM,GAAYhiF,KAAK0hF,KAAME,EAAWC,EAAmB,MAARE,EAAeA,EAAO,MAG/E/hF,KAAKyhF,QAAUO,GAAYhiF,KAAKyhF,QAASG,EAAWC,EAAmB,MAARE,EAAeA,EAAO,OAG7FP,EAAU3gF,UAAUg2C,MAAQ,WAAc,OAAO,IAAI2qC,EAAUxhF,KAAM,KAAMA,KAAK0hF,OAChFF,EAAU3gF,UAAU2+B,UAAY,WAC5B,IAAIyiD,EAAiBC,GAAuBliF,KAAKyhF,SAC7CU,EAAcD,GAAuBliF,KAAK0hF,MAC9C,OAAOO,GAAkBE,EAAc,IAAIX,EAAUxhF,KAAMiiF,EAAgBE,GAAe,MAE9FX,EAAU3gF,UAAUwlD,WAAa,WAC7B,IAAI47B,EAAiBG,GAAkBpiF,KAAKyhF,SACxCU,EAAcC,GAAkBpiF,KAAK0hF,MACzC,OAAOO,GAAkBE,EAAc,IAAIX,EAAUxhF,KAAMiiF,EAAgBE,GAAe,MAE9FX,EAAU3gF,UAAUsgC,WAAa,SAAU57B,GACvC88E,GAAa98E,EAAOvF,KAAKyhF,SACzBY,GAAa98E,EAAOvF,KAAK0hF,OAE7BF,EAAU3gF,UAAU+1C,QAAU,SAAUxxB,GACpCmoB,GAAIvtC,KAAK0hF,KAAMt8D,GACfmoB,GAAIvtC,KAAKyhF,QAASr8D,IAEtBo8D,EAAU3gF,UAAU4gC,WAAa,WAC7B6gD,GAAatiF,KAAKyhF,SAClBa,GAAatiF,KAAK0hF,OAEfF,EArCmB;;;;;;;OAuC9B,SAASU,GAAuB1S,GAE5B,IADA,IAAIzjE,EAAS,KACNyjE,GAAO,CACV,IAAI+S,KACJ/S,EAAMxqE,OAAO1B,KAAKi/E,GAQlBx2E,GANI/I,KAAM+I,EACNwsE,KAAM/I,EAAM+I,KACZsJ,UAAWrS,EAAMqS,UACjB78E,OAAQu9E,EACRA,gBAAiB,MAGrB/S,EAAQA,EAAMxsE,KAElB,OAAO+I,EAEX,SAASq2E,GAAkB5S,GAEvB,IADA,IAAIzjE,EAAS,KACNyjE,GAQHzjE,GANI/I,KAAM+I,EACNwsE,KAAM/I,EAAM+I,KACZsJ,UAAWrS,EAAMqS,UACjB78E,UACAu9E,gBAAiB/S,EAAMxqE,QAG3BwqE,EAAQA,EAAMxsE,KAElB,OAAO+I,EAEX,SAASs2E,GAAa98E,EAAOiqE,GACzB,KAAOA,GAEHA,EAAM+S,gBAAgBlhD,OAAO97B,EAAO,EAAGiqE,EAAMxqE,QAEzCwqE,EAAMxqE,OAAO1D,QACbkuE,EAAM+I,KAAK/uC,WAEfgmC,EAAQA,EAAMxsE,KAGtB,SAASs/E,GAAa9S,GAClB,KAAOA,GAAO,CAEV,IAAI+S,EAAkB/S,EAAM+S,gBACxBC,EAAgBD,EAAgBp6E,QAAQqnE,EAAMxqE,QACpCu9E,EAAgBlhD,OAAOmhD,EAAe,GAGxC,GAAGlhF,QACXkuE,EAAM+I,KAAK/uC,WAEfgmC,EAAQA,EAAMxsE,MActB,SAASy/E,GAAyBr9D,EAAOpJ,GACrC,IAAIu8B,EAAanzB,EAAMmzB,WACvB,GAAIA,EACA,IAAK,IAAIp3C,EAAI,EAAGA,EAAIo3C,EAAWj3C,OAAQH,GAAK,EACxC,GAAIo3C,EAAWp3C,KAAO6a,EAClB,OAAOu8B,EAAWp3C,EAAI,GAIlC,OAAO,KAGX,SAASuhF,GAAiBX,EAAM38D,EAAO4C,GACnC,IAAIjQ,EAAYgqE,EAAK5kE,IACrB,GAAyB,mBAAdpF,EACP,OAAOA,IAGP,IAAI4qE,EAAc3zD,GAA0B5J,EAAO4C,EAAa+5D,GAAM,GAAO,GAC7E,OAAoB,OAAhBY,EACO1zD,GAAkBjH,EAAYxE,IAAOvH,KAAM+L,EAAa26D,EAAav9D,GAG7E,KAWX,SAASw9D,GAAmBC,EAAkBz9D,EAAO4C,EAAa+5D,GAC9D,IAAIe,EAAoBD,EAAiB1lE,MACzC,OAAI4kE,EACOe,EAAoBJ,GAAiBX,EAAM38D,EAAO4C,GAAe,KAErE86D,EAEX,SAASC,GAAU39D,EAAO4C,EAAa+5D,EAAMY,GACzC,OAAIZ,EACOW,GAAiBX,EAAM38D,EAAO4C,GAErC26D,GAAe,EACR1zD,GAAkBjH,EAAYxE,IAAOvH,KAAM+L,EAAa26D,EAAav9D,GArBpF,SAAS49D,EAAiB59D,EAAO4C,GAC7B,OAAmB,IAAf5C,EAAM9d,MAA2C,IAAf8d,EAAM9d,KACjCivD,GAAiBsB,GAAYzyC,EAAO4C,GAE5B,IAAf5C,EAAM9d,KACCovD,GAAkBwJ,GAAarI,GAAYzyC,EAAO4C,GAEtD,KAkBAg7D,CAAiB59D,EAAO4C,GAEnC,SAASulB,GAAIiiC,EAAOpqD,GAEhB,IADA,IAAI4C,EAAcmB,KACXqmD,GAAO,CACV,IAAIqS,EAAYrS,EAAMqS,UAClBv6E,EAAOu6E,EAAUv6E,KACrB,GAAIA,EAAM,CACN,IAAIyE,EAAS,KACTzE,IAAS44D,GACTn0D,EAAS62E,GAAmBt7E,EAAM8d,EAAO4C,EAAa65D,EAAUE,MAI5C,QADhBY,EAAc3zD,GAA0B5J,EAAO4C,EAAa1gB,GAAM,GAAO,MAEzEyE,EAASg3E,GAAU39D,EAAO4C,EAAa65D,EAAUE,KAAMY,IAGhD,OAAX52E,GACAk3E,GAASzT,EAAOzjE,QAKpB,IADA,IAAIiQ,EAAW6lE,EAAU7lE,SAChB7a,EAAI,EAAGA,EAAI6a,EAAS1a,OAAQH,IAAK,CACtC,IAAIwhF,EACgB,QADhBA,EAAcF,GAAyBr9D,EAAOpJ,EAAS7a,MAGxC,QADX4K,EAASg3E,GAAU39D,EAAO4C,EAAa65D,EAAUE,KAAMY,KAEvDM,GAASzT,EAAOzjE,GAKhCyjE,EAAQA,EAAMxsE,MAGtB,SAASigF,GAASzT,EAAO0T,GACrB1T,EAAMxqE,OAAO1B,KAAK4/E,GAClB1T,EAAM+I,KAAK/uC,WAUf,SAASw4C,GAAYl4E,EAAU83E,EAAWC,EAAWE,GACjD,OACI/+E,KAAM8G,EACNyuE,KAAMqJ,EACNC,UAZR,SAASsB,EAAgBtB,EAAWE,GAChC,IAAIr3E,EAAUnK,MAAMmK,QAAQm3E,GAC5B,OACIv6E,KAAMoD,EAAU,KAAOm3E,EACvB7lE,SAAUtR,EAAUm3E,EAAY,KAChCE,KAAMA,GAOKoB,CAAgBtB,EAAWE,GACtC/8E,OAAQ48E,EAAUwB,YAClBb,gBAAiB,MAWzB,SAAS/S,GAETqS,EAAWC,EAASC,GAEhB,IAAI78D,EAAQiE,KACRy4D,EAAY,IAAIhB,GAChBn7B,EAAUvgC,EAAMtB,MAAasB,EAAMtB,IAAW,IAAI49D,GAAU,KAAM,KAAM,OAK5E,OAJAI,EAAUwB,eACVxB,EAAUyB,SAAU,EACpB59B,EAAQk8B,MAAMC,EAAWC,EAAWC,EAASC,GAl7TjD,SAASuB,EAAwBp+D,EAAOvQ,EAAS+tB,GAC7C,IAAIL,EAAW2Y,GAAW91B,GAC1Bmd,EAAS/+B,KAAKqR,GACVuQ,EAAM1B,IAAO8D,mBACbqjC,GAAgBzlC,GAAO5hB,KAAKo/B,EAAWL,EAAS/gC,OAAS,GA+6T7DgiF,CAAwBp+D,EAAO08D,EAAWA,EAAUj/C,SAC7Ci/C,EAOX,SAAS2B,GAAa3B,GAClB,IAAI4B,EAAgB5B,EAChB/tC,EAAejqB,KAEnB,SAAIg4D,EAAU95C,OAAS+L,IAAiB2vC,EAAcH,UAClDzB,EAAUV,MAAMsC,EAAcJ,iBAC9BxB,EAAUL,kBACH,IAWf,SAASkC,GAET5B,EAAWC,EAASC,GAChB,IAAIH,EAAY1gE,GAAU2gE,EAAWC,EAASC,GAC1C76D,EAAQiC,KAAW3F,IACvBo+D,EAAUyB,SAAU,EACfn8D,EAAMyyB,oBACPzyB,EAAMyyB,mBAAoB,GAWlC,SAASz4B,GAET2gE,EAAWC,EAASC,GAChB,IACI76D,EADQiC,KACM3F,IACd0D,EAAMI,mBACNJ,EAAMmtB,oBAEV,IAAI9uC,EAAQ6kB,KACRlJ,EAAYsuD,GAAMqS,EAAWC,EAASC,GAG1C,OAFA/0C,GAAMznC,EAAQmf,GAAexD,GAC7BmJ,GAAqB9kB,EAAQ,GACtB2b,EAKX,SAASwiE,KACL,IAAIn+E,EAAQ6kB,KAEZ,OADAC,GAAqB9kB,EAAQ,GACtB+kD,GAAK/kD,EAAQmf,IAYxB,SAASi/D,GAAa38D,EAAgB66D,EAAWC,EAEjDC,GACI,IAAI78D,EAAQiE,KACRjC,EAAQhC,EAAM1B,IACdmgE,EAAenU,GAAMqS,EAAWC,EAASC,GAE7C,IADC78D,EAAMV,MAAqBU,EAAMV,SAAwBlhB,KAAKqgF,GAC3Dz8D,EAAMI,kBAAmB,CACzB,IAAIs8D,EAAsB18D,EAAMzH,iBAAmByH,EAAMzH,mBAErDuH,KAD0BE,EAAMzH,eAAene,OAAS4lB,EAAMzH,eAAeyH,EAAMzH,eAAene,OAAS,IAAM,IAEjHsiF,EAAoBtgF,KAAK0jB,GAGjC,OAAO28D,EAYX,SAASE,GAAmB78D,EAAgB66D,EAAWC,EAEvDC,GACI,IAAIH,EAAY+B,GAAa38D,EAAgB66D,EAAWC,EAASC,GAC7D76D,EAAQiC,KAAW3F,IACvBo+D,EAAUyB,SAAU,EACfn8D,EAAMutB,uBACPvtB,EAAMutB,sBAAuB,GAGrC,SAASqvC,KACL,IAAI5+D,EAAQiE,KAGR5jB,EAAQ6kB,KAGZ,OADAC,GAAqB9kB,EAAQ,GACtB2f,EAAMV,IAAiBjf;;;;;;;OAclC,SAASw+E,GAAqB3+D,EAAO4C,GACjC,OAAO0uC,GAAkBwJ,GAAarI,GAAYzyC,EAAO4C;;;;;;;;;;;;;;OAuB7D,IAAIg8D,IACAC,cAAejhE,GACfkhE,mBAAoBllE,GACpBmlE,mBAAoBjhE,GACpBrc,iBAAoBA,EACpBI,eAAkBA,EAClBm9E,kBAAmB7hE,GACnB8hE,cAAelhE,GACfmhE,mBAAoB/5B,GACpB1/C,gBAAiBulB,GACjBm0D,uBAAwBl0D,GACxBjmB,OAAUA,EACVo6E,mBAAoBh6B,GACpBi6B,wBAAyBV,GACzBW,sBAAuBn3B,GACvBo3B,oBAAqBlxB,GACrBmxB,4BAA6Bz2B,GAC7B02B,oBAAqBjpC,GACrBkpC,QAASpgF,GACTqgF,aAAcvlD,GACdwlD,eAAgBnvC,GAChBovC,yBAA0Bv/B,GAC1Bw/B,uBAAwBv/B,GACxBw/B,iBAAkBxvC,GAClByvC,mBAAoB/uC,GACpBgvC,gBAAiBjvC,GACjBkvC,kBAAmBr8D,GACnBs8D,mBAAoBr8D,GACpBs8D,iBAAkBn9B,GAClBo9B,gBAAiBnvC,GACjBovC,cAAenvC,GACfovC,WAAYrnE,GACZsnE,yBAA0BpvC,GAC1BqvC,uBAAwB7uC,GACxB8uC,iBAAkB7H,GAClB8H,iBAAkB1H,GAClB2H,iBAAkBzH,GAClB0H,iBAAkBzH,GAClB0H,iBAAkBzH,GAClB0H,iBAAkBzH,GAClB0H,iBAAkBxH,GAClByH,iBAAkBvH,GAClBwH,iBAAkBtH,GAClBuH,iBAAkBrH,GAClBsH,kBAAmB97B,GACnB+7B,eAAgBr9D,GAChBs9D,kBAAmB99B,GACnB+9B,kBAAmB59B,GACnB69B,kBAAmB19B,GACnB29B,kBAAmBx9B,GACnBy9B,kBAAmBt9B,GACnBu9B,kBAAmBp9B,GACnBq9B,kBAAmBl9B,GACnBm9B,kBAAmBh9B,GACnBi9B,kBAAmBv+B,GACnBw+B,oBAAqB3kC,GACrB4kC,YAAa9sC,GACb+sC,QAAS/8B,GACTg9B,cAAe7mD,GACf8mD,mBAAoBvrC,GACpBwrC,kCAAmCrrC,GACnCsrC,kCAAmC7sC,GACnC8sC,aAAclI,GACdmI,aAAc/H,GACdgI,aAAc/H,GACdgI,aAAc/H,GACdgI,aAAc/H,GACdgI,iBAAkBvhC,GAClBwhC,QAAS5I,GACT6I,gBAAiB1E,GACjB2E,aAAchnE,GACdinE,mBAAoB1E,GACpB2E,sBAAuBvE,GACvBwE,iBAAkB3E,GAClB4E,gBAAiB3E,GACjB4E,oBAAqBzE,GACrB0E,aAAcp+B,GACdq+B,kBAAmB5qC,GACnB6qC,oBAAqB3nC,GACrB4nC,qBAAsB/lC,GACtBgmC,oBAAqBzmC,GACrB0mC,uBAAwB3nC,GACxB4nC,YAAarrE,GACbsrE,QAASx0E,GACTy0E,eAAgB/kC,GAChBglC,qBAAsBpjC,GACtBqjC,mBAAoB5iC,GACpB6iC,QAASnP,GACToP,kBAAmBnP,GACnBoP,WAAY9O,GACZ+O,aAAcnT,GACdoT,WAAY9Q,GACZ+Q,aAAc/O,GACdgP,mBAAoB/R,GACpBgS,iBAAkBrrE,GAClBsrE,mBAAoBlrE,GACpBmrE,eAAgBlrE,GAChBmrE,qBAAsB1nE,GACtB2nE,gBAAiB3wD,GACjB4wD,iBAAkBvwD,GAClBwwD,yBAA0BzvD,GAC1B0vD,uBAAwBnwD,GACxBowD,kBAAmBjwD,GACnBkwD,eAAgBxwD,GAChBywD,4BAA6B9vD,IAe7B+vD,GACA,SAASA,OASTziB,GAAU,IAAI70D;;;;;;;OAUlB,SAASu3E,GAAwBl0E,EAAI9O,EAAMijF,GACvC,GAAIjjF,GAAQA,IAASijF,EACjB,MAAM,IAAI7jF,MAAM,mCAAqC0P,EAAK,MAAQxO,EAAUN,GAAQ,OAASM,EAAUN,EAAKxD,OAQpH,SAAS0mF,GAA2Bp0E,GAChC,IAAI/W,EAAUuoE,GAAQz9D,IAAIiM,GAC1B,IAAK/W,EACD,MAAMorF,GAAcr0E,GACxB,OAAO/W,EAcX,IAAIqrF,GAAmBF,GACvB,SAASC,GAAcr0E,GACnB,OAAO,IAAI1P,MAAM,qBAAuB0P,EAAK;;;;;;;OAUjD,IAAIu0E,MACAC,MAQAC,IAAsB,EAM1B,SAASC,KACL,IAAKD,GAAqB,CACtBA,IAAsB,EACtB,IACI,IAAK,IAAI1pF,EAAIypF,GAAYtpF,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC9C,IAAImD,EAAKsmF,GAAYzpF,GAAI6sE,EAAa1pE,EAAG0pE,WAAY9c,EAAW5sD,EAAG4sD,SAC/DA,EAASzuC,cAAgByuC,EAASzuC,aAAasoE,MAAMC,MAErDJ,GAAYvpD,OAAOlgC,EAAG,GACtB8pF,GAA6Bjd,EAAY9c,KAIrD,QACI25B,IAAsB,IASlC,SAASG,GAAsBE,GAC3B,OAAI3qF,MAAMmK,QAAQwgF,GACPA,EAAYH,MAAMC,MAEpBxiF,EAAkB0iF,GAO/B,SAASC,GAAgBnd,EAAY9c,QAChB,IAAbA,IAAuBA,MAC3Bk6B,GAAoBpd,EAAY9c,GA7CpC,SAASm6B,EAA+Brd,EAAY9c,GAChD05B,GAAYtnF,MAAO0qE,WAAYA,EAAY9c,SAAUA,IAiDrDm6B,CAA+Brd,EAAY9c,GAK/C,SAASk6B,GAAoBpd,EAAY9c,GAGrC,IAAIzuC,EAAe6oE,GAAUp6B,EAASzuC,cAAgBkoE,IAClD3tE,EAAc,KAClB5c,OAAO+B,eAAe6rE,EAAYjxD,IAC9BtG,cAAc,EACdtM,IAAK,WAcD,OAboB,OAAhB6S,IACAA,EAAc5T,IAAoB+hF,gBAAgBnH,GAAgB,QAAUhW,EAAWlqE,KAAO,mBAC1FwD,KAAM0mE,EACNxrD,UAAW8oE,GAAUp6B,EAAS1uC,WAAamoE,GAAeniF,GAC1Dia,aAAcA,EAAa5a,IAAIW,GAC/BpB,QAASkkF,GAAUp6B,EAAS9pD,SAAWujF,GAAeniF,GACjDX,IAAI0jF,IACTjsF,QAASgsF,GAAUp6B,EAAS5xD,SAAWqrF,GAAeniF,GACjDX,IAAI0jF,IACTC,YAAY,EACZ/pE,QAASyvC,EAASzvC,QAAU6pE,GAAUp6B,EAASzvC,SAAW,QAG3DzE,KAGXk0C,EAAS96C,IAxHjB,SAASq1E,EAAqBr1E,EAAIm7C,GAE9B+4B,GAAwBl0E,EADTwxD,GAAQz9D,IAAIiM,GACWm7C,GACtCqW,GAAQ50D,IAAIoD,EAAIm7C,GAsHZk6B,CAAqBv6B,EAAS96C,GAAI43D,GAEtC,IAAIrmE,EAAgB,KACpBvH,OAAO+B,eAAe6rE,EAAYvmE,GAC9B0C,IAAK,WACD,GAAsB,OAAlBxC,EAAwB,CAExB,IAAI9B,GACA/B,KAAMkqE,EAAWlqE,KACjBwD,KAAM0mE,EACNh/D,KAAMF,GAAoBk/D,GAC1B7mE,UAAW+pD,EAAS/pD,WAAawjF,GACjCvjF,UACK8pD,EAAS9pD,SAAWujF,IAAe9iF,IAAIW,IACvC0oD,EAAS5xD,SAAWqrF,IAAe9iF,IAAIW,KAGhDb,EAAgByB,IAAoBsiF,gBAAgB1H,GAAgB,QAAUhW,EAAWlqE,KAAO,oBAAqB+B,GAEzH,OAAO8B,GAGX8O,cAAc,IA0JtB,SAASw0E,GAA6Bjd,EAAY9c,GAC9C,IAAIzuC,EAAe6oE,GAAUp6B,EAASzuC,cAAgBkoE,IAClDgB,EAAmBC,GAAoB5d,GAC3CvrD,EAAalV,QAAQ,SAAU29E,GACvBA,EAAYzqF,eAAegc,IAI3BovE,GADmBzpE,GADH8oE,GAEyBS,GAEnCT,EAAYzqF,eAAekc,KAAsBuuE,EAAYzqF,eAAeoc,MAElFquE,EAAYY,gBAAkB9d,KAQ1C,SAAS6d,GAA2Bj/B,EAAc++B,GAC9C/+B,EAAa7rC,cAAgB,WACzB,OAAOxgB,MAAMsY,KAAK8yE,EAAiBI,YAAYnqE,YAC1C/Z,IAAI,SAAUmkF,GAAO,OAAOA,EAAIvrF,eAAegc,IAAoB2F,GAAgB4pE,GACpF3pE,GAAgB2pE,KACflL,OAAO,SAAU91E,GAAO,QAASA,KAE1C4hD,EAAa5rC,SAAW,WACpB,OAAOzgB,MAAMsY,KAAK8yE,EAAiBI,YAAYhqE,OAAOla,IAAI,SAAUu3E,GAAQ,OAAO98D,GAAW88D,MAElGxyB,EAAanrC,QAAUkqE,EAAiBlqE,QAS5C,SAASmqE,GAAoB5d,EAAYie,GACrC,IAAKC,GAAWle,GACZ,MAAM,IAAItnE,MAAMsnE,EAAWlqE,KAAO,iCAEtC,IAAIkH,EAAMsY,GAAe0qD,GACzB,GAAoC,OAAhChjE,EAAI0X,wBACJ,OAAO1X,EAAI0X,wBAEf,IAAIypE,GACA1qE,QAASzW,EAAIyW,SAAW,KACxBsqE,aACInqE,WAAY,IAAIvE,IAChB0E,MAAO,IAAI1E,KAEf+uE,UACIxqE,WAAY,IAAIvE,IAChB0E,MAAO,IAAI1E,MAsDnB,OAnDArS,EAAIyX,aAAalV,QAAQ,SAAU8+E,GAE3B/pE,GADmB+pE,GAEnBF,EAAOJ,YAAYhqE,MAAMwrB,IAAI8+C,GAM7BF,EAAOJ,YAAYnqE,WAAW2rB,IAAI8+C,KAG1CrhF,EAAI5D,QAAQmG,QAAQ,SAAU6jD,GAC1B,IAAIk7B,EAAel7B,EACnB,IAAK86B,GAAWI,GACZ,MAAM,IAAI5lF,MAAM,aAAe4lF,EAAaxoF,KAAO,uCAEnDmoF,GACAA,EAAkBK,GAItB,IAAIC,EAAgBX,GAAoBU,EAAcL,GACtDM,EAAcH,SAASxqE,WAAWrU,QAAQ,SAAUi/E,GAAS,OAAOL,EAAOJ,YAAYnqE,WAAW2rB,IAAIi/C,KACtGD,EAAcH,SAASrqE,MAAMxU,QAAQ,SAAUi/E,GAAS,OAAOL,EAAOJ,YAAYhqE,MAAMwrB,IAAIi/C,OAEhGxhF,EAAI1L,QAAQiO,QAAQ,SAAU6+E,GAC1B,IAAIK,EAAeL,EAGnB,GAAIF,GAAWO,GAAe,CAG1B,IAAIC,EAAgBd,GAAoBa,EAAcR,GACtDS,EAAcN,SAASxqE,WAAWrU,QAAQ,SAAUi/E,GAChDL,EAAOJ,YAAYnqE,WAAW2rB,IAAIi/C,GAClCL,EAAOC,SAASxqE,WAAW2rB,IAAIi/C,KAEnCE,EAAcN,SAASrqE,MAAMxU,QAAQ,SAAUi/E,GAC3CL,EAAOJ,YAAYhqE,MAAMwrB,IAAIi/C,GAC7BL,EAAOC,SAASrqE,MAAMwrB,IAAIi/C,UAGzBlqE,GAAWmqE,GAChBN,EAAOC,SAASrqE,MAAMwrB,IAAIk/C,GAG1BN,EAAOC,SAASxqE,WAAW2rB,IAAIk/C,KAGvCzhF,EAAI0X,wBAA0BypE,EACvBA,EAEX,SAASb,GAAUtmF,EAAQ2nF,GACvB,IAAIC,KASJ,OARA5nF,EAAOuI,QAAQ,SAAUtK,GACjB1C,MAAMmK,QAAQzH,GACd2pF,EAAItpF,KAAK9B,MAAMorF,EAAKppF,EAAS8nF,GAAUroF,EAAO0pF,KAG9CC,EAAItpF,KAAKqpF,EAAQA,EAAM1pF,GAASA,KAGjC2pF,EAEX,SAASrB,GAA0BtoF,GAC/B,OAKJ,SAAS4pF,EAAsB5pF,GAC3B,YAA0B+D,IAAnB/D,EAAMiuD,SANT27B,CAAsB5pF,GACfA,EAAMiuD,SAEVjuD,EAKX,SAASipF,GAAWjpF,GAChB,QAASqgB,GAAergB;;;;;;;OAmB5B,SAAS6pF,GAAiBxlF,EAAM5E,GAC5B,IAAIga,EAAiB,MArojBzB,SAASqwE,EAAyCrqF,GAC1C4a,GAAyB5a,IACzB0a,GAAiCmwB,IAAI7qC,GAqojBzCqqF,CAAyCrqF,GACzCtC,OAAO+B,eAAemF,EAAMmV,IACxBtS,IAAK,WACD,IAAI8E,EAAW7F,IACf,GAAuB,OAAnBsT,EAAyB,CACzB,GAAIY,GAAyB5a,GAAW,CACpC,IAAIa,GAAS,cAAgB0a,GAAgB3W,GAAQ,sBAQrD,MAPI5E,EAAS8a,aACTja,EAAMD,KAAK,mBAAqB2a,GAAgBvb,EAAS8a,cAEzD9a,EAASgb,WAAahb,EAASgb,UAAUpc,QACzCiC,EAAMD,KAAK,iBAAmBuR,KAAKjN,UAAUlF,EAASgb,YAE1Dna,EAAMD,KAAK,2DACL,IAAIoD,MAAMnD,EAAMuE,KAAK,OAE/B,IAAI0V,EAAc9a,EAAS8a,aAAe,SAAWS,GAAgB3W,GAAQ,iBACzEzB,EAAO9E,KAAaisF,GAAkB1lF,EAAM5E,IAAauqF,eAAgBh+E,EAASi+E,sBAAsB,YAAajvE,GAAgB3W,GAAOkW,GAAcC,SAAU/a,EAAS+a,UAAY,GAAI0vE,oBAAqBzqF,EAASyqF,sBAAuB,EAAO7rE,OAAQ5e,EAAS4e,QAAUtD,GAAek6C,WAAYx1D,EAASw1D,WAAYk1B,YAAaC,GAAuB/lF,EAAMuH,KAAanB,gBAAgBpG,GAAO4U,IAAc0F,cAAgBf,gBAAiBne,EAASme,gBAAiBkB,MAAO,IAAIhP,IAAOqO,cAAe1e,EAAS0e,eAAiB9hB,EAAQkd,kBAAkB6E,SAAUisE,cAAe5qF,EAAS4qF,cAAe55B,cAAehxD,EAASgxD,eAAiB,OAY9oB,GAXAh3C,EAAiBzN,EAAS69E,iBAAiB9I,GAAgBxmE,EAAa3X,GAMxEilF,KAgBhB,SAASyC,EAAiBhwE,GACtB,YAAqCvW,IAA9BuW,EAAUuuE,gBAZDyB,CAAiBjmF,GAAO,CACxB,IAAI6kF,EAASP,GAAoBtkF,EAAKwkF,iBACtCD,GAA2BnvE,EAAgByvE,IAGnD,OAAOzvE,GAGXjG,cAAc,IAatB,SAAS+2E,GAAiBlmF,EAAMohB,GAC5B,IAAI9L,EAAiB,KACrBxc,OAAO+B,eAAemF,EAAMqV,IACxBxS,IAAK,WACD,GAAuB,OAAnByS,EAAyB,CACzB,IACI6wE,EAAe,SADNnmF,GAAQA,EAAKxD,MACY,qBAClCmL,EAAW7F,IACXskF,EAASV,GAAkB1lF,EAAMohB,GACrCglE,EAAOT,eACHh+E,EAASi+E,sBAAsB,YAAajvE,GAAgB3W,GAAOmmF,GACvE7wE,EAAiB3N,EAASu+E,iBAAiBxJ,GAAgByJ,EAAcC,GAE7E,OAAO9wE,GAGXnG,cAAc,IAUtB,SAASu2E,GAAkB1lF,EAAM5E,GAE7B,IAAIwK,EAAe2B,KAAanB,gBAAgBpG,GAChD,OACIxD,KAAMwD,EAAKxD,KACXwD,KAAMA,EACNqmF,kBAAmB,EACnB3xE,SAAUtZ,EAASsZ,SACnBhN,KAAMF,GAAoBxH,GAC1B8H,KAAM1M,EAAS0M,MAAQ2O,GACvB7Q,aAAcA,EACdwS,OAAQhd,EAASgd,QAAU1B,GAC3B2B,QAASjd,EAASid,SAAW3B,GAC7BynC,QAAS4nC,GAAuB/lF,EAAM4F,EAAc0gF,IACpDC,WAAaC,cAAexmF,EAAKzG,UAAUJ,eAAe,gBAC1DwsF,eAAgB,KAChBc,iBAvBR,SAASC,EAA0B1mF,GAC/B,OAAOlH,OAAOwO,eAAetH,EAAKzG,aAAeT,OAAOS,UAsBlCmtF,CAA0B1mF,GAC5CsY,SAyCR,SAASquE,EAAgBruE,GACrB,YAAiB5Y,IAAb4Y,EACO,KAEJA,EAAS6U,MAAM,KAAK5sB,IAAI,SAAUqmF,GAAQ,OAAOA,EAAKx5D,SA7C/Cu5D,CAAgBvrF,EAASkd,UACnCzY,UAAWzE,EAASyE,WAAa,MAgBzC,SAASkmF,GAAuB/lF,EAAM4F,EAAcihF,GAChD,IAAIC,KACA9/B,EAAU,SAAU+/B,GACpB,GAAInhF,EAAazM,eAAe4tF,GAAQ,CACpC,IAAIC,EAAgBphF,EAAamhF,GACjCC,EAAc/gF,QAAQ,SAAUghF,GAC5B,GAAIJ,EAAWI,GAAM,CACjB,IAAKA,EAAIvyE,SACL,MAAM,IAAItV,MAAM,8CAAgD2nF,EAAQ,SAC5DpwE,GAAgB3W,GAAQ,+CAExC,GAAIgnF,EAAcx1E,KAAK01E,IACnB,MAAM,IAAI9nF,MAAM,0DAEpB0nF,EAAY9qF,KAxBhC,SAASmrF,EAAyBzhB,EAAcuhB,GAC5C,OACIvhB,aAAcA,EACd6U,UANR,SAAS6M,EAA0B1yE,GAC/B,MAA2B,iBAAbA,EAqDlB,SAAS2yE,EAAa1rF,GAClB,OAAOA,EAAMwxB,MAAM,KAAK5sB,IAAI,SAAU+mF,GAAS,OAAOA,EAAMl6D;;;;;;;OAtDtBi6D,CAAa3yE,GAAYxT,EAAkBwT,GAKlE0yE,CAA0BH,EAAIvyE,UACzCG,YAAaoyE,EAAIpyE,YACjBf,MAAOmzE,EAAInzE,MACX2mE,KAAMwM,EAAIxM,KAAOwM,EAAIxM,KAAO,KAC5B8M,SAAUN,EAAIM,QAiBeJ,CAAyBJ,EAAOE,SAKjE,IAAK,IAAIF,KAASnhF,EACdohD,EAAQ+/B,GAEZ,OAAOD,EAQX,SAASR,GAAe3qF,GACpB,IAAIa,EAAOb,EAAM4B,eACjB,MAAgB,iBAATf,GAAoC,oBAATA,EAEtC,SAASoY,GAAYjZ,GACjB,IAAIa,EAAOb,EAAM4B,eACjB,MAAgB,cAATf,GAAiC,iBAATA,EAEnC,SAAS0qF,GAAWvrF,GAChB,MAAgC,UAAzBA,EAAM4B,eAajB,SAASiqF,GAAYxnF,EAAMzB,GACvB,IAAIiX,EAAY,KAChB1c,OAAO+B,eAAemF,EAAMuV,IACxB1S,IAAK,WAUD,OATkB,OAAd2S,IACAA,EAAY1T,IAAoB0lF,YAAY9K,GAAgB,QAAU/lE,GAAgB3W,GAAQ,iBAC1FA,KAAMA,EACNxD,KAAMwD,EAAKxD,KACXkL,KAAMF,GAAoBxH,GAC1B+3E,SAAUx5E,EAAK/B,KACfuf,UAAoBrc,IAAdnB,EAAKwd,MAAqBxd,EAAKwd,QAGtCvG,GAGXrG,cAAc;;;;;;;OA7WF,IAAI1D,IACD,IAAIA,IA4X3B,IAAIg8E,GAAYlrF,EAAc,YAAa,SAAUmoF,GAEjD,YADY,IAARA,IAAkBA,MACfA,QACRhlF,OAAWA,EAAW,SAAUM,EAAMzB,GAAQ,OAAOmpF,GAAyB1nF,EAAMzB,KAOnFopF,GAAYprF,EAAc,YAAa,SAAU/B,GAEjD,YADU,IAANA,IAAgBA,MACZf,GAAW8f,gBAAiBvhB,EAAQ2Z,wBAAwBhP,SAAWnI,IAChFitF,QAAW/nF,EAAW,SAAUM,EAAMzB,GAAQ,OAAOqpF,GAAyB5nF,EAAMzB,KAKnFspF,GAAOtrF,EAAc,OAAQ,SAAUrD,GAAK,OAAQO,GAAWsiB,MAAM,GAAQ7iB,SAAQwG,OAAWA,EAAW,SAAUM,EAAMzB,GAAQ,OAAOupF,GAAoB9nF,EAAMzB,KAmBpKwpF,GAA0B,SAAU9nD,GACpC,OAAO,SAAU5lC,EAAQmC,GAErB,IADA,IAAIS,KACKC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,EAAK,GAAKnD,UAAUmD,GAE7B,IAAI5D,EAAce,EAAOf,YACpBA,EAAYH,eAAewc,KAzBhB,SAAUtb,GAC9B,IAAIf,EAAce,EAAOf,YACrB0uF,EAAmB1uF,EAAYsc,UAC/BsxC,EAAU5tD,EAAYsc,WACtBwC,UACAC,WACAR,mBAEAmwE,IACA3oF,EAAe6nD,EAAQ9uC,OAAQ4vE,EAAiB5vE,QAChD/Y,EAAe6nD,EAAQ7uC,QAAS2vE,EAAiB3vE,SACjDhZ,EAAe6nD,EAAQrvC,eAAgBmwE,EAAiBnwE,iBAepDowE,CAAkB5tF,GAGR4lC,EADA3mC,EAAYsc,WAElBpZ,GAAQS,EAAK,IAAMT,IAO/B0rF,GAAQ/pF,EAAkB,QAAS,SAAUgqF,GAAuB,OAAUA,oBAAqBA,SAA2BzoF,EAAWqoF,GAAwB,SAAU7gC,GAAW,OAAOA,EAAQ9uC,cAKrMgwE,GAASjqF,EAAkB,SAAU,SAAUgqF,GAAuB,OAAUA,oBAAqBA,SAA2BzoF,EAAWqoF,GAAwB,SAAU7gC,GAAW,OAAOA,EAAQ7uC,eAKvMgwE,GAAclqF,EAAkB,cAAe,SAAUmqF,GAAoB,OAAUA,iBAAkBA,KAiCzGC,GAAepqF,EAAkB,eAAgB,SAAU80C,EAAWh2C,GAAQ,OAAUg2C,UAAWA,EAAWh2C,KAAMA,KACpHurF,GAAsChD,GACtCiD,GAAsCvC,GACtCwC,GAAiClB,GAIjCI,GAHqCv3B,GAIrCq3B,GAHqCr3B,GAIrCy3B,GAHgCz3B,GAgBhCs4B,GAAWpsF,EAAc,WAAY,SAAUqtD,GAAY,OAAOA,QAAalqD,OAAWA,EAY9F,SAAUM,EAAMzB,GAAQ,OAAOqqF,GAAwB5oF,EAAMzB,KAYzDsqF,GAAqChF,GAErC+E,GAbJ,SAASE,GAAqBpiB,EAAYtrE,GACtC,IAAI0E,EAAW1E,GAAYA,EAAS0E,YAChC1E,GAAYA,EAASpD,UACrB8H,EAAU5D,EAAS4D,GAAU1E,EAASpD,WAE1C0uE,EAAWrmE,cAAgBV,GACvB5H,QAASmR,GAAmCw9D,GAAch+D,SAAUg+D,IACpE7mE,UAAWzE,GAAYA,EAASyE,UAChCC,QAASA,KA2BbipF,GAAkB,IAAI/+E,GAAe,2BAMrCg/E,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAIx1E,EAAQ/a,KACZA,KAAKuwF,SAAWA,EAChBvwF,KAAKwwF,aAAc,EACnBxwF,KAAKkD,MAAO,EACZlD,KAAKywF,YAAc,IAAI98C,QAAQ,SAAU3rC,EAAK0oF,GAC1C31E,EAAMzB,QAAUtR,EAChB+S,EAAM41E,OAASD,IAiCvB,OA7BAJ,EAAsBzvF,UAAU+vF,gBAAkB,WAC9C,IAAI71E,EAAQ/a,KACZ,IAAIA,KAAKwwF,YAAT,CAGA,IAAIK,KACAxQ,EAAW,WACXtlE,EAAM7X,MAAO,EACb6X,EAAMzB,WAEV,GAAItZ,KAAKuwF,SACL,IAAK,IAAIpvF,EAAI,EAAGA,EAAInB,KAAKuwF,SAASjvF,OAAQH,IAAK,CAC3C,IAAI2vF,EAAa9wF,KAAKuwF,SAASpvF,KAC3Bq5B,GAAUs2D,IACVD,EAAkBvtF,KAAKwtF,GAInCn9C,QAAQo9C,IAAIF,GAAmBp2D,KAAK,WAAc4lD,MAAe2Q,MAAM,SAAU5tF,GAAK2X,EAAM41E,OAAOvtF,KAClE,IAA7BytF,EAAkBvvF,QAClB++E,IAEJrgF,KAAKwwF,aAAc,IAEC/uF,GACpByP,KACA9O,EAAQ,EAAG4D,EAAOqqF,KAAmBjuF,EAAQ,EAAG8D,KAChD3D,EAAW,qBAAsBhC,SAClC+vF,GAxCmC,GA6DtCW,GAAS,IAAI3/E,GAAe,SAChC,SAAS4/E,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,KAMhD,IAAIC,IACAxhF,QAASqhF,GACT9gF,WAAY+gF,GACZliF,SAEJ,SAASmiF,KACL,OAAOthF,OAAOwhF,aAAa,GAAKtb,KAAK+F,MAAsB,GAAhB/F,KAAKub,WAMpD,IAAIC,GAAuB,IAAIjgF,GAAe,wBAK1CkgF,GAAc,IAAIlgF,GAAe,eASjCmgF,GAAyB,IAAIngF,GAAe,wBAK5CogF,GAAmB,IAAIpgF,GAAe,iCAStCqgF,GAAyB,WACzB,SAASA,KAcT,OAZAA,EAAQ9wF,UAAU+wF,IAAM,SAAUv9E,GAE9Boc,QAAQmhE,IAAIv9E,IAGhBs9E,EAAQ9wF,UAAUyzB,KAAO,SAAUjgB,GAE/Boc,QAAQ6D,KAAKjgB,IAEP5S,GACNyP,MACDygF,GAdqB,GA8BxBE,GACA,SAASA,GAA6BC,EAAiBC,GACnD/xF,KAAK8xF,gBAAkBA,EACvB9xF,KAAK+xF,mBAAqBA,GAIlC,SAASC,KACL,MAAM,IAAItrF,MAAM,kCAEpB,IAmGIurF,GACAC,GAnGAC,GAAwC,SAAUnkB,GAClD,OAAO,IAAI+P,GAAkB/P,IAE7BokB,GAJuCJ,GASvCK,GAJwCL,GAMxCM,GAAwD,SAAUtkB,GAClE,IAAI8jB,EAAkBK,GAAsCnkB,GAExD+jB,EADYzuE,GAAe0qD,GACIvrD,aAAas+D,OAAO,SAAUztB,EAAW43B,GACxE,IAAIt+B,EAAexqC,GAAgB8oE,GAEnC,OADAt+B,GAAgB0G,EAAUhwD,KAAK,IAAI6tE,GAAmBvkB,IAC/C0G,OAEX,OAAO,IAAIu+B,GAA6BC,EAAiBC,IAEzDQ,GAXuDP,GAgBvDQ,GAJwDR,GAgBxDS,GAA0B,WAC1B,SAASA,IAKLzyF,KAAK0yF,kBAAoBN,GAIzBpyF,KAAK2yF,mBAAqBN,GAI1BryF,KAAK4yF,kCAAoCL,GAIzCvyF,KAAK6yF,mCAAqCL,GAiB9C,OAZAC,EAAS5xF,UAAUiyF,WAAa,aAIhCL,EAAS5xF,UAAUkyF,cAAgB,SAAUzrF,KAI7CmrF,EAAS5xF,UAAUmyF,YAAc,SAAUhlB,KAChCvsE,GACPyP,MACDuhF,GAlCsB,GA0CzBQ,GAAmB,IAAI3hF,GAAe,mBAMtC4hF,GACA,SAASA,OAcb,SAASC,KACL,IAAIC,EAAMzqF,EAA+B,IACzC,SAAIyqF,KACAnB,GAAQmB,EAAW,SAEflB,GAASD,GAAc,OAChB,IAKnB,SAASoB,GAAYr9E,EAAWhM,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzBkoF,GAAOmB,YAAYr9E,EAAWhM,GAEzC,SAASspF,GAAM3rB,EAAOngB,GAElB,OADAyqC,GAAMsB,WAAW5rB,EAAOngB,GACjBA,EAEX,SAASgsC,GAAeC,EAAW1zD,GAC/B,OAAOkyD,GAAMyB,eAAeD,EAAW1zD,GAE3C,SAAS4zD,GAAaC,GAClB3B,GAAM0B,aAAaC;;;;;;;OAavB,IAAIC,GAAaV,KACjB,SAASW,GAAUC,EAAMC,GACrB,OAAO,KAgCX,IAAIC,GAAiBJ,GAAaR,GAAc,SAAUr9E,EAAWhM,GAAS,OAAO8pF,IAUjFI,GAAWL,GAAaP,GAAQ,SAAUpyF,EAAGa,GAAK,OAAOA,GAczDoyF,GAAoBN,GAAaL,GAAiB,SAAUC,EAAW1zD,GAAU,OAAO,MAOxFq0D,GAAkBP,GAAaF,GAAe,SAAU5xF,GAAK,OAAO,MASpEsyF,GAAU1gD,QAAQr6B,QAAQ,GAC9B,SAASg7E,GAAkB7rF,GACH,oBAAT8rF,KAEPF,GAAQ55D,KAAK,WAAchyB,GAAMA,EAAGjH,MAAM,KAAM,QAGhD+yF,KAAK99D,QAAQ69D,kBAAkB,oBAAqB7rF;;;;;;;OAqF5D,IAAI+rF,GAAwB,WACxB,SAASA,EAAOlwF,GACZ,IAAIwwB,EAAKxwB,EAAGmwF,qBAAsBA,OAA8B,IAAP3/D,GAAwBA,EA2BjF,GA1BA90B,KAAK00F,sBAAuB,EAC5B10F,KAAK20F,sBAAuB,EAI5B30F,KAAK40F,UAAW,EAIhB50F,KAAK60F,WAAa,IAAI7U,IAAa,GAMnChgF,KAAK80F,iBAAmB,IAAI9U,IAAa,GAMzChgF,KAAK+0F,SAAW,IAAI/U,IAAa,GAIjChgF,KAAKg1F,QAAU,IAAIhV,IAAa,GACb,oBAARuU,KACP,MAAM,IAAI7tF,MAAM,kDAEpB6tF,KAAKU,oBACMj1F,KACNk1F,SAAW,EADLl1F,KAENm1F,OAFMn1F,KAEQo1F,OAASb,KAAK99D,QAC7B89D,KAAkB,cAHXv0F,KAIFo1F,OAJEp1F,KAIYo1F,OAAOC,KAAKd,KAAkB,cAEjDA,KAA2B,uBANpBv0F,KAOFo1F,OAPEp1F,KAOYo1F,OAAOC,KAAK,IAAId,KAA2B,uBAE9DE,GAAwBF,KAA6B,yBAT9Cv0F,KAUFo1F,OAVEp1F,KAUYo1F,OAAOC,KAAKd,KAA6B,yBAkGxE,SAASe,EAAiCC,GACtCA,EAAKH,OAASG,EAAKH,OAAOC,MACtBvxF,KAAM,UACN0xF,YAAcC,eAAiB,GAC/BC,aAAc,SAAUtpB,EAAU31C,EAAS90B,EAAQg0F,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQP,GACDnpB,EAAS2pB,WAAWp0F,EAAQg0F,EAAMC,EAAWC,GAExD,QACIG,GAAQT,KAGhBU,SAAU,SAAU7pB,EAAU31C,EAAS90B,EAAQuqD,EAAU0pC,EAAWC,EAAWjvF,GAC3E,IAEI,OADAkvF,GAAQP,GACDnpB,EAAS8pB,OAAOv0F,EAAQuqD,EAAU0pC,EAAWC,EAAWjvF,GAEnE,QACIovF,GAAQT,KAGhBY,UAAW,SAAU/pB,EAAU31C,EAAS90B,EAAQy0F,GAC5ChqB,EAASiqB,QAAQ10F,EAAQy0F,GACrB3/D,IAAY90B,IAGe,aAAvBy0F,EAAaE,QACbf,EAAKb,qBAAuB0B,EAAaG,UACzCC,GAAYjB,IAEgB,aAAvBa,EAAaE,SAClBf,EAAKZ,qBAAuByB,EAAaK,aAIrDC,cAAe,SAAUtqB,EAAU31C,EAAS90B,EAAQ4B,GAGhD,OAFA6oE,EAASx7C,YAAYjvB,EAAQ4B,GAC7BgyF,EAAKoB,kBAAkB,WAAc,OAAOpB,EAAKP,QAAQ7U,KAAK58E,MACvD,KAvIX+xF,CAZWt1F,MAqFf,OAvEAw0F,EAAOoC,gBAAkB,WAAc,OAA6C,IAAtCrC,KAAK99D,QAAQtsB,IAAI,kBAC/DqqF,EAAOqC,oBAAsB,WACzB,IAAKrC,EAAOoC,kBACR,MAAM,IAAIlwF,MAAM,mDAGxB8tF,EAAOsC,uBAAyB,WAC5B,GAAItC,EAAOoC,kBACP,MAAM,IAAIlwF,MAAM,mDAexB8tF,EAAO3zF,UAAUk2F,IAAM,SAAUtuF,EAAImtF,EAAWC,GAC5C,OAAO71F,KAAKo1F,OAAO2B,IAAItuF,EAAImtF,EAAWC,IAc1CrB,EAAO3zF,UAAUm2F,QAAU,SAAUvuF,EAAImtF,EAAWC,EAAW/xF,GAC3D,IAAIyxF,EAAOv1F,KAAKo1F,OACZO,EAAOJ,EAAK0B,kBAAkB,gBAAkBnzF,EAAM2E,EAAIyuF,GAAeC,GAAQA,IACrF,IACI,OAAO5B,EAAKyB,QAAQrB,EAAMC,EAAWC,GAEzC,QACIN,EAAK6B,WAAWzB,KAOxBnB,EAAO3zF,UAAUw2F,WAAa,SAAU5uF,EAAImtF,EAAWC,GACnD,OAAO71F,KAAKo1F,OAAOiC,WAAW5uF,EAAImtF,EAAWC,IAejDrB,EAAO3zF,UAAU81F,kBAAoB,SAAUluF,GAC3C,OAAOzI,KAAKm1F,OAAO4B,IAAItuF,IAEpB+rF,EAtHgB,GAwH3B,SAAS2C,MACT,IAAID,MACJ,SAASV,GAAYjB,GACjB,GAAqB,GAAjBA,EAAKL,WAAkBK,EAAKb,uBAAyBa,EAAKX,SAC1D,IACIW,EAAKL,WACLK,EAAKT,iBAAiB3U,KAAK,MAE/B,QAEI,GADAoV,EAAKL,YACAK,EAAKb,qBACN,IACIa,EAAKoB,kBAAkB,WAAc,OAAOpB,EAAKR,SAAS5U,KAAK,QAEnE,QACIoV,EAAKX,UAAW,IAiDpC,SAASkB,GAAQP,GACbA,EAAKL,WACDK,EAAKX,WACLW,EAAKX,UAAW,EAChBW,EAAKV,WAAW1U,KAAK,OAG7B,SAAS6V,GAAQT,GACbA,EAAKL,WACLsB,GAAYjB,GAMhB,IAiRI+B,GAjRAC,GAA4B,WAC5B,SAASA,IACLv3F,KAAK00F,sBAAuB,EAC5B10F,KAAK20F,sBAAuB,EAC5B30F,KAAK40F,UAAW,EAChB50F,KAAK60F,WAAa,IAAI7U,GACtBhgF,KAAK80F,iBAAmB,IAAI9U,GAC5BhgF,KAAK+0F,SAAW,IAAI/U,GACpBhgF,KAAKg1F,QAAU,IAAIhV,GAMvB,OAJAuX,EAAW12F,UAAUk2F,IAAM,SAAUtuF,GAAM,OAAOA,KAClD8uF,EAAW12F,UAAUw2F,WAAa,SAAU5uF,GAAM,OAAOA,KACzD8uF,EAAW12F,UAAU81F,kBAAoB,SAAUluF,GAAM,OAAOA,KAChE8uF,EAAW12F,UAAUm2F,QAAU,SAAUvuF,GAAM,OAAOA,KAC/C8uF,EAdoB,GA8B3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAI18E,EAAQ/a,KACZA,KAAKy3F,QAAUA,EACfz3F,KAAK03F,cAAgB,EACrB13F,KAAK23F,eAAgB,EAOrB33F,KAAK43F,UAAW,EAChB53F,KAAK63F,cACL73F,KAAK83F,iBAAmB,KACxB93F,KAAK+3F,sBACLN,EAAQV,IAAI,WACRh8E,EAAM+8E,iBACa,oBAARvD,KAAsB,KAAOA,KAAK99D,QAAQtsB,IAAI,sBA8IjE,OA3IAqtF,EAAY32F,UAAUk3F,oBAAsB,WACxC,IAAIh9E,EAAQ/a,KACZA,KAAKy3F,QAAQ5C,WAAWl6D,WACpB33B,KAAM,WACF+X,EAAM68E,UAAW,EACjB78E,EAAM48E,eAAgB,KAG9B33F,KAAKy3F,QAAQd,kBAAkB,WAC3B57E,EAAM08E,QAAQ1C,SAASp6D,WACnB33B,KAAM,WACFwxF,GAAOsC,yBACPxC,GAAkB,WACdv5E,EAAM48E,eAAgB,EACtB58E,EAAMi9E,+BAU1BR,EAAY32F,UAAUo3F,4BAA8B,WAGhD,OAFAj4F,KAAK03F,eAAiB,EACtB13F,KAAK43F,UAAW,EACT53F,KAAK03F,eAMhBF,EAAY32F,UAAUq3F,4BAA8B,WAEhD,GADAl4F,KAAK03F,eAAiB,EAClB13F,KAAK03F,cAAgB,EACrB,MAAM,IAAIhxF,MAAM,qCAGpB,OADA1G,KAAKg4F,uBACEh4F,KAAK03F,eAKhBF,EAAY32F,UAAU+zF,SAAW,WAC7B,OAAO50F,KAAK23F,eAAwC,IAAvB33F,KAAK03F,gBAAwB13F,KAAKy3F,QAAQ9C,sBAE3E6C,EAAY32F,UAAUm3F,qBAAuB,WACzC,IAAIj9E,EAAQ/a,KACZ,GAAIA,KAAK40F,WAELN,GAAkB,WACd,KAAmC,IAA5Bv5E,EAAM88E,WAAWv2F,QAAc,CAClC,IAAI62F,EAAKp9E,EAAM88E,WAAWnvB,MAC1B0vB,aAAaD,EAAGE,WAChBF,EAAGG,OAAOv9E,EAAM68E,UAEpB78E,EAAM68E,UAAW,QAGpB,CAED,IAAIW,EAAYv4F,KAAKw4F,kBACrBx4F,KAAK63F,WAAa73F,KAAK63F,WAAW/W,OAAO,SAAUqX,GAC/C,OAAIA,EAAGM,WAAYN,EAAGM,SAASF,KAC3BH,aAAaD,EAAGE,YACT,KAIfr4F,KAAK43F,UAAW,IAGxBJ,EAAY32F,UAAU23F,gBAAkB,WACpC,OAAKx4F,KAAK83F,iBAIH93F,KAAK83F,iBAAiBY,WAAW7wF,IAAI,SAAU5G,GAClD,OACI2F,OAAQ3F,EAAE2F,OAGV+xF,iBAAkB13F,EAAE03F,iBACpB18E,KAAMhb,EAAEgb,YAIpBu7E,EAAY32F,UAAU+3F,YAAc,SAAUT,EAAIU,EAASJ,GACvD,IAAI19E,EAAQ/a,KACRq4F,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAYj6E,WAAW,WACnBrD,EAAM88E,WAAa98E,EAAM88E,WAAW/W,OAAO,SAAUqX,GAAM,OAAOA,EAAGE,YAAcA,IACnFF,EAAGp9E,EAAM68E,SAAU78E,EAAMy9E,oBAC1BK,IAEP74F,KAAK63F,WAAWv0F,MAAOg1F,OAAQH,EAAIE,UAAWA,EAAWI,SAAUA,KAcvEjB,EAAY32F,UAAUi4F,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAaz4F,KAAK83F,iBAClB,MAAM,IAAIpxF,MAAM,8HAIpB1G,KAAK44F,YAAYN,EAAQO,EAASJ,GAClCz4F,KAAKg4F,wBAMTR,EAAY32F,UAAUk4F,uBAAyB,WAAc,OAAO/4F,KAAK03F,eAOzEF,EAAY32F,UAAUm4F,cAAgB,SAAUC,EAAOxoF,EAAUyoF,GAE7D,UAEUz3F,GACVyP,KACA3O,EAAW,qBAAsBiyF,MAClCgD,GA/JyB,GAsK5B2B,GAAqC,WACrC,SAASA,IAELn5F,KAAKo5F,cAAgB,IAAIrmF,IACzBsmF,GAAmBC,YAAYt5F,MA8CnC,OAvCAm5F,EAAoBt4F,UAAU04F,oBAAsB,SAAUtzF,EAAOuzF,GACjEx5F,KAAKo5F,cAAcpmF,IAAI/M,EAAOuzF,IAMlCL,EAAoBt4F,UAAU44F,sBAAwB,SAAUxzF,GAASjG,KAAKo5F,cAAcn7B,OAAOh4D,IAInGkzF,EAAoBt4F,UAAU64F,0BAA4B,WAAc15F,KAAKo5F,cAAcx7E,SAK3Fu7E,EAAoBt4F,UAAU84F,eAAiB,SAAUC,GAAQ,OAAO55F,KAAKo5F,cAAcjvF,IAAIyvF,IAAS,MAIxGT,EAAoBt4F,UAAUg5F,oBAAsB,WAAc,OAAOt5F,MAAMsY,KAAK7Y,KAAKo5F,cAAcp0F,WAIvGm0F,EAAoBt4F,UAAUi5F,mBAAqB,WAAc,OAAOv5F,MAAMsY,KAAK7Y,KAAKo5F,cAAc9rF,SAOtG6rF,EAAoBt4F,UAAUk5F,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsB/5F,KAAM45F,EAAMI,IAE1Cv4F,GAClByP,KACA3O,EAAW,yBACZ42F,GAjDiC,GAoEpCE,GAAqB,IAhBgB,WACrC,SAASY,KAMT,OAJAA,EAAoBp5F,UAAUy4F,YAAc,SAAU7gD,KACtDwhD,EAAoBp5F,UAAUk5F,sBAAwB,SAAUthD,EAAUmhD,EAAMI,GAC5E,OAAO,MAEJC,EAP6B,IA2CpCC,GAA2B,IAAI5oF,GAAe,sBAM9C6oF,GACA,SAASA,GAAar2F,EAAMmC,GACxBjG,KAAK8D,KAAOA,EACZ9D,KAAKiG,MAAQA;;;;;;;OAUrB,SAASm0F,GAAe1wF,GACpB,GAAI4tF,KAAcA,GAAU3sB,YACvB2sB,GAAU5tF,SAASS,IAAI+vF,IAA0B,GAClD,MAAM,IAAIxzF,MAAM,iFAEpB4wF,GAAY5tF,EAASS,IAAIkwF,IACzB,IAAIC,EAAQ5wF,EAASS,IAAIonF,GAAsB,MAG/C,OAFI+I,GACAA,EAAM/sF,QAAQ,SAAUyzE,GAAQ,OAAOA,MACpCsW,GAOX,SAASiD,GAAsBC,EAAuB12F,EAAMqD,QACtC,IAAdA,IAAwBA,MAC5B,IAAItF,EAAO,aAAeiC,EACtB2uE,EAAS,IAAInhE,GAAezP,GAChC,OAAO,SAAU44F,QACU,IAAnBA,IAA6BA,MACjC,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAAShxF,SAASS,IAAI+vF,IAA0B,GAC7D,GAAIM,EACAA,EAAsBrzF,EAAU1D,OAAOg3F,GAAgBh3F,QAASmM,QAAS6iE,EAAQ3iE,UAAU,SAE1F,CACD,IAAI8qF,EAAoBzzF,EAAU1D,OAAOg3F,GAAgBh3F,QAASmM,QAAS6iE,EAAQ3iE,UAAU,IAC7FsqF,GAAetoF,GAAShR,QAASqG,UAAWyzF,EAAmB92F,KAAMjC,KAG7E,OAAOg5F,GAAepoB,IAQ9B,SAASooB,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAIh0F,MAAM,uBAEpB,IAAKg0F,EAAShxF,SAASS,IAAI2wF,EAAe,MACtC,MAAM,IAAIp0F,MAAM,wFAEpB,OAAOg0F,EAiBX,SAASC,KACL,OAAOrD,KAAcA,GAAU3sB,UAAY2sB,GAAY,KAY3D,IAAI+C,GAA6B,WAE7B,SAASA,EAAYU,GACjB/6F,KAAK+6F,UAAYA,EACjB/6F,KAAKg7F,YACLh7F,KAAKquE,qBACLruE,KAAKiwD,YAAa,EA4HtB,OApGAoqC,EAAYx5F,UAAUo6F,uBAAyB,SAAUC,EAAeh0F,GACpE,IAAI6T,EAAQ/a,KAMRm7F,EA+FZ,SAASC,EAAUC,GASf,MAPqB,SAAjBA,EACS,IAAI9D,IAGc,YAAjB8D,OAA6Br0F,EAAYq0F,IAC/C,IAAI7G,IAASC,qBAAsBjjE,OAtG1B4pE,CADMl0F,EAAUA,EAAQi0F,YAASn0F,GAE1CG,IAAeyI,QAAS4kF,GAAQ1kF,SAAUqrF,IAG9C,OAAOA,EAAOpE,IAAI,WACd,IAAIuE,EAAiBxpF,GAAShR,QAASqG,UAAWA,EAAW4K,OAAQgJ,EAAMrR,SAAU5F,KAAMo3F,EAAcltB,WAAWlqE,OAChHy3F,EAAYL,EAAcp6F,OAAOw6F,GACjCE,EAAmBD,EAAU7xF,SAASS,IAAIumB,GAAc,MAC5D,IAAK8qE,EACD,MAAM,IAAI90F,MAAM,iEAIpB,OAFA60F,EAAU76E,UAAU,WAAc,OAAOgtB,GAAO3yB,EAAMigF,SAAUO,KAChEJ,EAAOxE,kBAAkB,WAAc,OAAOwE,EAAOnG,QAAQr6D,WAAY33B,KAAM,SAAUO,GAASi4F,EAAiB5qE,YAAYrtB,QA8F3I,SAASk4F,EAA6B7wC,EAAcuwC,EAAQjvC,GACxD,IACI,IAAIngD,EAASmgD,IACb,OAAI1xB,GAAUzuB,GACHA,EAAOilF,MAAM,SAAU5tF,GAG1B,MAFA+3F,EAAOxE,kBAAkB,WAAc,OAAO/rC,EAAah6B,YAAYxtB,KAEjEA,IAGP2I,EAEX,MAAO3I,GAGH,MAFA+3F,EAAOxE,kBAAkB,WAAc,OAAO/rC,EAAah6B,YAAYxtB,KAEjEA,GA5GKq4F,CAA6BD,EAAkBL,EAAQ,WAC1D,IAAIO,EAAaH,EAAU7xF,SAASS,IAAImmF,IAExC,OADAoL,EAAW9K,kBACJ8K,EAAWjL,YAAYh2D,KAAK,WAE/B,OADA1f,EAAM4gF,mBAAmBJ,GAClBA,SAqBvBlB,EAAYx5F,UAAU+6F,gBAAkB,SAAU5tB,EAAY6tB,GAC1D,IAAI9gF,EAAQ/a,UACY,IAApB67F,IAA8BA,MAClC,IAAI30F,EAAU40F,MAAmBD,GACjC,OAjMR,SAASE,EAAiCryF,EAAUxC,EAAS8mE,GAGzD,OAFsBtkE,EAASS,IAAI+oF,IACJ8I,gBAAgB90F,IAC/ByrF,mBAAmB3kB,GA8LxBiuB,CAAuBj8F,KAAK0J,SAAUxC,EAAS8mE,GACjDvzC,KAAK,SAAUygE,GAAiB,OAAOngF,EAAMkgF,uBAAuBC,EAAeh0F,MAE5FmzF,EAAYx5F,UAAU86F,mBAAqB,SAAUJ,GACjD,IAAIplC,EAASolC,EAAU7xF,SAASS,IAAI+xF,IACpC,GAAIX,EAAUntB,qBAAqB9sE,OAAS,EACxCi6F,EAAUntB,qBAAqB7gE,QAAQ,SAAUwlD,GAAK,OAAOoD,EAAO3zC,UAAUuwC,SAE7E,CAAA,IAAIwoC,EAAU9sE,SAAS0tE,cAIxB,MAAM,IAAIz1F,MAAM,cAAgBkB,EAAU2zF,EAAU9sE,SAAS7tB,aAAe,yIAH5E26F,EAAU9sE,SAAS0tE,cAAchmC,GAMrCn2D,KAAKg7F,SAAS13F,KAAKi4F,IAKvBlB,EAAYx5F,UAAU6f,UAAY,SAAUwrC,GAAYlsD,KAAKquE,kBAAkB/qE,KAAK4oD,IACpF9rD,OAAO+B,eAAek4F,EAAYx5F,UAAW,YAKzCsJ,IAAK,WAAc,OAAOnK,KAAK+6F,WAC/BvkF,YAAY,EACZC,cAAc,IAKlB4jF,EAAYx5F,UAAU8hC,QAAU,WAC5B,GAAI3iC,KAAKiwD,WACL,MAAM,IAAIvpD,MAAM,4CAEpB1G,KAAKg7F,SAAS1oF,QAAQ/E,QAAQ,SAAUhO,GAAU,OAAOA,EAAOojC,YAChE3iC,KAAKquE,kBAAkB9gE,QAAQ,SAAU+sC,GAAY,OAAOA,MAC5Dt6C,KAAKiwD,YAAa,GAEtB7vD,OAAO+B,eAAek4F,EAAYx5F,UAAW,aACzCsJ,IAAK,WAAc,OAAOnK,KAAKiwD,YAC/Bz5C,YAAY,EACZC,cAAc,IAEJhV,GACVyP,KACA3O,EAAW,qBAAsBuP,MAClCuoF,GAjIyB,GAiKhC,SAASyB,GAAeM,EAAKpiF,GAOzB,OANIzZ,MAAMmK,QAAQsP,GACRA,EAAK+mE,OAAO+a,GAAgBM,GAG5Br7F,KAAaq7F,EAAKpiF,GAiGhC,IAAIkiF,GAAgC,WAEhC,SAASA,EAAeG,EAAO1rE,EAAUoqE,EAAWuB,EAAmBC,EAA2BC,GAC9F,IAAIzhF,EAAQ/a,KACZA,KAAKq8F,MAAQA,EACbr8F,KAAK2wB,SAAWA,EAChB3wB,KAAK+6F,UAAYA,EACjB/6F,KAAKs8F,kBAAoBA,EACzBt8F,KAAKu8F,0BAA4BA,EACjCv8F,KAAKw8F,YAAcA,EACnBx8F,KAAKy8F,uBACLz8F,KAAK08F,UACL18F,KAAK28F,cAAe,EACpB38F,KAAK48F,sBAAuB,EAC5B58F,KAAK68F,SAAU,EAKf78F,KAAK88F,kBAIL98F,KAAK0+B,cACL1+B,KAAK48F,qBAAuBprE,KAC5BxxB,KAAKq8F,MAAMvH,iBAAiBn6D,WAAY33B,KAAM,WAAc+X,EAAMshF,MAAMtF,IAAI,WAAch8E,EAAMgiF,YAChG,IAAIC,EAAoB,IAAIl9F,EAAKm9F,WAAW,SAAUC,GAClDniF,EAAM8hF,QAAU9hF,EAAMshF,MAAMzH,WAAa75E,EAAMshF,MAAM1H,uBAChD55E,EAAMshF,MAAM3H,qBACjB35E,EAAMshF,MAAM1F,kBAAkB,WAC1BuG,EAASl6F,KAAK+X,EAAM8hF,SACpBK,EAAS7c,eAGbuU,EAAW,IAAI90F,EAAKm9F,WAAW,SAAUC,GAGzC,IAAIC,EACJpiF,EAAMshF,MAAM1F,kBAAkB,WAC1BwG,EAAYpiF,EAAMshF,MAAMtH,SAASp6D,UAAU,WACvC65D,GAAOsC,yBAGPxC,GAAkB,WACTv5E,EAAM8hF,SAAY9hF,EAAMshF,MAAM1H,sBAC9B55E,EAAMshF,MAAM3H,uBACb35E,EAAM8hF,SAAU,EAChBK,EAASl6F,MAAK,UAK9B,IAAIo6F,EAAcriF,EAAMshF,MAAMxH,WAAWl6D,UAAU,WAC/C65D,GAAOqC,sBACH97E,EAAM8hF,UACN9hF,EAAM8hF,SAAU,EAChB9hF,EAAMshF,MAAM1F,kBAAkB,WAAcuG,EAASl6F,MAAK,QAGlE,OAAO,WACHm6F,EAAU16D,cACV26D,EAAY36D,iBAGpBziC,KAAK40F,SACD90F,EAAKo1B,MAAM8nE,EAAmBpI,EAASxV,KAAKr/E,EAAUs9F,UA4H9D,IAAIC,EAUJ,OApIAA,EAAmBpB,EAiBnBA,EAAer7F,UAAU2hB,UAAY,SAAU+6E,EAAoB3oC,GAC/D,IAIIiU,EAJA9tD,EAAQ/a,KACZ,IAAKA,KAAKw8F,YAAYt5F,KAClB,MAAM,IAAIwD,MAAM,iJAIhBmiE,EADA00B,aAA8B3pC,GACX2pC,EAIfv9F,KAAKu8F,0BAA0BpoC,wBAAwBopC,GAE/Dv9F,KAAK88F,eAAex5F,KAAKulE,EAAiBrU,eAE1C,IAAItD,EAjdZ,SAASssC,EAA0BC,GAC/B,OAAOA,aAAchpC,GAgdFid,CAAgB7I,GAAoB,KAAO7oE,KAAK+6F,UAAU5wF,IAAI0qD,IAEzE6oC,EAAU70B,EAAiB/nE,OAAOgR,GAASG,QAD1B2iD,GAAsBiU,EAAiB7sD,SACak1C,GACzEwsC,EAAQh9E,UAAU,WAAc3F,EAAM4iF,iBAAiBD,KACvD,IAAIlE,EAAckE,EAAQh0F,SAASS,IAAIqtF,GAAa,MASpD,OARIgC,GACAkE,EAAQh0F,SAASS,IAAIgvF,IAChBI,oBAAoBmE,EAAQryE,SAASysC,cAAe0hC,GAE7Dx5F,KAAK49F,eAAeF,GAChBlsE,MACAxxB,KAAK2wB,SAASihE,IAAI,oGAEf8L,GAYXxB,EAAer7F,UAAUk8F,KAAO,WAC5B,IAAIhiF,EAAQ/a,KACZ,GAAIA,KAAK28F,aACL,MAAM,IAAIj2F,MAAM,6CAEpB,IAAIihE,EAAQ21B,EAAiBO,aAC7B,IACI79F,KAAK28F,cAAe,EACpB38F,KAAK08F,OAAOnvF,QAAQ,SAAUgY,GAAQ,OAAOA,EAAKqwC,kBAC9C51D,KAAK48F,sBACL58F,KAAK08F,OAAOnvF,QAAQ,SAAUgY,GAAQ,OAAOA,EAAKswC,mBAG1D,MAAOzyD,GAEHpD,KAAKq8F,MAAM1F,kBAAkB,WAAc,OAAO57E,EAAMuhF,kBAAkB1rE,YAAYxtB,KAE1F,QACIpD,KAAK28F,cAAe,EACpBzI,GAASvsB,KAQjBu0B,EAAer7F,UAAUi9F,WAAa,SAAUxmC,GAC5C,IAAI/xC,EAAO+xC,EACXt3D,KAAK08F,OAAOp5F,KAAKiiB,GACjBA,EAAK2wC,eAAel2D,OAKxBk8F,EAAer7F,UAAUygC,WAAa,SAAUg2B,GAC5C,IAAI/xC,EAAO+xC,EACX5pB,GAAO1tC,KAAK08F,OAAQn3E,GACpBA,EAAK0wC,oBAETimC,EAAer7F,UAAU+8F,eAAiB,SAAUlzB,GAChD1qE,KAAK89F,WAAWpzB,EAAarlD,UAC7BrlB,KAAK+8F,OACL/8F,KAAK0+B,WAAWp7B,KAAKonE,GAEL1qE,KAAK+6F,UAAU5wF,IAAIsnF,OAA4BhuF,OAAOzD,KAAKy8F,qBACjElvF,QAAQ,SAAU+sC,GAAY,OAAOA,EAASowB,MAE5DwxB,EAAer7F,UAAU88F,iBAAmB,SAAUjzB,GAClD1qE,KAAKshC,WAAWopC,EAAarlD,UAC7BqoB,GAAO1tC,KAAK0+B,WAAYgsC,IAG5BwxB,EAAer7F,UAAU8f,YAAc,WAEnC3gB,KAAK08F,OAAOpqF,QAAQ/E,QAAQ,SAAUgY,GAAQ,OAAOA,EAAKod,aAE9DviC,OAAO+B,eAAe+5F,EAAer7F,UAAW,aAI5CsJ,IAAK,WAAc,OAAOnK,KAAK08F,OAAOp7F,QACtCkV,YAAY,EACZC,cAAc,IAIlBylF,EAAe2B,WAAa5J,GAAe,yBAC1BqJ,EAAmB77F,GAChCyP,KACA3O,EAAW,qBAAsBiyF,GAAQ7C,GAAS7/E,GAC9C4e,GACA0jC,GACAk8B,MACL4L,GAtM4B,GAyMnC,SAASxuD,GAAO6qC,EAAMhlD,GAClB,IAAIhuB,EAAQgzE,EAAKpwE,QAAQorB,GACrBhuB,GAAS,GACTgzE,EAAKl3C,OAAO97B,EAAO;;;;;;;;;;;;;;;;;;;;;OA2B3B,IAQIw4F,GACA,SAASA,OAITC,IACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAWC,GACvCr+F,KAAKo+F,UAAYA,EACjBp+F,KAAKs+F,QAAUD,GAAUL,GAiC7B,OA/BAG,EAAuBt9F,UAAUypD,KAAO,SAAUi0C,GAE9C,OADkBv+F,KAAKo+F,qBAAqB3L,GACvBzyF,KAAKw+F,YAAYD,GAAQv+F,KAAKy+F,eAAeF,IAEtEJ,EAAuBt9F,UAAU49F,eAAiB,SAAUF,GACxD,IAAIxjF,EAAQ/a,KACRsE,EAAKnB,EAAOo7F,EAAK9pE,MAhCZ,KAgC+B,GAAIl1B,EAAS+E,EAAG,GAAIo6F,EAAap6F,EAAG,GAI5E,YAHmB0C,IAAf03F,IACAA,EAAa,WAEVC,OAAOC,OAAOr/F,GAChBk7B,KAAK,SAAUl7B,GAAU,OAAOA,EAAOm/F,KACvCjkE,KAAK,SAAUnzB,GAAQ,OAAOu3F,GAAcv3F,EAAM/H,EAAQm/F,KAC1DjkE,KAAK,SAAUnzB,GAAQ,OAAOyT,EAAMqjF,UAAUzL,mBAAmBrrF,MAE1E62F,EAAuBt9F,UAAU29F,YAAc,SAAUD,GACrD,IAAIj6F,EAAKnB,EAAOo7F,EAAK9pE,MA1CZ,KA0C+B,GAAIl1B,EAAS+E,EAAG,GAAIo6F,EAAap6F,EAAG,GACxEw6F,EA1Ce,YA+CnB,YAJmB93F,IAAf03F,IACAA,EAAa,UACbI,EAAqB,IAElBH,OAAOC,OAAO5+F,KAAKs+F,QAAQL,kBAAoB1+F,EAASS,KAAKs+F,QAAQJ,mBACvEzjE,KAAK,SAAUl7B,GAAU,OAAOA,EAAOm/F,EAAaI,KACpDrkE,KAAK,SAAUp7B,GAAW,OAAOw/F,GAAcx/F,EAASE,EAAQm/F,MAEhDj9F,GACrByP,KACA9O,EAAQ,EAAG8D,KACX3D,EAAW,qBAAsBkwF,GAAUsL,MAC5CI,GAnCoC,GAsC3C,SAASU,GAAc57F,EAAO87F,EAAYL,GACtC,IAAKz7F,EACD,MAAM,IAAIyD,MAAM,gBAAkBg4F,EAAa,SAAWK,EAAa,KAE3E,OAAO97F;;;;;;;OAoBX,IAAI+7F,GAA2B,SAAUtqC,GAErC,SAASK,IACL,OAAkB,OAAXL,GAAmBA,EAAOlzD,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUq0D,EAASL,GAIZK,EALmB,CAM5B8K,IAsDEo/B,GAAiC,SAAUvqC,GAE3C,SAASuqC,IACL,OAAkB,OAAXvqC,GAAmBA,EAAOlzD,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUu+F,EAAiBvqC,GAIpBuqC,EALyB,CAMlCD,IAiBEE,GACA,SAASA,GAAcp7F,EAAMooD,GACzBlsD,KAAK8D,KAAOA,EACZ9D,KAAKksD,SAAWA,GAIpBizC,GAAqC,WACrC,SAASA,EAAoBC,EAAYrtF,EAAQstF,GAC7Cr/F,KAAK8rD,aACL9rD,KAAK+R,OAAS,KACd/R,KAAKq/F,cAAgBA,EACrBr/F,KAAKo/F,WAAaA,EACdrtF,GAAUA,aAAkButF,IAC5BvtF,EAAOwtF,SAASv/F,MA4BxB,OAzBAI,OAAO+B,eAAeg9F,EAAoBt+F,UAAW,YACjDsJ,IAAK,WAAc,OAAOnK,KAAKq/F,cAAc31F,UAC7C8M,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeg9F,EAAoBt+F,UAAW,qBACjDsJ,IAAK,WAAc,OAAOnK,KAAKq/F,cAAc9hF,WAC7C/G,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeg9F,EAAoBt+F,UAAW,WACjDsJ,IAAK,WAAc,OAAOnK,KAAKq/F,cAAc1qF,SAC7C6B,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeg9F,EAAoBt+F,UAAW,cACjDsJ,IAAK,WAAc,OAAOnK,KAAKq/F,cAAcz6B,YAC7CpuD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeg9F,EAAoBt+F,UAAW,kBACjDsJ,IAAK,WAAc,OAAOnK,KAAKq/F,cAAcG,gBAC7ChpF,YAAY,EACZC,cAAc,IAEX0oF,EAnC6B,GAqCpCG,GAAwC,SAAU5qC,GAElD,SAAS4qC,EAAuBF,EAAYrtF,EAAQstF,GAChD,IAAItkF,EAAQ25C,EAAOnzD,KAAKvB,KAAMo/F,EAAYrtF,EAAQstF,IAAkBr/F,KAOpE,OANA+a,EAAMy6E,cACNz6E,EAAM0Y,cACN1Y,EAAM8nC,WACN9nC,EAAMuG,UACNvG,EAAM0kF,cACN1kF,EAAM+8C,cAAgBsnC,EACfrkF,EAwEX,OAjFAra,EAAU4+F,EAAwB5qC,GAWlC4qC,EAAuBz+F,UAAU0+F,SAAW,SAAU/gE,GAC9CA,IACAx+B,KAAKy/F,WAAWn8F,KAAKk7B,GACrBA,EAAMzsB,OAAS/R,OAGvBs/F,EAAuBz+F,UAAUoyB,YAAc,SAAUuL,GACrD,IAAIkhE,EAAa1/F,KAAKy/F,WAAWt3F,QAAQq2B,IACrB,IAAhBkhE,IACAlhE,EAAMzsB,OAAS,KACf/R,KAAKy/F,WAAWp+D,OAAOq+D,EAAY,KAG3CJ,EAAuBz+F,UAAU8+F,oBAAsB,SAAUnhE,EAAOohE,GACpE,IACIt7F,EADAyW,EAAQ/a,KAER6/F,EAAe7/F,KAAKy/F,WAAWt3F,QAAQq2B,IACrB,IAAlBqhE,KACCv7F,EAAKtE,KAAKy/F,YAAYp+D,OAAO7/B,MAAM8C,EAAId,GAAUq8F,EAAe,EAAG,GAAID,IACxEA,EAAYryF,QAAQ,SAAUzL,GACtBA,EAAEiQ,QACFjQ,EAAEiQ,OAAOkhB,YAAYnxB,GAEzB08B,EAAMzsB,OAASgJ,MAI3BukF,EAAuBz+F,UAAU+hC,aAAe,SAAUk9D,EAAUC,GAChE,IAAIC,EAAWhgG,KAAKy/F,WAAWt3F,QAAQ23F,IACrB,IAAdE,EACAhgG,KAAKu/F,SAASQ,IAGVA,EAAShuF,QACTguF,EAAShuF,OAAOkhB,YAAY8sE,GAEhCA,EAAShuF,OAAS/R,KAClBA,KAAKy/F,WAAWp+D,OAAO2+D,EAAU,EAAGD,KAG5CT,EAAuBz+F,UAAU2uE,MAAQ,SAAUqS,GAE/C,OADc7hF,KAAKigG,SAASpe,GACb,IAAM,MAEzByd,EAAuBz+F,UAAUo/F,SAAW,SAAUpe,GAClD,IAAIlpC,KAEJ,OADAunD,GAAsBlgG,KAAM6hF,EAAWlpC,GAChCA,GAEX2mD,EAAuBz+F,UAAUs/F,cAAgB,SAAUte,GACvD,IAAIlpC,KAEJ,OADAynD,GAAmBpgG,KAAM6hF,EAAWlpC,GAC7BA,GAEXv4C,OAAO+B,eAAem9F,EAAuBz+F,UAAW,YACpDsJ,IAAK,WACD,OAAOnK,KACFy/F,WACA3e,OAAO,SAAUtpD,GAAQ,OAAOA,aAAgB8nE,KAEzD9oF,YAAY,EACZC,cAAc,IAElB6oF,EAAuBz+F,UAAUw/F,oBAAsB,SAAU9lD,EAAW+lD,GACxEtgG,KAAK8rD,UAAUv+C,QAAQ,SAAU+sC,GACzBA,EAASx2C,MAAQy2C,GACjBD,EAAS4R,SAASo0C,MAIvBhB,EAlFgC,CAmFzCH,IAOF,SAASe,GAAsB5hF,EAASujE,EAAWlpC,GAC/Cr6B,EAAQmhF,WAAWlyF,QAAQ,SAAUiqB,GAC7BA,aAAgB8nE,KACZzd,EAAUrqD,IACVmhB,EAAQr1C,KAAKk0B,GAEjB0oE,GAAsB1oE,EAAMqqD,EAAWlpC,MAInD,SAASynD,GAAmBnpE,EAAY4qD,EAAWlpC,GAC3C1hB,aAAsBqoE,IACtBroE,EAAWwoE,WAAWlyF,QAAQ,SAAUiqB,GAChCqqD,EAAUrqD,IACVmhB,EAAQr1C,KAAKk0B,GAEbA,aAAgB8nE,IAChBc,GAAmB5oE,EAAMqqD,EAAWlpC,KAKpD,IAAI4nD,GAAsC,WACtC,SAASA,EAAqBnB,GAC1Bp/F,KAAKo/F,WAAaA,EA8CtB,OA5CAh/F,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,UAClDsJ,IAAK,WACD,IAAI4H,EAAS/R,KAAKo/F,WAAWnoE,WAC7B,OAAOllB,EAAS,IAAIyuF,GAAwBzuF,GAAU,MAE1DyE,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,YAClDsJ,IAAK,WAAc,OAAOqhD,GAAYxrD,KAAKo/F,aAC3C5oF,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,qBAClDsJ,IAAK,WACD,IAAI2tD,EAAgB93D,KAAKo/F,WACzB,OAAOtnC,IACF7M,GAAa6M,IAAkBzM,GAAiByM,KAEzDthD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,WAClDsJ,IAAK,WAAc,OAAOihD,GAAWprD,KAAKo/F,aAC1C5oF,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,aAClDsJ,IAAK,WACD,OAAO0hD,GAAa7rD,KAAKo/F,YAAYte,OAAOl1B,KAEhDp1C,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,cAClDsJ,IAAK,WAAc,OA7rV3B,SAASs2F,EAAa9+F,GAClB,IAAIgT,EAAU22C,GAAa3pD,GAI3B,YAH0BqF,IAAtB2N,EAAQ0pB,YACR1pB,EAAQ0pB,UAjtLhB,SAASqiE,EAAkBx7E,EAAOS,GAC9B,IAAIP,EAAQF,EAAM1B,IAAOvH,KAAK0J,GAC9B,GAAIP,GAASA,EAAMmzB,WAAY,CAG3B,IAFA,IAAIxsC,KACAotC,EAAa/zB,EAAM7f,MAAQ,EACtBpE,EAAI,EAAGA,EAAIikB,EAAMmzB,WAAWj3C,OAAQH,GAAK,EAC9C4K,EAAOqZ,EAAMmzB,WAAWp3C,IAAM+jB,EAAMi0B,GACpCA,IAEJ,OAAOptC,EAEX,OAAO,KAssLiB20F,CAAkB/rF,EAAQuQ,MAAOvQ,EAAQgR,YAE1DhR,EAAQ0pB,cAwrVeoiE,CAAazgG,KAAKo/F,aAC5C5oF,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeo+F,EAAqB1/F,UAAW,kBAClDsJ,IAAK,WAAc,OAzvV3B,SAASw2F,EAAmBriF,GACxB,IAAI3J,EAAU22C,GAAahtC,GAAS,GACpC,IAAK3J,EACD,SAOJ,IANA,IA8IwBH,EA7IpB0S,EADQvS,EAAQuQ,MACF1B,IACd4B,EAAQ8B,EAAMjL,KAAKtH,EAAQgR,WAC3B65E,KAEA9vE,EAAWtK,EAAMqC,aACZtmB,EAFgC,MAAxBikB,EAAMiK,gBAEEluB,EAAIuuB,EAAUvuB,IAAK,CACxC,IAAI8B,EAAQikB,EAAMjL,KAAK9a,QAwIP6F,KADIwN,EAtIGvR,GAuIhBqE,WAAuCN,IAAjBwN,EAAIiJ,eAAiDzW,IAAvBwN,EAAI2K,iBAlI3Dlc,EAAQA,EAAMqE,MAElBk4F,EAAel8F,KAAKL,GAExB,OAAOu8F,EAouVuBmB,CAAmB3gG,KAAKo/F,aAClD5oF,YAAY,EACZC,cAAc,IAEX8pF,EAhD8B,GAkDrCC,GAAyC,SAAU9rC,GAEnD,SAAS8rC,EAAwBpB,GAI7B,OADQ1qC,EAAOnzD,KAAKvB,KAAMo/F,IAAep/F,KA2K7C,OA/KAU,EAAU8/F,EAAyB9rC,GAOnCt0D,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,iBACrDsJ,IAAK,WACD,OAAOnK,KAAKo/F,WAAWvrE,UAAYC,KAAKC,aAAe/zB,KAAKo/F,WAAa,MAE7E5oF,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,QACrDsJ,IAAK,WAAc,OAAOnK,KAAK83D,cAAc3gC,UAC7C3gB,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,cAarDsJ,IAAK,WACD,IAAIwK,EAAU22C,GAAatrD,KAAKo/F,YAC5Bl6E,EAAQvQ,EAAQuQ,MAChBuI,EAAQvI,EAAM1B,IAAOvH,KACrBmJ,EAAQqI,EAAM9Y,EAAQgR,WACtB6vE,EA+JhB,SAASoL,EAAwBx7E,EAAOF,EAAOuI,GAG3C,IAFA,IAAI+nE,KACAh5D,EAsCR,SAASqkE,EAAqBC,EAAerzE,GASzC,IARA,IAAIszE,EAAsBD,EAAgB,EAItCj4D,EAAepb,EAAMszE,GAIM,iBAAjBl4D,IAA8BhqB,GAAqBgqB,IAC7DA,EAAepb,IAAQszE,GAE3B,OAAOA,EAAsB,EAlDVF,CAAqBz7E,EAAM63B,2BAA4BxvB,GACnE+O,EAAepX,EAAM83B,0BAA0B,CAGlD,IAFA,IAAIj6C,EAAQ,GACRiK,EAAeugB,EAAM+O,IACjB3d,GAAqB3R,IAIzBjK,GAASgb,GAAgBiH,EAAMsX,IAAiB/O,EAAM+O,GACtDtvB,EAAeugB,IAAQ+O,GAE3Bv5B,GAASiiB,EAAMsX,GAEf,IAAIwkE,EAAgB9zF,EAAaunB,MAAM7V,IACnCouD,EAAeg0B,EAAc,GAE7Bh0B,IAEAwoB,EAAWxoB,GAAgBg0B,EAAc,GAAK/9F,EAAQ+9F,EAAc,IAExExkE,IAEJ,OAAOg5D,EAvLkBoL,CAAwBx7E,EAAOF,EAAOuI,GACnDwzE,EAoNhB,SAASC,EAA4B97E,EAAOF,EAAOuI,GAO/C,IANA,IAAI+nE,KAEA2L,EAAgB/7E,EAAMqC,aACtBva,EAAeugB,EAAM0zE,GAGM,iBAAjBj0F,GAEVsoF,EADmBtoF,EAAaunB,MAAM7V,IAAyB,IACpCsG,EAAMi8E,GACjCj0F,EAAeugB,IAAQ0zE,GAE3B,OAAO3L,EAhOsB0L,CAA4B97E,EAAOF,EAAOuI,GAC/D,OAAO1sB,KAAay0F,EAAYyL,IAEpCzqF,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,cACrDsJ,IAAK,WACD,IAAIspB,KACAnV,EAAUte,KAAK83D,cACnB,GAAIx5C,EAEA,IADA,IAAI8iF,EAAS9iF,EAAQmV,WACZtyB,EAAI,EAAGA,EAAIigG,EAAO9/F,OAAQH,IAAK,CACpC,IAAIwlC,EAAOy6D,EAAOjgG,GAClBsyB,EAAWkT,EAAK7iC,MAAQ6iC,EAAK1jC,MAGrC,OAAOwwB,GAEXjd,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,WACrDsJ,IAAK,WACD,IAAI04C,KACAvkC,EAAUte,KAAK83D,cACnB,GAAIx5C,EAAS,CACT,IAAI+iF,EAAWn2C,GAAqB5sC,GAChCkoB,EAAiBnB,GAAkBg8D,EAAS17E,UAAW07E,EAASn8E,OACpE,GAAIshB,GACA,IAAK,IAAIrlC,EAAI,EAAmCA,EAAIqlC,EAAellC,OAAQH,GAAK,EAC5E,GAAI2sC,GAAkBtH,EAAgBrlC,GAAI,CACtC,IAAImsC,EAAY/F,GAAQf,EAAgBrlC,GACpC8B,EAAQ6lC,GAAStC,EAAgBrlC,GACjB,kBAAT8B,IAEP4/C,EAAQvV,GAAarqC,QAOjC,CAAA,IAAIq+F,EAAWhjF,EAAQijF,UACvB,IAASpgG,EAAI,EAAGA,EAAImgG,EAAShgG,OAAQH,IACjC0hD,EAAQy+C,EAASngG,KAAM,GAInC,OAAO0hD,GAEXrsC,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,UACrDsJ,IAAK,WACD,IAAImX,KACAhD,EAAUte,KAAK83D,cACnB,GAAIx5C,EAAS,CACT,IAAI+iF,EAAWn2C,GAAqB5sC,GAChCkoB,EAAiBnB,GAAkBg8D,EAAS17E,UAAW07E,EAASn8E,OACpE,GAAIshB,GACA,IAAK,IAAIrlC,EAAI,EAAmCA,EAAIqlC,EAAellC,OAAQH,GAAK,EAC5E,IAAK2sC,GAAkBtH,EAAgBrlC,GAAI,CACvC,IAAIssE,EAAYlmC,GAAQf,EAAgBrlC,GACpC8B,EAAQ6lC,GAAStC,EAAgBrlC,GACvB,OAAV8B,IAEAqe,EAAOmsD,GAAaxqE,QAOhC,CAAA,IAAIu+F,EAAUljF,EAAQ4uB,MACtB,IAAS/rC,EAAI,EAAGA,EAAIqgG,EAAQlgG,OAAQH,IAAK,CACrC,IAAIo+C,EAASiiD,EAAQ9tE,KAAKvyB,GAC1BmgB,EAAOi+B,GAAUiiD,EAAQC,iBAAiBliD,KAItD,OAAOj+B,GAEX9K,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,cACrDsJ,IAAK,WAGD,IAFA,IAAIs1F,EAAaz/F,KAAKo/F,WAAWK,WAC7BiC,KACKvgG,EAAI,EAAGA,EAAIs+F,EAAWn+F,OAAQH,IAEnCugG,EAASp+F,KAAKq+F,GADAlC,EAAWt+F,KAG7B,OAAOugG,GAEXlrF,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAeq+F,EAAwB3/F,UAAW,YACrDsJ,IAAK,WACD,IAAI2tD,EAAgB93D,KAAK83D,cACzB,IAAKA,EACD,SAGJ,IAFA,IAAI2nC,EAAa3nC,EAAc4pC,SAC3BA,KACKvgG,EAAI,EAAGA,EAAIs+F,EAAWn+F,OAAQH,IAEnCugG,EAASp+F,KAAKq+F,GADAlC,EAAWt+F,KAG7B,OAAOugG,GAEXlrF,YAAY,EACZC,cAAc,IAElB+pF,EAAwB3/F,UAAU2uE,MAAQ,SAAUqS,GAEhD,OADc7hF,KAAKigG,SAASpe,GACb,IAAM,MAEzB2e,EAAwB3/F,UAAUo/F,SAAW,SAAUpe,GACnD,IAAIlpC,KAEJ,OADAipD,GAAqB5hG,KAAM6hF,EAAWlpC,GAAS,GACxCA,GAEX6nD,EAAwB3/F,UAAUs/F,cAAgB,SAAUte,GACxD,IAAIlpC,KAEJ,OADAipD,GAAqB5hG,KAAM6hF,EAAWlpC,GAAS,GACxCA,GAEX6nD,EAAwB3/F,UAAUw/F,oBAAsB,SAAU9lD,EAAW+lD,GACzEtgG,KAAK8rD,UAAUv+C,QAAQ,SAAU+sC,GACzBA,EAASx2C,OAASy2C,GAClBD,EAAS4R,SAASo0C,MAIvBE,EAhLiC,CAiL1CD,IACF,SAASqB,GAAqB3qE,EAAY4qD,EAAWlpC,EAASkpD,GACtD5qE,aAAsBupE,IACtBvpE,EAAWwoE,WAAWlyF,QAAQ,SAAUiqB,GAChCqqD,EAAUrqD,IACVmhB,EAAQr1C,KAAKk0B,GAEbA,aAAgBgpE,KACZqB,IAAerqE,EAAKsgC,eACpB8pC,GAAqBpqE,EAAMqqD,EAAWlpC,EAASkpD,MAgFnE,IAAIC,GAAyB,IAAI/uF,IAIjC,SAAS4uF,GAAwBvC,GAC7B,OAAIA,aAAsBtrE,KACfsrE,EAAWvrE,UAAYC,KAAKC,aAC/B,IAAIysE,GAAwBpB,GAC5B,IAAImB,GAAqBnB,GAE1B,KAKX,IAAI2C,GAdJ,SAASC,GAAuB5C,GAC5B,OAAO0C,GAAuB33F,IAAIi1F,IAAe,MAcrD,SAAS6C,GAAezqE,GACpBsqE,GAAuB9uF,IAAIwkB,EAAK4nE,WAAY5nE,GAQhD,IAgHW0qE,GAhHPC,GAAYhD,GAIZiD,GAAe9C,GA6Bf+C,GAAe9H,GAAsB,KAAM,SAVzC3qF,QAAS4hF,GAAa1hF,SAAU,YAChCF,QAASyqF,GAAarrF,MAAO8C,MAC7BlC,QAASupF,GAAqBnqF,UAC9BY,QAAS+hF,GAAS3iF,WAsCpBszF,GAAY,IAAIhxF,GAAe,YAyB/BixF,GAAe,IAAIjxF,GAAe,gBAsBlCkxF,GAAsB,IAAIlxF,GAAe;;;;;;;;AAc7C,SAASmxF,KACL,OAAOziC,GAEX,SAAS0iC,KACL,OAAOziC,GAEX,SAAS0iC,GAAejnB,GACpB,OAAOA,GAAU,SApBVwmB,GAIR5iG,EAAQ4iG,6BAA+B5iG,EAAQ4iG,gCAHnBA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK,SAuB3E,IAAIU,KAEIhzF,QAASssF,GACTlsF,SAAUksF,GACVltF,MAAOwlF,GAAQ7C,GAAS7/E,GAAU4e,GAAc0jC,GAA0Bk8B,MAE5E1gF,QAAS4hE,GAAWxiE,MAAOwlF,IAASrkF,WAAY0yF,KAE9CjzF,QAAS0gF,GACTtgF,SAAUsgF,GACVthF,OAAQ,IAAI9I,EAAYmqF,OAE1BzgF,QAAS6iF,GAAUziF,SAAUyiF,GAAUzjF,SACzCoiF,IACExhF,QAASyvD,GAAiBlvD,WAAYsyF,GAAyBzzF,UAC/DY,QAAS+vD,GAAiBxvD,WAAYuyF,GAAyB1zF,UAE7DY,QAAS0yF,GACTnyF,WAAYwyF,GACZ3zF,OAAQ,IAAIhJ,EAAOs8F,IAAY,IAAIp8F,EAAY,IAAIE,MAY3D,SAASy8F,GAAqB1H,GAC1B,IAAI2H,KAMJ,OALA3H,EAAOpG,SAASp6D,UAAU,WACtB,KAAOmoE,EAAMxhG,QACTwhG,EAAMp6B,KAANo6B,KAGD,SAAUr6F,GAAMq6F,EAAMx/F,KAAKmF,IAYtC,IA20CIs6F,GA30CAC,GAAmC,WAQnC,OAJoBvhG,GAChBwuF,IAAW9oF,UAAWy7F,KACtBrgG,EAAW,qBAAsB25F,MAJrC,SAAS8G,EAAkB7sC,MAFO;;;;;;;OAyJtC,SAASnkC,GAAczM,EAAM0/C,EAAYj6D,GACrC,IAGIuoB,EAHAy2C,EAAQh/D,EAAIsT,QACZs2C,EAAqBrvC,EAAKq+C,KAAKyI,eAC/BptC,EAAW1Z,EAAK0Z,SAEpB,GAAI1Z,EAAKxT,SAAW6iD,EAAoB,CAEhCrhC,EADAy2C,EAAMlmE,KACDm7B,EAASjN,cAAcg4C,EAAMlmE,KAAMkmE,EAAMoD,IAGzCnuC,EAASwX,cAAc,IAEhC,IAAIwsD,EAAWj+B,GAAuBz/C,EAAM0/C,EAAYj6D,GACpDi4F,GACAhkE,EAAShN,YAAYgxE,EAAU1vE,QAOnCA,EAAK0L,EAASob,kBAAkBua,IAFPoV,EAAM9E,uBAC3B8E,EAAM9E,sBAAsB9jD,gBAAkB9hB,EAAQkd,kBAAkB4mB,WAGhF,GAAI4mC,EAAMp8C,MACN,IAAK,IAAIzsB,EAAI,EAAGA,EAAI6oE,EAAMp8C,MAAMtsB,OAAQH,IAAK,CACzC,IAAImD,EAAKnB,EAAO6mE,EAAMp8C,MAAMzsB,GAAI,GAChC89B,EAAS+a,aAAazmB,EADmCjvB,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAOivB,EAEX,SAAS2vE,GAAuB39E,EAAMwgD,EAAU/6D,EAAKuoB,GACjD,IAAK,IAAIpyB,EAAI,EAAGA,EAAI6J,EAAI2U,QAAQre,OAAQH,IAAK,CACzC,IAAI2uE,EAAS9kE,EAAI2U,QAAQxe,GACrBgiG,EAAqBC,GAA0B79E,EAAMva,EAAI2a,UAAWw+C,GAAqB2L,EAAOnuE,OAAQmuE,EAAOv1B,YAC/G8oD,EAAevzB,EAAOnuE,OACtB2hG,EAAe/9E,EACG,cAAlBuqD,EAAOnuE,SACP0hG,EAAe,KACfC,EAAev9B,GAEnB,IAAIw9B,EAAaD,EAAarkE,SAASic,OAAOmoD,GAAgB9vE,EAAIu8C,EAAOv1B,UAAW4oD,GACpF59E,EAAKumD,YAAY9gE,EAAIqkE,YAAcluE,GAAKoiG,GAGhD,SAASH,GAA0B79E,EAAMhgB,EAAOg1C,GAC5C,OAAO,SAAUopB,GAAS,OAAOD,GAAcn+C,EAAMhgB,EAAOg1C,EAAWopB,IAmC3E,SAAS6/B,GAA2Bj+E,EAAMva,EAAKg4D,EAAY//D,GACvD,IAAKigE,GAAsB39C,EAAMva,EAAKg4D,EAAY//D,GAC9C,OAAO,EAEX,IAAIwxE,EAAUzpE,EAAIo4D,SAASJ,GACvBiH,EAAS5I,GAAc97C,EAAMva,EAAI2a,WACjCmoD,EAAgB7D,EAAOhG,cACvBngE,EAAO2wE,EAAQ3wE,KACnB,OAAwB,GAAhB2wE,EAAQzqE,OACZ,KAAK,GAmBb,SAASkjE,EAAoB3nD,EAAMkvD,EAAS3G,EAAeV,EAAItpE,EAAMb,GACjE,IAAIwgG,EAAkBhvB,EAAQgvB,gBAC1BC,EAAcD,EAAkBl+E,EAAKq+C,KAAKxrC,UAAUiB,SAASoqE,EAAiBxgG,GAASA,EAC3FygG,EAA6B,MAAfA,EAAsBA,EAAYz7F,WAAa,KAC7D,IAAIg3B,EAAW1Z,EAAK0Z,SACP,MAATh8B,EACAg8B,EAAS+a,aAAa8zB,EAAehqE,EAAM4/F,EAAat2B,GAGxDnuC,EAAStL,gBAAgBm6C,EAAehqE,EAAMspE,GA3B1CF,CAAoB3nD,EAAMkvD,EAAS3G,EAAe2G,EAAQrH,GAAItpE,EAAMb,GACpE,MACJ,KAAK,GA4Bb,SAASqqE,EAAgB/nD,EAAMuoD,EAAehqE,EAAMb,GAChD,IAAIg8B,EAAW1Z,EAAK0Z,SAChBh8B,EACAg8B,EAASuO,SAASsgC,EAAehqE,GAGjCm7B,EAASwO,YAAYqgC,EAAehqE,GAjChCwpE,CAAgB/nD,EAAMuoD,EAAehqE,EAAMb,GAC3C,MACJ,KAAK,GAkCb,SAASuqE,EAAgBjoD,EAAMkvD,EAAS3G,EAAehqE,EAAMb,GACzD,IAAIygG,EAAcn+E,EAAKq+C,KAAKxrC,UAAUiB,SAAS/5B,EAAQm2B,gBAAgBiE,MAAOz2B,GAC9E,GAAmB,MAAfygG,EAAqB,CACrBA,EAAcA,EAAYz7F,WAC1B,IAAI07F,EAAOlvB,EAAQpyB,OACP,MAARshD,IACAD,GAA4BC,QAIhCD,EAAc,KAElB,IAAIzkE,EAAW1Z,EAAK0Z,SACD,MAAfykE,EACAzkE,EAASkI,SAAS2mC,EAAehqE,EAAM4/F,GAGvCzkE,EAASmO,YAAY0gC,EAAehqE,GAlDhC0pE,CAAgBjoD,EAAMkvD,EAAS3G,EAAehqE,EAAMb,GACpD,MACJ,KAAK,GAmDb,SAAS8pE,EAAmBxnD,EAAMkvD,EAAS3G,EAAehqE,EAAMb,GAC5D,IAAIwgG,EAAkBhvB,EAAQgvB,gBAC1BC,EAAcD,EAAkBl+E,EAAKq+C,KAAKxrC,UAAUiB,SAASoqE,EAAiBxgG,GAASA,EAC3FsiB,EAAK0Z,SAASkO,YAAY2gC,EAAehqE,EAAM4/F;;;;;;;OAjDvC32B,CAJ4B,SAAZ/hE,EAAIhB,OACA,GAAhByqE,EAAQzqE,MACRigE,EAAO1pC,cACPhb,EACyBkvD,EAAS3G,EAAehqE,EAAMb,GAGnE,OAAO,EA6FX,SAASy/D,GAAmBn9C,GAExB,IADA,IAAIq+E,EAAWr+E,EAAKva,IAAI64F,mBACjBt+E,EAAKxT,QAAUsyD,GAAe9+C,IAAO,CACxC,IAAIu+E,EAASv+E,EAAKu+C,cAClBv+C,EAAOA,EAAKxT,OAGZ,IADA,IAAIyV,EAAMs8E,EAAOn+E,UAAYm+E,EAAOl+B,WAC3BzkE,EAAI,EAAGA,GAAKqmB,EAAKrmB,IAED,UADjBukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,IAChB6I,OACQ,UAAhB07D,EAAQ17D,QACR07D,EAAQ8J,MAAMu0B,SAAWH,KAAcl+B,EAAQ8J,MAAMu0B,UACtDviC,GAAYj8C,EAAMpkB,GAAGqoC,aAEJ,EAAhBk8B,EAAQ17D,OAA+B7I,EAAIukE,EAAQE,WAAak+B,EAAOn+E,YACjD,SAArB+/C,EAAQ2F,YACa,UAArB3F,EAAQ2F,aAEVlqE,GAAKukE,EAAQE,YAKzB,GAAyB,UAArBrgD,EAAKva,IAAIogE,UACT,IAASjqE,EAAI,EAAGA,EAAIokB,EAAKva,IAAIo2D,MAAM9/D,OAAQH,IAAK,CAC5C,IAAIukE,EACiB,WADjBA,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,IAChB6I,OAA2D,UAAhB07D,EAAQ17D,OAC5Dw3D,GAAYj8C,EAAMpkB,GAAGqoC,WAGzBroC,GAAKukE,EAAQE,YAIzB,SAASo+B,GAAoBz+E,EAAMmgD,GAC/B,IAAIkc,EAAYpgB,GAAYj8C,EAAMmgD,EAAQ//C,WAC1C,GAAKi8D,EAAU95C,MAAf,CAGA,IAAIpK,EACAumE,OAAYj9F,EAChB,GAAoB,SAAhB0+D,EAAQ17D,MAAyC,CACjD,IAAIk6F,EAAax+B,EAAQ3zD,OAAOA,OAChCkyF,EAAYE,GAAgB5+E,EAAM2+E,EAAWv+E,UAAWu+E,EAAWv+E,UAAYu+E,EAAWt+B,WAAYF,EAAQ8J,UAC9G9xC,EAAoB4jC,GAAe/7C,EAAMmgD,EAAQ3zD,OAAO4T,WAAW8I,cAE9C,UAAhBi3C,EAAQ17D,QACbi6F,EAAYE,GAAgB5+E,EAAM,EAAGA,EAAKva,IAAIo2D,MAAM9/D,OAAS,EAAGokE,EAAQ8J,UACxE9xC,EAAoBnY,EAAKhI,WAE7BqkE,EAAUV,MAAM+iB,GAGhB,IAFA,IAAI7gC,EAAWsC,EAAQ8J,MAAMpM,SACzBghC,GAAS,EACJjjG,EAAI,EAAGA,EAAIiiE,EAAS9hE,OAAQH,IAAK,CACtC,IAAIszE,EAAUrR,EAASjiE,GACnBkjG,OAAa,EACjB,OAAQ5vB,EAAQ6vB,aACZ,KAAK,EACDD,EAAaziB,EAAUxmE,MACvB,MACJ,KAAK,EACDipF,EAAaziB,EACbwiB,GAAS,EAGjB1mE,EAAkB+2C,EAAQxvE,UAAYo/F,EAEtCD,GACAxiB,EAAUL,mBAGlB,SAAS4iB,GAAgB5+E,EAAMkgD,EAAY/1C,EAAU60E,EAAUv/F,GAC3D,IAAK,IAAI7D,EAAIskE,EAAYtkE,GAAKuuB,EAAUvuB,IAAK,CACzC,IAAIukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,GACzB0jE,EAAYa,EAAQhB,eAAe6/B,EAASnuF,IAIhD,GAHiB,MAAbyuD,GACA7/D,EAAO1B,KAAKkhG,GAAcj/E,EAAMmgD,EAASb,IAEzB,EAAhBa,EAAQ17D,OAA+B07D,EAAQpnD,QAAQb,WACtDioD,EAAQpnD,QAAQb,SAASomF,mBAAqBU,EAASR,YACpDQ,EAASR,SAAU,CACvB,IAAI57B,EAAc9G,GAAc97C,EAAMpkB,GAOtC,IAJKukE,EAAQ6J,oBAAsBg1B,EAASR,YAAcQ,EAASR,WAC/DI,GAAgB5+E,EAAMpkB,EAAI,EAAGA,EAAIukE,EAAQE,WAAY2+B,EAAUv/F,GAC/D7D,GAAKukE,EAAQE,YAEG,SAAhBF,EAAQ17D,MAER,IADA,IAAIs8D,EAAgB6B,EAAY5B,cAAcC,eACrCnxD,EAAI,EAAGA,EAAIixD,EAAchlE,OAAQ+T,IAAK,CAC3C,IAAIkqB,EAAe+mC,EAAcjxD,GAC7BovF,EAAM5gC,GAAsBtkC,GAC5BklE,GAAOA,IAAQt8B,GACfg8B,GAAgB5kE,EAAc,EAAGA,EAAav0B,IAAIo2D,MAAM9/D,OAAS,EAAGijG,EAAUv/F,GAI1F,IAAIimE,EAAiB9C,EAAY1qD,SAASytD,gBAC1C,GAAID,EACA,IAAS51D,EAAI,EAAGA,EAAI41D,EAAe3pE,OAAQ+T,IAAK,CAC5C,IAAI4xC,EAAgBgkB,EAAe51D,GACnC8uF,GAAgBl9C,EAAe,EAAGA,EAAcj8C,IAAIo2D,MAAM9/D,OAAS,EAAGijG,EAAUv/F,KAIvF0gE,EAAQ6J,oBAAsBg1B,EAASR,YAAcQ,EAASR,WAE/D5iG,GAAKukE,EAAQE,YAGrB,OAAO5gE,EAEX,SAASw/F,GAAcj/E,EAAMmgD,EAASg/B,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAOrjC,GAAc97C,EAAMmgD,EAAQ//C,WAAWs+C,cAClD,KAAK,EACD,OAAO,IAAIpM,GAAWwJ,GAAc97C,EAAMmgD,EAAQ//C,WAAWs+C,eACjE,KAAK,EACD,OAAO5C,GAAc97C,EAAMmgD,EAAQ//C,WAAWlI,SAClD,KAAK,EACD,OAAO4jD,GAAc97C,EAAMmgD,EAAQ//C,WAAW4gD,cAClD,KAAK,EACD,OAAOjF,GAAe/7C,EAAMmgD,EAAQ//C,WAAW8I;;;;;;;OAwC/D,SAASk2E,GAAgBp/E,EAAM0/C,EAAYj6D,GACvC,IAAIi4F,EAAWj+B,GAAuBz/C,EAAM0/C,EAAYj6D,GACnDi4F,GAKLp9B,GAA0BtgD,EADLva,EAAIm7D,UAAU5gE,MACa,EAAqB09F,EAAU,UAAMj8F;;;;;;;OA4BzF,SAAS49F,GAAmB56F,EAAOmlE,EAAY01B,GAE3C,IADA,IAAIzhC,EAAW,IAAI7iE,MAAMskG,EAAcvjG,QAC9BH,EAAI,EAAGA,EAAI0jG,EAAcvjG,OAAQH,IAAK,CAC3C,IAAIqM,EAAOq3F,EAAc1jG,GACzBiiE,EAASjiE,IACL6I,MAAO,EACPlG,KAAM0J,EACN4/D,GAAI,KACJyD,gBAAiBrjE,EACjBi2F,gBAAiB,KACjBphD,OAAQ,MAGhB,OAEI18B,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAEdF,WAAYA,EACZnlE,MAAOA,EACPqhE,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EACrB7K,kBACAC,gBAAiB,EACjBC,cACAkB,gBAAiB,EACjBF,WAAY,EAAGxC,SAAUA,EACzBiD,aAAcM,GAAiBvD,GAC/BzjD,WACArB,QAAS,KACT7N,SAAU,KACV8D,KAAM,KACNi7D,MAAO,KACPrJ,UAAW,MAuMnB,SAASnlC,GAAWzb,EAAM0/C,EAAYj6D,GAClC,IAAI8iE,EACA7uC,EAAW1Z,EAAK0Z,SACpB6uC,EAAgB7uC,EAAS+B,WAAWh2B,EAAIuJ,KAAKs0C,QAC7C,IAAIo6C,EAAWj+B,GAAuBz/C,EAAM0/C,EAAYj6D,GAIxD,OAHIi4F,GACAhkE,EAAShN,YAAYgxE,EAAUn1B,IAE1B5J,WAAY4J,GA0EzB,SAASg3B,GAAsB7hG,EAAOwxE,GAElC,OADwB,MAATxxE,EAAgBA,EAAMgF,WAAa,IAChCwsE,EAAQpyB;;;;;;;OAmI9B,SAAS0iD,GAAcvtE,GACnB,OAA8C,IAAzB,EAAbA,EAAKxtB,QAA4D,OAAtBwtB,EAAKlZ,QAAQxa,KAEpE,SAASkhG,GAAajzF,EAAQylB,EAAMytE,GAChC,IAAIxnF,EAAW+Z,EAAKlZ,SAAWkZ,EAAKlZ,QAAQb,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAAS8nD,mBACV,MAAM,IAAI7+D,MAAM,oEAEpB,GAAI+W,EAAS8nD,oBAC2B,SAApC9nD,EAAS8nD,mBAAmBv7D,MAC5B,MAAM,IAAItD,MAAM,mFAAqF8wB,EAAK7R,UAAY,KAG9H,GAAiB,MAAb6R,EAAKxtB,OAEuC,IAAzB,GADD+H,EAASA,EAAO/H,MAAQ,IAEtC,MAAM,IAAItD,MAAM,sGAAwG8wB,EAAK7R,UAAY,KAGjJ,GAAI6R,EAAKg4C,MAAO,CACZ,GAAiB,SAAbh4C,EAAKxtB,SACH+H,GAAyD,IAA/B,MAAfA,EAAO/H,QACpB,MAAM,IAAItD,MAAM,kFAAoF8wB,EAAK7R,UAAY,KAEzH,GAAiB,UAAb6R,EAAKxtB,OAAyC+H,EAC9C,MAAM,IAAIrL,MAAM,wEAA0E8wB,EAAK7R,UAAY,KAGnH,GAAI6R,EAAKouC,WAAY,CACjB,IAAIs/B,EAAYnzF,EAASA,EAAO4T,UAAY5T,EAAO6zD,WAAaq/B,EAAY,EAC5E,GAAIztE,EAAK7R,WAAau/E,GAAa1tE,EAAK7R,UAAY6R,EAAKouC,WAAas/B,EAClE,MAAM,IAAIx+F,MAAM,uEAAyE8wB,EAAK7R,UAAY,MAItH,SAASuxC,GAAmBnlD,EAAQozF,EAAc97B,EAAS10D,GAGvD,IAAI4Q,EAAO8gC,GAAWt0C,EAAO6xD,KAAM7xD,EAAOktB,SAAUltB,EAAQozF,EAAc97B,GAG1E,OAFA+7B,GAAS7/E,EAAMxT,EAAOwL,UAAW5I,GACjC0wF,GAAgB9/E,GACTA,EAEX,SAASq8C,GAAegC,EAAM54D,EAAK2J,GAC/B,IAAI4Q,EAAO8gC,GAAWud,EAAMA,EAAK3kC,SAAU,KAAM,KAAMj0B,GAGvD,OAFAo6F,GAAS7/E,EAAM5Q,EAASA,GACxB0wF,GAAgB9/E,GACTA,EAEX,SAASs8C,GAAoBr2C,EAAYk6C,EAAS2D,EAASjqC,GACvD,IACIkmE,EADAjmE,EAAeqmC,EAAQpnD,QAAQ4mD,sBAQnC,OAFIogC,EAJCjmE,EAIc7T,EAAWo4C,KAAK1uB,gBAAgB/V,eAAeC,EAAaC,GAH5D7T,EAAWo4C,KAAK3kC,SAK5BonB,GAAW76B,EAAWo4C,KAAM0hC,EAAc95E,EAAYk6C,EAAQpnD,QAAQirD,kBAAmBF,GAEpG,SAAShjB,GAAWud,EAAM3kC,EAAUltB,EAAQ+xD,EAAe94D,GACvD,IAAIo2D,EAAQ,IAAI7gE,MAAMyK,EAAIo2D,MAAM9/D,QAC5BwqE,EAAc9gE,EAAIu6F,YAAc,IAAIhlG,MAAMyK,EAAIu6F,aAAe,KAWjE,OATIv6F,IAAKA,EACL+G,OAAQA,EACRwxD,oBAAqB,KAAMO,cAAeA,EAC1CnvD,QAAS,KACT4I,UAAW,KAAM6jD,MAAOA,EACxBx8B,MAAO,GAAkBg/B,KAAMA,EAAM3kC,SAAUA,EAC/CgkC,UAAW,IAAI1iE,MAAMyK,EAAIw6F,cAAe15B,YAAaA,EACrD7K,WAAY,GAIpB,SAASmkC,GAAS7/E,EAAMhI,EAAW5I,GAC/B4Q,EAAKhI,UAAYA,EACjBgI,EAAK5Q,QAAUA,EAEnB,SAAS0wF,GAAgB9/E,GACrB,IAAI0/C,EACAb,GAAgB7+C,KAEhB0/C,EAAa5D,GAAc97C,EAAKxT,OADlBwT,EAAKu+C,cAC6B/xD,OAAO4T,WAAWs+C,eAItE,IAFA,IAAIj5D,EAAMua,EAAKva,IACXo2D,EAAQ77C,EAAK67C,MACRjgE,EAAI,EAAGA,EAAI6J,EAAIo2D,MAAM9/D,OAAQH,IAAK,CACvC,IAAIukE,EAAU16D,EAAIo2D,MAAMjgE,GACxBugE,GAASC,eAAep8C,EAAMpkB,GAC9B,IAAIskG,OAAW,EACf,OAAwB,UAAhB//B,EAAQ17D,OACZ,KAAK,EACD,IAAIupB,EAAKvB,GAAczM,EAAM0/C,EAAYS,GACrCnlC,OAAgBv5B,EACpB,GAAoB,SAAhB0+D,EAAQ17D,MAAsC,CAC9C,IAAI07F,EAAcrgC,GAAkBK,EAAQpnD,QAAQiiB,eACpDA,EAAgBmhC,GAASG,oBAAoBt8C,EAAMmgD,EAASggC,EAAanyE,GAE7E2vE,GAAuB39E,EAAMgb,EAAemlC,EAASnyC,GACrDkyE,GACIxhC,cAAe1wC,EACfgN,cAAeA,EACfgmC,cAAe,KACf9oD,SAAUioD,EAAQpnD,QAAQb,SAAWsuD,GAAmBxmD,EAAMmgD,QAAW1+D,GAEzD,SAAhB0+D,EAAQ17D,QACRy7F,EAASl/B,cAAgBwD,GAAwBxkD,EAAMmgD,EAAS+/B,IAEpE,MACJ,KAAK,EACDA,EAAWzkE,GAAWzb,EAAM0/C,EAAYS,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACD+/B,EAAWrkC,EAAMjgE,KACkB,KAAhBukE,EAAQ17D,QAEvBy7F,GAAah3E,SADEghD,GAAuBlqD,EAAMmgD,KAGhD,MAEJ,KAAK,GAED+/B,GAAah3E,SADEkhD,GAAmBpqD,EAAMmgD,IAExC,MAEJ,KAAK,OACD+/B,EAAWrkC,EAAMjgE,MAGbskG,GAAah3E,SADEohD,GAAwBtqD,EAAMmgD,KAG7B,MAAhBA,EAAQ17D,OAERo7F,GADe/jC,GAAc97C,EAAMmgD,EAAQ3zD,OAAO4T,WAAW4a,cAC1CklE,EAASh3E,SAAUg3E,EAASh3E,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACDg3E,GA3iBHxiG,WAAO+D,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACDy+F,EAnyBL,IAAI7kB,GAoyBC,MACJ,KAAK,EACD+jB,GAAgBp/E,EAAM0/C,EAAYS,GAElC+/B,OAAWz+F,EAGnBo6D,EAAMjgE,GAAKskG,EAIfE,GAAyBpgF,EAAMw9E,GAAW6C,iBAE1CC,GAAkBtgF,EAAM,UAAiE,UAA6B,GAE1H,SAAS48C,GAAmB58C,GACxBugF,GAA2BvgF,GAC3Bm8C,GAASc,iBAAiBj9C,EAAM,GAChCwgF,GAAwBxgF,EAAMw9E,GAAWiD,gBACzCtkC,GAASe,eAAel9C,EAAM,GAC9BogF,GAAyBpgF,EAAMw9E,GAAWiD,gBAG1CzgF,EAAKqf,QAAS,GAElB,SAASs9B,GAAmB38C,GACP,EAAbA,EAAKqf,OACLrf,EAAKqf,QAAS,EACdrf,EAAKqf,OAAS,GAGdrf,EAAKqf,QAAS,EAElBi8B,GAAet7C,EAAM,EAA8B,KACnDugF,GAA2BvgF,GAC3Bm8C,GAASc,iBAAiBj9C,EAAM,GAChCwgF,GAAwBxgF,EAAMw9E,GAAWkD,gBACzCJ,GAAkBtgF,EAAM,SAAiC,UAA8B,GACvF,IAAI2gF,EAAWrlC,GAAet7C,EAAM,IAAmC,KACvEurD,GAAgCvrD,EAAM,SAAqC2gF,EAAW,QAAiC,IACvHxkC,GAASe,eAAel9C,EAAM,GAC9BogF,GAAyBpgF,EAAMw9E,GAAWkD,gBAC1CJ,GAAkBtgF,EAAM,UAA+B,UAA8B,GAErFurD,GAAgCvrD,EAAM,UADtC2gF,EAAWrlC,GAAet7C,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAKva,IAAIhB,QACTub,EAAKqf,QAAS,GAElBrf,EAAKqf,QAAS,GACdi8B,GAAet7C,EAAM,IAA0C,MAEnE,SAAS4gF,GAAmB5gF,EAAMmgD,EAAS0gC,EAAUt9C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyBhhF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACjF,OAAwB,UAAhB5gC,EAAQ17D,OACZ,KAAK,EACD,OAjhCZ,SAASw8F,EAA4BjhF,EAAMva,EAAK89C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAChF,IAAIG,EAAUz7F,EAAIo4D,SAAS9hE,OACvBolG,GAAU,EAqBd,OApBID,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAG89C,KACxD49C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGi+C,KACxDy9C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGo+C,KACxDs9C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGu+C,KACxDm9C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAG0+C,KACxDg9C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAG6+C,KACxD68C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGg/C,KACxD08C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGm/C,KACxDu8C,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGq7F,KACxDK,GAAU,GACVD,EAAU,GAAKjD,GAA2Bj+E,EAAMva,EAAK,EAAGs7F,KACxDI,GAAU,GACPA,EA0/BQF,CAA4BjhF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAASK,EAAyBphF,EAAMva,EAAK89C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAC7E,IAAII,GAAU,EACVtjC,EAAWp4D,EAAIo4D,SACfqjC,EAAUrjC,EAAS9hE,OAqBvB,GApBImlG,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAG89C,KACnD49C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGi+C,KACnDy9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGo+C,KACnDs9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGu+C,KACnDm9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAG0+C,KACnDg9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAG6+C,KACnD68C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGg/C,KACnD08C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGm/C,KACnDu8C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGq7F,KACnDK,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGs7F,KACnDI,GAAU,GACVA,EAAS,CACT,IAAIzjG,EAAQ+H,EAAIuJ,KAAKs0C,OACjB49C,EAAU,IACVxjG,GAAS6hG,GAAsBh8C,EAAIsa,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsB77C,EAAIma,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsB17C,EAAIga,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsBv7C,EAAI6Z,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsBp7C,EAAI0Z,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsBj7C,EAAIuZ,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsB96C,EAAIoZ,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsB36C,EAAIiZ,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsBuB,EAAIjjC,EAAS,KAC5CqjC,EAAU,IACVxjG,GAAS6hG,GAAsBwB,EAAIljC,EAAS,KAChD,IAAI0K,EAAgB3M,GAAW57C,EAAMva,EAAI2a,WAAWu+C,WACpD3+C,EAAK0Z,SAASoK,SAASykC,EAAe7qE,GAE1C,OAAOyjG,EA2YQC,CAAyBphF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACvF,KAAK,MACD,OA5qPZ,SAASM,EAA8BrhF,EAAMva,EAAK89C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAClF,IAAI51B,EAAepP,GAAe/7C,EAAMva,EAAI2a,WACxC+C,EAAYgoD,EAAajiD,SACzBi4E,GAAU,EACV91B,OAAU5pE,EACVy/F,EAAUz7F,EAAIo4D,SAAS9hE,OAmD3B,OAlDImlG,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAG89C,KAC1C49C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAG89C,EAAI8nB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGi+C,KAC1Cy9C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGi+C,EAAI2nB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGo+C,KAC1Cs9C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGo+C,EAAIwnB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGu+C,KAC1Cm9C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGu+C,EAAIqnB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAG0+C,KAC1Cg9C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAG0+C,EAAIknB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAG6+C,KAC1C68C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAG6+C,EAAI+mB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGg/C,KAC1C08C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGg/C,EAAI4mB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGm/C,KAC1Cu8C,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGm/C,EAAIymB,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGq7F,KAC1CK,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGq7F,EAAIz1B,IAErD61B,EAAU,GAAK1jC,GAAax9C,EAAMva,EAAK,EAAGs7F,KAC1CI,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK,EAAGs7F,EAAI11B,IAErDA,GACAloD,EAAUilC,YAAYijB,GAET,MAAZ5lE,EAAIhB,OACLk3D,GAA4B37C,EAAM,IAAmCva,EAAI2a,YACzE+C,EAAU3I,WAEE,OAAZ/U,EAAIhB,OACJ0e,EAAUzI,YAEPymF,EAonPQE,CAA8BrhF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAASO,EAAmCthF,EAAMva,EAAK89C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACvF,IAAIljC,EAAWp4D,EAAIo4D,SACfsjC,GAAU,EACVD,EAAUrjC,EAAS9hE,OAqBvB,GApBImlG,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAG89C,KACnD49C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGi+C,KACnDy9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGo+C,KACnDs9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGu+C,KACnDm9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAG0+C,KACnDg9C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAG6+C,KACnD68C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGg/C,KACnD08C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGm/C,KACnDu8C,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGq7F,KACnDK,GAAU,GACVD,EAAU,GAAKvjC,GAAsB39C,EAAMva,EAAK,EAAGs7F,KACnDI,GAAU,GACVA,EAAS,CACT,IAAIzqF,EAAOslD,GAAqBh8C,EAAMva,EAAI2a,WACtC1iB,OAAQ,EACZ,OAAoB,UAAZ+H,EAAIhB,OACR,KAAK,GACD/G,EAAQ,IAAI1C,MAAM6iE,EAAS9hE,QACvBmlG,EAAU,IACVxjG,EAAM,GAAK6lD,GACX29C,EAAU,IACVxjG,EAAM,GAAKgmD,GACXw9C,EAAU,IACVxjG,EAAM,GAAKmmD,GACXq9C,EAAU,IACVxjG,EAAM,GAAKsmD,GACXk9C,EAAU,IACVxjG,EAAM,GAAKymD,GACX+8C,EAAU,IACVxjG,EAAM,GAAK4mD,GACX48C,EAAU,IACVxjG,EAAM,GAAK+mD,GACXy8C,EAAU,IACVxjG,EAAM,GAAKknD,GACXs8C,EAAU,IACVxjG,EAAM,GAAKojG,GACXI,EAAU,IACVxjG,EAAM,GAAKqjG,GACf,MACJ,KAAK,GACDrjG,KACIwjG,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQglD,GAC1B29C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQmlD,GAC1Bw9C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQslD,GAC1Bq9C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQylD,GAC1Bk9C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQ4lD,GAC1B+8C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQ+lD,GAC1B48C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQkmD,GAC1By8C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQqmD,GAC1Bs8C,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQuiG,GAC1BI,EAAU,IACVxjG,EAAMmgE,EAAS,GAAGt/D,MAAQwiG,GAC9B,MACJ,KAAK,IACD,IAAIlnB,EAAOt2B,EACX,OAAQ29C,GACJ,KAAK,EACDxjG,EAAQm8E,EAAKO,UAAU72B,GACvB,MACJ,KAAK,EACD7lD,EAAQm8E,EAAKO,UAAU12B,GACvB,MACJ,KAAK,EACDhmD,EAAQm8E,EAAKO,UAAU12B,EAAIG,GAC3B,MACJ,KAAK,EACDnmD,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,GAC/B,MACJ,KAAK,EACDtmD,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,EAAIG,GACnC,MACJ,KAAK,EACDzmD,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,EAAIG,EAAIG,GACvC,MACJ,KAAK,EACD5mD,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACD/mD,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACDlnD,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,GACnD,MACJ,KAAK,GACDpjG,EAAQm8E,EAAKO,UAAU12B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,IAKvErqF,EAAKhZ,MAAQA,EAEjB,OAAOyjG,EA6hBQG,CAAmCthF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyBhhF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GA+C3F,SAASQ,EAA0BvhF,EAAMmgD,EAAS1gE,GAC9C,OAAwB,UAAhB0gE,EAAQ17D,OACZ,KAAK,EACD,OAxgCZ,SAAS+8F,EAA6BxhF,EAAMva,EAAKhG,GAE7C,IADA,IAAI0hG,GAAU,EACLvlG,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC3BqiG,GAA2Bj+E,EAAMva,EAAK7J,EAAG6D,EAAO7D,MAChDulG,GAAU,GAElB,OAAOA,EAkgCQK,CAA6BxhF,EAAMmgD,EAAS1gE,GACvD,KAAK,EACD,OAzZZ,SAASgiG,EAA0BzhF,EAAMva,EAAKhG,GAG1C,IAFA,IAAIo+D,EAAWp4D,EAAIo4D,SACfsjC,GAAU,EACLvlG,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAG3B+hE,GAAsB39C,EAAMva,EAAK7J,EAAG6D,EAAO7D,MAC3CulG,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIzjG,EAAQ,GACZ,IAAS9B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC/B8B,GAAgB6hG,GAAsB9/F,EAAO7D,GAAIiiE,EAASjiE,IAE9D8B,EAAQ+H,EAAIuJ,KAAKs0C,OAAS5lD,EAC1B,IAAI6qE,EAAgB3M,GAAW57C,EAAMva,EAAI2a,WAAWu+C,WACpD3+C,EAAK0Z,SAASoK,SAASykC,EAAe7qE,GAE1C,OAAOyjG,EAsYQM,CAA0BzhF,EAAMmgD,EAAS1gE,GACpD,KAAK,MACD,OAloPZ,SAASiiG,EAA+B1hF,EAAMva,EAAKhG,GAK/C,IAJA,IAAI0rE,EAAepP,GAAe/7C,EAAMva,EAAI2a,WACxC+C,EAAYgoD,EAAajiD,SACzBi4E,GAAU,EACV91B,OAAU5pE,EACL7F,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC3B4hE,GAAax9C,EAAMva,EAAK7J,EAAG6D,EAAO7D,MAClCulG,GAAU,EACV91B,EAAUD,GAAWprD,EAAMmrD,EAAc1lE,EAAK7J,EAAG6D,EAAO7D,GAAIyvE,IAapE,OAVIA,GACAloD,EAAUilC,YAAYijB,GAET,MAAZ5lE,EAAIhB,OACLk3D,GAA4B37C,EAAM,IAAmCva,EAAI2a,YACzE+C,EAAU3I,WAEE,OAAZ/U,EAAIhB,OACJ0e,EAAUzI,YAEPymF,EA6mPQO,CAA+B1hF,EAAMmgD,EAAS1gE,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAASkiG,EAAoC3hF,EAAMva,EAAKhG,GAGpD,IAFA,IAAIo+D,EAAWp4D,EAAIo4D,SACfsjC,GAAU,EACLvlG,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAG3B+hE,GAAsB39C,EAAMva,EAAK7J,EAAG6D,EAAO7D,MAC3CulG,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIzqF,EAAOslD,GAAqBh8C,EAAMva,EAAI2a,WACtC1iB,OAAQ,EACZ,OAAoB,UAAZ+H,EAAIhB,OACR,KAAK,GACD/G,EAAQ+B,EACR,MACJ,KAAK,GAED,IADA/B,KACS9B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC/B8B,EAAMmgE,EAASjiE,GAAG2C,MAAQkB,EAAO7D,GAErC,MACJ,KAAK,IACD,IAAIi+E,EAAOp6E,EAAO,GACd+Q,EAAS/Q,EAAOsN,MAAM,GAC1BrP,EAAQm8E,EAAKO,UAAUn+E,MAAM49E,EAAM57E,EAASuS,IAGpDkG,EAAKhZ,MAAQA,EAEjB,OAAOyjG;;;;;;;OA4gBQQ,CAAoC3hF,EAAMmgD,EAAS1gE,GAC9D,QACI,KAAM,eAzDH8hG,CAA0BvhF,EAAMmgD,EAAS5c,GAGxD,SAASg9C,GAA2BvgF,GAChC,IAAIva,EAAMua,EAAKva,IACf,GAAsB,EAAhBA,EAAIogE,UAGV,IAAK,IAAIjqE,EAAI,EAAGA,EAAI6J,EAAIo2D,MAAM9/D,OAAQH,IAAK,CACvC,IAAIukE,EAAU16D,EAAIo2D,MAAMjgE,GACxB,GAAoB,EAAhBukE,EAAQ17D,MAAmC,CAC3C,IAAIihE,EAAiB5J,GAAc97C,EAAMpkB,GAAGsc,SAASytD,gBACrD,GAAID,EACA,IAAK,IAAI3rB,EAAM,EAAGA,EAAM2rB,EAAe3pE,OAAQg+C,IAAO,CAClD,IAAI2H,EAAgBgkB,EAAe3rB,GACnC2H,EAAcriB,OAAS,GACvB4+B,GAAsCvc,EAAe1hC,SAIH,IAA/B,EAArBmgD,EAAQ2F,cAIdlqE,GAAKukE,EAAQE,aAoCzB,SAASuhC,GAAmB5hF,EAAMmgD,EAAS0gC,EAAUt9C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASgB,EAAyB7hF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACjF,IAAIG,EAAU/gC,EAAQtC,SAAS9hE,OAC3BmlG,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAG5c,GACxC29C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAGzc,GACxCw9C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAGtc,GACxCq9C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAGnc,GACxCk9C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAGhc,GACxC+8C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAG7b,GACxC48C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAG1b,GACxCy8C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAGvb,GACxCs8C,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAG2gC,GACxCI,EAAU,GACVtjC,GAAsB59C,EAAMmgD,EAAS,EAAG4gC,GA7BxCc,CAAyB7hF,EAAMmgD,EAAS5c,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GA+BpF,SAASe,EAA0B9hF,EAAMmgD,EAAS1gE,GAC9C,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC/BgiE,GAAsB59C,EAAMmgD,EAASvkE,EAAG6D,EAAO7D,IA9B/CkmG,CAA0B9hF,EAAMmgD,EAAS5c,IAGtC,EAkCX,SAASw+C,GAAoB/hF,EAAMmgD,GAE/B,GADgBlE,GAAYj8C,EAAMmgD,EAAQ//C,WAC5BmiB,MACV,MAAMw4B,GAA4CoB,GAASY,mBAAmB/8C,EAAMmgD,EAAQ//C,WAAY,SAAW+/C,EAAQ8J,MAAMp5D,GAAK,aAAc,SAAWsvD,EAAQ8J,MAAMp5D,GAAK,SAAsD,IAA9B,EAAbmP,EAAKqf,QAG1M,SAASw9B,GAAY78C,GACjB,KAAiB,IAAbA,EAAKqf,OAAT,CAMA,GAHAmhE,GAAwBxgF,EAAMw9E,GAAWwE,SACzC5B,GAAyBpgF,EAAMw9E,GAAWwE,SAC1Cz2B,GAAgCvrD,EAAM,QAClCA,EAAKumD,YACL,IAAK,IAAI3qE,EAAI,EAAGA,EAAIokB,EAAKumD,YAAYxqE,OAAQH,IACzCokB,EAAKumD,YAAY3qE,MAv5Q7B,SAASqmG,EAAoBjiF,GACzB,GAAmB,GAAbA,EAAKqf,MAAX,CAGA,IAAIomC,EAAiBnH,GAAsBt+C,GAC3C,GAAIylD,EAAgB,CAChB,IAAIC,EAAiBD,EAAevtD,SAASytD,gBACzCD,IACA7C,GAAgB6C,EAAgBA,EAAe9iE,QAAQod,IACvDm8C,GAASgB,mBAAmBn9C,MAi5QpCiiF,CAAoBjiF,GAChBA,EAAK0Z,SAAS6B,aAQtB,SAAS2mE,EAAiBliF,GAEtB,IADA,IAAIzL,EAAMyL,EAAKva,IAAIo2D,MAAM9/D,OAChBH,EAAI,EAAGA,EAAI2Y,EAAK3Y,IAAK,CAC1B,IAAI6J,EAAMua,EAAKva,IAAIo2D,MAAMjgE,GACT,EAAZ6J,EAAIhB,MACJub,EAAK0Z,SAAS6B,YAAYugC,GAAc97C,EAAMpkB,GAAG8iE,eAEhC,EAAZj5D,EAAIhB,MACTub,EAAK0Z,SAAS6B,YAAYqgC,GAAW57C,EAAMpkB,GAAG+iE,aAE7B,SAAZl5D,EAAIhB,OAAuD,UAAZgB,EAAIhB,QACxDw3D,GAAYj8C,EAAMpkB,GAAGwhC,WAlBzB8kE,CAAiBliF,GAEjB6+C,GAAgB7+C,IAChBA,EAAK0Z,SAAS0D,UAElBpd,EAAKqf,OAAS,KA0BlB,SAAS+gE,GAAyBpgF,EAAMwa,GACpC,IAAI/0B,EAAMua,EAAKva,IACf,GAAsB,SAAhBA,EAAIogE,UAGV,IAAK,IAAIjqE,EAAI,EAAGA,EAAI6J,EAAIo2D,MAAM9/D,OAAQH,IAAK,CACvC,IAAIukE,EAAU16D,EAAIo2D,MAAMjgE,GACJ,SAAhBukE,EAAQ17D,MAER09F,GAAermC,GAAc97C,EAAMpkB,GAAGo/B,cAAeR,GAEQ,IAAlC,SAArB2lC,EAAQ2F,cAIdlqE,GAAKukE,EAAQE,aAIzB,SAASmgC,GAAwBxgF,EAAMwa,GACnC,IAAI/0B,EAAMua,EAAKva,IACf,GAAsB,SAAhBA,EAAIogE,UAGV,IAAK,IAAIjqE,EAAI,EAAGA,EAAI6J,EAAIo2D,MAAM9/D,OAAQH,IAAK,CACvC,IAAIukE,EAAU16D,EAAIo2D,MAAMjgE,GACxB,GAAoB,SAAhBukE,EAAQ17D,MAGR,IADA,IAAIs8D,EAAgBjF,GAAc97C,EAAMpkB,GAAGolE,cAAcC,eAChDnxD,EAAI,EAAGA,EAAIixD,EAAchlE,OAAQ+T,IACtCqyF,GAAephC,EAAcjxD,GAAI0qB,QAGwB,IAAlC,SAArB2lC,EAAQ2F,cAIdlqE,GAAKukE,EAAQE,aAIzB,SAAS8hC,GAAeniF,EAAMwa,GAC1B,IAAI4nE,EAAYpiF,EAAKqf,MACrB,OAAQ7E,GACJ,KAAKgjE,GAAWiD,eAC8B,IAAzB,IAAZ2B,KAC+C,KAA/B,GAAZA,GACDxlC,GAAmB58C,GAEF,GAAZoiF,GACLC,GAAyBriF,EAAMw9E,GAAW8E,+BAGlD,MACJ,KAAK9E,GAAW8E,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACAxlC,GAAmB58C,GAEF,GAAZoiF,GACLC,GAAyBriF,EAAMwa,IAGvC,MACJ,KAAKgjE,GAAWkD,eAC8B,IAAzB,IAAZ0B,KAC+C,KAA/B,GAAZA,GACDzlC,GAAmB38C,GAEF,GAAZoiF,GACLC,GAAyBriF,EAAMw9E,GAAW+E,+BAGlD,MACJ,KAAK/E,GAAW+E,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACAzlC,GAAmB38C,GAEF,GAAZoiF,GACLC,GAAyBriF,EAAMwa,IAGvC,MACJ,KAAKgjE,GAAWwE,QAGZnlC,GAAY78C,GACZ,MACJ,KAAKw9E,GAAW6C,gBACZP,GAAgB9/E,IAI5B,SAASqiF,GAAyBriF,EAAMwa,GACpCgmE,GAAwBxgF,EAAMwa,GAC9B4lE,GAAyBpgF,EAAMwa,GAEnC,SAAS8lE,GAAkBtgF,EAAMwiF,EAAYC,EAAwBC,GACjE,GAAM1iF,EAAKva,IAAIogE,UAAY28B,GAAiBxiF,EAAKva,IAAIogE,UAAY48B,EAIjE,IADA,IAAI/C,EAAY1/E,EAAKva,IAAIo2D,MAAM9/D,OACtBH,EAAI,EAAGA,EAAI8jG,EAAW9jG,IAAK,CAChC,IAAIukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,GAC7B,GAAKukE,EAAQ17D,MAAQ+9F,GAAgBriC,EAAQ17D,MAAQg+F,EAEjD,OADAtmC,GAASC,eAAep8C,EAAMmgD,EAAQ//C,WAC9BsiF,GACJ,KAAK,EACDjE,GAAoBz+E,EAAMmgD,GAC1B,MACJ,KAAK,EACD4hC,GAAoB/hF,EAAMmgD,GAIhCA,EAAQ2F,WAAa08B,GAAiBriC,EAAQ2F,WAAa28B,IAG7D7mG,GAAKukE,EAAQE;;;;;;;QA/HzB,SAAWm9B,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,QAoIlB,IAAIvS,IAAc,EAClB,SAAS0X,KACL,IAAI1X,GAAJ,CAGAA,IAAc,EACd,IAAI2X,EAAW32E,KA0CnB,SAAS42E,IACL,OACIzmC,eAAgB0mC,GAChBzmC,eAAgB0mC,GAChBpxC,mBAAoBqxC,GACpB1mC,oBAAqB2mC,GACrB1mC,kBAAmB2mC,GACnB1mC,iBAAkB2mC,GAClB1mC,sBAAuB2mC,GACvB1mC,eAAgB2mC,GAChB1mC,mBAAoB2mC,GACpB1mC,mBAAoB2mC,GACpB1mC,YAAa2mC,GACbzmC,mBAAoB,SAAU/8C,EAAMI,GAAa,OAAO,IAAIqjF,GAAczjF,EAAMI,IAChF48C,YAAa0mC,GACbzmC,iBAAkB0mC,GAClBzmC,eAAgB0mC,IA1DSf,GAmBjC,SAASgB,IACL,OACIznC,eAAgB,aAChBC,eAAgBynC,GAChBnyC,mBAAoBA,GACpB2K,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBY,GAClBX,sBAAuBW,GACvBV,eAAgBU,GAChBT,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAU/8C,EAAMI,GAAa,OAAO,IAAIqjF,GAAczjF,EAAMI,IAChF48C,YAAa,SAAUh9C,EAAMI,EAAW40B,EAAWopB,GAC/C,OAAOp+C,EAAKva,IAAIu3D,YAAYh9C,EAAMI,EAAW40B,EAAWopB,IAE5DnB,iBAAkB,SAAUj9C,EAAM0iF,GAAa,OAAO1iF,EAAKva,IAAIw3D,iBAA+B,IAAdylC,EAAuCqB,GACnHC,GAAwBhkF,IAC5Bk9C,eAAgB,SAAUl9C,EAAM0iF,GAAa,OAAO1iF,EAAKva,IAAIy3D,eAA6B,IAAdwlC,EAAuCqB,GAC/GC,GAAwBhkF,KAvCqB6jF,GACrD1nC,GAASC,eAAiBwmC,EAASxmC,eACnCD,GAASE,eAAiBumC,EAASvmC,eACnCF,GAASxK,mBAAqBixC,EAASjxC,mBACvCwK,GAASG,oBAAsBsmC,EAAStmC,oBACxCH,GAASI,kBAAoBqmC,EAASrmC,kBACtCJ,GAASK,iBAAmBomC,EAASpmC,iBACrCL,GAASM,sBAAwBmmC,EAASnmC,sBAC1CN,GAASO,eAAiBkmC,EAASlmC,eACnCP,GAASQ,mBAAqBimC,EAASjmC,mBACvCR,GAASS,mBAAqBgmC,EAAShmC,mBACvCT,GAASU,YAAc+lC,EAAS/lC,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqB6lC,EAAS7lC,mBACvCZ,GAASa,YAAc4lC,EAAS5lC,YAChCb,GAASc,iBAAmB2lC,EAAS3lC,iBACrCd,GAASe,eAAiB0lC,EAAS1lC,eACnCf,GAASgB,mBAAqBA,IA4ClC,SAAS2mC,GAAmBG,EAAY70C,EAAkBC,EAAoB5pD,EAAKkmD,EAAUv8C,GAEzF,OAAOitD,GAAe6nC,GAAeD,EAAYt4C,EAD3BA,EAASxnD,SAASS,IAAImuD,IACgC3D,EAAkBC,GAAqB5pD,EAAK2J,GAE5H,SAAS2zF,GAAoBkB,EAAY70C,EAAkBC,EAAoB5pD,EAAKkmD,EAAUv8C,GAC1F,IAAIugC,EAAkBgc,EAASxnD,SAASS,IAAImuD,IACxCsL,EAAO6lC,GAAeD,EAAYt4C,EAAU,IAAIw4C,GAAsBx0D,GAAkByf,EAAkBC,GAC1G+0C,EAAkBC,GAA6B5+F,GACnD,OAAO6+F,GAAqBC,GAAYhpG,OAAQ8gE,GAAgB,MAAOgC,EAAM+lC,EAAiBh1F,IAElG,SAAS80F,GAAeD,EAAYt4C,EAAUhc,EAAiByf,EAAkBC,GAC7E,IAAIx8B,EAAY84B,EAASxnD,SAASS,IAAIuuB,IAClCkyB,EAAesG,EAASxnD,SAASS,IAAIumB,IAEzC,OACIwgC,SAAUA,EACVxnD,SAAU8/F,EAAY70C,iBAAkBA,EACxC0X,eAAgBzX,EAAoBx8B,UAAWA,EAAW8c,gBAAiBA,EAAiBjW,SAJjFiW,EAAgB/V,eAAe,KAAM,MAIgEyrB,aAAcA,GAGtI,SAAS29C,GAAwB/8E,EAAYu+E,EAAWC,EAAYr1F,GAChE,IAAIg1F,EAAkBC,GAA6BI,GACnD,OAAOH,GAAqBC,GAAYhpG,OAAQo2D,GAAoB,MAAO1rC,EAAYu+E,EAAWJ,EAAiBh1F,IAEvH,SAAS6zF,GAAyBh9E,EAAYk6C,EAASskC,EAAY5qE,GAQ/D,OALI4qE,EAFwBC,GAAiB9/F,IAAIu7D,EAAQpnD,QAAQirD,kBAAkB94D,SAASxK,QAK3E2jG,GAA6BI,GAEvCH,GAAqBC,GAAYhpG,OAAQ+gE,GAAqB,MAAOr2C,EAAYk6C,EAASskC,EAAY5qE,IAEjH,SAASqpE,GAAuBz6B,EAAYvD,EAAgBwD,EAAqBjjE,GAE7E,OAAO82D,GAAkBkM,EAAYvD,EAAgBwD,EAkFzD,SAASi8B,EAAiCl/F,GACtC,IAAI1G,EASJ,SAAS6lG,EAAiBn/F,GACtB,IAAIo/F,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkBxzF,MACTszF,aAAcA,EAAcC,uBAAwBA,IAEjEr/F,EAAI7D,UAAUoG,QAAQ,SAAUiqB,GAC5B,IAAI+yE,EAAWD,GAAkBngG,IAAIqtB,EAAKvxB,OACxB,KAAbuxB,EAAKxtB,OAA8CugG,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,sBAGpEx/F,EAAI48D,QAAQr6D,QAAQ,SAAUhO,GAC1BkrG,GAA2Bl9F,QAAQ,SAAUg9F,EAAUtkG,GAC/CoB,EAAiBpB,GAAOc,aAAexH,IACvC6qG,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,yBAI/DJ,aAAcA,EAAcC,uBAAwBA,IA9BxDF,CAAiBn/F,GAAsCq/F,EAAyB/lG,EAAG+lG,uBAC5F,OAD+C/lG,EAAG8lG,cAgClD,SAASM,EAAuB1/F,GAC5B,IAAK,IAAI7J,EAAI,EAAGA,EAAI6J,EAAI7D,UAAU7F,OAAQH,IAAK,CAC3C,IAAIsP,EAAWzF,EAAI7D,UAAUhG,GACzBkpG,IAIA55F,EAASzG,OAAS,MAEtB,IAAIugG,EAAWD,GAAkBngG,IAAIsG,EAASxK,OAC1CskG,IACA95F,EAASzG,OAA0B,KAAjByG,EAASzG,MAA8CugG,EAASvgG,MAClFyG,EAASzB,KAAO81D,GAAaylC,EAASv7F,MACtCyB,EAASxN,MAAQsnG,EAAStnG,OAGlC,GAAIwnG,GAA2B3zF,KAAO,EAAG,CACrC,IAAI6zF,EAAc,IAAIttF,IAAIrS,EAAI48D,SAC9B6iC,GAA2Bl9F,QAAQ,SAAUg9F,EAAUtkG,GACnD,GAAI0kG,EAAY/zF,IAAIvP,EAAiBpB,GAAOc,YAAa,CACrD,IAAI0J,GACAxK,MAAOA,EACP+D,MAAOugG,EAASvgG,OAASqgG,EAAyB,KAA0B,GAC5Er7F,KAAM81D,GAAaylC,EAASv7F,MAC5B/L,MAAOsnG,EAAStnG,MAChBsC,MAAOyF,EAAI7D,UAAU7F,QAEzB0J,EAAI7D,UAAU7D,KAAKmN,GACnBzF,EAAIs8D,eAAezE,GAAS58D,IAAUwK,MArDtDi6F,CADA1/F,EAAMA,EAAI3L,QAAQ,WAAc,OAAOsjE,MAEhC33D,GANIA,EAtFWk/F,CAAiCl/F,IAG3D,IA0KI8+F,GAQAc,GACAC,GACAC,GApLAR,GAAoB,IAAIv3F,IACxB03F,GAA6B,IAAI13F,IACjCk3F,GAAmB,IAAIl3F,IAC3B,SAAS21F,GAAsB6B,GAE3B,IAAIjgG,EADJggG,GAAkBt3F,IAAIu3F,EAAStkG,MAAOskG,GAER,mBAAnBA,EAAStkG,QAAyBqE,EAAgBjD,EAAiBkjG,EAAStkG,SAC/C,mBAA7BqE,EAAcvD,YACrB0jG,GAA2Bz3F,IAAIu3F,EAAStkG,MAAOskG,GAGvD,SAAS5B,GAA2BoC,EAAMC,GACtC,IACItF,EAAcrgC,GADAA,GAAkBuD,GAAkCoiC,IACtB5pC,MAAM,GAAG9iD,QAAQiiB,eACjE0pE,GAAiBj3F,IAAI+3F,EAAMrF,GAE/B,SAASkD,KACL0B,GAAkB1sF,QAClB6sF,GAA2B7sF,QAC3BqsF,GAAiBrsF,QAQrB,SAASgsF,GAA6B5+F,GAClC,GAA+B,IAA3Bs/F,GAAkBxzF,KAClB,OAAO9L,EAEX,IAAIigG,EAWJ,SAASC,EAA2ClgG,GAGhD,IAFA,IAAImgG,KACAC,EAAiB,KACZjqG,EAAI,EAAGA,EAAI6J,EAAIo2D,MAAM9/D,OAAQH,IAAK,CACvC,IAAIukE,EAAU16D,EAAIo2D,MAAMjgE,GACJ,EAAhBukE,EAAQ17D,QACRohG,EAAiB1lC,GAEjB0lC,GAAkC,KAAhB1lC,EAAQ17D,OAC1BsgG,GAAkB1zF,IAAI8uD,EAAQj1D,SAASxK,SACvCklG,EAAkC7nG,KAAK8nG,EAAezlF,WACtDylF,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2ClgG,GACxF,GAAsD,IAAlDigG,EAAuC3pG,OACvC,OAAO0J,EAIXA,EAAMA,EAAI3L,QAAQ,WAAc,OAAOsjE,KACvC,IAAK,IAAIxhE,EAAI,EAAGA,EAAI8pG,EAAuC3pG,OAAQH,IAC/DkqG,EAAgCrgG,EAAKigG,EAAuC9pG,IAEhF,OAAO6J,EAiBP,SAASqgG,EAAgCrB,EAAYsB,GACjD,IAAK,IAAInqG,EAAImqG,EAAU,EAAGnqG,EAAI6oG,EAAW5oC,MAAM9/D,OAAQH,IAAK,CACxD,IAAIukE,EAAUskC,EAAW5oC,MAAMjgE,GAC/B,GAAoB,EAAhBukE,EAAQ17D,MAER,OAEJ,GAAoB,KAAhB07D,EAAQ17D,MAA2C,CACnD,IAAIyG,EAAWi1D,EAAQj1D,SACnB85F,EAAWD,GAAkBngG,IAAIsG,EAASxK,OAC1CskG,IACA7kC,EAAQ17D,OAAyB,KAAhB07D,EAAQ17D,MAA8CugG,EAASvgG,MAChFyG,EAASzB,KAAO81D,GAAaylC,EAASv7F,MACtCyB,EAASxN,MAAQsnG,EAAStnG,UA4E9C,SAASqmG,GAAuB/jF,EAAM4pD,EAAYi3B,EAAUt9C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAC5F,IAAI5gC,EAAUngD,EAAKva,IAAIo2D,MAAM+N,GAE7B,OADAg3B,GAAmB5gF,EAAMmgD,EAAS0gC,EAAUt9C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACxD,IAAhB5gC,EAAQ17D,MACZu3D,GAAqBh8C,EAAM4pD,GAAYlsE,WACvC+D,EAER,SAASuiG,GAAuBhkF,EAAM4pD,EAAYi3B,EAAUt9C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GAC5F,IAAI5gC,EAAUngD,EAAKva,IAAIo2D,MAAM+N,GAE7B,OADAg4B,GAAmB5hF,EAAMmgD,EAAS0gC,EAAUt9C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIk8C,EAAIC,GACxD,IAAhB5gC,EAAQ17D,MACZu3D,GAAqBh8C,EAAM4pD,GAAYlsE,WACvC+D,EAER,SAAS6hG,GAAwBtjF,GAC7B,OAAOskF,GAAqBC,GAAYl0C,cAAesM,GAAoB,MAAO38C,IAEtF,SAASujF,GAAwBvjF,GAC7B,OAAOskF,GAAqBC,GAAYj0C,eAAgBsM,GAAoB,MAAO58C,IAEvF,SAASwjF,GAAiBxjF,GACtB,OAAOskF,GAAqBC,GAAYnnE,QAASy/B,GAAa,MAAO78C,IAazE,SAAS8iF,GAAoB9iF,EAAMI,GAC/BklF,GAAetlF,EACfulF,GAAoBnlF,EAExB,SAASsjF,GAAiB1jF,EAAMI,EAAW40B,EAAWopB,GAElD,OADA0kC,GAAoB9iF,EAAMI,GACnBkkF,GAAqBC,GAAYvnC,YAAah9C,EAAKva,IAAIu3D,YAAa,MAAOh9C,EAAMI,EAAW40B,EAAWopB,IAElH,SAASulC,GAAsB3jF,EAAM0iF,GACjC,GAAiB,IAAb1iF,EAAKqf,MACL,MAAMg8B,GAAmBkpC,GAAYc,KAGzC,OADAvC,GAAoB9iF,EAAMgmF,GAAyBhmF,EAAM,IAClDA,EAAKva,IAAIw3D,iBAChB,SAASgpC,EAAuBjmF,EAAMI,EAAWygF,GAE7C,IADA,IAAIphG,KACKR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAE/B,IAAIkhE,EAAUngD,EAAKva,IAAIo2D,MAAMz7C,GAU7B,OATkB,IAAdsiF,EACAwD,GAAwBlmF,EAAMmgD,EAAS0gC,EAAUphG,GAGjD0mG,GAAwBnmF,EAAMmgD,EAAS0gC,EAAUphG,GAEjC,MAAhB0gE,EAAQ17D,OACRq+F,GAAoB9iF,EAAMgmF,GAAyBhmF,EAAMI,IAErC,IAAhB+/C,EAAQ17D,MACZu3D,GAAqBh8C,EAAMmgD,EAAQ//C,WAAW1iB,WAC9C+D,GAlBiDue,GAqB7D,SAAS4jF,GAAoB5jF,EAAM0iF,GAC/B,GAAiB,IAAb1iF,EAAKqf,MACL,MAAMg8B,GAAmBkpC,GAAYc,KAGzC,OADAvC,GAAoB9iF,EAAMomF,GAA0BpmF,EAAM,IACnDA,EAAKva,IAAIy3D,eAChB,SAASmpC,EAAuBrmF,EAAMI,EAAWygF,GAE7C,IADA,IAAIphG,KACKR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAE/B,IAAIkhE,EAAUngD,EAAKva,IAAIo2D,MAAMz7C,GAU7B,OATkB,IAAdsiF,EACAwD,GAAwBlmF,EAAMmgD,EAAS0gC,EAAUphG,GAGjD0mG,GAAwBnmF,EAAMmgD,EAAS0gC,EAAUphG,GAEjC,EAAhB0gE,EAAQ17D,OACRq+F,GAAoB9iF,EAAMomF,GAA0BpmF,EAAMI,IAEtC,IAAhB+/C,EAAQ17D,MACZu3D,GAAqBh8C,EAAMmgD,EAAQ//C,WAAW1iB,WAC9C+D,GAlB+Cue,GAqB3D,SAASkmF,GAAwBlmF,EAAMmgD,EAAS0gC,EAAUyF,GAEtD,GADc1F,GAAmB3kG,WAAM,EAAQgC,GAAU+hB,EAAMmgD,EAAS0gC,GAAWyF,IACtE,CACT,IAAI7mG,EAAsB,IAAbohG,EAA+ByF,EAAY,GAAKA,EAC7D,GAAoB,MAAhBnmC,EAAQ17D,MAAmC,CAE3C,IADA,IAAI8hG,KACK3qG,EAAI,EAAGA,EAAIukE,EAAQtC,SAAS9hE,OAAQH,IAAK,CAC9C,IAAIszE,EAAU/O,EAAQtC,SAASjiE,GAC3B8B,EAAQ+B,EAAO7D,GACC,EAAhBszE,EAAQzqE,QACR8hG,GA9rmBehoG,EA8rmByB2wE,EAAQ5D,gBA3rmBzD,cAGX,SAASk7B,EAAoB3gE,GACzB,OAAOA,EAAMt2B,QAAQ8lB,GAAmB,WAEpC,IADA,IAAI/3B,KACK2B,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpC3B,EAAE2B,GAAMnD,UAAUmD,GAEtB,MAAO,IAAM3B,EAAE,GAAGu0B,gBAVf20E,CAAoBjoG,EAAKgR,QAAQ,QAAS,QA6rmB7B+lB,GAA2B53B,IAGvC,IAAI+mE,EAAQtE,EAAQ3zD,OAChBwhB,EAAK8tC,GAAc97C,EAAMykD,EAAMrkD,WAAWs+C,cAC9C,GAAK+F,EAAM1rD,QAAQxa,KAMf,IAAK,IAAI6iC,KAAQmlE,EAEA,OADT7oG,EAAQ6oG,EAAcnlE,IAEtBphB,EAAK0Z,SAAS+a,aAAazmB,EAAIoT,EAAM1jC,GAGrCsiB,EAAK0Z,SAAStL,gBAAgBJ,EAAIoT,QAV1CphB,EAAK0Z,SAASoK,SAAS9V,EAAI,YAAc1e,KAAKjN,UAAUkkG,EAAe,KAAM,KAtsmB7F,IAAmChoG,EAutmBnC,SAAS4nG,GAAwBnmF,EAAMmgD,EAAS0gC,EAAUphG,GACtDmiG,GAAmB3lG,WAAM,EAAQgC,GAAU+hB,EAAMmgD,EAAS0gC,GAAWphG,IAEzE,SAASumG,GAAyBhmF,EAAMI,GACpC,IAAK,IAAIxkB,EAAIwkB,EAAWxkB,EAAIokB,EAAKva,IAAIo2D,MAAM9/D,OAAQH,IAAK,CACpD,IAAIukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,GAC7B,GAAoB,MAAhBukE,EAAQ17D,OAAqC07D,EAAQtC,UAAYsC,EAAQtC,SAAS9hE,OAClF,OAAOH,EAGf,OAAO,KAEX,SAASwqG,GAA0BpmF,EAAMI,GACrC,IAAK,IAAIxkB,EAAIwkB,EAAWxkB,EAAIokB,EAAKva,IAAIo2D,MAAM9/D,OAAQH,IAAK,CACpD,IAAIukE,EAAUngD,EAAKva,IAAIo2D,MAAMjgE,GAC7B,GAAqB,EAAhBukE,EAAQ17D,OAAkC07D,EAAQtC,UAAYsC,EAAQtC,SAAS9hE,OAChF,OAAOH,EAGf,OAAO,MA5HX,SAAW2oG,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,QAwHnB,IAAId,GAA+B,WAC/B,SAASA,EAAczjF,EAAMI,GACzB3lB,KAAKulB,KAAOA,EACZvlB,KAAK2lB,UAAYA,EACA,MAAbA,IACA3lB,KAAK2lB,UAAYA,EAAY,GAEjC3lB,KAAK0lE,QAAUngD,EAAKva,IAAIo2D,MAAMz7C,GAG9B,IAFA,IAAIqkD,EAAQhqE,KAAK0lE,QACbsmC,EAASzmF,EACNykD,GAAiD,IAAzB,EAAdA,EAAMhgE,QACnBggE,EAAQA,EAAMj4D,OAElB,IAAKi4D,EACD,MAAQA,GAASgiC,GACbhiC,EAAQjG,GAAaioC,GACrBA,EAASA,EAAOj6F,OAGxB/R,KAAKgqE,MAAQA,EACbhqE,KAAKgsG,OAASA,EA+GlB,OA7GA5rG,OAAO+B,eAAe6mG,EAAcnoG,UAAW,gBAC3CsJ,IAAK,WAED,OAAOk3D,GAAcrhE,KAAKgsG,OAAQhsG,KAAKgqE,MAAMrkD,WAAW4a,eAAiBvgC,KAAKulB,MAElF/O,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,YAC3CsJ,IAAK,WAAc,OAAO8hE,GAAiBjsE,KAAKgsG,OAAQhsG,KAAKgqE,QAC7DxzD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,aAC3CsJ,IAAK,WAAc,OAAOnK,KAAKisG,aAAa1uF,WAC5C/G,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,WAC3CsJ,IAAK,WAAc,OAAOnK,KAAKisG,aAAat3F,SAC5C6B,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,kBAC3CsJ,IAAK,WACD,IAAI+J,KACJ,GAAIlU,KAAKgqE,MACL,IAAK,IAAI7oE,EAAInB,KAAKgqE,MAAMrkD,UAAY,EAAGxkB,GAAKnB,KAAKgqE,MAAMrkD,UAAY3lB,KAAKgqE,MAAMpE,WAAYzkE,IAAK,CAC3F,IAAI+qG,EAAWlsG,KAAKgsG,OAAOhhG,IAAIo2D,MAAMjgE,GAChB,MAAjB+qG,EAASliG,OACTkK,EAAO5Q,KAAK4oG,EAASz7F,SAASxK,OAElC9E,GAAK+qG,EAAStmC,WAGtB,OAAO1xD,GAEXsC,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,cAC3CsJ,IAAK,WACD,IAAIy6D,KACJ,GAAI5kE,KAAKgqE,MAAO,CACZmiC,GAAkBnsG,KAAKgsG,OAAQhsG,KAAKgqE,MAAOpF,GAC3C,IAAK,IAAIzjE,EAAInB,KAAKgqE,MAAMrkD,UAAY,EAAGxkB,GAAKnB,KAAKgqE,MAAMrkD,UAAY3lB,KAAKgqE,MAAMpE,WAAYzkE,IAAK,CAC3F,IAAI+qG,EAAWlsG,KAAKgsG,OAAOhhG,IAAIo2D,MAAMjgE,GAChB,MAAjB+qG,EAASliG,OACTmiG,GAAkBnsG,KAAKgsG,OAAQE,EAAUtnC,GAE7CzjE,GAAK+qG,EAAStmC,YAGtB,OAAOhB,GAEXpuD,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,0BAC3CsJ,IAAK,WACD,IAAI8/D,EA6DhB,SAASmiC,EAAgB7mF,GACrB,KAAOA,IAAS6+C,GAAgB7+C,IAC5BA,EAAOA,EAAKxT,OAEhB,OAAIwT,EAAKxT,OACEsvD,GAAc97C,EAAKxT,OAAQgyD,GAAax+C,GAAMI,WAElD,KApEcymF,CAAgBpsG,KAAKisG,cAClC,OAAOhiC,EAASA,EAAOhG,mBAAgBj9D,GAE3CwP,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe6mG,EAAcnoG,UAAW,cAC3CsJ,IAAK,WACD,OAA4B,EAArBnK,KAAK0lE,QAAQ17D,MAA2Bg6D,GAAWhkE,KAAKulB,KAAMvlB,KAAK0lE,SACtE1B,GAAWhkE,KAAKgsG,OAAQhsG,KAAKgqE,QAErCxzD,YAAY,EACZC,cAAc,IAElBuyF,EAAcnoG,UAAU8/D,SAAW,SAAUlwC,GAEzC,IADA,IAII47E,EACAC,EALAtnG,KACKR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAIN,EAArBxE,KAAK0lE,QAAQ17D,OACbqiG,EAAarsG,KAAKulB,KAAKva,IACvBshG,EAAetsG,KAAK0lE,QAAQ//C,YAG5B0mF,EAAarsG,KAAKgsG,OAAOhhG,IACzBshG,EAAetsG,KAAKgqE,MAAMrkD,WAI9B,IAAI4mF,EAoBZ,SAASC,EAAmBxC,EAAYrkF,GAEpC,IADA,IAAI4mF,GAAmB,EACdprG,EAAI,EAAGA,GAAKwkB,EAAWxkB,IAER,EADN6oG,EAAW5oC,MAAMjgE,GACnB6I,OACRuiG,IAGR,OAAOA,EA5BmBC,CAAmBH,EAAYC,GACjDG,GAAuB,EAW3BJ,EAAWhtG,QAVM,WACb,IAAIiF,EAEJ,QADAmoG,IAC4BF,GAChBjoG,EAAKmsB,EAAQltB,OAAOmB,KAAKlD,MAAM8C,EAAId,GAAUitB,GAAUzrB,IAGxD29D,KAIX8pC,EAAsBF,IACtB97E,EAAQltB,MAAM,qEACdktB,EAAQltB,MAAM/B,MAAMivB,EAASjtB,EAASwB,MAGvCgkG,EAnIuB,GAwJlC,SAASmD,GAAkB5mF,EAAMmgD,EAASd,GACtC,IAAK,IAAI8nC,KAAWhnC,EAAQd,WACxBA,EAAW8nC,GAAWlI,GAAcj/E,EAAMmgD,EAASA,EAAQd,WAAW8nC,IAG9E,SAAS7C,GAAqB9pE,EAAQt3B,EAAI9I,EAAM4E,GAC5C,IAAIooG,EAAY/B,GACZngF,EAAUogF,GACV+B,EAAe9B,GACnB,IACIF,GAAiB7qE,EACjB,IAAIh0B,EAAStD,EAAGjH,MAAM7B,EAAM4E,GAI5B,OAHAsmG,GAAepgF,EACfqgF,GAAoB8B,EACpBhC,GAAiB+B,EACV5gG,EAEX,MAAO3I,GACH,GAp2TR,SAASypG,EAAiBpsC,GACtB,QAASnwC,GAAgBmwC,GAm2TjBosC,CAAiBzpG,KAAOynG,GACxB,MAAMznG,EAEV,MAz3TR,SAAS0pG,EAAsBrsC,EAAK9rD,GAOhC,OANM8rD,aAAe/5D,QAGjB+5D,EAAM,IAAI/5D,MAAM+5D,EAAIx4D,aAExBy4D,GAAiBD,EAAK9rD,GACf8rD,EAk3TGqsC,CAAsB1pG,EAAG2pG,OAGvC,SAASA,KACL,OAAOlC,GAAe,IAAI7B,GAAc6B,GAAcC,IAAqB,KAE/E,IAAIpB,GAAuC,WACvC,SAASA,EAAsBt9B,GAC3BpsE,KAAKosE,SAAWA,EAqBpB,OAnBAs9B,EAAsB7oG,UAAUs+B,eAAiB,SAAU7gB,EAAS0uF,GAChE,OAAO,IAAIC,GAAejtG,KAAKosE,SAASjtC,eAAe7gB,EAAS0uF,KAEpEtD,EAAsB7oG,UAAUq1C,MAAQ,WAChCl2C,KAAKosE,SAASl2B,OACdl2C,KAAKosE,SAASl2B,SAGtBwzD,EAAsB7oG,UAAU2mB,IAAM,WAC9BxnB,KAAKosE,SAAS5kD,KACdxnB,KAAKosE,SAAS5kD,OAGtBkiF,EAAsB7oG,UAAUqsG,kBAAoB,WAChD,OAAIltG,KAAKosE,SAAS8gC,kBACPltG,KAAKosE,SAAS8gC,oBAElBv5D,QAAQr6B,QAAQ,OAEpBowF,EAvB+B,GAyBtCuD,GAAgC,WAChC,SAASA,EAAe7gC,GACpBpsE,KAAKosE,SAAWA,EAShBpsE,KAAKmtG,oBAAsBJ,GAC3B/sG,KAAKic,KAAOjc,KAAKosE,SAASnwD,KAoI9B,OAlIAgxF,EAAepsG,UAAUyhE,mBAAqB,SAAUxK,GAAiB,OAAO93D,KAAKmtG,oBAAoBr1C,IACzGm1C,EAAepsG,UAAUigC,YAAc,SAAUtJ,IAtwErD,SAAS41E,EAAyB51E,GAC9BsqE,GAAuB7jC,OAAOzmC,EAAK4nE,YAswE/BgO,CAAyBrL,GAAavqE,IAClCx3B,KAAKosE,SAAStrC,aACd9gC,KAAKosE,SAAStrC,YAAYtJ,IAGlCy1E,EAAepsG,UAAU8hC,QAAU,WAAc3iC,KAAKosE,SAASzpC,WAC/DsqE,EAAepsG,UAAUmxB,cAAgB,SAAUluB,EAAM+3C,GACrD,IAAItoB,EAAKvzB,KAAKosE,SAASp6C,cAAcluB,EAAM+3C,GACvCwxD,EAAWrtG,KAAKsiE,mBAAmB/uC,GACvC,GAAI85E,EAAU,CACV,IAAIC,EAAU,IAAIhO,GAAuB/rE,EAAI,KAAM85E,GACnDC,EAAQxpG,KAAOA,EACfm+F,GAAeqL,GAEnB,OAAO/5E,GAEX05E,EAAepsG,UAAU41C,cAAgB,SAAUxzC,GAC/C,IAAIuiD,EAAUxlD,KAAKosE,SAAS31B,cAAcxzC,GACtCoqG,EAAWrtG,KAAKsiE,mBAAmB9c,GAIvC,OAHI6nD,GACApL,GAAe,IAAI9C,GAAoB35C,EAAS,KAAM6nD,IAEnD7nD,GAEXynD,EAAepsG,UAAUmgC,WAAa,SAAU/9B,GAC5C,IAAIsR,EAAOvU,KAAKosE,SAASprC,WAAW/9B,GAChCoqG,EAAWrtG,KAAKsiE,mBAAmB/tD,GAIvC,OAHI84F,GACApL,GAAe,IAAI9C,GAAoB5qF,EAAM,KAAM84F,IAEhD94F,GAEX04F,EAAepsG,UAAUoxB,YAAc,SAAUlgB,EAAQguF,GACrD,IAAIuN,EAAUvL,GAAahwF,GACvBw7F,EAAexL,GAAahC,GAC5BuN,GAAWC,GAAgBD,aAAmBhO,IAC9CgO,EAAQ/N,SAASgO,GAErBvtG,KAAKosE,SAASn6C,YAAYlgB,EAAQguF,IAEtCkN,EAAepsG,UAAU+hC,aAAe,SAAU7wB,EAAQguF,EAAUD,GAChE,IAAIwN,EAAUvL,GAAahwF,GACvBw7F,EAAexL,GAAahC,GAC5ByN,EAAazL,GAAajC,GAC1BwN,GAAWC,GAAgBD,aAAmBhO,IAC9CgO,EAAQ1qE,aAAa4qE,EAAYD,GAErCvtG,KAAKosE,SAASxpC,aAAa7wB,EAAQguF,EAAUD,IAEjDmN,EAAepsG,UAAUoyB,YAAc,SAAUlhB,EAAQ07F,GACrD,IAAIH,EAAUvL,GAAahwF,GACvBw7F,EAAexL,GAAa0L,GAC5BH,GAAWC,GAAgBD,aAAmBhO,IAC9CgO,EAAQr6E,YAAYs6E,GAExBvtG,KAAKosE,SAASn5C,YAAYlhB,EAAQ07F,IAEtCR,EAAepsG,UAAUw5C,kBAAoB,SAAUgyB,EAAgBqhC,GACnE,IAAIn6E,EAAKvzB,KAAKosE,SAAS/xB,kBAAkBgyB,EAAgBqhC,GACrDL,EAAWN,KAIf,OAHIM,GACApL,GAAe,IAAI3C,GAAuB/rE,EAAI,KAAM85E,IAEjD95E,GAEX05E,EAAepsG,UAAUm5C,aAAe,SAAUzmB,EAAIzvB,EAAMb,EAAO44C,GAC/D,IAAIyxD,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAE9BgO,EAAQ75E,WADOooB,EAAYA,EAAY,IAAM/3C,EAAOA,GACrBb,GAEnCjD,KAAKosE,SAASpyB,aAAazmB,EAAIzvB,EAAMb,EAAO44C,IAEhDoxD,EAAepsG,UAAU8yB,gBAAkB,SAAUJ,EAAIzvB,EAAM+3C,GAC3D,IAAIyxD,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAE9BgO,EAAQ75E,WADOooB,EAAYA,EAAY,IAAM/3C,EAAOA,GACrB,MAEnC9D,KAAKosE,SAASz4C,gBAAgBJ,EAAIzvB,EAAM+3C,IAE5CoxD,EAAepsG,UAAU2sC,SAAW,SAAUja,EAAIzvB,GAC9C,IAAIwpG,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAC9BgO,EAAQzqD,QAAQ/+C,IAAQ,GAE5B9D,KAAKosE,SAAS5+B,SAASja,EAAIzvB,IAE/BmpG,EAAepsG,UAAU4sC,YAAc,SAAUla,EAAIzvB,GACjD,IAAIwpG,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAC9BgO,EAAQzqD,QAAQ/+C,IAAQ,GAE5B9D,KAAKosE,SAAS3+B,YAAYla,EAAIzvB,IAElCmpG,EAAepsG,UAAUsmC,SAAW,SAAU5T,EAAI2Z,EAAOjqC,EAAO+G,GAC5D,IAAIsjG,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAC9BgO,EAAQhsF,OAAO4rB,GAASjqC,GAE5BjD,KAAKosE,SAASjlC,SAAS5T,EAAI2Z,EAAOjqC,EAAO+G,IAE7CijG,EAAepsG,UAAUusC,YAAc,SAAU7Z,EAAI2Z,EAAOljC,GACxD,IAAIsjG,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAC9BgO,EAAQhsF,OAAO4rB,GAAS,MAE5BltC,KAAKosE,SAASh/B,YAAY7Z,EAAI2Z,EAAOljC,IAEzCijG,EAAepsG,UAAUssC,YAAc,SAAU5Z,EAAIzvB,EAAMb,GACvD,IAAIqqG,EAAUvL,GAAaxuE,GACvB+5E,GAAWA,aAAmBhO,KAC9BgO,EAAQ9X,WAAW1xF,GAAQb,GAE/BjD,KAAKosE,SAASj/B,YAAY5Z,EAAIzvB,EAAMb,IAExCgqG,EAAepsG,UAAUq6C,OAAS,SAAUv5C,EAAQ44C,EAAW2R,GAC3D,GAAsB,iBAAXvqD,EAAqB,CAC5B,IAAI2rG,EAAUvL,GAAapgG,GACvB2rG,GACAA,EAAQxhD,UAAUxoD,KAAK,IAAI47F,GAAc3kD,EAAW2R,IAG5D,OAAOlsD,KAAKosE,SAASlxB,OAAOv5C,EAAQ44C,EAAW2R,IAEnD+gD,EAAepsG,UAAUo2B,WAAa,SAAUO,GAAQ,OAAOx3B,KAAKosE,SAASn1C,WAAWO,IACxFy1E,EAAepsG,UAAUmzB,YAAc,SAAUwD,GAAQ,OAAOx3B,KAAKosE,SAASp4C,YAAYwD,IAC1Fy1E,EAAepsG,UAAUwoC,SAAW,SAAU7R,EAAMv0B,GAAS,OAAOjD,KAAKosE,SAAS/iC,SAAS7R,EAAMv0B,IAC1FgqG,EAhJwB,GAuL/BU,GAAkC,SAAUj5C,GAE5C,SAASi5C,EAAiB3/B,EAAYI,EAAsBw/B,GACxD,IAAI7yF,EAGJ25C,EAAOnzD,KAAKvB,OAASA,KAIrB,OAHA+a,EAAMizD,WAAaA,EACnBjzD,EAAMqzD,qBAAuBA,EAC7BrzD,EAAM6yF,oBAAsBA,EACrB7yF,EAUX,OAnBAra,EAAUitG,EAAkBj5C,GAW5Bi5C,EAAiB9sG,UAAUC,OAAS,SAAU2pE,GAC1Cy9B,KAIA,IAAIl9F,EA7BZ,SAAS6iG,EAAwB7iG,GAC7B,IAAI7D,EAAY5G,MAAMsY,KAAK7N,EAAI7D,WAC3BygE,EAAUrnE,MAAMsY,KAAK7N,EAAI48D,SACzBN,KACJ,IAAK,IAAI1lE,KAAOoJ,EAAIs8D,eAChBA,EAAe1lE,GAAOoJ,EAAIs8D,eAAe1lE,GAE7C,OACIvC,QAAS2L,EAAI3L,QACbwoE,OAAQ78D,EAAI68D,OAAQ1gE,UAAWA,EAAWygE,QAASA,EAASN,eAAgBA,GAoBlEumC,CAAwBxoC,GAAkBrlE,KAAK4tG,sBACzD,OAAOlsC,GAASI,kBAAkB9hE,KAAKguE,WAAYvD,GAAkB34D,GAASG,KAAMjS,KAAKouE,qBAAsBpjE,IAE5G2iG,EApB0B,CAqBnC74C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEFx1D,EAAQwuG,8BAAgClL,GACxCtjG,EAAQyuG,8BAAgCtL,GACxCnjG,EAAQ0uG,8BAAgCtL,GACxCpjG,EAAQ2uG,8BAAgCtL,GACxCrjG,EAAQ4uG,8BAAgCrL,GACxCvjG,EAAQ6uG,8BAAgCjd,GACxC5xF,EAAQ8uG,8BAAgCr1C,GACxCz5D,EAAQ+uG,8BAAgClwC,GACxC7+D,EAAQgvG,8BAAgChP,GACxChgG,EAAQivG,8BAAgCpP,GACxC7/F,EAAQkvG,8BAAgC38F,GACxCvS,EAAQmvG,8BAAgC1kG,EACxCzK,EAAQovG,8BAAgCh1F,GACxCpa,EAAQqvG,8BAAgCv3F,GACxC9X,EAAQsvG,8BAAgCt2F,GACxChZ,EAAQuvG,8BAAgCrkB,GACxClrF,EAAQwvG,8BAAgCjb,GACxCv0F,EAAQyvG,8BAAgC1b,GACxC/zF,EAAQ0vG,8BAAgC7b,GACxC7zF,EAAQ2vG,8BAAgCtb,GACxCr0F,EAAQ4vG,8BAAgC5b,GACxCh0F,EAAQ6vG,8BAAgC3b,GACxCl0F,EAAQ8vG,+BAAiC59B,GACzClyE,EAAQ+vG,+BAAiC3hF,GACzCpuB,EAAQgwG,+BAAiCnmF,GACzC7pB,EAAQiwG,+BAAiChmF,GACzCjqB,EAAQkwG,+BAAiC7kF,GACzCrrB,EAAQmwG,+BAAiClrE,GACzCjlC,EAAQowG,+BAAiC9jF,GACzCtsB,EAAQqwG,+BAAiClqF,GACzCnmB,EAAQswG,8BAAgCr5C,GACxCj3D,EAAQuwG,8BAAgCn5C,GACxCp3D,EAAQwwG,8BAAgCt4C,GACxCl4D,EAAQywG,+BAAiC31E,GACzC96B,EAAQ0wG,+BAAiC9qG,EACzC5F,EAAQ2wG,+BAAiCxqG,EACzCnG,EAAQ4wG,+BAAiC1pG,EACzClH,EAAQ6wG,8BAAgC9oC,GACxC/nE,EAAQ8wG,+BAAiC3uC,GACzCniE,EAAQ86F,eAAiBA,GACzB96F,EAAQu7F,eAAiBA,GACzBv7F,EAAQ+wG,gBAlsHR,SAASA,KACD/Y,KAAcA,GAAU3sB,WACxB2sB,GAAU30D,WAisHlBrjC,EAAQq7F,YAAcA,GACtBr7F,EAAQ+6F,YAAcA,GACtB/6F,EAAQ48F,eAAiBA,GACzB58F,EAAQi7F,sBAAwBA,GAChCj7F,EAAQ66F,aAAeA,GACvB76F,EAAQgxG,eAxhpBR,SAASA,KACL,GAAI/+E,GACA,MAAM,IAAI7qB,MAAM,iDAEpB4qB,IAAW,GAqhpBfhyB,EAAQkyB,UAAYA,GACpBlyB,EAAQ2xF,OAASA,GACjB3xF,EAAQoyF,iBAAmBA,GAC3BpyF,EAAQiyF,qBAAuBA,GAC/BjyF,EAAQkyF,YAAcA,GACtBlyF,EAAQmyF,uBAAyBA,GACjCnyF,EAAQ+wF,gBAAkBA,GAC1B/wF,EAAQgxF,sBAAwBA,GAChChxF,EAAQ8iG,aAAeA,GACvB9iG,EAAQ6iG,UAAYA,GACpB7iG,EAAQixG,iBAr6FR,SAASA,GAAiBC,GACtB,OAAOA,EAAS3oG,IAAI,SAAU0rB,GAAM,OAAOA,EAAGukC,iBAq6FlDx4D,EAAQyiG,aAAeA,GACvBziG,EAAQk4F,YAAcA,GACtBl4F,EAAQ65F,oBAAsBA,GAC9B75F,EAAQmxG,qBA/zHR,SAASA,GAAqB3iG,GAC1BurF,GAAqBvrF,GA+zHzBxO,EAAQijG,aAAeA,GACvBjjG,EAAQkjG,oBAAsBA,GAC9BljG,EAAQgjG,UAAYA,GACpBhjG,EAAQ0jG,kBAAoBA,GAC5B1jG,EAAQ20F,eAAiBA,GACzB30F,EAAQ40F,SAAWA,GACnB50F,EAAQ60F,kBAAoBA,GAC5B70F,EAAQ80F,gBAAkBA,GAC1B90F,EAAQ2L,KAAOA,EACf3L,EAAQ0gF,aAAeA,GACvB1gF,EAAQoxB,aAAeA,GACvBpxB,EAAQo5B,UAAYA,GACpBp5B,EAAQgH,UAAYA,EACpBhH,EAAQwc,6BAA+BA,GACvCxc,EAAQ8c,aAAeA,GACvB9c,EAAQyc,gBAAkBA,GAC1Bzc,EAAQ6Z,MAAQA,GAChB7Z,EAAQgd,UAAYA,GACpBhd,EAAQ+c,aAAeA,GACvB/c,EAAQ2vF,UAAYA,GACpB3vF,EAAQyvF,UAAYA,GACpBzvF,EAAQqwF,YAAcA,GACtBrwF,EAAQuwF,aAAeA,GACvBvwF,EAAQkwF,MAAQA,GAChBlwF,EAAQowF,OAASA,GACjBpwF,EAAQ6vF,KAAOA,GACf7vF,EAAQ2wF,SAAWA,GACnB3wF,EAAQoxG,wBAhspBJ5sG,KAAM,mBAispBVxE,EAAQqxG,kBAzrpBJ7sG,KAAM,oBA0rpBVxE,EAAQi5D,QAAUA,GAClBj5D,EAAQo5D,QAAUA,GAClBp5D,EAAQuH,iBAAmBA,EAC3BvH,EAAQ2H,eAAiBA,EACzB3H,EAAQgJ,WAAaA,EACrBhJ,EAAQkJ,kBAAoBA,EAC5BlJ,EAAQ4R,WAAaA,GACrB5R,EAAQsS,SAAWA,GACnBtS,EAAQwS,SAAWA,GACnBxS,EAAQ8K,OAASA,EACjB9K,EAAQsxG,QAAUxmG,EAClB9K,EAAQ+Z,mBAAqBA,GAC7B/Z,EAAQqY,0BAA4BA,GACpCrY,EAAQ6W,cAAgBA,GACxB7W,EAAQgS,eAAiBA,GACzBhS,EAAQ0G,OAASA,EACjB1G,EAAQ4G,SAAWA,EACnB5G,EAAQ6G,KAAOA,EACf7G,EAAQ8G,SAAWA,EACnB9G,EAAQ+G,KAAOA,EACf/G,EAAQk1F,OAASA,GACjBl1F,EAAQuxG,YAActZ,GACtBj4F,EAAQ04D,oBAAsBA,GAC9B14D,EAAQ84D,SAAWA,GACnB94D,EAAQk5D,UAAYA,GACpBl5D,EAAQg5D,iBAAmBA,GAC3Bh5D,EAAQ+4D,aAAeA,GACvB/4D,EAAQ2zF,iBAAmBA,GAC3B3zF,EAAQmzF,SAAWA,GACnBnzF,EAAQ4zF,gBAAkBA,GAC1B5zF,EAAQuyF,6BAA+BA,GACvCvyF,EAAQs0D,iBAAmBA,GAC3Bt0D,EAAQwxG,kBAAoBl9C,GAC5Bt0D,EAAQq0D,aAAeA,GACvBr0D,EAAQ80D,yBAA2BA,GACnC90D,EAAQu4D,WAAaA,GACrBv4D,EAAQw1D,gBAAkBA,GAC1Bx1D,EAAQu1D,YAAcA,GACtBv1D,EAAQ+qF,sBAAwBA,GAChC/qF,EAAQorF,iBAAmBA,GAC3BprF,EAAQshF,UAAYA,GACpBthF,EAAQ6+F,uBAAyBA,GACjC7+F,EAAQy+F,6BAA+BA,GACvCz+F,EAAQ4gE,YAAcA,GACtB5gE,EAAQ8gE,iBAAmBA,GAC3B9gE,EAAQ2/F,gBAAkBA,GAC1B3/F,EAAQy1D,QAAUiqC,GAClB1/F,EAAQugE,kBAAoBA,GAC5BvgE,EAAQ45D,sBAAwBA,GAChC55D,EAAQ+/D,gBAAkBA,GAC1B//D,EAAQqgE,gBAAkBA,GAC1BrgE,EAAQ6tD,aAAeA,GACvB7tD,EAAQy8B,aAAeA,GACvBz8B,EAAQ+iG,aAAeA,GACvB/iG,EAAQyxG,0BAA4B7W,GACpC56F,EAAQ0xG,wBAA0B5f,GAClC9xF,EAAQ2xG,wBAA0BjxC,GAClC1gE,EAAQ4xG,wBAA0BjxC,GAClC3gE,EAAQ6xG,cAAgB91E,GACxB/7B,EAAQ8xG,oBAAsB71E,GAC9Bj8B,EAAQ+xG,kCAv4tBR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4BjyG,EAAQ2Z,wBAAwBhP,SAs4tBpE3K,EAAQkyG,SAAW7f,GACnBryF,EAAQmyG,oBAAsBhoG,EAC9BnK,EAAQoyG,kBAAoBrqG,EAC5B/H,EAAQqyG,UAAYriD,GACpBhwD,EAAQsyG,aA38E2B,EA48EnCtyG,EAAQuyG,iCAAmCx9C,GAC3C/0D,EAAQwyG,0CAA4Cn0F,GACpDre,EAAQyyG;;;;;;;;AA/0tBR,SAASC,GAA0BC,GAE/B,IAAIC,KAEAC,EAAS,IAAIp/F,IACjB,SAASq/F,EAAsBh+E,GAC3B,IAAIigE,EAAU8d,EAAOhoG,IAAIiqB,GACzB,IAAKigE,EAAS,CACV,IAAIge,EAAOJ,EAAiB79E,GAC5B+9E,EAAOn/F,IAAIohB,EAAKigE,EAAUge,EAAK53E,KAAK5c,KACpCq0F,EAAW5uG,KAAK+wF,GAEpB,OAAOA,EAuBX,OArBAj3E,GAAiC7P,QAAQ,SAAUgQ,GAC3CA,EAAUC,aACV40F,EAAsB70F,EAAUC,aAAaid,KAAK,SAAUhd,GACxDF,EAAUE,SAAWA,IAG7B,IAAIC,EAAYH,EAAUG,UACtB4D,EAAS/D,EAAU+D,SAAW/D,EAAU+D,WACxCgxF,EAAc/0F,EAAU+D,OAAOhgB,OACnCoc,GAAaA,EAAUnQ,QAAQ,SAAUglG,EAAUhtG,GAC/C+b,EAAOhe,KAAK,IACZ8uG,EAAsBG,GAAU93E,KAAK,SAAUyS,GAC3C5rB,EAAOgxF,EAAc/sG,GAAS2nC,EAC9BxvB,EAAU2jB,OAAO3jB,EAAUvV,QAAQoqG,GAAW,GACtB,GAApB70F,EAAUpc,SACVic,EAAUG,eAAY1W,SAKtC2W,KACOg2B,QAAQo9C,IAAImhB,GAAYz3E,KAAK,WAAc,OAAO,QA6ytB7Dn7B,EAAQkzG,wBAA0BhnG,GAClClM,EAAQmzG,iBAAmBt6C,GAC3B74D,EAAQozG,eAAiB36E,GACzBz4B,EAAQqzG,gBAAkB75E,GAC1Bx5B,EAAQszG,cAAgBz+E,GACxB70B,EAAQuzG,QAAUlqG,EAClBrJ,EAAQwzG,gBAAkB53E,GAC1B57B,EAAQyzG,WAAanrG,EACrBtI,EAAQ0zG,eAAiBnvG,EACzBvE,EAAQ2zG,cAAgBv4E,GACxBp7B,EAAQ4zG,WAAa14E,GACrBl7B,EAAQ6zG,gBAtRR,SAASlxC,KAEL,OADAimC,KACOxmC,GAASO,kBAqRpB3iE,EAAQ8zG,sBAAwBlL,GAChC5oG,EAAQ+zG,uBA5RR,SAASrxC,GAAsB+oC,EAAMliC,GAEjC,OADAq/B,KACOxmC,GAASM,sBAAsB+oC,EAAMliC,IA2RhDvpE,EAAQg0G;;;;;;;;AAjSR,SAASvxC,GAAiBwoC,GAEtB,OADArC,KACOxmC,GAASK,iBAAiBwoC,IAgSrCjrG,EAAQi0G,uCAAyCpjC,GACjD7wE,EAAQ2kF,YAAcjhE,GACtB1jB,EAAQ4kF,iBAAmBllE,GAC3B1f,EAAQ6kF,iBAAmBjhE,GAC3B5jB,EAAQ+kF,YAAclhE,GACtB7jB,EAAQ8kF,gBAAkB7hE,GAC1BjjB,EAAQk0G,eAzzcR,SAAS59C,GAAcr4C,GAEnBwqC,GADWzpB,GAA2B/gB,GACVA,IAwzchCje,EAAQm0G,iBAv+aR,SAASC,GAAgBl/C,EAA8E1tD,QACtF,IAATA,IAAmBA,MAGvB,IAAIouC,EAAkBpuC,EAAKouC,iBAAmBhW,GAC1C9G,EAAYtxB,EAAKsxB,WAAa,KAC9Bw0B,EAAexqC,GAAgBoyC,GAC/B5H,EAAatlD,MAAQktD,IACrB5H,EAAatlD,KAAOktD,GAExB,IAQIj3C,EAPAu0D,EAAY53B,GAAkBhF,EAAiBpuC,EAAKsI,MADrCw9C,EAAa3rC,UAAU,GAAG,IAEzC8wD,EAAYnlB,EAAahsC,OAAS,IAClC,IACAslB,EAAc6mB,GAAkBjmD,EAAK+gD,UAAW/gD,EAAKw/B,eACrDrH,EAAWiW,EAAgB/V,eAAe2yC,EAAWllB,GACrDhrB,EAAWoT,GAAY,KAAMsE,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MAAOpT,EAAa6rC,EAAW,KAAM,KAAM78B,EAAiBjW,OAAUj4B,EAAWF,EAAK4C,UAAY,MAC7K+gB,EAAUH,GAAUsX,EAAU,MAElC,IACQsT,EAAgBgB,OAChBhB,EAAgBgB,QACpB,IAAI3V,EAAgBksB,GAAwBqlB,EAAWllB,EAAchrB,EAAUsT,EAAiBjW,EAAU7G,GAC1G7a,EAAYovC,GAAoBpsB,EAAeqsB,EAAchrB,EAAUsE,EAAap/B,EAAK+lD,cAAgB,MACzG5H,GAAcrjB,EAAUrB,GACxBqT,GAAuBhS,GACvBA,EAASne,MAAU,EACnBmwB,GAAuBhS,GAE3B,QACI7W,GAAUN,GACNyqB,EAAgB1tB,KAChB0tB,EAAgB1tB,MAExB,OAAOjK,GAs8aXje,EAAQq0G,yBAA2BxiC,GACnC7xE,EAAQs0G,qBAAuBxhC,GAC/B9yE,EAAQglF,iBAAmB/5B,GAC3BjrD,EAAQklF,iBAAmBh6B,GAC3BlrD,EAAQuL,cAAgBulB,GACxB9wB,EAAQilF,qBAAuBl0D,GAC/B/wB,EAAQuqF,mBAAqB1nE,GAC7B7iB,EAAQmlF,sBAAwBV,GAChCzkF,EAAQqlF,kBAAoBlxB,GAC5Bn0D,EAAQslF,0BAA4Bz2B,GACpC7uD,EAAQolF,oBAAsBn3B,GAC9BjuD,EAAQu0G,uBAAyB7mD,GACjC1tD,EAAQw0G,oBAAsBl2B,GAC9Bt+E,EAAQy0G,WAAa5rD,GACrB7oD,EAAQ00G,iBAAmBj2B,GAC3Bz+E,EAAQ20G,WAAa33E,GACrBh9B,EAAQylF,WAAavlD,GACrBlgC,EAAQ0lF,aAAenvC,GACvBv2C,EAAQmmF,cAAgBnvC,GACxBh3C,EAAQ6lF,eAAiBxvC,GACzBr2C,EAAQ8lF,iBAAmB/uC,GAC3B/2C,EAAQ+lF,cAAgBjvC,GACxB92C,EAAQqmF,SAAWrnE,GACnBhf,EAAQ8nF,UAAY9sC,GACpBh7C,EAAQypF,MAAQx0E,GAChBjV,EAAQ2pF,mBAAqBpjC,GAC7BvmD,EAAQgoF,YAAc7mD,GACtBnhC,EAAQwlF,MAAQpgF,GAChBpF,EAAQonF,gBAAkB99B,GAC1BtpD,EAAQqnF,gBAAkB59B,GAC1BzpD,EAAQsnF,gBAAkB19B,GAC1B5pD,EAAQunF,gBAAkBx9B,GAC1B/pD,EAAQwnF,gBAAkBt9B,GAC1BlqD,EAAQynF,gBAAkBp9B,GAC1BrqD,EAAQ0nF,gBAAkBl9B,GAC1BxqD,EAAQ2nF,gBAAkBh9B,GAC1B3qD,EAAQ4nF,gBAAkBv+B,GAC1BrpD,EAAQooF,WAAalI,GACrBlgF,EAAQqoF,WAAa/H,GACrBtgF,EAAQsoF,WAAa/H,GACrBvgF,EAAQuoF,WAAa/H,GACrBxgF,EAAQwoF,WAAa/H,GACrBzgF,EAAQwmF,eAAiB7H,GACzB3+E,EAAQymF,eAAiB1H,GACzB/+E,EAAQ0mF,eAAiBzH,GACzBj/E,EAAQ2mF,eAAiBzH,GACzBl/E,EAAQ4mF,eAAiBzH,GACzBn/E,EAAQ6mF,eAAiBzH,GACzBp/E,EAAQ8mF,eAAiBxH,GACzBt/E,EAAQ+mF,eAAiBvH,GACzBx/E,EAAQgnF,eAAiBtH,GACzB1/E,EAAQinF,eAAiBrH,GACzB5/E,EAAQknF,gBAAkB97B,GAC1BprD,EAAQ40G,eAAiBzoD,GACzBnsD,EAAQ60G,gBAAkBxoD,GAC1BrsD,EAAQmnF,aAAer9D,GACvB9pB,EAAQ2lF,uBAAyBv/B,GACjCpmD,EAAQ4lF,qBAAuBv/B,GAC/BrmD,EAAQ2oF,cAAgB1E,GACxBjkF,EAAQ4oF,WAAahnE,GACrB5hB,EAAQ6oF,iBAAmB1E,GAC3BnkF,EAAQ8oF,oBAAsBvE,GAC9BvkF,EAAQ+oF,eAAiB3E,GACzBpkF,EAAQgpF,cAAgB3E,GACxBrkF,EAAQipF,kBAAoBzE,GAC5BxkF,EAAQomF,YAAcnvC,GACtBj3C,EAAQioF,iBAAmBvrC,GAC3B18C,EAAQkoF,gCAAkCrrC,GAC1C78C,EAAQmoF,gCAAkC7sC,GAC1Ct7C,EAAQyoF,eAAiBvhC,GACzBlnD,EAAQkpF,WAAap+B,GACrB9qD,EAAQgmF,gBAAkBr8D,GAC1B3pB,EAAQimF,iBAAmBr8D,GAC3B5pB,EAAQkmF,eAAiBn9B,GACzB/oD,EAAQulF,kBAAoBjpC,GAC5Bt8C,EAAQsmF,uBAAyBpvC,GACjCl3C,EAAQumF,qBAAuB7uC,GAC/B13C,EAAQmpF,gBAAkB5qC,GAC1Bv+C,EAAQopF,kBAAoB3nC,GAC5BzhD,EAAQqpF,mBAAqB/lC,GAC7BtjD,EAAQspF,kBAAoBzmC,GAC5B7iD,EAAQupF,qBAAuB3nC,GAC/B5hD,EAAQ6nF,kBAAoB3kC,GAC5BljD,EAAQ0pF,aAAe/kC,GACvB3kD,EAAQwpF,UAAYrrE,GACpBne,EAAQ4pF,iBAAmB5iC,GAC3BhnD,EAAQ80G,OAASpnE,GACjB1tC,EAAQ+nF,MAAQ/8B,GAChBhrD,EAAQ0oF,MAAQ5I,GAChB9/E,EAAQ+0G,cAn8aR,SAASC,GAAa/2F,GAClB,OAAOqO,GAAerO,GAAWqqC,OAm8arCtoD,EAAQ6pF,MAAQnP,GAChB16E,EAAQ8pF,gBAAkBnP,GAC1B36E,EAAQ+pF,SAAW9O,GACnBj7E,EAAQgqF,WAAanT,GACrB72E,EAAQiqF,SAAW9Q,GACnBn5E,EAAQkqF,WAAa/O,GACrBn7E,EAAQmqF,iBAAmB/R,GAC3Bp4E,EAAQi1G;;;;;;;;AAt6NR,SAASC,GAAiBltG,EAAM5F,EAAY2K,EAAgBc,GACxD,IAAI7I,EACAmwG,EAAQntG,EACO,OAAf5F,IACI+yG,EAAMh0G,eAAe,oBAAsCuG,IAArBytG,EAAM/yG,YAC3C4C,EAAKmwG,EAAM/yG,YAAY4B,KAAK9B,MAAM8C,EAAId,EAAS9B,IAGhD+yG,EAAM/yG,WAAaA,GAGJ,OAAnB2K,IAIAooG,EAAMpoG,eAAiBA,GAEJ,OAAnBc,IAMIsnG,EAAMtnG,oBADmBnG,IAAzBytG,EAAMtnG,eACiBpM,KAAa0zG,EAAMtnG,eAAgBA,GAGnCA,IA64NnC7N,EAAQoqF,eAAiBrrE,GACzB/e,EAAQqqF,iBAAmBlrE,GAC3Bnf,EAAQsqF,aAAelrE,GACvBpf,EAAQo1G,kBAAoB5nB,GAC5BxtF,EAAQq1G,kBAAoBnnB,GAC5BluF,EAAQs1G,iBAAmBzpB,GAC3B7rF,EAAQu1G,qBAAuBzpB,GAC/B9rF,EAAQw1G,4BAA8BjpB,GACtCvsF,EAAQy1G,yBA79KR,SAASC,KACW,IAAIjiG,IACD,IAAIA,IACvB63E,GAAYtpF,OAAS,GA29KzBhC,EAAQ21G,yCAA2CnqB,GACnDxrF,EAAQ41G,qBAAuBtpB,GAC/BtsF,EAAQ61G,aAAermB,GACvBxvF,EAAQwqF,cAAgB3wD,GACxB75B,EAAQyqF,eAAiBvwD,GACzBl6B,EAAQ0qF,uBAAyBzvD,GACjCj7B,EAAQ4qF,gBAAkBjwD,GAC1B36B,EAAQ6qF,aAAexwD,GACvBr6B,EAAQ2qF,qBAAuBnwD,GAC/Bx6B,EAAQ8qF,0BAA4B9vD,GACpCh7B,EAAQ81G,6BAp3pBR,SAASC,GAA4BC,GACjC,OAAOnkF,GAA8BmkF,EAAa,SAo3pBtDh2G,EAAQi2G,8BAz2pBR,SAASC,GAA6BC,GAClC,OAAOtkF,GAA8BskF,EAAc,UAy2pBvDn2G,EAAQo2G,+BA91pBR,SAASC,GAA8BC,GACnC,OAAOzkF,GAA8BykF,EAAe,WA81pBxDt2G,EAAQu2G,4BAn1pBR,SAASC,GAA2BC,GAChC,OAAO5kF,GAA8B4kF,EAAY,QAm1pBrDz2G,EAAQ02G,oCAx0pBR,SAASC,GAAmCC,GACxC,OAAO/kF,GAA8B+kF,EAAoB,gBAw0pB7D52G,EAAQ62G,aAAe/4E,GACvB99B,EAAQ82G,eAAiBj5F,GACzB7d,EAAQ+2G,kBAAoB55F,GAC5Bnd,EAAQg3G,kBAAoB35F,GAC5Brd,EAAQi3G,aAAe15F,GACvBvd,EAAQk3G,eAAiBz5F,GACzBzd,EAAQm3G,aAAex5F,GACvB3d,EAAQo3G,mBAAqBnvG,EAC7BjI,EAAQq3G,iBAAmBlvG,EAC3BnI,EAAQs3G,mBAvvlBR,SAASC,GAAkB9+F,EAAW9U,GAClC,OAAO,IAAIshC,GAAmBxsB,EAAW9U,IAuvlB7C3D,EAAQw3G,WAp/bR,SAASC,GAAU3wE,EAAKzB,GACpB,IAAIhwB,EAAUyoB,GAAYgJ,GAC1B,GAAKzxB,EAAL,CAIA,IAAIwoE,EAAaxoE,EAAQqpB,OACrB9Y,EAAQvQ,EAAQuQ,MAChB+gB,EA5kJR,SAAS+wE,EAAyBr1G,EAAQgT,GAEtC,KADAA,EAAUA,GAAWyoB,GAAYz7B,IAG7B,OAAO,KAEX,IACI6kC,EAAiBnB,GADkB1wB,EAAQgR,UAAnChR,EAAQuQ,OAEpB,OAAOqhB,GAAiBC,IAAmBC,GAAmBD,GAokJ1CwwE,CAAyB75B,EAAYxoE,GACrDuxB,EAActa,GAAe1G,GACjC8gB,GAAkBC,EAAeC,EAAai3C,EAAYx4C,EAAQ,EAAGyB,GACrE8b,GAAahc,EAAa,KA0+b9B5mC,EAAQ23G,YAAcpsD,GACtBvrD,EAAQ43G,mCA5iIR,SAASC,GAAkCztG,EAAUxC,EAAS8mE,GAE1D,OAAOr6B,QAAQr6B,QAAQ,IAAIykE,GAAkB/P,KA2iIjD1uE,EAAQ83G,4BAriIR,SAASC,GAA2B5Z,GAChC,OAAOA,EAAG/rB,iBAqiIdpyE,EAAQg4G,qCAAuCxnB,GAC/CxwF,EAAQi4G,qCAAuCxnB,GAC/CzwF,EAAQk4G,gCAAkCxnB,GAC1C1wF,EAAQm4G,oCAAsCtnB,GAC9C7wF,EAAQo4G,yBAA2B/V,GACnCriG,EAAQq4G,sCAzoxBR,SAASC,GAAkBtwG,EAAMuwG,GAC7B,IAAI7sG,EAAM,KAEN1D,EAAK7G,eAAe8G,IAExBnH,OAAO+B,eAAemF,EAAMC,GACxB4C,IAAK,WACD,GAAY,OAARa,EAAc,CAEd,IAAInF,EAAOgyG,IAAa9wG,WAAY,MAChC+wG,EAAe/nG,GAAmBlK,IAASqK,GAAqBrK,IAChEoK,GAAmBpK,IAASuK,GAAsBvK,GAClDkyG,GACAj0G,KAAMwD,EAAKxD,KACXwD,KAAMA,EACNqmF,kBAAmB,EACnB5mF,WAAYlB,EAAKkB,WACjBixG,SAAUlpG,GAAoBxH,GAC9B2wG,cAAUjxG,GAKd,IAHK+I,GAAmBlK,IAASqK,GAAqBrK,UAAwBmB,IAAdnB,EAAKmJ,OACjE+oG,EAAaE,SAAWlpG,GAAoBlJ,EAAKmJ,OAEhD8oG,EAOA,GAAI/nG,GAAmBlK,GAExBkyG,EAAa/nG,SAAWnK,EAAKmK,cAE5B,GAAIC,GAAmBpK,GAExBkyG,EAAajoG,SAAWjK,EAAKiK,cAE5B,GAAII,GAAqBrK,GAE1BkyG,EAAa5nG,WAAatK,EAAKsK,eAE9B,CAAA,IAAIC,GAAsBvK,GAM3B,MAAM,IAAIa,MAAM,sBAJhBqxG,EAAa1nG,YAAcxK,EAAKwK,iBAhBhC0nG,EAAa/nG,SAAW1I,EAsB5B0D,EAAM5B,IAAoBwuG,kBAAkBhtG,EAAkB,QAAUtD,EAAKxD,KAAO,sBAAuBi0G,GAE/G,OAAO/sG,MAslxBnB1L,EAAQ44G,gCArnF4B,EAsnFpC54G,EAAQ64G,+CAt7XR,SAASC,KACL,OAAO5gD,GAAcjuC,KAA4BJ,KAAY,OAs7XjE7pB,EAAQ+4G,uCAAyClmB,GACjD7yF,EAAQg5G,wCA/zJqC,SAAUtqC,GACnD,OAAOr6B,QAAQr6B,QAAQ64E,GAAsCnkB,KA+zJjE1uE,EAAQi5G,uDAAyDjmB,GACjEhzF,EAAQk5G,wDAhzJqD,SAAUxqC,GACnE,OAAOr6B,QAAQr6B,QAAQg5E,GAAsDtkB,KAgzJjF1uE,EAAQm5G,uCAhrYR,SAASC,GAAiBliD,GACtB,OAAOD,GAAiBC,EAAiBjtC,KAA4BJ,OAgrYzE7pB,EAAQq5G,wCAlpYR,SAASC,GAAkBjiD,EAAkBH,GACzC,OAAOE,GAAkBC,EAAkBH,EAAiBjtC,KAA4BJ,OAkpY5F7pB,EAAQu5G,8CA5lYR,SAASC,GAAuBC,EAAuBviD,GAEnD,OAWJ,SAASwiD,EAAmBD,EAAuBviD,EAAiBhsC,EAAWnF,GAoH3E,IAAIib,EAnHC2zB,KAEDA,GAAoC,SAAUS,GAE1C,SAASwV,EAAkB+uC,EAAaC,EAAYC,GAChD,IAAIp+F,EAAQ25C,EAAOnzD,KAAKvB,OAASA,KAKjC,OAJA+a,EAAMk+F,YAAcA,EACpBl+F,EAAMm+F,WAAaA,EACnBn+F,EAAMo+F,UAAYA,EAClBp+F,EAAMq+F,aACCr+F,EAqGX,OA5GAra,EAAUwpE,EAAmBxV,GAS7Bt0D,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,WAC/CsJ,IAAK,WACD,OAAOosD,GAAiBC,EAAiBx2D,KAAKk5G,WAAYl5G,KAAKm5G,YAEnE3iG,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,YAC/CsJ,IAAK,WAAc,OAAO,IAAIikB,GAAapuB,KAAKk5G,WAAYl5G,KAAKm5G,YACjE3iG,YAAY,EACZC,cAAc,IAElBrW,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,kBAE/CsJ,IAAK,WACD,IAAI8gB,EAAiB4B,GAA0B7sB,KAAKk5G,WAAYl5G,KAAKm5G,WACjE3tF,EAAaJ,GAAsBH,EAAgBjrB,KAAKm5G,WACxD31E,EA9wJxB,SAAS61E,EAAuBhuF,EAAUC,EAAWguF,GACjD,GAAIA,EAAWvnG,SAA+C,IAArCunG,EAAWvnG,OAAO0a,cAAsB,CAI7D,IAFA,IAAIA,EAAgB6sF,EAAWvnG,OAAO0a,cAClC8sF,EAAgBD,EAAWvnG,OACA,MAAxBwnG,EAAcxnG,QAAkB0a,GAAiB8sF,EAAc9sF,eAClE8sF,EAAgBA,EAAcxnG,OAElC,OAAOwnG,EAOX,IALA,IAAIhuF,EAAaJ,GAA4BE,GAEzCG,EAAaF,EACbkY,EAAclY,EAAUxH,IAErByH,EAAa,GAEhBiY,GADAhY,EAAaA,EAAW/G,KACCX,IACzByH,IAEJ,OAAOiY,EA0vJ2B61E,CAAuBpuF,EAAgBjrB,KAAKm5G,UAAWn5G,KAAKk5G,YAC9E,OAAQluF,GAAkBC,IAAkC,MAAfuY,EAEzC,IAAIpV,GAAaoV,EAAahY,GAD9B,IAAI4C,GAAa,KAAMpuB,KAAKm5G,YAGpC3iG,YAAY,EACZC,cAAc,IAElByzD,EAAkBrpE,UAAU+c,MAAQ,WAChC,KAAO5d,KAAKi5G,YAAYr0F,IAAOtjB,QAC3BtB,KAAK0tC,OAAO,IAGpBw8B,EAAkBrpE,UAAUsJ,IAAM,SAAU5E,GAAS,OAAOvF,KAAKo5G,UAAU7zG,IAAU,MACrFnF,OAAO+B,eAAe+nE,EAAkBrpE,UAAW,UAC/CsJ,IAAK,WAAc,OAAOnK,KAAKi5G,YAAYr0F,IAAOtjB,QAClDkV,YAAY,EACZC,cAAc,IAElByzD,EAAkBrpE,UAAUq2D,mBAAqB,SAAUkT,EAAaz1D,EAASpP,GAC7E,IAAIi0G,EAAcx5G,KAAKy5G,aAAal0G,GAChC+xD,EAAU8S,EACTlT,mBAAmBviD,MAAe3U,KAAKi5G,YAAaO,GAGzD,OAFAliD,EAAQvB,yBAAyB/1D,MACjCA,KAAKo5G,UAAU/3E,OAAOm4E,EAAa,EAAGliD,GAC/BA,GAEX4S,EAAkBrpE,UAAUypE,gBAAkB,SAAUzB,EAAkBtjE,EAAOmE,EAAUirD,EAAkB4V,GACzG,IAAIC,EAAkB9gE,GAAY1J,KAAKyqE,gBAClCF,GAA4C,MAA7B1B,EAAiB3X,UAAoBsZ,IACrDD,EAAcC,EAAgBrgE,IAAI0qD,GAAa,OAEnD,IAAI6V,EAAe7B,EAAiB/nE,OAAO0pE,EAAiB7V,OAAkB3tD,EAAWujE,GAEzF,OADAvqE,KAAKqqE,OAAOK,EAAarlD,SAAU9f,GAC5BmlE,GAEXR,EAAkBrpE,UAAUwpE,OAAS,SAAU/S,EAAS/xD,GACpD,GAAI+xD,EAAQqT,UACR,MAAM,IAAIjkE,MAAM,sDAEpB,IAAIwe,EAAQoyC,EAAQnnC,OAChBqpF,EAAcx5G,KAAKy5G,aAAal0G,GAMpC,OALA47B,GAAWjc,EAAOllB,KAAKi5G,YAAaO,GAEpCv4E,GAA2B/b,GAAO,EADjBue,GAAqB+1E,EAAax5G,KAAKi5G,YAAYr0F,IAAQ5kB,KAAKi5G,YAAYp0F,MAE7FyyC,EAAQvB,yBAAyB/1D,MACjCA,KAAKo5G,UAAU/3E,OAAOm4E,EAAa,EAAGliD,GAC/BA,GAEX4S,EAAkBrpE,UAAUyqE,KAAO,SAAUhU,EAASjrB,GAClD,GAAIirB,EAAQqT,UACR,MAAM,IAAIjkE,MAAM,oDAEpB,IAAInB,EAAQvF,KAAKmI,QAAQmvD,GAGzB,OAFAt3D,KAAKw1D,OAAOjwD,GACZvF,KAAKqqE,OAAO/S,EAASt3D,KAAKy5G,aAAaptE,IAChCirB,GAEX4S,EAAkBrpE,UAAUsH,QAAU,SAAUmvD,GAAW,OAAOt3D,KAAKo5G,UAAUjxG,QAAQmvD,IACzF4S,EAAkBrpE,UAAU6sC,OAAS,SAAUnoC,GAC3C,IAAIi0G,EAAcx5G,KAAKy5G,aAAal0G,GAAQ,GAC5Ck8B,GAAWzhC,KAAKi5G,YAAaO,GAC7Bx5G,KAAKo5G,UAAU/3E,OAAOm4E,EAAa,IAEvCtvC,EAAkBrpE,UAAU20D,OAAS,SAAUjwD,GAC3C,IAAIi0G,EAAcx5G,KAAKy5G,aAAal0G,GAAQ,GACxCggB,EAAO+b,GAAWthC,KAAKi5G,YAAaO,GAExC,OAD8D,MAA5Cx5G,KAAKo5G,UAAU/3E,OAAOm4E,EAAa,GAAG,GACnC,IAAIzkD,GAAQxvC,EAAMA,EAAKtB,KAAW,GAAK,MAEhEimD,EAAkBrpE,UAAU44G,aAAe,SAAUl0G,EAAOizE,GAExD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAATjzE,EACOvF,KAAKi5G,YAAYr0F,IAAOtjB,OAASk3E,EAOrCjzE,GAEJ2kE,EA7GwB,CA8GjC6uC,IAIN,IAAInzF,EAAYP,EAASmF,EAAUjlB,OACnC,GAAIwgB,GAAaH,IAEb0a,EAAa1a,GACFjB,KAAiB,MAE3B,CACD,IAAI+0F,EAAcr0F,EAASjB,IAAUqyB,cAAwC,IAM7E,GAAIzwB,GAAWX,GAAW,CACtB,IAAI4Z,EAAW5Z,EAASjB,IACpB+gC,EAAahgC,GAAiBqF,EAAWnF,GAE7Cub,GAAmB3B,EADMU,GAAiBV,EAAUkmB,GACHu0D,EA59N7D,SAASC,EAAkB16E,EAAUzH,GACjC,OAAOwH,GAAqBC,GAAYA,EAASjL,YAAYwD,GAAQA,EAAKxD,YA29NJ2lF,CAAkB16E,EAAUkmB,SAG1FlzB,GAAYynF,EAAalvF,EAAWnF,GAExCA,EAASmF,EAAUjlB,OAAS+6B,EACxB4kB,GAAiBt/B,EAAWP,EAAUq0F,GAAa,GACvDz0D,GAAc5/B,EAAUib,GAE5B,OAAO,IAAI2zB,GAAmB3zB,EAAY9V,EAAWnF,GA1J9C2zF,CAAmBD,EAAuBviD,EAD7BjtC,KAC6DJ,OA2lYrF7pB,EAAQs6G,qCA75XR,SAASC,KACL,OAXJ,SAASC,EAAqBv0F,GAC1B,IAAI0Z,EAAW1Z,EAAKnB,IACpB,GAAI4a,GAAqBC,GACrB,OAAOA,EAGP,MAAM,IAAIv4B,MAAM,gEAKbozG,CAAqB3wF,OA65XhC7pB,EAAQy6G,6BA3wLR,SAASC,GAA4B5jG,GACjC,IAAI9O,EAAOsgE,GAAQz9D,IAAIiM,GACvB,IAAK9O,EACD,MAAMmjF,GAAcr0E,GACxB,OAAO,IAAI2nE,GAAkBz2E,IAwwLjChI,EAAQ26G,mBAAqBztD,GAC7BltD,EAAQ46G,2BArrbR,SAASC,KACA5tD,KACDA,IAAa,EACbC,GAAkB,eAAgBvB,IAClCuB,GAAkB,aAAcpB,IAChCoB,GAAkB,eAAgBX,IAClCW,GAAkB,mBAAoBnB,IACtCmB,GAAkB,iBAAkBb,IACpCa,GAAkB,cAAehB,IACjCgB,GAAkB,oBAAqBjB,IACvCiB,GAAkB,gBAAiBf,IACnCe,GAAkB,aAAc3B,IAChC2B,GAAkB,YAAarE,MA0qbvC7oD,EAAQ86G,gBAAkBxqD,GAC1BtwD,EAAQ+6G,uBApyLR,SAASC,GAAsBlkG,EAAI/W,GAC/B,IAAIqZ,EAAWkvD,GAAQz9D,IAAIiM,GAC3Bk0E,GAAwBl0E,EAAIsC,GAAYA,EAASs1D,WAAY3uE,EAAQ2uE,YACrEpG,GAAQ50D,IAAIoD,EAAI/W,IAkyLpBC,EAAQi7G,gBACRj7G,EAAQk7G,cACRl7G,EAAQm7G;;;;;;;;AA3nFR,SAAS1Q,GAAU//F,EAAOy6D,EAAmBqB,EAAgBF,EAAYrD,EAAam4C,GAClF1wG,GAAS,EACT,IAAI1F,EAAKkgE,GAAuBC,GAEhC,OAEI9+C,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAEdrlE,MAAOA,EACPmlE,YAAa,EACb9D,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EAAG7K,eAdyCpgE,EAAGogE,eAcZC,gBAd0ErgE,EAAGqgE,gBAc3CC,WAdOtgE,EAAGsgE,WAcckB,eAAgBA,EAAgBF,WAAYA,EAC9JxC,YACAiD,aAAc,EACd1mD,WACArB,SACI8uD,GAAI,KACJtpE,KAAM,KACN8pB,MAAO,KAAMnQ,SApBNi9F,EAAkBr1C,GAAkBq1C,GAAmB,KAqB9DnxC,kBAAmB,KACnBhpC,cAAe,KACf2kC,sBAAuB,KACvBuL,gBAAiB,KACjBD,aAAc,KACdjO,YAAaA,GAAeI,IAEhClyD,SAAU,KACV8D,KAAM,KACNi7D,MAAO,KACPrJ,UAAW,OA0lFnB7mE,EAAQq7G,KA1rTR,SAASC,GAAuB5+F,EAAUw4C,EAAesU,EAAgBppD,EAAQC,EAASJ,GACtF,OAAO,IAAIwpD,GAAkB/sD,EAAUw4C,EAAesU,EAAgBppD,EAAQC,EAASJ,IA0rT3FjgB,EAAQu7G,KA7bR,SAASC,GAAsBvpD,EAAc0c,EAAqB8sC,GAC9D,OAAO,IAAIpN,GAAiBp8C,EAAc0c,EAAqB8sC,IA6bnEz7G,EAAQ07G,KAr2UR,SAASC,GAAoBj2G,GACzB,OACIoR,GANyB,cAOzBkL,OAAQtc,EAAOsc,OACfF,cAAepc,EAAOoc,cACtBnF,KAAMjX,EAAOiX,OAi2UrB3c,EAAQ47G,KAhtSR,SAASj0F,GAAakoD,EAAYnlE,EAAO06D,EAAgBkB,EAAY7gE,EAAMiK,EAAMjL,EAAO4b,GACpF,IAAIyjD,KACJ,GAAIr/D,EACA,IAAK,IAAIyJ,KAAQzJ,EAAO,CACpB,IAAIO,EAAKnB,EAAOY,EAAMyJ,GAAO,GAC7B41D,EADgD9+D,EAAG,KAE/C0F,MAAO,EACPlG,KAAM0J,EAAMqjE,gBAHyDvsE,EAAG,GAIxE8oE,GAAI,KACJq2B,gBAAiB,KACjBphD,OAAQ,MAIpB,IAAI84D,KACJ,GAAIx7F,EACA,IAAK,IAAI1a,KAAY0a,EACjBw7F,EAAW73G,MAAOgE,KAAM,EAAyBrC,SAAUA,EAAUtD,OAAQ,KAAM44C,UAAW56B,EAAQ1a,KAI9G,OAAOoiE,GAAK8H,EADZnlE,GAAS,MACsB06D,EAAgBkB,EAAY7gE,EAAMA,EAAMiK,EAAMo0D,EAAU+3C,IA4rS3F77G,EAAQ87G,KA3lFR,SAASlX,GAAW/0B,EAAYnlE,EAAOy6D,EAAmBqB,EAAgBF,EAAY0G,EAAkB+uC,EAAYj4C,EAAUzjD,EAAS4iD,EAAahiC,EAAe2kC,GAE/J,IAAI5gE,OADe,IAAf+2G,IAAyBA,MAExB94C,IACDA,EAAcI,IAElB,IAAI7tC,EAAK0vC,GAAuBC,GAAoBC,EAAiB5vC,EAAG4vC,eAAgBE,EAAa9vC,EAAG8vC,WAAYD,EAAkB7vC,EAAG6vC,gBACrIyI,EAAK,KACLtpE,EAAO,KACPwoE,IACkDc,GAAlD9oE,EAAKnB,EAAOujE,GAAe4F,GAAmB,IAAY,GAAIxoE,EAAOQ,EAAG,IAE5E8+D,EAAWA,MAEX,IADA,IAAIk4C,EAAc,IAAI/6G,MAAM6iE,EAAS9hE,QAC5BH,EAAI,EAAGA,EAAIiiE,EAAS9hE,OAAQH,IAAK,CACtC,IAAI4zB,EAAK5xB,EAAOigE,EAASjiE,GAAI,GAAIklE,EAAetxC,EAAG,GAAgCwmF,EAA0BxmF,EAAG,GAC5GymF,EAAKr4G,EAAOujE,GAD4D3xC,EAAG,IAC3B,GAAI0mF,EAAOD,EAAG,GAAIj8D,EAASi8D,EAAG,GAC9E/X,OAAkBz8F,EAClBq7C,OAASr7C,EACb,OAAuB,GAAfq/D,GACJ,KAAK,EACDhkB,EAASk5D,EACT,MACJ,KAAK,EACL,KAAK,EACD9X,EAAkB8X,EAG1BD,EAAYn6G,IACN6I,MAAOq8D,EAAc+G,GAAIquC,EAAM33G,KAAMy7C,EAAQsxB,gBAAiBtxB,EAAQkkD,gBAAiBA,EAAiBphD,OAAQA,GAE1H1iC,EAAUA,MACV,IAAIw7F,EAAa,IAAI56G,MAAMof,EAAQre,QACnC,IAASH,EAAI,EAAGA,EAAIwe,EAAQre,OAAQH,IAAK,CACrC,IAAIu6G,EAAKv4G,EAAOwc,EAAQxe,GAAI,GAC5Bg6G,EAAWh6G,IACPmG,KAAM,EACN3F,OAHqC+5G,EAAG,GAGxBnhE,UAHwCmhE,EAAG,GAI3Dz2G,SAAU,MAIlB,IAAI2oB,GADJytF,EAAaA,OACUxzG,IAAI,SAAUvD,GACjC,IAAIwwB,EAAK3xB,EAAOmB,EAAI,GAA8BrB,EAAQ6xB,EAAG,GACzDC,EAAK5xB,EAAOujE,GAD2B5xC,EAAG,IACI,GAClD,OAD2DC,EAAG,GAAWA,EAAG,GAC1D9xB,KAOtB,OALAiiE,EAlzPJ,SAASy2C,EAAqBr0G,GAC1B,GAAIA,GAdyB,gBAcjBA,EAAK8O,GAAmC,CAEhD,IAAIwlG,EAAmC,MAAtBt0G,EAAK8Z,eAAyB9Z,EAAK8Z,gBAAkB9hB,EAAQkd,kBAAkBq/F,MAC5Fv0G,EAAKga,OAAOhgB,QAAUlB,OAAOkN,KAAKhG,EAAK2U,MAAM3a,OAE7CgG,EAAK8O,GADLwlG,EACU,IAAM94C,KAlBC,UA2BzB,OAHIx7D,GAxBqB,YAwBbA,EAAK8O,KACb9O,EAAO,MAEJA,GAAQ,KAmyPSq0G,CAAqBz2C,GACzC3kC,IACAv2B,GAAS,WAKT2b,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAEdF,WAAYA,EACZnlE,MAVJA,GAAS,EAWLqhE,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EAAG7K,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EAAYkB,eAAgBA,EAAgBF,WAAYA,EAC9JxC,SAAUk4C,EACVj1C,aAAcM,GAAiB20C,GAC/B37F,QAASw7F,EACT78F,SACI8uD,GAAIA,EACJtpE,KAAMA,EACN8pB,MAAOA,EACPnQ,SAAU,KAEV8rD,kBAAmB,KACnBhpC,cAAeA,GAAiB,KAChC2kC,sBAAuBA,EACvBuL,gBAAiB,KACjBD,aAAc,KACdjO,YAAaA,GAAeI,IAEhClyD,SAAU,KACV8D,KAAM,KACNi7D,MAAO,KACPrJ,UAAW,OAwgFnB7mE,EAAQw8G,sBAAwB33C,GAChC7kE,EAAQy8G,mCAAqCnzC,GAC7CtpE,EAAQ08G,mBA7jUR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAKv1C,GAAkBw1C,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EACR,KAAK,EACD,OAAON,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EAAK71C,GAAkB81C,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EAAK71C,GAAkB81C,GAAMC,EAAK/1C,GAAkBg2C,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EAAK71C,GAAkB81C,GAAMC,EAAK/1C,GAAkBg2C,GAAMC,EAAKj2C,GAAkBk2C,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EAAK71C,GAAkB81C,GAAMC,EAAK/1C,GAAkBg2C,GAAMC,EAAKj2C,GAAkBk2C,GACjFC,EAAKn2C,GAAkBo2C,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EAAK71C,GAAkB81C,GAAMC,EAAK/1C,GAAkBg2C,GAAMC,EAAKj2C,GAAkBk2C,GACjFC,EAAKn2C,GAAkBo2C,GAAMC,EAAKr2C,GAAkBs2C,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAKv1C,GAAkBw1C,GAAMC,EAAKz1C,GAAkB01C,GAAMC,EAAK31C,GAAkB41C,GACpFC,EAAK71C,GAAkB81C,GAAMC,EAAK/1C,GAAkBg2C,GAAMC,EAAKj2C,GAAkBk2C,GACjFC,EAAKn2C,GAAkBo2C,GAAMC,EAAKr2C,GAAkBs2C,GAAMC,EAAKv2C,GAAkBw2C,GAAMC,EAC/F,QACI,MAAM,IAAI32G,MAAM,8CA+hU5BpH,EAAQg+G,aArkUR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAIzxG,EAAS,GACJ5K,EAAI,EAAGA,EAAiB,EAAb+6G,EAAgB/6G,GAAQ,EACxC4K,EAASA,EAASyxG,EAAer8G,GAAKylE,GAAkB42C,EAAer8G,EAAI,IAE/E,OAAO4K,EAASyxG,EAA4B,EAAbtB,IAikUnC58G,EAAQm+G,KAhgUR,SAASC,GAAUv2G,GAIf,IAHA,IAAImgE,KACAM,KACAC,GAAS,EACJ1mE,EAAI,EAAGA,EAAIgG,EAAU7F,OAAQH,IAAK,CACvC,IAAIsP,EAAWtJ,EAAUhG,GACrBsP,EAASxK,QAAUqpD,KAA+B,IAAnB7+C,EAASxN,QACxC4kE,GAAS,GAEQ,WAAjBp3D,EAASzG,OACT49D,EAAQtkE,KAAKmN,EAASxK,OAE1BwK,EAASlL,MAAQpE,EACjBmmE,EAAezE,GAASpyD,EAASxK,QAAUwK,EAE/C,OAEIpR,QAAS,KACTioE,eAAgBA,EAChBngE,UAAWA,EACXygE,QAASA,EACTC,OAAQA,IA4+ThBvoE,EAAQq+G,KA7gUR,SAASC,GAAiB5zG,EAAO/D,EAAOhD,EAAO+L,GAM3C,OAFA/L,EAAQuF,EAAkBvF,IAItBsC,OAAQ,EACRyJ,KAJU81D,GAAa91D,EAAMpH,EAAU3B,IAIxB+D,MAAOA,EAAO/D,MAAOA,EAAOhD,MAAOA,IAqgU1D3D,EAAQu+G,KAzrER,SAASC,GAAah4C,EAAgBvgE,GAClC,OAEIogB,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAEdF,YAAa,EACbnlE,MAAO,EACPqhE,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EACrB7K,kBACAC,gBAAiB,EACjBC,cAAgBkB,eAAgBA,EAChCF,WAAY,EACZxC,YACAiD,aAAc,EACd1mD,WACArB,QAAS,KACT7N,SAAU,KACV8D,KAAM,KACNi7D,MAAO,KACPrJ,WAAa5gE,MAAOA,KAiqE5BjG,EAAQy+G,KAz4SR,SAASjnF,GAAUvR,EAAMhgB,GACrB,IAAIyF,EAAMua,EAAKva,IAAIo2D,MAAM77D,GACzB,GAAgB,EAAZyF,EAAIhB,MAA6B,CACjC,IAAIigE,EAAS5I,GAAc97C,EAAMva,EAAI2a,WACrC,OAAO3a,EAAIsT,QAAQb,SAAWwsD,EAAOxsD,SAAWwsD,EAAOhG,cAEtD,GAAgB,EAAZj5D,EAAIhB,MACT,OAAOm3D,GAAW57C,EAAMva,EAAI2a,WAAWu+C,WAEtC,GAAgB,MAAZl5D,EAAIhB,MACT,OAAOs3D,GAAe/7C,EAAMva,EAAI2a,WAAW8I,SAE/C,MAAM,IAAI/nB,MAAM,gDAAkDnB,IA83StEjG,EAAQ0+G,KAnsSR,SAAS56F,GAAQpZ,EAAOjF,EAAMiK,GAE1B,OAAOq4D,IAAM,EADbr9D,GAAS,GACc,KAAM,EAAGjF,EAAMA,EAAMiK,IAksShD1P,EAAQ2+G,KAhsSR,SAAS72C,GAAYp9D,EAAO06D,EAAgBz+D,EAAOhD,EAAO+L,GACtD,OAAOq4D,IAAM,EAAGr9D,EAAO06D,EAAgB,EAAGz+D,EAAOhD,EAAO+L,IAgsS5D1P,EAAQ4+G,KA5oER,SAASC,GAAahvC,EAAYivC,GAC9B,OAAOxZ,GAAmB,GAAwBz1B,EAAY,IAAI5uE,MAAM69G,KA4oE5E9+G,EAAQ++G,KA1oER,SAASC,GAAcnvC,EAAYovC,GAI/B,IAHA,IAAIjxG,EAAOlN,OAAOkN,KAAKixG,GACnBC,EAASlxG,EAAKhM,OACdujG,EAAgB,IAAItkG,MAAMi+G,GACrBr9G,EAAI,EAAGA,EAAIq9G,EAAQr9G,IAAK,CAC7B,IAAIS,EAAM0L,EAAKnM,GAEf0jG,EADY0Z,EAAY38G,IACDA,EAE3B,OAAOgjG,GAAmB,GAAyBz1B,EAAY01B,IAkoEnEvlG,EAAQm/G,KAlpER,SAASC,GAAYvvC,EAAYivC,GAE7B,OAAOxZ,GAAmB,IAAwBz1B,EAAY,IAAI5uE,MAAM69G,EAAW,KAipEvF9+G,EAAQq/G,KA/2ER,SAASpa,GAASv6F,EAAOoM,EAAIgtD,GACzB,IAAIk4C,KACJ,IAAK,IAAIr2G,KAAYm+D,EAEjBk4C,EAAYh4G,MAAO2B,SAAUA,EAAUq/F,YADrBlhC,EAASn+D,KAG/B,OAEI0gB,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAGdF,YAAa,EAAGnlE,MAAOA,EACvBqhE,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EACrBzJ,gBAAiB,EACjBpB,kBACAC,gBAAiB,EACjBC,cACAgB,WAAY,EACZxC,YACAiD,aAAc,EACd1mD,WACArB,QAAS,KACT7N,SAAU,KACV8D,KAAM,KACNi7D,OAASp5D,GAAIA,EAAI2tF,SAAUz/B,GAAcluD,GAAKgtD,SAAUk4C,GACxDn1C,UAAW,OAi1EnB7mE,EAAQs/G,KA57DR,SAASC,GAAQ1vC,EAAYrJ,EAAgBg5C,GAEzC,IADA,IAAI17C,EAAW,IAAI7iE,MAAMu+G,EAAWx9G,OAAS,GACpCH,EAAI,EAAGA,EAAI29G,EAAWx9G,OAAQH,IACnCiiE,EAASjiE,EAAI,IACT6I,MAAO,EACPlG,KAAM,KACNspE,GAAI,KACJyD,gBAAiB,KACjB4yB,gBAAiB,KACjBphD,OAAQy8D,EAAW39G,IAG3B,OAEIwkB,WAAY,EACZ5T,OAAQ,KACRiuB,aAAc,KACdxD,cAAe,EACf6yC,aAAc,EAEdF,WAAYA,EACZnlE,MAAO,EACPqhE,WAAY,EACZiE,iBAAkB,EAClBC,oBAAqB,EACrB7K,kBACAC,gBAAiB,EACjBC,cAAgBkB,eAAgBA,EAChCF,WAAY,EAAGxC,SAAUA,EACzBiD,aAAc,EACd1mD,WACArB,QAAS,KACT7N,SAAU,KACV8D,MAAQs0C,OAAQi2D,EAAW,IAC3BtvC,MAAO,KACPrJ,UAAW,OA05DnB7mE,EAAQy/G,KAp4UR,SAASC,GAAYz5F,EAAM05F,EAASj8C,EAAY//D,GAC5C,GAAI84B,GAAaI,UAAUl5B,GAAQ,CAC/BA,EAAQ84B,GAAaG,OAAOj5B,GAC5B,IAAIi8G,EAAmB35F,EAAKva,IAAIo2D,MAAM69C,GAASziF,aAAewmC,EAC1D92C,EAAW6P,GAAaG,OAAO3W,EAAK09C,UAAUi8C,IAClD35F,EAAK09C,UAAUi8C,GAAoB,IAAInjF,GAAa7P,GAExD,OAAOjpB,GA83UX3D,EAAQ6/G,KA1zDR,SAAS91C,GAAQr/D,EAAOo3D,EAAOoB,EAAkBC,GAY7C,IAVA,IAAI28C,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpCr6C,EAAqB,KAChBpkE,EAAI,EAAGA,EAAIigE,EAAM9/D,OAAQH,IAAK,CACnC,IAAIq2B,EAAO4pC,EAAMjgE,GAQjB,GAPAq2B,EAAK7R,UAAYxkB,EACjBq2B,EAAKzlB,OAAS0tG,EACdjoF,EAAKgF,aAAe4iF,EACpB5nF,EAAK63C,YAAcgwC,EACnB7nF,EAAKwI,aAAe0/E,EACpBJ,GAAiB9nF,EAAKxtB,MACtBw1G,GAAsBhoF,EAAKmtC,gBACvBntC,EAAKlZ,QAAS,CACd,IAAI0rD,EAAQxyC,EAAKlZ,QACjB0rD,EAAMyG,gBACFgvC,EAAgBA,EAAcnhG,QAAQmyD,gBAAkBrwE,OAAOU,OAAO,MAC1EkpE,EAAMwG,aAAexG,EAAMyG,gBAE3BkvC,GAAmC,EACnCC,GAAoC,EAChCpoF,EAAKlZ,QAAQb,WACb+hG,GAAsBhoF,EAAKlZ,QAAQb,SAASomF,oBASpD,GANAmB,GAAaya,EAAejoF,EAAM4pC,EAAM9/D,QACxC89G,GAAoB5nF,EAAK4rC,SAAS9hE,OAClC+9G,GAAuB7nF,EAAK7X,QAAQre,QAC/Bo+G,GAAqC,EAAbloF,EAAKxtB,QAC9Bu7D,EAAqB/tC,GAER,MAAbA,EAAKxtB,MAAiC,CACjC21G,IACDA,GAAmC,EAEnCF,EAAcnhG,QAAQmyD,gBAClBrwE,OAAOU,OAAO2+G,EAAcnhG,QAAQmyD,iBACxCgvC,EAAcnhG,QAAQkyD,aAAeivC,EAAcnhG,QAAQmyD,iBAE/D,IACI5qD,EAAuD,IAA3B,MAAb2R,EAAKxtB,OAD6C,IAAhC,KAAbwtB,EAAKxtB,QAEJ6b,EACrB45F,EAAcnhG,QAAQmyD,gBAAgB5N,GAASrrC,EAAK/mB,SAASxK,QAAUuxB,GAGlEooF,IACDA,GAAoC,EAEpCH,EAAcnhG,QAAQkyD,aAClBpwE,OAAOU,OAAO2+G,EAAcnhG,QAAQmyD,kBAE5CgvC,EAAcnhG,QAAQkyD,aAAa3N,GAASrrC,EAAK/mB,SAASxK,QAAUuxB,GAEpE3R,IACA45F,EAAcnhG,QAAQirD,kBAAoB/xC,GAclD,GAXIioF,GACAA,EAAcp0C,YAAc7zC,EAAKxtB,MACjCy1G,EAAcnwC,kBAAoB93C,EAAKxtB,MACvCy1G,EAAclwC,qBAAuB/3C,EAAKmtC,gBACtCntC,EAAKlZ,SAAWkZ,EAAKlZ,QAAQb,WAC7BgiG,EAAclwC,qBAAuB/3C,EAAKlZ,QAAQb,SAASomF,qBAI/D0b,GAAqB/nF,EAAKxtB,MAE1BwtB,EAAKouC,WAAa,EAClB65C,EAAgBjoF,EACXutE,GAAcvtE,KACfkoF,EAAsBloF,QAS1B,KAAOioF,GAAiBt+G,IAAMs+G,EAAc95F,UAAY85F,EAAc75C,YAAY,CAC9E,IAAIi6C,EAAYJ,EAAc1tG,OAC1B8tG,IACAA,EAAUx0C,YAAco0C,EAAcp0C,WACtCw0C,EAAUtwC,qBAAuBkwC,EAAclwC,qBAK/CmwC,GAHJD,EAAgBI,IAEK9a,GAAc0a,GACTA,EAAcz/E,aAGdy/E,GAQtC,OAEIpgH,QAAS,KACT+rE,UAAWk0C,EACXQ,cAAeP,EACf1b,mBAAoB2b,EAAoBx1G,MAAOA,EAC/Co3D,MAAOA,EACPoB,iBAAkBA,GAAoBG,GACtCF,eAAgBA,GAAkBE,GAAMJ,YAX1B,SAAUh9C,EAAMI,EAAW40B,EAAWopB,GACpD,OAAOvC,EAAMz7C,GAAWrH,QAAQikD,YAAYh9C,EAAMg1B,EAAWopB,IAW7D6hC,aAAc4Z,EACd7Z,YAAa8Z,EAAqB95C,mBAAoBA,IAssD9DnlE,OAAO+B,eAAe7C,EAAS,cAAgB2D,OAAO","sourcesContent":["/**\n * @license Angular v8.0.0-beta.5+57.sha-c64b13e.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, Object) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /**\n     * Returns true if the value is an {@link LView}\n     * @param value the value to check\n     */\n    function isLView(value) {\n        return Array.isArray(value) && value.length >= HEADER_OFFSET;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return null;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            element || null,\n            [0],\n            [0],\n            null,\n        ];\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        context[1 /* DirectiveRegistryPosition */].push(directiveRef, -1, false, null);\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        if (Array.isArray(value) && value.length >= 9 /* SingleStylesStartPosition */) {\n            return typeof value[0 /* MasterFlagPosition */] === 'number' &&\n                value[3 /* InitialClassValuesPosition */][0 /* DefaultNullValuePosition */] === null;\n        }\n        return false;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null, null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null, null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directiveRef) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directiveRef) == -1) {\n            // this is a new directive which we have not seen yet.\n            allocateDirectiveIntoContext(context, directiveRef);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial style data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStyles(element, context, renderer) {\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * Runs through the initial class data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[0 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit incase a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value incase it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values incase earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[3 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* InitialClassesStringPosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* InitialClassesStringPosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[2 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* InitialClassesStringPosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 2 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* InitialClassesStringPosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces incase they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[HOST] = host;\n        lView[T_HOST] = tHostNode;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n            renderInitialStyles(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        ngDevMode && assertLView(projectedView);\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[T_HOST];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = getLViewParent(currentComponentView);\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.5+57.sha-c64b13e.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = previousOrParentTNode;\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$2(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().ownPropMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_bn = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bp = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}