{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","slice","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","parentFirstTemplatePass","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","createViewRef","componentIndex","hostComponentView","loadContext","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵEC","elementContainerStart","ɵeC","elementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18nAttribute","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","VERSION","full","major","minor","patch","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","ɵangular_packages_core_core_p","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_g","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_r","ɵangular_packages_core_core_v","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_z","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵmarkDirty","markDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","ɵi18nInterpolation1","i18nInterpolation1","ɵi18nInterpolation2","i18nInterpolation2","ɵi18nInterpolation3","i18nInterpolation3","idx","ɵi18nInterpolation4","i18nInterpolation4","b1","ɵi18nInterpolation5","i18nInterpolation5","ɵi18nInterpolation6","i18nInterpolation6","ɵi18nInterpolation7","i18nInterpolation7","b2","ɵi18nInterpolation8","i18nInterpolation8","ɵi18nInterpolationV","i18nInterpolationV","ɵi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ɵWRAP_RENDERER_FACTORY2","ɵsetClassMetadata","setClassMetadata","clazz","ɵRender3DebugRendererFactory2","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ɵgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","shift","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵpublishGlobalUtil","publishGlobalUtil","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.1+19.sha-eb5d308\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & 8 /* Optional */)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & 8 /* Optional */ && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            setHostBindings(tView, viewData);\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass, rf);\n            }\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        if (def.hostBindings)\n            queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵEC': elementContainerStart,\n        'ɵeC': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18nAttribute': i18nAttribute,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.1+19.sha-eb5d308');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_p = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_m = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_n = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_k = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_l = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_q = wtfEnabled;\n    exports.ɵangular_packages_core_core_s = createScope;\n    exports.ɵangular_packages_core_core_r = detectWTF;\n    exports.ɵangular_packages_core_core_v = endTimeRange;\n    exports.ɵangular_packages_core_core_t = leave;\n    exports.ɵangular_packages_core_core_u = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = getOrCreateInjectable;\n    exports.ɵangular_packages_core_core_z = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bb = bindingUpdated;\n    exports.ɵangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = getViewData;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bk = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_w = _def;\n    exports.ɵangular_packages_core_core_x = DebugRendererFactory2;\n    exports.ɵangular_packages_core_core_y = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18nAttribute = i18nAttribute;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nExpMapping = i18nExpMapping;\n    exports.ɵi18nInterpolation1 = i18nInterpolation1;\n    exports.ɵi18nInterpolation2 = i18nInterpolation2;\n    exports.ɵi18nInterpolation3 = i18nInterpolation3;\n    exports.ɵi18nInterpolation4 = i18nInterpolation4;\n    exports.ɵi18nInterpolation5 = i18nInterpolation5;\n    exports.ɵi18nInterpolation6 = i18nInterpolation6;\n    exports.ɵi18nInterpolation7 = i18nInterpolation7;\n    exports.ɵi18nInterpolation8 = i18nInterpolation8;\n    exports.ɵi18nInterpolationV = i18nInterpolationV;\n    exports.ɵi18nMapping = i18nMapping;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}