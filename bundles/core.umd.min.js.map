{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","previousOrParentTNode","isParent","lView","selectedIndex","contextLView","checkNoChangesMode","elementDepthCount","bindingsEnabled","currentNamespace","currentSanitizer","currentDirectiveDef","activeDirectiveId","bindingRootIndex","currentQueryIndex","elementExitFn","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","hasActiveElementFlag","flag","setActiveHostElement","elementIndex","getSelectedIndex","executeElementExitFn","setSelectedIndex","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","setBindingRoot","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","nextContextImpl","level","walkUpViews","nestingLevel","currentView","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","allow","config","contextIsLocked","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","_mapValues","mockElement","mapFn","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","inputsToStore","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","constsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","foundChar","applyStylingMapDirectly","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","hasDirectives","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","propertyName","splitByComma","piece","static","compilePipe","ngPipeDef","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","createProxy","handler","g","Proxy","contains","toggle","ownKeys","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_PIPE_DEF","ɵNG_MOD_DEF","ɵNG_BASE_DEF","ɵNG_PROV_DEF","ɵNG_INJ_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.13+4.sha-0d14205.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        var def = (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ɵprov's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        previousOrParentTNode: null,\n        isParent: null,\n        lView: null,\n        // tslint:disable-next-line: no-toplevel-property-access\n        selectedIndex: -1 << 1 /* Size */,\n        contextLView: null,\n        checkNoChangesMode: false,\n        elementDepthCount: 0,\n        bindingsEnabled: true,\n        currentNamespace: null,\n        currentSanitizer: null,\n        currentDirectiveDef: null,\n        activeDirectiveId: 0,\n        bindingRootIndex: -1,\n        currentQueryIndex: 0,\n        elementExitFn: null,\n    };\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    function getLView() {\n        return instructionState.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (getSelectedIndex() !== elementIndex) {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            instructionState.activeDirectiveId = 0;\n        }\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        // TODO (matsko|misko): remove this unassignment once the state management of\n        //                      global variables are better managed.\n        instructionState.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.previousOrParentTNode = tNode;\n        instructionState.isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        instructionState.previousOrParentTNode = tNode;\n        instructionState.lView = view;\n    }\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.isParent = true;\n    }\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return instructionState.bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        instructionState.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return instructionState.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = instructionState.lView;\n        instructionState.previousOrParentTNode = hostTNode;\n        instructionState.isParent = true;\n        instructionState.lView = instructionState.contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.contextLView = walkUpViews(level, instructionState.contextLView);\n        return instructionState.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        instructionState.isParent = false;\n        instructionState.previousOrParentTNode = null;\n        instructionState.elementDepthCount = 0;\n        instructionState.bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        return instructionState.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        var config = 0 /* Initial */;\n        if (hasDirectives) {\n            config |= 1 /* HasDirectives */;\n        }\n        if (initialStyling.length > 1 /* ValuesStartPosition */) {\n            config |= 16 /* HasInitialStyling */;\n        }\n        return [\n            config,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND ngDevMode is falsy\n     * 2. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var allow = false;\n        var config = getConfig(context);\n        var contextIsLocked = (config & getLockedConfig(hostBindingsMode)) !== 0;\n        var hasNoDirectives = (config & 1 /* HasDirectives */) === 0;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        if (hasNoDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? contextIsLocked : true;\n        }\n        else if (contextIsLocked) {\n            var hasNoCollisions = (config & 8 /* HasCollisions */) === 0;\n            var hasOnlyMapsOrOnlyProps = (config & 6 /* HasPropAndMapBindings */) !== 6 /* HasPropAndMapBindings */;\n            allow = hasNoCollisions && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 256 /* HostBindingsLocked */ :\n            128 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding before it gets locked.\n        if (!isContextLocked(context, hostBindingsMode) || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding before it gets locked.\n        if (!isContextLocked(context, hostBindingsMode) || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 64 /* HasHostBindings */ : 32 /* HasTemplateBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 64 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 2 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 8 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 16 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, isClassBased, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            var initialStyles = hasConfig(context, 16 /* HasInitialStyling */) ? getStylingMapArray(context) : null;\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                // case 1: apply the map value (if it exists)\n                var applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n                // case 2: apply the initial value (if it exists)\n                if (!applied && initialStyles) {\n                    applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                }\n                // default case: apply `null` to remove the value\n                if (!applied) {\n                    applyFn(renderer, element, prop, null, bindingIndex);\n                }\n            }\n            var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n            if (isClassBased) {\n                state.lastDirectClassMap = map;\n            }\n            else {\n                state.lastDirectStyleMap = map;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, isClassBased, applyFn, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            if (!applied && hasConfig(context, 4 /* HasMapBindings */)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(context, 16 /* HasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, isClassBased) {\n        var debug = new TStylingContextDebug(context, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _isClassBased) {\n            this.context = context;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 3 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 3 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 4 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 4 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 2 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 8 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 32 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 64 /* HasHostBindings */);\n        var templateBindingsLocked = hasConfig(context, 128 /* TemplateBindingsLocked */);\n        var hostBindingsLocked = hasConfig(context, 256 /* HostBindingsLocked */);\n        var allowDirectStyling$1 = allowDirectStyling(context, false) || allowDirectStyling(context, true);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            templateBindingsLocked: templateBindingsLocked,\n            hostBindingsLocked: hostBindingsLocked,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 64 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 256 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 128 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        if ((tNode.flags & 256 /* hasHostBindings */) === 256 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TAttributes[]\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives !== null) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 256 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i - start);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.initialInputs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentLViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 128 /* isDetached */) !== 128 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        ngFactoryDef =\n                            getCompilerFacade().compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                                name: metadata.name,\n                                type: metadata.type,\n                                typeArgumentCount: metadata.typeArgumentCount,\n                                deps: reflectDependencies(type),\n                                injectFn: 'inject',\n                                isPipe: false\n                            });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param constsIndex Index of template in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, constsIndex, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex]);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 2 /* HasPropBindings */);\n        }\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased, isClassBased ? setClass : setStyle, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 4 /* HasMapBindings */);\n        }\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased, isClassBased ? setClass : setStyle, sanitizerToUse, valueHasChanged);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 64 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, consts);\n        if (consts != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, consts);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, consts, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 64 /* hasInitialStyling */) === 64 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, constsIndex, localRefs) {\n        ɵɵelementStart(index, name, constsIndex, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, consts);\n        if (consts && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, consts, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, constsIndex, localRefs) {\n        ɵɵelementContainerStart(index, constsIndex, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.13+4.sha-0d14205.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 128 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', isPipe: false }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', isPipe: true }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_be = getLView;\n    exports.ɵangular_packages_core_core_bf = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = instructionState;\n    exports.ɵangular_packages_core_core_bg = nextContextImpl;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bi = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bj = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bk = makePropDecorator;\n    exports.ɵangular_packages_core_core_bl = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}